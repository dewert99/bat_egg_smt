(declare-sort D)
(declare-sort D2)
(declare-fun f (D) D2)
(declare-fun g (D2) D2)
(declare-fun h (D2) D2)
(declare-const x0 D)
(declare-const y0 D)
(declare-const z0 D)
(declare-const a0 D)
(declare-const b0 D)
(declare-const x1 D)
(declare-const y1 D)
(declare-const z1 D)
(declare-const a1 D)
(declare-const b1 D)
(declare-const x2 D)
(define-const fx0 D2 (f x0))
(define-const fx1 D2 (f x1))
(define-const fx2 D2 (f x2))
(define-const final_equality Bool (= fx2 fx0))
(define-const gfx2 D2 (g fx2))
(define-const hfx2 D2 (h fx2))
(define-const diamond0 Bool
  (or (and (= x0 y0) (= (f y0) (f z0)) (= z0 x1))
      (and (= x0 a0) (= (f a0) (f b0)) (= b0 x1))))
(define-const diamond1 Bool
  (or (and (= x1 y1) (= (f y1) (f z1)) (= z1 x2))
      (and (= x1 a1) (= (f a1) (f b1)) (= b1 x2))))
(check-sat-assuming (diamond0 diamond1 (not final_equality)))
(get-unsat-core)
(check-sat-assuming ((= x0 x1) diamond1 (not final_equality)))
(get-unsat-core)