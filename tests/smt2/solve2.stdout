unsat
((and (f a) (not (f b))))
sat
((a S1!val!2)
 (b S1!val!2)
 (x true)
 ((f a) true)
 ((f b) true))
(
 (define-fun a () S1 S1!val!2)
 (define-fun b () S1 S1!val!2)
 (define-fun f ((x!0 S1)) Bool
  (ite (= x!0 S1!val!2) true
   f!default))
 (define-fun x () Bool true)
)
sat
(
 (define-fun a () S1 S1!val!2)
 (define-fun b () S1 S1!val!2)
 (define-fun f ((x!0 S1)) Bool
  (ite (= x!0 S1!val!2) false
   f!default))
 (define-fun x () Bool true)
)
((a S1!val!2)
 (b S1!val!2)
 (x true)
 ((f a) false)
 ((f b) false))
