(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: eq_sdp_v1
query-maker: "Z3"
query-time: 4.242000 ms
query-class: abstract
query-category: assume
query-type: mus_core
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

; 
(set-info :status sat)
(declare-sort utt8 0)
(declare-fun z$n211s8 () utt8)
(declare-fun z$n208s8 () utt8)
(declare-fun z$n240s8 () utt8)
(declare-fun z$n177s8 () utt8)
(declare-fun z$n31s8 () utt8)
(declare-fun z$n144s8 () utt8)
(declare-fun z$n52s8 () utt8)
(declare-fun z$n98s8 () utt8)
(declare-fun z$n27s8 () utt8)
(declare-fun z$n53s8 () utt8)
(declare-fun z$n159s8 () utt8)
(declare-fun z$n250s8 () utt8)
(declare-fun z$n182s8 () utt8)
(declare-fun z$n18s8 () utt8)
(declare-fun z$n54s8 () utt8)
(declare-fun z$n93s8 () utt8)
(declare-fun z$n23s8 () utt8)
(declare-fun z$n48s8 () utt8)
(declare-fun z$n20s8 () utt8)
(declare-fun z$n112s8 () utt8)
(declare-fun z$n121s8 () utt8)
(declare-fun z$n85s8 () utt8)
(declare-fun z$n140s8 () utt8)
(declare-fun z$n130s8 () utt8)
(declare-fun z$n205s8 () utt8)
(declare-fun z$n47s8 () utt8)
(declare-fun z$n224s8 () utt8)
(declare-fun z$n39s8 () utt8)
(declare-fun z$n185s8 () utt8)
(declare-fun z$n228s8 () utt8)
(declare-fun z$n160s8 () utt8)
(declare-fun z$n127s8 () utt8)
(declare-fun z$n215s8 () utt8)
(declare-fun z$n165s8 () utt8)
(declare-fun z$n233s8 () utt8)
(declare-fun z$n7s8 () utt8)
(declare-fun z$n58s8 () utt8)
(declare-fun z$n70s8 () utt8)
(declare-fun z$n142s8 () utt8)
(declare-fun z$n115s8 () utt8)
(declare-fun z$n217s8 () utt8)
(declare-fun z$n2s8 () utt8)
(declare-fun z$n49s8 () utt8)
(declare-fun z$n109s8 () utt8)
(declare-fun z$n76s8 () utt8)
(declare-fun z$n193s8 () utt8)
(declare-fun z$n225s8 () utt8)
(declare-fun z$n25s8 () utt8)
(declare-fun z$n56s8 () utt8)
(declare-fun z$n32s8 () utt8)
(declare-fun z$n118s8 () utt8)
(declare-fun z$n45s8 () utt8)
(declare-fun z$n14s8 () utt8)
(declare-fun z$n253s8 () utt8)
(declare-fun z$n249s8 () utt8)
(declare-fun z$n16s8 () utt8)
(declare-fun z$n235s8 () utt8)
(declare-fun z$n3s8 () utt8)
(declare-fun z$n255s8 () utt8)
(declare-fun z$n191s8 () utt8)
(declare-fun z$n6s8 () utt8)
(declare-fun z$n111s8 () utt8)
(declare-fun z$n97s8 () utt8)
(declare-fun z$n84s8 () utt8)
(declare-fun z$n164s8 () utt8)
(declare-fun z$n161s8 () utt8)
(declare-fun z$n65s8 () utt8)
(declare-fun z$n46s8 () utt8)
(declare-fun z$n15s8 () utt8)
(declare-fun z$n5s8 () utt8)
(declare-fun z$n35s8 () utt8)
(declare-fun z$n69s8 () utt8)
(declare-fun z$n207s8 () utt8)
(declare-fun z$n89s8 () utt8)
(declare-fun z$n64s8 () utt8)
(declare-fun z$n133s8 () utt8)
(declare-fun z$n157s8 () utt8)
(declare-fun z$n194s8 () utt8)
(declare-fun z$n80s8 () utt8)
(declare-fun z$n209s8 () utt8)
(declare-fun z$n129s8 () utt8)
(declare-fun z$n128s8 () utt8)
(declare-fun z$n81s8 () utt8)
(declare-fun z$n135s8 () utt8)
(declare-fun z$n192s8 () utt8)
(declare-fun z$n195s8 () utt8)
(declare-fun z$n99s8 () utt8)
(declare-fun z$n4s8 () utt8)
(declare-fun z$n96s8 () utt8)
(declare-fun z$n119s8 () utt8)
(declare-fun z$n204s8 () utt8)
(declare-fun z$n63s8 () utt8)
(declare-fun z$n155s8 () utt8)
(declare-fun z$n1s8 () utt8)
(declare-fun z$n0s8 () utt8)
(declare-fun s2 () utt8)
(declare-fun im.p2_c () utt8)
(declare-fun im.p2_m () utt8)
(declare-fun Sub_8_8_8 (utt8 utt8) utt8)
(declare-fun z$98 () utt8)
(declare-fun im.p1_b () utt8)
(declare-fun im.p1_a () utt8)
(declare-fun z$84 () utt8)
(declare-fun im.p1_c () utt8)
(declare-fun z$328 () utt8)
(declare-fun s1 () utt8)
(declare-fun Add_8_8_8 (utt8 utt8) utt8)
(declare-fun z$82 () utt8)
(declare-fun z$519 () utt8)
(declare-fun z$682 () utt8)
(declare-fun z$831 () utt8)
(declare-fun z$96 () utt8)
(declare-fun im.p3_n () utt8)
(declare-fun s3 () utt8)
(declare-fun b () utt8)
(declare-fun a () utt8)
(declare-fun z$32 () utt8)
(declare-fun z$34 () utt8)
(declare-fun z$36 () utt8)
(declare-fun c () utt8)
(declare-fun z$39 () utt8)
(declare-fun z$41 () utt8)
(declare-fun z$43 () utt8)
(declare-fun z$45 () utt8)
(declare-fun s1$next () utt8)
(declare-fun z$49 () utt8)
(declare-fun s2$next () utt8)
(declare-fun z$66 () utt8)
(declare-fun im.p1_a$next () utt8)
(declare-fun z$70 () utt8)
(declare-fun im.p1_b$next () utt8)
(declare-fun z$74 () utt8)
(declare-fun im.p1_c$next () utt8)
(declare-fun z$86 () utt8)
(declare-fun z$88 () utt8)
(declare-fun im.p2_m$next () utt8)
(declare-fun z$92 () utt8)
(declare-fun im.p2_c$next () utt8)
(declare-fun im.p3_n$next () utt8)
(declare-fun s3$next () utt8)
(declare-fun z$142 () utt8)
(declare-fun z$407 () utt8)
(declare-fun z$532 () utt8)
(declare-fun z$215 () utt8)
(declare-fun z$236 () utt8)
(declare-fun z$697 () utt8)
(declare-fun z$844 () utt8)
(declare-fun b$next () utt8)
(declare-fun a$next () utt8)
(declare-fun z$257 () utt8)
(declare-fun z$255 () utt8)
(declare-fun z$259 () utt8)
(declare-fun c$next () utt8)
(declare-fun z$261 () utt8)
(declare-fun z$410 () utt8)
(declare-fun z$348 () utt8)
(declare-fun z$136 () Bool)
(declare-fun z$204 () Bool)
(declare-fun z$212 () Bool)
(declare-fun im.p2_ctl_2 () Bool)
(declare-fun z$14 () Bool)
(declare-fun im.p1_ctl_1 () Bool)
(declare-fun z$8 () Bool)
(declare-fun im.p1_ctl_2 () Bool)
(declare-fun z$10 () Bool)
(declare-fun z$335 () Bool)
(declare-fun z$382 () Bool)
(declare-fun z$383 () Bool)
(declare-fun z$387 () Bool)
(declare-fun z$436 () Bool)
(declare-fun z$437 () Bool)
(declare-fun z$525 () Bool)
(declare-fun z$544 () Bool)
(declare-fun z$545 () Bool)
(declare-fun z$138 () Bool)
(declare-fun z$551 () Bool)
(declare-fun z$553 () Bool)
(declare-fun z$689 () Bool)
(declare-fun z$709 () Bool)
(declare-fun z$710 () Bool)
(declare-fun z$719 () Bool)
(declare-fun z$720 () Bool)
(declare-fun z$838 () Bool)
(declare-fun z$856 () Bool)
(declare-fun z$857 () Bool)
(declare-fun z$555 () Bool)
(declare-fun z$863 () Bool)
(declare-fun z$865 () Bool)
(declare-fun z$107 () Bool)
(declare-fun prop () Bool)
(declare-fun z$108 () Bool)
(declare-fun ctl_1 () Bool)
(declare-fun ctl_2 () Bool)
(declare-fun im.reset () Bool)
(declare-fun z$47 () Bool)
(declare-fun z$51 () Bool)
(declare-fun z$68 () Bool)
(declare-fun z$72 () Bool)
(declare-fun z$76 () Bool)
(declare-fun z$78 () Bool)
(declare-fun im.p2_ctl_2$next () Bool)
(declare-fun z$80 () Bool)
(declare-fun z$90 () Bool)
(declare-fun z$94 () Bool)
(declare-fun z$122 () Bool)
(declare-fun prop$next () Bool)
(declare-fun z$123 () Bool)
(declare-fun z$144 () Bool)
(declare-fun z$152 () Bool)
(declare-fun z$153 () Bool)
(declare-fun z$154 () Bool)
(declare-fun z$155 () Bool)
(declare-fun z$157 () Bool)
(declare-fun z$22 () Bool)
(declare-fun z$16 () Bool)
(declare-fun z$12 () Bool)
(declare-fun z$151 () Bool)
(declare-fun z$156 () Bool)
(declare-fun z$329 () Bool)
(declare-fun z$331 () Bool)
(declare-fun z$332 () Bool)
(declare-fun z$520 () Bool)
(declare-fun z$521 () Bool)
(declare-fun z$522 () Bool)
(declare-fun z$2 () Bool)
(declare-fun z$4 () Bool)
(declare-fun z$6 () Bool)
(declare-fun z$20 () Bool)
(declare-fun z$590 () Bool)
(declare-fun z$596 () Bool)
(declare-fun z$533 () Bool)
(declare-fun z$591 () Bool)
(declare-fun z$592 () Bool)
(declare-fun z$593 () Bool)
(declare-fun z$594 () Bool)
(declare-fun z$595 () Bool)
(declare-fun z$611 () Bool)
(declare-fun z$683 () Bool)
(declare-fun z$126 () Bool)
(declare-fun z$557 () Bool)
(declare-fun z$685 () Bool)
(declare-fun z$686 () Bool)
(declare-fun z$698 () Bool)
(declare-fun z$752 () Bool)
(declare-fun z$754 () Bool)
(declare-fun z$751 () Bool)
(declare-fun z$753 () Bool)
(declare-fun z$832 () Bool)
(declare-fun z$834 () Bool)
(declare-fun z$835 () Bool)
(declare-fun z$58 () Bool)
(declare-fun im.p1_ctl_1$next () Bool)
(declare-fun z$60 () Bool)
(declare-fun z$62 () Bool)
(declare-fun im.p1_ctl_2$next () Bool)
(declare-fun z$64 () Bool)
(declare-fun z$129 () Bool)
(declare-fun p$0 () Bool)
(declare-fun z$130 () Bool)
(declare-fun p$1 () Bool)
(declare-fun im.reset$next () Bool)
(declare-fun z$139 () Bool)
(declare-fun p$2 () Bool)
(declare-fun p$3 () Bool)
(declare-fun z$845 () Bool)
(declare-fun p$4 () Bool)
(declare-fun z$364 () Bool)
(declare-fun p$5 () Bool)
(declare-fun ctl_1$next () Bool)
(declare-fun z$371 () Bool)
(declare-fun p$6 () Bool)
(declare-fun z$368 () Bool)
(declare-fun p$7 () Bool)
(declare-fun z$424 () Bool)
(declare-fun p$8 () Bool)
(declare-fun z$425 () Bool)
(declare-fun p$9 () Bool)
(declare-fun z$428 () Bool)
(declare-fun p$10 () Bool)
(declare-fun z$429 () Bool)
(declare-fun p$11 () Bool)
(declare-fun z$363 () Bool)
(declare-fun p$12 () Bool)
(declare-fun z$238 () Bool)
(declare-fun z$239 () Bool)
(declare-fun p$13 () Bool)
(declare-fun z$240 () Bool)
(declare-fun p$14 () Bool)
(declare-fun z$241 () Bool)
(declare-fun p$15 () Bool)
(declare-fun p$16 () Bool)
(declare-fun z$242 () Bool)
(declare-fun p$17 () Bool)
(declare-fun z$243 () Bool)
(declare-fun p$18 () Bool)
(declare-fun z$244 () Bool)
(declare-fun z$245 () Bool)
(declare-fun p$19 () Bool)
(declare-fun z$246 () Bool)
(declare-fun p$20 () Bool)
(declare-fun z$247 () Bool)
(declare-fun p$21 () Bool)
(declare-fun p$22 () Bool)
(declare-fun z$366 () Bool)
(declare-fun z$254 () Bool)
(declare-fun p$23 () Bool)
(declare-fun ctl_2$next () Bool)
(declare-fun z$253 () Bool)
(declare-fun p$24 () Bool)
(declare-fun p$25 () Bool)
(declare-fun z$263 () Bool)
(declare-fun p$26 () Bool)
(declare-fun z$369 () Bool)
(declare-fun p$27 () Bool)
(declare-fun z$365 () Bool)
(declare-fun p$28 () Bool)
(declare-fun z$370 () Bool)
(declare-fun p$29 () Bool)
(declare-fun p$30 () Bool)
(declare-fun z$414 () Bool)
(declare-fun p$31 () Bool)
(declare-fun z$415 () Bool)
(declare-fun p$32 () Bool)
(declare-fun z$416 () Bool)
(declare-fun p$33 () Bool)
(declare-fun z$417 () Bool)
(declare-fun p$34 () Bool)
(declare-fun z$430 () Bool)
(declare-fun p$35 () Bool)
(declare-fun z$372 () Bool)
(declare-fun p$36 () Bool)
(declare-fun z$422 () Bool)
(declare-fun p$37 () Bool)
(declare-fun z$423 () Bool)
(declare-fun p$38 () Bool)
(declare-fun z$373 () Bool)
(declare-fun p$39 () Bool)
(declare-fun z$418 () Bool)
(declare-fun p$40 () Bool)
(declare-fun z$419 () Bool)
(declare-fun p$41 () Bool)
(declare-fun z$426 () Bool)
(declare-fun p$42 () Bool)
(declare-fun z$427 () Bool)
(declare-fun p$43 () Bool)
(declare-fun z$448 () Bool)
(declare-fun p$44 () Bool)
(declare-fun z$420 () Bool)
(declare-fun p$45 () Bool)
(declare-fun z$421 () Bool)
(declare-fun p$46 () Bool)
(declare-fun z$571 () Bool)
(declare-fun p$47 () Bool)
(declare-fun z$413 () Bool)
(declare-fun p$48 () Bool)
(declare-fun z$446 () Bool)
(declare-fun p$49 () Bool)
(declare-fun z$447 () Bool)
(declare-fun p$50 () Bool)
(declare-fun z$367 () Bool)
(declare-fun p$51 () Bool)
(declare-fun z$570 () Bool)
(declare-fun p$52 () Bool)
(declare-fun p$53 () Bool)
(declare-fun z$724 () Bool)
(assert
 (and (distinct z$n0s8 z$n1s8 z$n155s8 z$n63s8 z$n204s8 z$n119s8 z$n96s8 z$n4s8 z$n99s8 z$n195s8 z$n192s8 z$n135s8 z$n81s8 z$n128s8 z$n129s8 z$n209s8 z$n80s8 z$n194s8 z$n157s8 z$n133s8 z$n64s8 z$n89s8 z$n207s8 z$n69s8 z$n35s8 z$n5s8 z$n15s8 z$n46s8 z$n65s8 z$n161s8 z$n164s8 z$n84s8 z$n97s8 z$n111s8 z$n6s8 z$n191s8 z$n255s8 z$n3s8 z$n235s8 z$n16s8 z$n249s8 z$n253s8 z$n14s8 z$n45s8 z$n118s8 z$n32s8 z$n56s8 z$n25s8 z$n225s8 z$n193s8 z$n76s8 z$n109s8 z$n49s8 z$n2s8 z$n217s8 z$n115s8 z$n142s8 z$n70s8 z$n58s8 z$n7s8 z$n233s8 z$n165s8 z$n215s8 z$n127s8 z$n160s8 z$n228s8 z$n185s8 z$n39s8 z$n224s8 z$n47s8 z$n205s8 z$n130s8 z$n140s8 z$n85s8 z$n121s8 z$n112s8 z$n20s8 z$n48s8 z$n23s8 z$n93s8 z$n54s8 z$n18s8 z$n182s8 z$n250s8 z$n159s8 z$n53s8 z$n27s8 z$n98s8 z$n52s8 z$n144s8 z$n31s8 z$n177s8 z$n240s8 z$n208s8 z$n211s8) true))
(assert
 (let (($x976 (= im.p2_c s2)))
 (= z$136 $x976)))
(assert
 z$136)
(assert
 (let (($x424 (= im.p2_c im.p2_m)))
 (= z$204 $x424)))
(assert
 z$204)
(assert
 (let ((?x84 (Sub_8_8_8 im.p2_m im.p2_c)))
 (= z$98 ?x84)))
(assert
 (let (($x995 (= im.p2_c z$98)))
 (= z$212 $x995)))
(assert
 z$212)
(assert
 (= z$14 (not im.p2_ctl_2)))
(assert
 z$14)
(assert
 (let (($x510 (not im.p1_ctl_1)))
 (= z$8 $x510)))
(assert
 (let (($x288 (not im.p1_ctl_2)))
 (= z$10 $x288)))
(assert
 (let ((?x721 (Sub_8_8_8 im.p1_a im.p1_b)))
 (= z$84 ?x721)))
(assert
 (let ((?x2563 (Sub_8_8_8 z$84 im.p1_c)))
 (= z$328 ?x2563)))
(assert
 (= z$335 (and (distinct s1 z$328) true)))
(assert
 (= z$382 (and z$8 z$10 z$335)))
(assert
 (= z$383 (not z$382)))
(assert
 z$383)
(assert
 (let ((?x312 (Add_8_8_8 im.p1_a im.p1_b)))
 (= z$82 ?x312)))
(assert
 (let (($x4026 (= z$84 z$82)))
 (= z$387 $x4026)))
(assert
 (= z$436 (and z$10 z$335 z$387)))
(assert
 (= z$437 (not z$436)))
(assert
 z$437)
(assert
 (let ((?x3402 (Sub_8_8_8 z$82 im.p1_c)))
 (= z$519 ?x3402)))
(assert
 (= z$525 (and (distinct s1 z$519) true)))
(assert
 (= z$544 (and im.p1_ctl_1 z$10 z$525)))
(assert
 (= z$545 (not z$544)))
(assert
 z$545)
(assert
 (= z$138 (and (distinct s2 z$98) true)))
(assert
 (= z$551 (and z$14 z$138)))
(assert
 (= z$553 (not z$551)))
(assert
 z$553)
(assert
 (let ((?x15379 (Add_8_8_8 z$84 im.p1_c)))
 (= z$682 ?x15379)))
(assert
 (= z$689 (and (distinct s1 z$682) true)))
(assert
 (= z$709 (and z$8 im.p1_ctl_2 z$689)))
(assert
 (= z$710 (not z$709)))
(assert
 z$710)
(assert
 (= z$719 (and im.p1_ctl_2 z$387 z$689)))
(assert
 (= z$720 (not z$719)))
(assert
 z$720)
(assert
 (let ((?x1116 (Add_8_8_8 z$82 im.p1_c)))
 (= z$831 ?x1116)))
(assert
 (= z$838 (and (distinct s1 z$831) true)))
(assert
 (= z$856 (and im.p1_ctl_1 im.p1_ctl_2 z$838)))
(assert
 (= z$857 (not z$856)))
(assert
 z$857)
(assert
 (let ((?x1467 (Add_8_8_8 im.p2_m im.p2_c)))
 (= z$96 ?x1467)))
(assert
 (= z$555 (and (distinct s2 z$96) true)))
(assert
 (= z$863 (and im.p2_ctl_2 z$555)))
(assert
 (= z$865 (not z$863)))
(assert
 z$865)
(assert
 (let (($x244 (= s3 im.p3_n)))
 (= z$107 $x244)))
(assert
 (= z$108 (= prop z$107)))
(assert
 z$108)
(assert
 prop)
(assert
 (let ((?x846 (Add_8_8_8 a b)))
 (= z$32 ?x846)))
(assert
 (let ((?x718 (Sub_8_8_8 a b)))
 (= z$34 ?x718)))
(assert
 (let ((?x1000 (ite ctl_1 z$32 z$34)))
 (= z$36 ?x1000)))
(assert
 (let ((?x386 (Add_8_8_8 z$36 c)))
 (= z$39 ?x386)))
(assert
 (let ((?x269 (Sub_8_8_8 z$36 c)))
 (= z$41 ?x269)))
(assert
 (let ((?x431 (ite ctl_2 z$39 z$41)))
 (= z$43 ?x431)))
(assert
 (let ((?x843 (ite im.reset z$n0s8 z$43)))
 (= z$45 ?x843)))
(assert
 (let (($x332 (= s1$next z$45)))
 (= z$47 $x332)))
(assert
 z$47)
(assert
 (let ((?x661 (ite im.reset z$n0s8 s1)))
 (= z$49 ?x661)))
(assert
 (let (($x686 (= s2$next z$49)))
 (= z$51 $x686)))
(assert
 z$51)
(assert
 (let ((?x380 (ite im.reset z$n0s8 a)))
 (= z$66 ?x380)))
(assert
 (let (($x427 (= im.p1_a$next z$66)))
 (= z$68 $x427)))
(assert
 z$68)
(assert
 (let ((?x347 (ite im.reset z$n0s8 b)))
 (= z$70 ?x347)))
(assert
 (let (($x369 (= im.p1_b$next z$70)))
 (= z$72 $x369)))
(assert
 z$72)
(assert
 (let ((?x1038 (ite im.reset z$n0s8 c)))
 (= z$74 ?x1038)))
(assert
 (let (($x654 (= im.p1_c$next z$74)))
 (= z$76 $x654)))
(assert
 z$76)
(assert
 (= z$78 (ite im.reset false im.p1_ctl_2)))
(assert
 (= z$80 (= im.p2_ctl_2$next z$78)))
(assert
 z$80)
(assert
 (let ((?x772 (ite im.p1_ctl_1 z$82 z$84)))
 (= z$86 ?x772)))
(assert
 (let ((?x779 (ite im.reset z$n0s8 z$86)))
 (= z$88 ?x779)))
(assert
 (let (($x801 (= im.p2_m$next z$88)))
 (= z$90 $x801)))
(assert
 z$90)
(assert
 (let ((?x324 (ite im.reset z$n0s8 im.p1_c)))
 (= z$92 ?x324)))
(assert
 (let (($x807 (= im.p2_c$next z$92)))
 (= z$94 $x807)))
(assert
 z$94)
(assert
 (let (($x217 (= s3$next im.p3_n$next)))
 (= z$122 $x217)))
(assert
 (= z$123 (= prop$next z$122)))
(assert
 z$123)
(assert
 (let ((?x183 (Sub_8_8_8 im.p2_m$next im.p2_c$next)))
 (= z$142 ?x183)))
(assert
 (= z$144 (and (distinct s2$next z$142) true)))
(assert
 (let (($x162 (= s2$next z$n0s8)))
 (= z$152 $x162)))
(assert
 (let (($x153 (= im.p2_m$next z$n0s8)))
 (= z$153 $x153)))
(assert
 (let (($x144 (= im.p2_c$next z$n0s8)))
 (= z$154 $x144)))
(assert
 (= z$155 (and z$144 z$152 z$153 z$154)))
(assert
 (= z$157 (not z$155)))
(assert
 z$157)
(assert
 (let (($x69 (= s2 z$n0s8)))
 (= z$22 $x69)))
(assert
 (let (($x75 (= im.p2_m z$n0s8)))
 (= z$16 $x75)))
(assert
 (let (($x73 (= im.p2_c z$n0s8)))
 (= z$12 $x73)))
(assert
 (= z$151 (and z$138 z$22 z$16 z$12)))
(assert
 (= z$156 (not z$151)))
(assert
 z$156)
(assert
 (let (($x2565 (= s1 z$328)))
 (= z$329 $x2565)))
(assert
 (= z$331 (and z$329 z$8 z$144 z$51 z$90 z$94)))
(assert
 (= z$332 (not z$331)))
(assert
 z$332)
(assert
 (let (($x4118 (= s1 z$519)))
 (= z$520 $x4118)))
(assert
 (= z$521 (and z$520 im.p1_ctl_1 z$144 z$51 z$90 z$94)))
(assert
 (= z$522 (not z$521)))
(assert
 z$522)
(assert
 (let (($x281 (= im.p1_a z$n0s8)))
 (= z$2 $x281)))
(assert
 (let (($x472 (= im.p1_b z$n0s8)))
 (= z$4 $x472)))
(assert
 (let (($x287 (= im.p1_c z$n0s8)))
 (= z$6 $x287)))
(assert
 (let (($x652 (= s1 z$n0s8)))
 (= z$20 $x652)))
(assert
 (= z$590 (and z$525 z$2 z$4 z$6 z$20)))
(assert
 (= z$596 (not z$590)))
(assert
 z$596)
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (= z$407 ?x3352)))
(assert
 (let ((?x1410 (Sub_8_8_8 z$407 im.p1_c$next)))
 (= z$532 ?x1410)))
(assert
 (= z$533 (and (distinct s1$next z$532) true)))
(assert
 (let (($x13907 (= im.p1_a$next z$n0s8)))
 (= z$591 $x13907)))
(assert
 (let (($x15106 (= im.p1_b$next z$n0s8)))
 (= z$592 $x15106)))
(assert
 (let (($x14783 (= im.p1_c$next z$n0s8)))
 (= z$593 $x14783)))
(assert
 (let (($x15978 (= s1$next z$n0s8)))
 (= z$594 $x15978)))
(assert
 (= z$595 (and z$533 z$591 z$592 z$593 z$594)))
(assert
 (= z$611 (not z$595)))
(assert
 z$611)
(assert
 (let (($x6093 (= s1 z$682)))
 (= z$683 $x6093)))
(assert
 (= z$126 (not im.reset)))
(assert
 (let ((?x875 (Add_8_8_8 im.p2_m$next im.p2_c$next)))
 (= z$215 ?x875)))
(assert
 (= z$557 (and (distinct s2$next z$215) true)))
(assert
 (= z$685 (and z$683 z$126 z$8 z$557 z$51 z$90 z$94)))
(assert
 (= z$686 (not z$685)))
(assert
 z$686)
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (= z$236 ?x1294)))
(assert
 (let ((?x7764 (Add_8_8_8 z$236 im.p1_c$next)))
 (= z$697 ?x7764)))
(assert
 (= z$698 (and (distinct s1$next z$697) true)))
(assert
 (= z$752 (and z$594 z$593 z$592 z$591 z$698)))
(assert
 (= z$754 (not z$752)))
(assert
 z$754)
(assert
 (= z$751 (and z$20 z$6 z$4 z$2 z$689)))
(assert
 (= z$753 (not z$751)))
(assert
 z$753)
(assert
 (let (($x16884 (= s1 z$831)))
 (= z$832 $x16884)))
(assert
 (= z$834 (and z$832 im.p1_ctl_1 z$557 z$51 z$90 z$94)))
(assert
 (= z$835 (not z$834)))
(assert
 z$835)
(assert
 (= z$58 (ite im.reset false ctl_1)))
(assert
 (= z$60 (= im.p1_ctl_1$next z$58)))
(assert
 z$60)
(assert
 (= z$62 (ite im.reset false ctl_2)))
(assert
 (= z$64 (= im.p1_ctl_2$next z$62)))
(assert
 z$64)
(assert
 (=> p$0 (= z$129 (not im.p1_ctl_1$next))))
(assert
 (=> p$0 z$129))
(assert
 (=> p$1 (= z$130 (not im.p1_ctl_2$next))))
(assert
 (=> p$1 z$130))
(assert
 (let (($x849 (= z$139 (not im.reset$next))))
 (=> p$2 $x849)))
(assert
 (=> p$2 z$139))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$3 $x2902))))
(assert
 (let ((?x20091 (Add_8_8_8 z$407 im.p1_c$next)))
 (let (($x20166 (= z$844 ?x20091)))
 (=> p$3 $x20166))))
(assert
 (=> p$3 (= z$845 (and (distinct s1$next z$844) true))))
(assert
 (=> p$3 z$845))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$4 $x1689))))
(assert
 (=> p$4 (= z$364 (and (distinct im.p1_c$next z$257) true))))
(assert
 (=> p$4 z$364))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$5 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$5 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$5 $x989))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$5 $x2213))))
(assert
 (=> p$5 (= z$371 (and (distinct im.p1_a$next z$261) true))))
(assert
 (=> p$5 z$371))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$6 $x1689))))
(assert
 (=> p$6 (= z$368 (and (distinct s1$next z$257) true))))
(assert
 (=> p$6 z$368))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$7 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$7 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$7 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$7 $x678))))
(assert
 (=> p$7 (= z$424 (and (distinct im.p1_a$next z$410) true))))
(assert
 (=> p$7 z$424))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$8 $x3004))))
(assert
 (=> p$8 (= z$425 (and (distinct im.p1_a$next z$255) true))))
(assert
 (=> p$8 z$425))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$9 $x1689))))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$9 $x3004))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$9 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$9 $x678))))
(assert
 (=> p$9 (= z$428 (and (distinct z$257 z$410) true))))
(assert
 (=> p$9 z$428))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$10 $x1689))))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$10 $x3004))))
(assert
 (=> p$10 (= z$429 (and (distinct z$257 z$255) true))))
(assert
 (=> p$10 z$429))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$11 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$11 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$11 $x989))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$11 $x2213))))
(assert
 (=> p$11 (= z$363 (and (distinct im.p1_c$next z$261) true))))
(assert
 (=> p$11 z$363))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$12 $x551))))
(assert
 (=> p$12 (= z$238 (and (distinct im.p1_c$next z$236) true))))
(assert
 (=> p$12 z$238))
(assert
 (=> p$13 (= z$239 (and (distinct im.p1_c$next s1$next) true))))
(assert
 (=> p$13 z$239))
(assert
 (=> p$14 (= z$240 (and (distinct im.p1_c$next im.p1_b$next) true))))
(assert
 (=> p$14 z$240))
(assert
 (=> p$15 (= z$241 (and (distinct im.p1_c$next im.p1_a$next) true))))
(assert
 (=> p$15 z$241))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$16 $x551))))
(assert
 (=> p$16 (= z$242 (and (distinct z$236 s1$next) true))))
(assert
 (=> p$16 z$242))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$17 $x551))))
(assert
 (=> p$17 (= z$243 (and (distinct z$236 im.p1_b$next) true))))
(assert
 (=> p$17 z$243))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$18 $x551))))
(assert
 (=> p$18 (= z$244 (and (distinct z$236 im.p1_a$next) true))))
(assert
 (=> p$18 z$244))
(assert
 (=> p$19 (= z$245 (and (distinct s1$next im.p1_b$next) true))))
(assert
 (=> p$19 z$245))
(assert
 (=> p$20 (= z$246 (and (distinct s1$next im.p1_a$next) true))))
(assert
 (=> p$20 z$246))
(assert
 (=> p$21 (= z$247 (and (distinct im.p1_b$next im.p1_a$next) true))))
(assert
 (=> p$21 z$247))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$22 $x551))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$22 $x1689))))
(assert
 (=> p$22 (= z$366 (and (distinct z$236 z$257) true))))
(assert
 (=> p$22 z$366))
(assert
 (=> p$23 (= z$254 (not ctl_1$next))))
(assert
 (=> p$23 z$254))
(assert
 (=> p$24 (= z$253 (not ctl_2$next))))
(assert
 (=> p$24 z$253))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$25 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$25 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$25 $x989))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$25 $x2213))))
(assert
 (=> p$25 (= z$263 (and (distinct z$261 z$257) true))))
(assert
 (=> p$25 z$263))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$26 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$26 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$26 $x989))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$26 $x2213))))
(assert
 (=> p$26 (= z$369 (and (distinct im.p1_b$next z$261) true))))
(assert
 (=> p$26 z$369))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$27 $x551))))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$27 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$27 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$27 $x989))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$27 $x2213))))
(assert
 (=> p$27 (= z$365 (and (distinct z$236 z$261) true))))
(assert
 (=> p$27 z$365))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$28 $x1689))))
(assert
 (=> p$28 (= z$370 (and (distinct im.p1_b$next z$257) true))))
(assert
 (=> p$28 z$370))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$29 $x2902))))
(assert
 (let ((?x1410 (Sub_8_8_8 z$407 im.p1_c$next)))
 (let (($x2539 (= z$532 ?x1410)))
 (=> p$29 $x2539))))
(assert
 (let (($x1731 (= z$533 (and (distinct s1$next z$532) true))))
 (=> p$29 $x1731)))
(assert
 (=> p$29 z$533))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$30 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$30 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$30 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$30 $x678))))
(assert
 (=> p$30 (= z$414 (and (distinct im.p1_c$next z$410) true))))
(assert
 (=> p$30 z$414))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$31 $x3004))))
(assert
 (=> p$31 (= z$415 (and (distinct im.p1_c$next z$255) true))))
(assert
 (=> p$31 z$415))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$32 $x2902))))
(assert
 (=> p$32 (= z$416 (and (distinct z$407 s1$next) true))))
(assert
 (=> p$32 z$416))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$33 $x2902))))
(assert
 (=> p$33 (= z$417 (and (distinct z$407 im.p1_a$next) true))))
(assert
 (=> p$33 z$417))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$34 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$34 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$34 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$34 $x678))))
(assert
 (=> p$34 (= z$430 (and (distinct z$410 z$255) true))))
(assert
 (=> p$34 z$430))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$35 $x1689))))
(assert
 (=> p$35 (= z$372 (and (distinct im.p1_a$next z$257) true))))
(assert
 (=> p$35 z$372))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$36 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$36 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$36 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$36 $x678))))
(assert
 (=> p$36 (= z$422 (and (distinct s1$next z$410) true))))
(assert
 (=> p$36 z$422))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$37 $x3004))))
(assert
 (=> p$37 (= z$423 (and (distinct s1$next z$255) true))))
(assert
 (=> p$37 z$423))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$38 $x551))))
(assert
 (let ((?x3156 (Sub_8_8_8 z$236 im.p1_c$next)))
 (let (($x2221 (= z$348 ?x3156)))
 (=> p$38 $x2221))))
(assert
 (=> p$38 (= z$373 (and (distinct s1$next z$348) true))))
(assert
 (=> p$38 z$373))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$39 $x2902))))
(assert
 (=> p$39 (= z$418 (and (distinct z$407 im.p1_b$next) true))))
(assert
 (=> p$39 z$418))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$40 $x2902))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$40 $x1689))))
(assert
 (=> p$40 (= z$419 (and (distinct z$407 z$257) true))))
(assert
 (=> p$40 z$419))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$41 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$41 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$41 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$41 $x678))))
(assert
 (=> p$41 (= z$426 (and (distinct im.p1_b$next z$410) true))))
(assert
 (=> p$41 z$426))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$42 $x3004))))
(assert
 (=> p$42 (= z$427 (and (distinct im.p1_b$next z$255) true))))
(assert
 (=> p$42 z$427))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$43 $x551))))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$43 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$43 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$43 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$43 $x678))))
(assert
 (=> p$43 (= z$448 (and (distinct z$236 z$410) true))))
(assert
 (=> p$43 z$448))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$44 $x2902))))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$44 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$44 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$44 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$44 $x678))))
(assert
 (=> p$44 (= z$420 (and (distinct z$407 z$410) true))))
(assert
 (=> p$44 z$420))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$45 $x2902))))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$45 $x3004))))
(assert
 (=> p$45 (= z$421 (and (distinct z$407 z$255) true))))
(assert
 (=> p$45 z$421))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$46 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$46 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$46 $x989))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$46 $x2213))))
(assert
 (=> p$46 (= z$571 (and (distinct z$261 z$255) true))))
(assert
 (=> p$46 z$571))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$47 $x2902))))
(assert
 (=> p$47 (= z$413 (and (distinct im.p1_c$next z$407) true))))
(assert
 (=> p$47 z$413))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$48 $x2902))))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$48 $x551))))
(assert
 (=> p$48 (= z$446 (and (distinct z$407 z$236) true))))
(assert
 (=> p$48 z$446))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$49 $x551))))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$49 $x3004))))
(assert
 (=> p$49 (= z$447 (and (distinct z$236 z$255) true))))
(assert
 (=> p$49 z$447))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$50 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$50 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$50 $x989))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$50 $x2213))))
(assert
 (=> p$50 (= z$367 (and (distinct s1$next z$261) true))))
(assert
 (=> p$50 z$367))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$51 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$51 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$51 $x989))))
(assert
 (let ((?x2772 (Add_8_8_8 z$259 c$next)))
 (let (($x678 (= z$410 ?x2772)))
 (=> p$51 $x678))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$51 $x2213))))
(assert
 (=> p$51 (= z$570 (and (distinct z$410 z$261) true))))
(assert
 (=> p$51 z$570))
(assert
 (let ((?x1294 (Sub_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x551 (= z$236 ?x1294)))
 (=> p$52 $x551))))
(assert
 (let ((?x7764 (Add_8_8_8 z$236 im.p1_c$next)))
 (let (($x7773 (= z$697 ?x7764)))
 (=> p$52 $x7773))))
(assert
 (let (($x2569 (= z$698 (and (distinct s1$next z$697) true))))
 (=> p$52 $x2569)))
(assert
 (=> p$52 z$698))
(assert
 (let ((?x3352 (Add_8_8_8 im.p1_a$next im.p1_b$next)))
 (let (($x2902 (= z$407 ?x3352)))
 (=> p$53 $x2902))))
(assert
 (let ((?x3603 (Add_8_8_8 a$next b$next)))
 (let (($x3004 (= z$255 ?x3603)))
 (=> p$53 $x3004))))
(assert
 (let ((?x2484 (Sub_8_8_8 a$next b$next)))
 (let (($x1689 (= z$257 ?x2484)))
 (=> p$53 $x1689))))
(assert
 (let ((?x3879 (ite ctl_1$next z$255 z$257)))
 (let (($x989 (= z$259 ?x3879)))
 (=> p$53 $x989))))
(assert
 (let ((?x2183 (Sub_8_8_8 z$259 c$next)))
 (let (($x2213 (= z$261 ?x2183)))
 (=> p$53 $x2213))))
(assert
 (=> p$53 (= z$724 (and (distinct z$407 z$261) true))))
(assert
 (=> p$53 z$724))
(check-sat)
(assert p$0)
(assert p$1)
(assert p$2)
(assert p$3)
(assert p$4)
(assert p$5)
(assert p$6)
(assert p$7)
(assert p$8)
(assert p$9)
(assert p$10)
(assert p$11)
(assert p$12)
(assert p$13)
(assert p$14)
(assert p$15)
(assert p$16)
(assert p$17)
(assert p$18)
(assert p$19)
(assert p$20)
(assert p$21)
(assert p$22)
(assert p$23)
(assert p$24)
(assert p$25)
(assert p$26)
(assert p$27)
(assert p$28)
(assert p$29)
(assert p$30)
(assert p$31)
(assert p$32)
(assert p$33)
(assert p$34)
(assert p$35)
(assert p$36)
(assert p$37)
(assert p$38)
(assert p$39)
(assert p$40)
(assert p$41)
(assert p$42)
(assert p$43)
(assert p$44)
(assert p$45)
(assert p$46)
(assert p$47)
(assert p$48)
(assert p$49)
(assert p$50)
(assert p$51)
(assert p$52)
(assert p$53)
(set-info :status unsat)
(check-sat)
(exit)
