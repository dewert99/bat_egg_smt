(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: diagonal_v
query-maker: "Z3"
query-time: 4.344000 ms
query-class: abstract
query-category: assume
query-type: mus_min
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

; 
(set-info :status sat)
(declare-sort utt4 0)
(declare-fun z$n5s4 () utt4)
(declare-fun z$n12s4 () utt4)
(declare-fun z$n6s4 () utt4)
(declare-fun z$n10s4 () utt4)
(declare-fun z$n3s4 () utt4)
(declare-fun z$n13s4 () utt4)
(declare-fun z$n2s4 () utt4)
(declare-fun z$n4s4 () utt4)
(declare-fun z$n9s4 () utt4)
(declare-fun z$n11s4 () utt4)
(declare-fun z$n8s4 () utt4)
(declare-fun z$n7s4 () utt4)
(declare-fun z$n14s4 () utt4)
(declare-fun z$n15s4 () utt4)
(declare-fun z$n0s4 () utt4)
(declare-fun z$n1s4 () utt4)
(declare-fun X () utt4)
(declare-fun Y () utt4)
(declare-fun Add_4_4_4 (utt4 utt4) utt4)
(declare-fun z$19 () utt4)
(declare-fun z$38 () utt4)
(declare-fun z$21 () utt4)
(declare-fun z$23 () utt4)
(declare-fun Y$next () utt4)
(declare-fun ShiftR_4_4_4 (utt4 utt4) utt4)
(declare-fun z$27 () utt4)
(declare-fun z$29 () utt4)
(declare-fun z$31 () utt4)
(declare-fun z$40 () utt4)
(declare-fun z$42 () utt4)
(declare-fun z$44 () utt4)
(declare-fun X$next () utt4)
(declare-fun z$107 () utt4)
(declare-fun z$110 () utt4)
(declare-fun z$227 () utt4)
(declare-fun z$229 () utt4)
(declare-fun z$16 () Bool)
(declare-fun z$93 () Bool)
(declare-fun z$402 () Bool)
(declare-fun z$732 () Bool)
(declare-fun z$734 () Bool)
(declare-fun z$2 () Bool)
(declare-fun z$97 () Bool)
(declare-fun z$850 () Bool)
(declare-fun z$851 () Bool)
(declare-fun z$168 () Bool)
(declare-fun z$861 () Bool)
(declare-fun z$862 () Bool)
(declare-fun z$101 () Bool)
(declare-fun z$98 () Bool)
(declare-fun z$163 () Bool)
(declare-fun z$1362 () Bool)
(declare-fun z$1430 () Bool)
(declare-fun z$1431 () Bool)
(declare-fun z$193 () Bool)
(declare-fun z$1439 () Bool)
(declare-fun z$1440 () Bool)
(declare-fun z$5 () Bool)
(declare-fun z$6 () Bool)
(declare-fun z$881 () Bool)
(declare-fun z$1538 () Bool)
(declare-fun z$1015 () Bool)
(declare-fun z$153 () Bool)
(declare-fun z$1585 () Bool)
(declare-fun z$1588 () Bool)
(declare-fun z$1589 () Bool)
(declare-fun z$1070 () Bool)
(declare-fun z$1072 () Bool)
(declare-fun z$162 () Bool)
(declare-fun z$1636 () Bool)
(declare-fun z$1685 () Bool)
(declare-fun z$1688 () Bool)
(declare-fun z$1689 () Bool)
(declare-fun z$99 () Bool)
(declare-fun z$95 () Bool)
(declare-fun Le_1_4_4 (utt4 utt4) Bool)
(declare-fun z$33 () Bool)
(declare-fun z$49 () Bool)
(declare-fun prop () Bool)
(declare-fun z$50 () Bool)
(declare-fun reset_ () Bool)
(declare-fun z$9 () Bool)
(declare-fun Gr_1_4_4 (utt4 utt4) Bool)
(declare-fun z$10 () Bool)
(declare-fun z$12 () Bool)
(declare-fun z$14 () Bool)
(declare-fun z$17 () Bool)
(declare-fun z$25 () Bool)
(declare-fun z$35 () Bool)
(declare-fun z$36 () Bool)
(declare-fun z$46 () Bool)
(declare-fun z$60 () Bool)
(declare-fun z$62 () Bool)
(declare-fun prop$next () Bool)
(declare-fun z$63 () Bool)
(declare-fun z$68 () Bool)
(declare-fun z$69 () Bool)
(declare-fun z$71 () Bool)
(declare-fun z$67 () Bool)
(declare-fun z$70 () Bool)
(declare-fun z$106 () Bool)
(declare-fun z$102 () Bool)
(declare-fun z$103 () Bool)
(declare-fun z$127 () Bool)
(declare-fun z$129 () Bool)
(declare-fun z$84 () Bool)
(declare-fun z$126 () Bool)
(declare-fun z$128 () Bool)
(declare-fun z$113 () Bool)
(declare-fun z$143 () Bool)
(declare-fun z$145 () Bool)
(declare-fun z$142 () Bool)
(declare-fun z$144 () Bool)
(declare-fun z$164 () Bool)
(declare-fun z$166 () Bool)
(declare-fun z$156 () Bool)
(declare-fun z$155 () Bool)
(declare-fun z$161 () Bool)
(declare-fun z$165 () Bool)
(declare-fun z$194 () Bool)
(declare-fun z$204 () Bool)
(declare-fun z$206 () Bool)
(declare-fun z$203 () Bool)
(declare-fun z$205 () Bool)
(declare-fun z$233 () Bool)
(declare-fun z$245 () Bool)
(declare-fun z$247 () Bool)
(declare-fun z$218 () Bool)
(declare-fun z$244 () Bool)
(declare-fun z$246 () Bool)
(declare-fun z$260 () Bool)
(declare-fun z$267 () Bool)
(declare-fun z$269 () Bool)
(declare-fun z$261 () Bool)
(declare-fun z$268 () Bool)
(declare-fun z$275 () Bool)
(declare-fun z$286 () Bool)
(declare-fun z$290 () Bool)
(declare-fun z$300 () Bool)
(declare-fun z$147 () Bool)
(declare-fun z$320 () Bool)
(declare-fun z$322 () Bool)
(declare-fun z$301 () Bool)
(declare-fun z$321 () Bool)
(declare-fun z$329 () Bool)
(declare-fun z$346 () Bool)
(declare-fun z$348 () Bool)
(declare-fun z$345 () Bool)
(declare-fun z$347 () Bool)
(declare-fun z$357 () Bool)
(declare-fun z$359 () Bool)
(declare-fun z$114 () Bool)
(declare-fun z$356 () Bool)
(declare-fun z$358 () Bool)
(declare-fun z$314 () Bool)
(declare-fun z$90 () Bool)
(declare-fun z$369 () Bool)
(declare-fun z$371 () Bool)
(declare-fun z$313 () Bool)
(declare-fun z$370 () Bool)
(declare-fun z$375 () Bool)
(declare-fun z$436 () Bool)
(declare-fun z$438 () Bool)
(declare-fun z$435 () Bool)
(declare-fun z$437 () Bool)
(declare-fun z$96 () Bool)
(declare-fun z$453 () Bool)
(declare-fun z$454 () Bool)
(declare-fun z$474 () Bool)
(declare-fun z$476 () Bool)
(declare-fun z$473 () Bool)
(declare-fun z$475 () Bool)
(declare-fun z$92 () Bool)
(declare-fun z$487 () Bool)
(declare-fun z$489 () Bool)
(declare-fun z$486 () Bool)
(declare-fun z$488 () Bool)
(declare-fun z$507 () Bool)
(declare-fun z$496 () Bool)
(declare-fun z$508 () Bool)
(declare-fun z$510 () Bool)
(declare-fun z$400 () Bool)
(declare-fun z$494 () Bool)
(declare-fun z$506 () Bool)
(declare-fun z$509 () Bool)
(declare-fun z$524 () Bool)
(declare-fun z$526 () Bool)
(declare-fun z$525 () Bool)
(declare-fun z$528 () Bool)
(declare-fun z$538 () Bool)
(declare-fun z$539 () Bool)
(declare-fun z$541 () Bool)
(declare-fun z$519 () Bool)
(declare-fun z$537 () Bool)
(declare-fun z$540 () Bool)
(declare-fun z$405 () Bool)
(declare-fun z$554 () Bool)
(declare-fun z$556 () Bool)
(declare-fun z$409 () Bool)
(declare-fun z$553 () Bool)
(declare-fun z$555 () Bool)
(declare-fun z$547 () Bool)
(declare-fun z$570 () Bool)
(declare-fun z$571 () Bool)
(declare-fun z$594 () Bool)
(declare-fun z$596 () Bool)
(declare-fun z$593 () Bool)
(declare-fun z$595 () Bool)
(declare-fun z$559 () Bool)
(declare-fun z$610 () Bool)
(declare-fun z$611 () Bool)
(declare-fun z$627 () Bool)
(declare-fun z$628 () Bool)
(declare-fun z$658 () Bool)
(declare-fun z$660 () Bool)
(declare-fun z$657 () Bool)
(declare-fun z$659 () Bool)
(declare-fun z$257 () Bool)
(declare-fun z$683 () Bool)
(declare-fun z$685 () Bool)
(declare-fun z$250 () Bool)
(declare-fun z$682 () Bool)
(declare-fun z$684 () Bool)
(declare-fun z$544 () Bool)
(declare-fun z$705 () Bool)
(declare-fun z$707 () Bool)
(declare-fun z$706 () Bool)
(declare-fun z$710 () Bool)
(declare-fun z$720 () Bool)
(declare-fun z$721 () Bool)
(declare-fun z$746 () Bool)
(declare-fun z$748 () Bool)
(declare-fun z$745 () Bool)
(declare-fun z$747 () Bool)
(declare-fun z$89 () Bool)
(declare-fun z$72 () Bool)
(declare-fun z$761 () Bool)
(declare-fun z$763 () Bool)
(declare-fun z$134 () Bool)
(declare-fun z$77 () Bool)
(declare-fun z$760 () Bool)
(declare-fun z$762 () Bool)
(declare-fun z$780 () Bool)
(declare-fun z$800 () Bool)
(declare-fun z$802 () Bool)
(declare-fun z$778 () Bool)
(declare-fun z$799 () Bool)
(declare-fun z$801 () Bool)
(declare-fun z$815 () Bool)
(declare-fun z$816 () Bool)
(declare-fun z$834 () Bool)
(declare-fun z$835 () Bool)
(declare-fun z$225 () Bool)
(declare-fun z$898 () Bool)
(declare-fun z$899 () Bool)
(declare-fun z$902 () Bool)
(declare-fun z$407 () Bool)
(declare-fun z$918 () Bool)
(declare-fun z$920 () Bool)
(declare-fun z$908 () Bool)
(declare-fun z$411 () Bool)
(declare-fun z$919 () Bool)
(declare-fun z$923 () Bool)
(declare-fun z$948 () Bool)
(declare-fun z$949 () Bool)
(declare-fun z$968 () Bool)
(declare-fun z$970 () Bool)
(declare-fun z$969 () Bool)
(declare-fun z$975 () Bool)
(declare-fun z$999 () Bool)
(declare-fun z$1011 () Bool)
(declare-fun z$1012 () Bool)
(declare-fun z$1031 () Bool)
(declare-fun z$1046 () Bool)
(declare-fun z$1047 () Bool)
(declare-fun z$1086 () Bool)
(declare-fun z$1087 () Bool)
(declare-fun z$381 () Bool)
(declare-fun z$1118 () Bool)
(declare-fun z$1119 () Bool)
(declare-fun z$1133 () Bool)
(declare-fun z$1134 () Bool)
(declare-fun z$86 () Bool)
(declare-fun z$1145 () Bool)
(declare-fun z$1147 () Bool)
(declare-fun z$91 () Bool)
(declare-fun z$1146 () Bool)
(declare-fun z$1150 () Bool)
(declare-fun z$112 () Bool)
(declare-fun z$1166 () Bool)
(declare-fun z$1167 () Bool)
(declare-fun z$1184 () Bool)
(declare-fun z$1185 () Bool)
(declare-fun z$1201 () Bool)
(declare-fun z$1203 () Bool)
(declare-fun z$382 () Bool)
(declare-fun z$1202 () Bool)
(declare-fun z$1205 () Bool)
(declare-fun z$1243 () Bool)
(declare-fun z$1245 () Bool)
(declare-fun z$1050 () Bool)
(declare-fun z$1244 () Bool)
(declare-fun z$1250 () Bool)
(declare-fun z$430 () Bool)
(declare-fun z$1267 () Bool)
(declare-fun z$1269 () Bool)
(declare-fun z$429 () Bool)
(declare-fun z$1266 () Bool)
(declare-fun z$1268 () Bool)
(declare-fun z$220 () Bool)
(declare-fun z$1291 () Bool)
(declare-fun z$1293 () Bool)
(declare-fun z$234 () Bool)
(declare-fun z$1292 () Bool)
(declare-fun z$1298 () Bool)
(declare-fun z$1336 () Bool)
(declare-fun z$1358 () Bool)
(declare-fun z$1359 () Bool)
(declare-fun z$1378 () Bool)
(declare-fun z$1396 () Bool)
(declare-fun z$1397 () Bool)
(declare-fun z$1416 () Bool)
(declare-fun z$1417 () Bool)
(declare-fun z$1111 () Bool)
(declare-fun z$1477 () Bool)
(declare-fun z$1479 () Bool)
(declare-fun z$1110 () Bool)
(declare-fun z$1476 () Bool)
(declare-fun z$1478 () Bool)
(declare-fun z$1511 () Bool)
(declare-fun z$1534 () Bool)
(declare-fun z$1535 () Bool)
(declare-fun z$1554 () Bool)
(declare-fun z$1460 () Bool)
(declare-fun z$1570 () Bool)
(declare-fun z$1571 () Bool)
(declare-fun z$1626 () Bool)
(declare-fun z$1632 () Bool)
(declare-fun z$1633 () Bool)
(declare-fun z$1652 () Bool)
(declare-fun z$1670 () Bool)
(declare-fun z$1671 () Bool)
(declare-fun z$1752 () Bool)
(declare-fun z$1762 () Bool)
(declare-fun z$1763 () Bool)
(declare-fun z$1782 () Bool)
(declare-fun z$1799 () Bool)
(declare-fun z$1800 () Bool)
(declare-fun z$1825 () Bool)
(declare-fun z$1827 () Bool)
(declare-fun z$1674 () Bool)
(declare-fun z$1826 () Bool)
(declare-fun z$1833 () Bool)
(declare-fun z$1854 () Bool)
(declare-fun z$1856 () Bool)
(declare-fun z$1855 () Bool)
(declare-fun z$1861 () Bool)
(declare-fun z$1867 () Bool)
(declare-fun z$88 () Bool)
(declare-fun p$0 () Bool)
(declare-fun p$1 () Bool)
(declare-fun p$2 () Bool)
(declare-fun z$176 () Bool)
(declare-fun p$3 () Bool)
(declare-fun p$4 () Bool)
(assert
 (and (distinct z$n1s4 z$n0s4 z$n15s4 z$n14s4 z$n7s4 z$n8s4 z$n11s4 z$n9s4 z$n4s4 z$n2s4 z$n13s4 z$n3s4 z$n10s4 z$n6s4 z$n12s4 z$n5s4) true))
(assert
 (= z$16 (and (distinct X z$n15s4) true)))
(assert
 (= z$93 (and (distinct Y z$n1s4) true)))
(assert
 (let ((?x1172 (Add_4_4_4 Y z$n1s4)))
 (= z$19 ?x1172)))
(assert
 (let (($x2425 (= z$19 Y)))
 (= z$402 $x2425)))
(assert
 (= z$732 (and z$93 z$402)))
(assert
 (= z$734 (not z$732)))
(assert
 (let (($x399 (= X z$n1s4)))
 (= z$2 $x399)))
(assert
 (= z$97 (and (distinct z$19 z$n1s4) true)))
(assert
 (= z$850 (and z$2 z$93 z$97)))
(assert
 (= z$851 (not z$850)))
(assert
 (= z$168 (and (distinct X z$19) true)))
(assert
 (= z$861 (and z$93 z$97 z$168)))
(assert
 (= z$862 (not z$861)))
(assert
 (let ((?x337 (Add_4_4_4 X z$n1s4)))
 (= z$38 ?x337)))
(assert
 (= z$101 (and (distinct z$38 z$n15s4) true)))
(assert
 (= z$98 (and (distinct z$38 z$n1s4) true)))
(assert
 (let (($x969 (= Y z$n1s4)))
 (= z$163 $x969)))
(assert
 (= z$1362 (and (distinct X z$n8s4) true)))
(assert
 (= z$1430 (and z$163 z$168 z$1362)))
(assert
 (= z$1431 (not z$1430)))
(assert
 (let (($x709 (= z$38 z$n15s4)))
 (= z$193 $x709)))
(assert
 (= z$1439 (and z$93 z$168 z$193)))
(assert
 (= z$1440 (not z$1439)))
(assert
 (let (($x147 (= Y z$n0s4)))
 (= z$5 $x147)))
(assert
 (= z$6 (and z$2 z$5)))
(assert
 (= z$881 (not z$6)))
(assert
 (= z$1538 (and (distinct X z$n10s4) true)))
(assert
 (= z$1015 (and (distinct X z$n7s4) true)))
(assert
 (let (($x687 (= z$19 z$n1s4)))
 (= z$153 $x687)))
(assert
 (= z$1585 (and z$1538 z$1015 z$153 z$93)))
(assert
 (= z$1588 (and z$881 z$1585)))
(assert
 (= z$1589 (not z$1588)))
(assert
 (= z$1070 (and z$163 z$193)))
(assert
 (= z$1072 (not z$1070)))
(assert
 (let (($x968 (= z$19 X)))
 (= z$162 $x968)))
(assert
 (= z$1636 (and (distinct X z$n3s4) true)))
(assert
 (= z$1685 (and z$162 z$1636 z$93)))
(assert
 (= z$1688 (and z$881 z$1685)))
(assert
 (= z$1689 (not z$1688)))
(assert
 (= z$99 (and (distinct z$19 z$n15s4) true)))
(assert
 (= z$95 (and (distinct Y z$n15s4) true)))
(assert
 (let (($x344 (Le_1_4_4 X Y)))
 (= z$33 $x344)))
(assert
 (let (($x848 (not z$33)))
 (= z$49 $x848)))
(assert
 (= z$50 (= prop z$49)))
(assert
 (let (($x1188 (not reset_)))
 (= z$9 $x1188)))
(assert
 (let (($x1281 (Gr_1_4_4 X Y)))
 (= z$10 $x1281)))
(assert
 (= z$12 (and z$9 z$10)))
(assert
 (let (($x274 (not z$10)))
 (= z$14 $x274)))
(assert
 (let (($x494 (or z$14 z$16)))
 (= z$17 $x494)))
(assert
 (let ((?x614 (ite z$17 z$19 X)))
 (= z$21 ?x614)))
(assert
 (let ((?x582 (ite z$12 Y z$21)))
 (= z$23 ?x582)))
(assert
 (let (($x601 (= Y$next z$23)))
 (= z$25 $x601)))
(assert
 (let ((?x782 (ShiftR_4_4_4 z$n15s4 z$n1s4)))
 (= z$27 ?x782)))
(assert
 (let ((?x305 (ShiftR_4_4_4 X z$n1s4)))
 (= z$29 ?x305)))
(assert
 (let ((?x131 (Add_4_4_4 z$27 z$29)))
 (= z$31 ?x131)))
(assert
 (let (($x397 (= Y X)))
 (= z$35 $x397)))
(assert
 (let (($x385 (or z$35 z$16)))
 (= z$36 $x385)))
(assert
 (let ((?x91 (ite z$36 z$38 Y)))
 (= z$40 ?x91)))
(assert
 (let ((?x182 (ite z$33 X z$40)))
 (= z$42 ?x182)))
(assert
 (let ((?x325 (ite z$12 z$31 z$42)))
 (= z$44 ?x325)))
(assert
 (let (($x332 (= X$next z$44)))
 (= z$46 $x332)))
(assert
 (let (($x413 (Le_1_4_4 X$next Y$next)))
 (= z$60 $x413)))
(assert
 (let (($x539 (not z$60)))
 (= z$62 $x539)))
(assert
 (= z$63 (= prop$next z$62)))
(assert
 (let (($x477 (= Y$next z$n0s4)))
 (= z$68 $x477)))
(assert
 (= z$69 (and z$60 z$68)))
(assert
 (= z$71 (not z$69)))
(assert
 (= z$67 (and z$33 z$5)))
(assert
 (= z$70 (not z$67)))
(assert
 (let (($x521 (= X$next z$n1s4)))
 (= z$106 $x521)))
(assert
 (let (($x1233 (Gr_1_4_4 X$next Y$next)))
 (= z$102 $x1233)))
(assert
 (let (($x1091 (not z$102)))
 (= z$103 $x1091)))
(assert
 (= z$127 (and z$68 z$106 z$103)))
(assert
 (= z$129 (not z$127)))
(assert
 (let (($x274 (not z$10)))
 (= z$84 $x274)))
(assert
 (= z$126 (and z$5 z$2 z$84)))
(assert
 (= z$128 (not z$126)))
(assert
 (let ((?x1001 (Add_4_4_4 Y$next z$n1s4)))
 (= z$107 ?x1001)))
(assert
 (= z$113 (and (distinct z$107 z$n1s4) true)))
(assert
 (= z$143 (and z$68 z$113)))
(assert
 (= z$145 (not z$143)))
(assert
 (= z$142 (and z$5 z$97)))
(assert
 (= z$144 (not z$142)))
(assert
 (= z$164 (and z$33 z$162 z$163)))
(assert
 (= z$166 (not z$164)))
(assert
 (let (($x971 (= z$107 X$next)))
 (= z$156 $x971)))
(assert
 (let (($x387 (= Y$next z$n1s4)))
 (= z$155 $x387)))
(assert
 (= z$161 (and z$60 z$156 z$155)))
(assert
 (= z$165 (not z$161)))
(assert
 (let ((?x1133 (Add_4_4_4 X$next z$n1s4)))
 (= z$110 ?x1133)))
(assert
 (let (($x649 (= z$110 z$n15s4)))
 (= z$194 $x649)))
(assert
 (= z$204 (and z$106 z$194)))
(assert
 (= z$206 (not z$204)))
(assert
 (= z$203 (and z$2 z$193)))
(assert
 (= z$205 (not z$203)))
(assert
 (let ((?x1043 (ShiftR_4_4_4 X$next z$n1s4)))
 (= z$227 ?x1043)))
(assert
 (= z$233 (and (distinct Y$next z$227) true)))
(assert
 (= z$245 (and z$106 z$68 z$233)))
(assert
 (= z$247 (not z$245)))
(assert
 (= z$218 (and (distinct Y z$29) true)))
(assert
 (= z$244 (and z$2 z$5 z$218)))
(assert
 (= z$246 (not z$244)))
(assert
 (let (($x1699 (= z$27 Y)))
 (= z$260 $x1699)))
(assert
 (= z$267 (and z$5 z$260)))
(assert
 (= z$269 (not z$267)))
(assert
 (let (($x606 (= z$27 Y$next)))
 (= z$261 $x606)))
(assert
 (= z$268 (and z$68 z$261)))
(assert
 (= z$275 (not z$268)))
(assert
 (= z$286 (and (distinct z$31 z$n15s4) true)))
(assert
 (let ((?x801 (Add_4_4_4 z$27 z$227)))
 (= z$229 ?x801)))
(assert
 (= z$290 (and (distinct z$229 z$n15s4) true)))
(assert
 (let (($x715 (= z$110 Y$next)))
 (= z$300 $x715)))
(assert
 (let (($x893 (= z$107 z$n1s4)))
 (= z$147 $x893)))
(assert
 (= z$320 (and z$300 z$147 z$106)))
(assert
 (= z$322 (not z$320)))
(assert
 (let (($x984 (= z$38 Y)))
 (= z$301 $x984)))
(assert
 (= z$321 (and z$301 z$153 z$2)))
(assert
 (= z$329 (not z$321)))
(assert
 (= z$346 (and z$162 z$301)))
(assert
 (= z$348 (not z$346)))
(assert
 (= z$345 (and z$156 z$300)))
(assert
 (= z$347 (not z$345)))
(assert
 (= z$357 (and z$33 z$162 z$98)))
(assert
 (= z$359 (not z$357)))
(assert
 (= z$114 (and (distinct z$110 z$n1s4) true)))
(assert
 (= z$356 (and z$60 z$156 z$114)))
(assert
 (= z$358 (not z$356)))
(assert
 (let (($x1121 (= z$110 z$n1s4)))
 (= z$314 $x1121)))
(assert
 (= z$90 (and (distinct Y$next z$n15s4) true)))
(assert
 (= z$369 (and z$314 z$156 z$90)))
(assert
 (= z$371 (not z$369)))
(assert
 (let (($x1527 (= z$38 z$n1s4)))
 (= z$313 $x1527)))
(assert
 (= z$370 (and z$313 z$162 z$95)))
(assert
 (= z$375 (not z$370)))
(assert
 (= z$436 (and z$33 z$163 z$98)))
(assert
 (= z$438 (not z$436)))
(assert
 (= z$435 (and z$60 z$155 z$114)))
(assert
 (= z$437 (not z$435)))
(assert
 (= z$96 (and (distinct Y z$38) true)))
(assert
 (= z$453 (and z$60 z$153 z$96 z$46 z$25)))
(assert
 (= z$454 (not z$453)))
(assert
 (= z$474 (and z$300 z$147 z$103)))
(assert
 (= z$476 (not z$474)))
(assert
 (= z$473 (and z$301 z$153 z$84)))
(assert
 (= z$475 (not z$473)))
(assert
 (= z$92 (and (distinct X$next z$n15s4) true)))
(assert
 (= z$487 (and z$92 z$300 z$147)))
(assert
 (= z$489 (not z$487)))
(assert
 (= z$486 (and z$16 z$301 z$153)))
(assert
 (= z$488 (not z$486)))
(assert
 (let (($x1040 (= z$31 X)))
 (= z$507 $x1040)))
(assert
 (let (($x1128 (= z$29 z$n1s4)))
 (= z$496 $x1128)))
(assert
 (= z$508 (and z$507 z$496)))
(assert
 (= z$510 (not z$508)))
(assert
 (let (($x1222 (= z$229 X$next)))
 (= z$400 $x1222)))
(assert
 (let (($x2119 (= z$227 z$n1s4)))
 (= z$494 $x2119)))
(assert
 (= z$506 (and z$400 z$494)))
(assert
 (= z$509 (not z$506)))
(assert
 (= z$524 (and z$314 z$400)))
(assert
 (= z$526 (not z$524)))
(assert
 (= z$525 (and z$313 z$507)))
(assert
 (= z$528 (not z$525)))
(assert
 (= z$538 (and (distinct X z$29) true)))
(assert
 (= z$539 (and z$313 z$538)))
(assert
 (= z$541 (not z$539)))
(assert
 (= z$519 (and (distinct X$next z$227) true)))
(assert
 (= z$537 (and z$314 z$519)))
(assert
 (= z$540 (not z$537)))
(assert
 (= z$405 (and (distinct z$27 z$31) true)))
(assert
 (= z$554 (and z$405 z$313)))
(assert
 (= z$556 (not z$554)))
(assert
 (= z$409 (and (distinct z$27 z$229) true)))
(assert
 (= z$553 (and z$409 z$314)))
(assert
 (= z$555 (not z$553)))
(assert
 (let (($x1036 (= X$next z$227)))
 (= z$547 $x1036)))
(assert
 (= z$570 (and z$9 z$10 z$547 z$46)))
(assert
 (= z$571 (not z$570)))
(assert
 (= z$594 (and z$194 z$147 z$103)))
(assert
 (= z$596 (not z$594)))
(assert
 (= z$593 (and z$193 z$153 z$84)))
(assert
 (= z$595 (not z$593)))
(assert
 (let (($x389 (= z$27 z$31)))
 (= z$559 $x389)))
(assert
 (= z$610 (and z$9 z$10 z$559 z$194 z$46)))
(assert
 (= z$611 (not z$610)))
(assert
 (= z$627 (and z$9 z$2 z$5 z$46 z$194)))
(assert
 (= z$628 (not z$627)))
(assert
 (= z$658 (and z$194 z$155 z$156)))
(assert
 (= z$660 (not z$658)))
(assert
 (= z$657 (and z$193 z$163 z$162)))
(assert
 (= z$659 (not z$657)))
(assert
 (let (($x2047 (= Y z$29)))
 (= z$257 $x2047)))
(assert
 (= z$683 (and z$33 z$257)))
(assert
 (= z$685 (not z$683)))
(assert
 (let (($x1516 (= Y$next z$227)))
 (= z$250 $x1516)))
(assert
 (= z$682 (and z$60 z$250)))
(assert
 (= z$684 (not z$682)))
(assert
 (let (($x1998 (= X z$29)))
 (= z$544 $x1998)))
(assert
 (= z$705 (and z$10 z$544)))
(assert
 (= z$707 (not z$705)))
(assert
 (= z$706 (and z$102 z$547)))
(assert
 (= z$710 (not z$706)))
(assert
 (= z$720 (and z$9 z$10 z$60 z$25 z$46)))
(assert
 (= z$721 (not z$720)))
(assert
 (= z$746 (and z$33 z$153)))
(assert
 (= z$748 (not z$746)))
(assert
 (= z$745 (and z$60 z$147)))
(assert
 (= z$747 (not z$745)))
(assert
 (= z$89 (and (distinct X$next z$n1s4) true)))
(assert
 (let (($x539 (not z$60)))
 (= z$72 $x539)))
(assert
 (= z$761 (and z$155 z$89 z$72 z$103)))
(assert
 (= z$763 (not z$761)))
(assert
 (= z$134 (and (distinct X z$n1s4) true)))
(assert
 (let (($x848 (not z$33)))
 (= z$77 $x848)))
(assert
 (= z$760 (and z$163 z$134 z$77 z$84)))
(assert
 (= z$762 (not z$760)))
(assert
 (let (($x1184 (= z$38 z$19)))
 (= z$780 $x1184)))
(assert
 (= z$800 (and z$33 z$780)))
(assert
 (= z$802 (not z$800)))
(assert
 (let (($x2736 (= z$110 z$107)))
 (= z$778 $x2736)))
(assert
 (= z$799 (and z$60 z$778)))
(assert
 (= z$801 (not z$799)))
(assert
 (= z$815 (and z$163 z$114 z$60 z$16 z$25 z$89)))
(assert
 (= z$816 (not z$815)))
(assert
 (= z$834 (and reset_ z$49 z$16 z$314 z$46)))
(assert
 (= z$835 (not z$834)))
(assert
 (= z$225 (and (distinct z$27 z$29) true)))
(assert
 (= z$898 (and z$9 z$10 z$225 z$194 z$46)))
(assert
 (= z$899 (not z$898)))
(assert
 (let (($x1487 (= z$27 z$29)))
 (= z$902 $x1487)))
(assert
 (= z$407 (and (distinct X z$31) true)))
(assert
 (= z$918 (and z$16 z$902 z$407)))
(assert
 (= z$920 (not z$918)))
(assert
 (let (($x3408 (= z$27 z$227)))
 (= z$908 $x3408)))
(assert
 (= z$411 (and (distinct X$next z$229) true)))
(assert
 (= z$919 (and z$92 z$908 z$411)))
(assert
 (= z$923 (not z$919)))
(assert
 (= z$948 (and z$194 z$153 z$46 z$84)))
(assert
 (= z$949 (not z$948)))
(assert
 (= z$968 (and z$5 z$405 z$257)))
(assert
 (= z$970 (not z$968)))
(assert
 (= z$969 (and z$68 z$409 z$250)))
(assert
 (= z$975 (not z$969)))
(assert
 (let (($x2987 (= X z$n7s4)))
 (= z$999 $x2987)))
(assert
 (= z$1011 (and z$999 z$194 z$46)))
(assert
 (= z$1012 (not z$1011)))
(assert
 (= z$1031 (and (distinct X$next z$n7s4) true)))
(assert
 (= z$1046 (and z$9 z$10 z$1031 z$559 z$46)))
(assert
 (= z$1047 (not z$1046)))
(assert
 (= z$1086 (and z$194 z$163 z$156 z$25)))
(assert
 (= z$1087 (not z$1086)))
(assert
 (let (($x3207 (= z$19 z$n15s4)))
 (= z$381 $x3207)))
(assert
 (= z$1118 (and z$381 z$314 z$16 z$49 z$46)))
(assert
 (= z$1119 (not z$1118)))
(assert
 (= z$1133 (and z$14 z$49 z$16 z$46 z$314)))
(assert
 (= z$1134 (not z$1133)))
(assert
 (= z$86 (and (distinct X Y) true)))
(assert
 (= z$1145 (and z$77 z$84 z$86)))
(assert
 (= z$1147 (not z$1145)))
(assert
 (= z$91 (and (distinct Y$next X$next) true)))
(assert
 (= z$1146 (and z$72 z$103 z$91)))
(assert
 (= z$1150 (not z$1146)))
(assert
 (= z$112 (and (distinct Y$next z$110) true)))
(assert
 (= z$1166 (and reset_ z$60 z$77 z$25 z$46 z$90 z$112)))
(assert
 (= z$1167 (not z$1166)))
(assert
 (= z$1184 (and reset_ z$300 z$16 z$25 z$46)))
(assert
 (= z$1185 (not z$1184)))
(assert
 (= z$1201 (and z$381 z$77 z$86 z$16)))
(assert
 (= z$1203 (not z$1201)))
(assert
 (let (($x783 (= z$107 z$n15s4)))
 (= z$382 $x783)))
(assert
 (= z$1202 (and z$382 z$72 z$91 z$92)))
(assert
 (= z$1205 (not z$1202)))
(assert
 (= z$1243 (and z$162 z$163 z$999)))
(assert
 (= z$1245 (not z$1243)))
(assert
 (let (($x3247 (= X$next z$n7s4)))
 (= z$1050 $x3247)))
(assert
 (= z$1244 (and z$156 z$155 z$1050)))
(assert
 (= z$1250 (not z$1244)))
(assert
 (let (($x1988 (= z$110 z$229)))
 (= z$430 $x1988)))
(assert
 (= z$1267 (and z$430 z$155 z$156)))
(assert
 (= z$1269 (not z$1267)))
(assert
 (let (($x2286 (= z$38 z$31)))
 (= z$429 $x2286)))
(assert
 (= z$1266 (and z$429 z$163 z$162)))
(assert
 (= z$1268 (not z$1266)))
(assert
 (= z$220 (and (distinct z$29 z$n1s4) true)))
(assert
 (= z$1291 (and z$220 z$163 z$162)))
(assert
 (= z$1293 (not z$1291)))
(assert
 (= z$234 (and (distinct z$227 z$n1s4) true)))
(assert
 (= z$1292 (and z$234 z$155 z$156)))
(assert
 (= z$1298 (not z$1292)))
(assert
 (let (($x2917 (= X z$n8s4)))
 (= z$1336 $x2917)))
(assert
 (= z$1358 (and z$1336 z$194 z$46)))
(assert
 (= z$1359 (not z$1358)))
(assert
 (= z$1378 (and (distinct X$next z$n8s4) true)))
(assert
 (= z$1396 (and z$9 z$10 z$1378 z$496 z$46)))
(assert
 (= z$1397 (not z$1396)))
(assert
 (= z$1416 (and reset_ z$1378 z$999 z$153 z$46)))
(assert
 (= z$1417 (not z$1416)))
(assert
 (let (($x4204 (= z$110 z$27)))
 (= z$1111 $x4204)))
(assert
 (= z$1477 (and z$106 z$1111)))
(assert
 (= z$1479 (not z$1477)))
(assert
 (let (($x4981 (= z$38 z$27)))
 (= z$1110 $x4981)))
(assert
 (= z$1476 (and z$2 z$1110)))
(assert
 (= z$1478 (not z$1476)))
(assert
 (let (($x4392 (= X z$n10s4)))
 (= z$1511 $x4392)))
(assert
 (= z$1534 (and z$1511 z$194 z$46)))
(assert
 (= z$1535 (not z$1534)))
(assert
 (= z$1554 (and (distinct X$next z$n10s4) true)))
(assert
 (let (($x5399 (= X z$27)))
 (= z$1460 $x5399)))
(assert
 (= z$1570 (and z$9 z$10 z$1554 z$1460 z$46)))
(assert
 (= z$1571 (not z$1570)))
(assert
 (let (($x3396 (= X z$n3s4)))
 (= z$1626 $x3396)))
(assert
 (= z$1632 (and z$1626 z$194 z$46)))
(assert
 (= z$1633 (not z$1632)))
(assert
 (= z$1652 (and (distinct X$next z$n3s4) true)))
(assert
 (= z$1670 (and reset_ z$16 z$25 z$156 z$163 z$1652)))
(assert
 (= z$1671 (not z$1670)))
(assert
 (let (($x5003 (= X z$n9s4)))
 (= z$1752 $x5003)))
(assert
 (= z$1762 (and z$1752 z$194 z$46)))
(assert
 (= z$1763 (not z$1762)))
(assert
 (= z$1782 (and (distinct X$next z$n9s4) true)))
(assert
 (= z$1799 (and reset_ z$1782 z$1336 z$163 z$46)))
(assert
 (= z$1800 (not z$1799)))
(assert
 (= z$1825 (and z$1626 z$257 z$162)))
(assert
 (= z$1827 (not z$1825)))
(assert
 (let (($x4728 (= X$next z$n3s4)))
 (= z$1674 $x4728)))
(assert
 (= z$1826 (and z$1674 z$250 z$156)))
(assert
 (= z$1833 (not z$1826)))
(assert
 (= z$1854 (and z$220 z$1626)))
(assert
 (= z$1856 (not z$1854)))
(assert
 (= z$1855 (and z$234 z$1674)))
(assert
 (= z$1861 (not z$1855)))
(assert
 (let (($x2467 (and z$16 z$734 z$851 z$862 z$101 z$98 z$1431 z$1440 z$1589 z$1072 z$1689 z$99 z$95 z$50 prop z$25 z$46 z$63 z$71 z$70 z$129 z$128 z$145 z$144 z$166 z$165 z$206 z$205 z$247 z$246 z$269 z$275 z$286 z$290 z$322 z$329 z$348 z$347 z$359 z$358 z$371 z$375 z$438 z$437 z$454 z$476 z$475 z$489 z$488 z$510 z$509 z$526 z$528 z$541 z$540 z$556 z$555 z$571 z$596 z$595 z$611 z$628 z$660 z$659 z$685 z$684 z$707 z$710 z$721 z$748 z$747 z$763 z$762 z$802 z$801 z$816 z$835 z$899 z$920 z$923 z$949 z$970 z$975 z$1012 z$1047 z$1087 z$1119 z$1134 z$1147 z$1150 z$1167 z$1185 z$1203 z$1205 z$1245 z$1250 z$1269 z$1268 z$1293 z$1298 z$1359 z$1397 z$1417 z$1479 z$1478 z$1535 z$1571 z$1633 z$1671 z$1763 z$1800 z$1827 z$1833 z$1856 z$1861)))
 (= z$1867 $x2467)))
(assert
 z$1867)
(assert
 (=> p$0 (= z$88 (and (distinct Y$next z$n1s4) true))))
(assert
 (=> p$0 z$88))
(assert
 (let ((?x1001 (Add_4_4_4 Y$next z$n1s4)))
 (let (($x1000 (= z$107 ?x1001)))
 (=> p$1 $x1000))))
(assert
 (let (($x645 (= z$113 (and (distinct z$107 z$n1s4) true))))
 (=> p$1 $x645)))
(assert
 (=> p$1 z$113))
(assert
 (let ((?x1001 (Add_4_4_4 Y$next z$n1s4)))
 (let (($x1000 (= z$107 ?x1001)))
 (=> p$2 $x1000))))
(assert
 (=> p$2 (= z$176 (and (distinct X$next z$107) true))))
(assert
 (=> p$2 z$176))
(assert
 (let (($x5078 (= z$1378 (and (distinct X$next z$n8s4) true))))
 (=> p$3 $x5078)))
(assert
 (=> p$3 z$1378))
(assert
 (let (($x4603 (= z$1782 (and (distinct X$next z$n9s4) true))))
 (=> p$4 $x4603)))
(assert
 (=> p$4 z$1782))
(check-sat)
(assert p$0)
(assert p$1)
(assert p$2)
(assert p$3)
(assert p$4)
(set-info :status unsat)
(check-sat)
(exit)
