(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: protocols.4.prop1
query-maker: "Z3"
query-time: 0.911000 ms
query-class: abstract
query-category: assume
query-type: mus_min
status: sat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

; 
(set-info :status sat)
(declare-sort utt8 0)
(declare-sort utt32 0)
(declare-sort utt24 0)
(declare-fun z$n255s8 () utt8)
(declare-fun z$n30s8 () utt8)
(declare-fun z$n1s8 () utt8)
(declare-fun z$n0s8 () utt8)
(declare-fun z$n257s32 () utt32)
(declare-fun z$n255s32 () utt32)
(declare-fun z$n0s32 () utt32)
(declare-fun z$n30s32 () utt32)
(declare-fun z$n20s32 () utt32)
(declare-fun z$n1s32 () utt32)
(declare-fun z$n2s32 () utt32)
(declare-fun Concat_32_8_24 (utt8 utt24) utt32)
(declare-fun z$n0s24 () utt24)
(declare-fun v_value_Sender () utt8)
(declare-fun z$68 () utt32)
(declare-fun Mult_32_32_32 (utt32 utt32) utt32)
(declare-fun z$70 () utt32)
(declare-fun v_sab () utt8)
(declare-fun z$72 () utt32)
(declare-fun Add_32_32_32 (utt32 utt32) utt32)
(declare-fun z$74 () utt32)
(declare-fun Extract_8_7_0_32 (utt32) utt8)
(declare-fun z$76 () utt8)
(declare-fun v_v_channel_K () utt8)
(declare-fun z$79 () utt8)
(declare-fun z$81 () utt8)
(declare-fun v_v_channel_K$next () utt8)
(declare-fun v_value_Receiver () utt8)
(declare-fun z$120 () utt32)
(declare-fun Div_32_32_32 (utt32 utt32) utt32)
(declare-fun z$122 () utt32)
(declare-fun z$124 () utt8)
(declare-fun v_value_Consumer () utt8)
(declare-fun z$126 () utt8)
(declare-fun v_value_Consumer$next () utt8)
(declare-fun z$163 () utt8)
(declare-fun v_value_Receiver$next () utt8)
(declare-fun BitWiseXor_8_8_8 (utt8 utt8) utt8)
(declare-fun v_rab () utt8)
(declare-fun z$167 () utt8)
(declare-fun z$169 () utt32)
(declare-fun Sub_32_32_32 (utt32 utt32) utt32)
(declare-fun z$171 () utt32)
(declare-fun z$173 () utt8)
(declare-fun z$175 () utt8)
(declare-fun z$177 () utt8)
(declare-fun v_rab$next () utt8)
(declare-fun v_lost_channel_K () utt8)
(declare-fun z$88 () utt32)
(declare-fun v_lost_channel_L () utt8)
(declare-fun z$107 () utt32)
(declare-fun v_retry () utt8)
(declare-fun Mod_32_32_32 (utt32 utt32) utt32)
(declare-fun z$461 () utt32)
(declare-fun Extract_24_31_8_32 (utt32) utt24)
(declare-fun z$463 () utt24)
(declare-fun z$466 () utt8)
(declare-fun z$151 () utt32)
(declare-fun v_v_channel_L () utt8)
(declare-fun z$133 () utt8)
(declare-fun z$135 () utt8)
(declare-fun z$137 () utt8)
(declare-fun v_value_Sender$next () utt8)
(declare-fun z$141 () utt32)
(declare-fun z$143 () utt8)
(declare-fun z$145 () utt8)
(declare-fun z$147 () utt8)
(declare-fun v_sab$next () utt8)
(declare-fun z$1229 () utt32)
(declare-fun z$1251 () utt32)
(declare-fun z$1233 () utt8)
(declare-fun z$1715 () utt8)
(declare-fun z$1293 () utt32)
(declare-fun z$1295 () utt32)
(declare-fun z$1297 () utt8)
(declare-fun z$1299 () utt8)
(declare-fun z$1301 () utt8)
(declare-fun z$1483 () utt32)
(declare-fun z$1490 () utt32)
(declare-fun z$1486 () utt32)
(declare-fun z$1613 () utt32)
(declare-fun a_send_ack () Bool)
(declare-fun z$29 () Bool)
(declare-fun a_ready_Consumer () Bool)
(declare-fun z$1170 () Bool)
(declare-fun z$1172 () Bool)
(declare-fun dve_invalid () Bool)
(declare-fun z$41 () Bool)
(declare-fun z$1179 () Bool)
(declare-fun z$1180 () Bool)
(declare-fun a_got_msg_Receiver () Bool)
(declare-fun z$1263 () Bool)
(declare-fun z$1265 () Bool)
(declare-fun a_ready_channel_K () Bool)
(declare-fun z$1318 () Bool)
(declare-fun z$1320 () Bool)
(declare-fun z$1190 () Bool)
(declare-fun z$1191 () Bool)
(declare-fun a_ready_Sender () Bool)
(declare-fun z$23 () Bool)
(declare-fun z$1340 () Bool)
(declare-fun z$1341 () Bool)
(declare-fun z$1348 () Bool)
(declare-fun z$1349 () Bool)
(declare-fun z$1356 () Bool)
(declare-fun z$1357 () Bool)
(declare-fun a_wait_ack () Bool)
(declare-fun z$37 () Bool)
(declare-fun z$1377 () Bool)
(declare-fun z$1378 () Bool)
(declare-fun z$1385 () Bool)
(declare-fun z$1386 () Bool)
(declare-fun z$1393 () Bool)
(declare-fun z$1394 () Bool)
(declare-fun a_sending () Bool)
(declare-fun z$31 () Bool)
(declare-fun z$834 () Bool)
(declare-fun z$1525 () Bool)
(declare-fun z$1534 () Bool)
(declare-fun z$1535 () Bool)
(declare-fun z$1542 () Bool)
(declare-fun z$1543 () Bool)
(declare-fun a_consume0 () Bool)
(declare-fun z$1 () Bool)
(declare-fun a_consume1 () Bool)
(declare-fun z$3 () Bool)
(declare-fun z$1052 () Bool)
(declare-fun z$1054 () Bool)
(declare-fun z$1055 () Bool)
(declare-fun z$1057 () Bool)
(declare-fun prop () Bool)
(declare-fun z$1058 () Bool)
(declare-fun f10 () Bool)
(declare-fun f11 () Bool)
(declare-fun z$83 () Bool)
(declare-fun f17 () Bool)
(declare-fun z$128 () Bool)
(declare-fun f12 () Bool)
(declare-fun z$165 () Bool)
(declare-fun f13 () Bool)
(declare-fun z$179 () Bool)
(declare-fun f00 () Bool)
(declare-fun z$181 () Bool)
(declare-fun z$182 () Bool)
(declare-fun z$184 () Bool)
(declare-fun z$185 () Bool)
(declare-fun z$186 () Bool)
(declare-fun z$188 () Bool)
(declare-fun z$189 () Bool)
(declare-fun z$191 () Bool)
(declare-fun z$192 () Bool)
(declare-fun z$193 () Bool)
(declare-fun z$195 () Bool)
(declare-fun z$196 () Bool)
(declare-fun a_ready_channel_K$next () Bool)
(declare-fun z$197 () Bool)
(declare-fun a_tr_channel_K () Bool)
(declare-fun z$199 () Bool)
(declare-fun z$201 () Bool)
(declare-fun z$202 () Bool)
(declare-fun z$204 () Bool)
(declare-fun z$205 () Bool)
(declare-fun z$206 () Bool)
(declare-fun z$208 () Bool)
(declare-fun z$209 () Bool)
(declare-fun a_tr_channel_K$next () Bool)
(declare-fun z$211 () Bool)
(declare-fun a_data_lost () Bool)
(declare-fun a_data_lost$next () Bool)
(declare-fun z$213 () Bool)
(declare-fun f01 () Bool)
(declare-fun z$215 () Bool)
(declare-fun a_ready_channel_L () Bool)
(declare-fun z$216 () Bool)
(declare-fun z$218 () Bool)
(declare-fun z$219 () Bool)
(declare-fun z$220 () Bool)
(declare-fun z$222 () Bool)
(declare-fun f14 () Bool)
(declare-fun z$223 () Bool)
(declare-fun z$224 () Bool)
(declare-fun z$226 () Bool)
(declare-fun z$227 () Bool)
(declare-fun a_ready_channel_L$next () Bool)
(declare-fun z$228 () Bool)
(declare-fun a_tr_channel_L () Bool)
(declare-fun z$230 () Bool)
(declare-fun z$232 () Bool)
(declare-fun z$233 () Bool)
(declare-fun z$235 () Bool)
(declare-fun z$236 () Bool)
(declare-fun a_tr_channel_L$next () Bool)
(declare-fun z$238 () Bool)
(declare-fun a_dataOK () Bool)
(declare-fun a_dataOK$next () Bool)
(declare-fun z$240 () Bool)
(declare-fun a_ready_Producer () Bool)
(declare-fun z$21 () Bool)
(declare-fun f02 () Bool)
(declare-fun z$243 () Bool)
(declare-fun z$244 () Bool)
(declare-fun f03 () Bool)
(declare-fun z$247 () Bool)
(declare-fun z$248 () Bool)
(declare-fun z$250 () Bool)
(declare-fun f15 () Bool)
(declare-fun z$251 () Bool)
(declare-fun z$252 () Bool)
(declare-fun z$254 () Bool)
(declare-fun z$255 () Bool)
(declare-fun f16 () Bool)
(declare-fun z$256 () Bool)
(declare-fun z$257 () Bool)
(declare-fun z$259 () Bool)
(declare-fun z$260 () Bool)
(declare-fun a_ready_Producer$next () Bool)
(declare-fun z$261 () Bool)
(declare-fun a_produce0 () Bool)
(declare-fun z$15 () Bool)
(declare-fun z$263 () Bool)
(declare-fun z$265 () Bool)
(declare-fun z$266 () Bool)
(declare-fun a_produce0$next () Bool)
(declare-fun z$268 () Bool)
(declare-fun a_produce1 () Bool)
(declare-fun z$17 () Bool)
(declare-fun z$270 () Bool)
(declare-fun z$272 () Bool)
(declare-fun z$273 () Bool)
(declare-fun a_produce1$next () Bool)
(declare-fun z$275 () Bool)
(declare-fun f06 () Bool)
(declare-fun z$278 () Bool)
(declare-fun z$279 () Bool)
(declare-fun z$281 () Bool)
(declare-fun z$282 () Bool)
(declare-fun f07 () Bool)
(declare-fun z$284 () Bool)
(declare-fun z$285 () Bool)
(declare-fun z$287 () Bool)
(declare-fun z$288 () Bool)
(declare-fun z$289 () Bool)
(declare-fun z$291 () Bool)
(declare-fun a_ready_Consumer$next () Bool)
(declare-fun z$292 () Bool)
(declare-fun f04 () Bool)
(declare-fun z$295 () Bool)
(declare-fun a_got_msg_Consumer () Bool)
(declare-fun z$296 () Bool)
(declare-fun f05 () Bool)
(declare-fun z$299 () Bool)
(declare-fun z$300 () Bool)
(declare-fun z$302 () Bool)
(declare-fun z$303 () Bool)
(declare-fun z$305 () Bool)
(declare-fun a_got_msg_Consumer$next () Bool)
(declare-fun z$306 () Bool)
(declare-fun z$308 () Bool)
(declare-fun z$310 () Bool)
(declare-fun z$311 () Bool)
(declare-fun a_consume0$next () Bool)
(declare-fun z$313 () Bool)
(declare-fun z$315 () Bool)
(declare-fun z$317 () Bool)
(declare-fun z$318 () Bool)
(declare-fun a_consume1$next () Bool)
(declare-fun z$320 () Bool)
(declare-fun z$322 () Bool)
(declare-fun z$324 () Bool)
(declare-fun z$325 () Bool)
(declare-fun z$327 () Bool)
(declare-fun z$329 () Bool)
(declare-fun a_ready_Sender$next () Bool)
(declare-fun z$330 () Bool)
(declare-fun z$332 () Bool)
(declare-fun z$334 () Bool)
(declare-fun z$335 () Bool)
(declare-fun z$337 () Bool)
(declare-fun z$338 () Bool)
(declare-fun z$339 () Bool)
(declare-fun z$341 () Bool)
(declare-fun a_sending$next () Bool)
(declare-fun z$342 () Bool)
(declare-fun f08 () Bool)
(declare-fun z$345 () Bool)
(declare-fun z$346 () Bool)
(declare-fun z$348 () Bool)
(declare-fun z$349 () Bool)
(declare-fun z$351 () Bool)
(declare-fun z$352 () Bool)
(declare-fun a_wait_ack$next () Bool)
(declare-fun z$354 () Bool)
(declare-fun a_failed () Bool)
(declare-fun z$9 () Bool)
(declare-fun z$356 () Bool)
(declare-fun z$358 () Bool)
(declare-fun a_failed$next () Bool)
(declare-fun z$359 () Bool)
(declare-fun f09 () Bool)
(declare-fun z$362 () Bool)
(declare-fun a_waiting () Bool)
(declare-fun z$363 () Bool)
(declare-fun z$365 () Bool)
(declare-fun z$366 () Bool)
(declare-fun z$368 () Bool)
(declare-fun z$369 () Bool)
(declare-fun z$371 () Bool)
(declare-fun z$372 () Bool)
(declare-fun a_waiting$next () Bool)
(declare-fun z$373 () Bool)
(declare-fun z$375 () Bool)
(declare-fun z$377 () Bool)
(declare-fun z$378 () Bool)
(declare-fun z$380 () Bool)
(declare-fun z$381 () Bool)
(declare-fun a_got_msg_Receiver$next () Bool)
(declare-fun z$383 () Bool)
(declare-fun z$385 () Bool)
(declare-fun z$387 () Bool)
(declare-fun z$388 () Bool)
(declare-fun z$390 () Bool)
(declare-fun a_send_ack$next () Bool)
(declare-fun z$391 () Bool)
(declare-fun GrEq_1_32_32 (utt32 utt32) Bool)
(declare-fun z$394 () Bool)
(declare-fun z$396 () Bool)
(declare-fun z$397 () Bool)
(declare-fun z$399 () Bool)
(declare-fun z$400 () Bool)
(declare-fun z$402 () Bool)
(declare-fun z$403 () Bool)
(declare-fun z$405 () Bool)
(declare-fun z$406 () Bool)
(declare-fun z$408 () Bool)
(declare-fun z$409 () Bool)
(declare-fun z$411 () Bool)
(declare-fun z$412 () Bool)
(declare-fun z$414 () Bool)
(declare-fun z$416 () Bool)
(declare-fun z$417 () Bool)
(declare-fun z$419 () Bool)
(declare-fun z$421 () Bool)
(declare-fun z$422 () Bool)
(declare-fun z$58 () Bool)
(declare-fun z$424 () Bool)
(declare-fun z$426 () Bool)
(declare-fun z$427 () Bool)
(declare-fun z$429 () Bool)
(declare-fun z$430 () Bool)
(declare-fun z$432 () Bool)
(declare-fun z$433 () Bool)
(declare-fun z$435 () Bool)
(declare-fun z$436 () Bool)
(declare-fun z$438 () Bool)
(declare-fun z$439 () Bool)
(declare-fun z$441 () Bool)
(declare-fun z$443 () Bool)
(declare-fun z$444 () Bool)
(declare-fun z$446 () Bool)
(declare-fun z$448 () Bool)
(declare-fun z$449 () Bool)
(declare-fun z$452 () Bool)
(declare-fun z$453 () Bool)
(declare-fun z$455 () Bool)
(declare-fun z$456 () Bool)
(declare-fun z$458 () Bool)
(declare-fun z$459 () Bool)
(declare-fun z$465 () Bool)
(declare-fun z$468 () Bool)
(declare-fun z$469 () Bool)
(declare-fun z$471 () Bool)
(declare-fun z$472 () Bool)
(declare-fun z$474 () Bool)
(declare-fun z$475 () Bool)
(declare-fun z$477 () Bool)
(declare-fun z$478 () Bool)
(declare-fun z$25 () Bool)
(declare-fun z$480 () Bool)
(declare-fun z$482 () Bool)
(declare-fun z$483 () Bool)
(declare-fun z$485 () Bool)
(declare-fun z$486 () Bool)
(declare-fun z$488 () Bool)
(declare-fun z$491 () Bool)
(declare-fun z$493 () Bool)
(declare-fun z$494 () Bool)
(declare-fun z$496 () Bool)
(declare-fun z$497 () Bool)
(declare-fun z$499 () Bool)
(declare-fun z$500 () Bool)
(declare-fun z$39 () Bool)
(declare-fun z$502 () Bool)
(declare-fun z$504 () Bool)
(declare-fun z$505 () Bool)
(declare-fun z$507 () Bool)
(declare-fun z$508 () Bool)
(declare-fun z$27 () Bool)
(declare-fun z$510 () Bool)
(declare-fun z$512 () Bool)
(declare-fun z$513 () Bool)
(declare-fun z$515 () Bool)
(declare-fun z$516 () Bool)
(declare-fun z$518 () Bool)
(declare-fun z$520 () Bool)
(declare-fun z$521 () Bool)
(declare-fun z$523 () Bool)
(declare-fun z$524 () Bool)
(declare-fun z$526 () Bool)
(declare-fun z$528 () Bool)
(declare-fun z$529 () Bool)
(declare-fun z$531 () Bool)
(declare-fun z$532 () Bool)
(declare-fun z$534 () Bool)
(declare-fun z$536 () Bool)
(declare-fun z$537 () Bool)
(declare-fun z$539 () Bool)
(declare-fun z$540 () Bool)
(declare-fun z$19 () Bool)
(declare-fun z$542 () Bool)
(declare-fun z$544 () Bool)
(declare-fun z$546 () Bool)
(declare-fun z$547 () Bool)
(declare-fun z$549 () Bool)
(declare-fun z$550 () Bool)
(declare-fun z$552 () Bool)
(declare-fun z$554 () Bool)
(declare-fun z$555 () Bool)
(declare-fun z$556 () Bool)
(declare-fun z$558 () Bool)
(declare-fun z$559 () Bool)
(declare-fun z$560 () Bool)
(declare-fun z$562 () Bool)
(declare-fun z$563 () Bool)
(declare-fun z$564 () Bool)
(declare-fun z$566 () Bool)
(declare-fun z$567 () Bool)
(declare-fun z$568 () Bool)
(declare-fun z$570 () Bool)
(declare-fun z$571 () Bool)
(declare-fun z$572 () Bool)
(declare-fun z$574 () Bool)
(declare-fun z$575 () Bool)
(declare-fun z$576 () Bool)
(declare-fun z$578 () Bool)
(declare-fun z$579 () Bool)
(declare-fun z$580 () Bool)
(declare-fun z$582 () Bool)
(declare-fun z$583 () Bool)
(declare-fun z$584 () Bool)
(declare-fun z$586 () Bool)
(declare-fun z$587 () Bool)
(declare-fun z$588 () Bool)
(declare-fun z$590 () Bool)
(declare-fun z$591 () Bool)
(declare-fun z$592 () Bool)
(declare-fun z$594 () Bool)
(declare-fun z$595 () Bool)
(declare-fun z$596 () Bool)
(declare-fun z$598 () Bool)
(declare-fun z$599 () Bool)
(declare-fun z$600 () Bool)
(declare-fun z$602 () Bool)
(declare-fun z$603 () Bool)
(declare-fun z$604 () Bool)
(declare-fun z$606 () Bool)
(declare-fun z$607 () Bool)
(declare-fun z$608 () Bool)
(declare-fun z$610 () Bool)
(declare-fun z$611 () Bool)
(declare-fun z$612 () Bool)
(declare-fun z$614 () Bool)
(declare-fun z$615 () Bool)
(declare-fun z$616 () Bool)
(declare-fun z$618 () Bool)
(declare-fun z$619 () Bool)
(declare-fun z$621 () Bool)
(declare-fun z$623 () Bool)
(declare-fun z$624 () Bool)
(declare-fun z$626 () Bool)
(declare-fun z$627 () Bool)
(declare-fun z$629 () Bool)
(declare-fun z$630 () Bool)
(declare-fun z$631 () Bool)
(declare-fun z$633 () Bool)
(declare-fun z$634 () Bool)
(declare-fun z$636 () Bool)
(declare-fun z$637 () Bool)
(declare-fun z$638 () Bool)
(declare-fun z$640 () Bool)
(declare-fun z$641 () Bool)
(declare-fun z$643 () Bool)
(declare-fun z$644 () Bool)
(declare-fun z$645 () Bool)
(declare-fun z$647 () Bool)
(declare-fun z$648 () Bool)
(declare-fun z$650 () Bool)
(declare-fun z$651 () Bool)
(declare-fun z$652 () Bool)
(declare-fun z$654 () Bool)
(declare-fun z$655 () Bool)
(declare-fun z$657 () Bool)
(declare-fun z$658 () Bool)
(declare-fun z$659 () Bool)
(declare-fun z$661 () Bool)
(declare-fun z$662 () Bool)
(declare-fun z$664 () Bool)
(declare-fun z$665 () Bool)
(declare-fun z$666 () Bool)
(declare-fun z$668 () Bool)
(declare-fun z$669 () Bool)
(declare-fun z$671 () Bool)
(declare-fun z$672 () Bool)
(declare-fun z$673 () Bool)
(declare-fun z$675 () Bool)
(declare-fun z$676 () Bool)
(declare-fun z$678 () Bool)
(declare-fun z$679 () Bool)
(declare-fun z$680 () Bool)
(declare-fun z$682 () Bool)
(declare-fun z$683 () Bool)
(declare-fun z$685 () Bool)
(declare-fun z$686 () Bool)
(declare-fun z$687 () Bool)
(declare-fun z$689 () Bool)
(declare-fun z$690 () Bool)
(declare-fun z$692 () Bool)
(declare-fun z$693 () Bool)
(declare-fun z$694 () Bool)
(declare-fun z$696 () Bool)
(declare-fun z$697 () Bool)
(declare-fun z$699 () Bool)
(declare-fun z$700 () Bool)
(declare-fun z$701 () Bool)
(declare-fun z$703 () Bool)
(declare-fun z$704 () Bool)
(declare-fun z$706 () Bool)
(declare-fun z$707 () Bool)
(declare-fun z$708 () Bool)
(declare-fun z$710 () Bool)
(declare-fun z$711 () Bool)
(declare-fun z$713 () Bool)
(declare-fun z$714 () Bool)
(declare-fun z$715 () Bool)
(declare-fun z$717 () Bool)
(declare-fun z$718 () Bool)
(declare-fun z$720 () Bool)
(declare-fun z$721 () Bool)
(declare-fun z$722 () Bool)
(declare-fun z$724 () Bool)
(declare-fun z$725 () Bool)
(declare-fun z$727 () Bool)
(declare-fun z$728 () Bool)
(declare-fun z$729 () Bool)
(declare-fun z$731 () Bool)
(declare-fun z$732 () Bool)
(declare-fun z$734 () Bool)
(declare-fun z$735 () Bool)
(declare-fun z$736 () Bool)
(declare-fun z$738 () Bool)
(declare-fun z$740 () Bool)
(declare-fun z$33 () Bool)
(declare-fun z$741 () Bool)
(declare-fun z$743 () Bool)
(declare-fun z$744 () Bool)
(declare-fun z$746 () Bool)
(declare-fun z$747 () Bool)
(declare-fun z$749 () Bool)
(declare-fun z$750 () Bool)
(declare-fun z$7 () Bool)
(declare-fun z$751 () Bool)
(declare-fun z$752 () Bool)
(declare-fun z$754 () Bool)
(declare-fun z$755 () Bool)
(declare-fun z$757 () Bool)
(declare-fun z$759 () Bool)
(declare-fun z$35 () Bool)
(declare-fun z$760 () Bool)
(declare-fun z$762 () Bool)
(declare-fun z$763 () Bool)
(declare-fun z$765 () Bool)
(declare-fun z$766 () Bool)
(declare-fun z$768 () Bool)
(declare-fun z$769 () Bool)
(declare-fun z$770 () Bool)
(declare-fun z$5 () Bool)
(declare-fun z$772 () Bool)
(declare-fun z$773 () Bool)
(declare-fun z$775 () Bool)
(declare-fun z$776 () Bool)
(declare-fun z$778 () Bool)
(declare-fun z$780 () Bool)
(declare-fun z$781 () Bool)
(declare-fun z$783 () Bool)
(declare-fun z$784 () Bool)
(declare-fun z$786 () Bool)
(declare-fun z$787 () Bool)
(declare-fun z$789 () Bool)
(declare-fun z$790 () Bool)
(declare-fun z$791 () Bool)
(declare-fun z$793 () Bool)
(declare-fun z$794 () Bool)
(declare-fun z$796 () Bool)
(declare-fun z$797 () Bool)
(declare-fun z$799 () Bool)
(declare-fun z$801 () Bool)
(declare-fun z$11 () Bool)
(declare-fun z$802 () Bool)
(declare-fun z$804 () Bool)
(declare-fun z$805 () Bool)
(declare-fun z$807 () Bool)
(declare-fun z$808 () Bool)
(declare-fun z$810 () Bool)
(declare-fun z$811 () Bool)
(declare-fun z$812 () Bool)
(declare-fun z$813 () Bool)
(declare-fun z$815 () Bool)
(declare-fun z$816 () Bool)
(declare-fun z$818 () Bool)
(declare-fun z$819 () Bool)
(declare-fun z$821 () Bool)
(declare-fun z$822 () Bool)
(declare-fun z$823 () Bool)
(declare-fun z$825 () Bool)
(declare-fun z$826 () Bool)
(declare-fun z$828 () Bool)
(declare-fun z$829 () Bool)
(declare-fun z$831 () Bool)
(declare-fun z$833 () Bool)
(declare-fun z$836 () Bool)
(declare-fun z$837 () Bool)
(declare-fun z$839 () Bool)
(declare-fun z$840 () Bool)
(declare-fun z$842 () Bool)
(declare-fun z$843 () Bool)
(declare-fun z$844 () Bool)
(declare-fun z$845 () Bool)
(declare-fun z$847 () Bool)
(declare-fun z$848 () Bool)
(declare-fun z$850 () Bool)
(declare-fun z$851 () Bool)
(declare-fun z$853 () Bool)
(declare-fun z$854 () Bool)
(declare-fun z$855 () Bool)
(declare-fun z$857 () Bool)
(declare-fun z$858 () Bool)
(declare-fun z$860 () Bool)
(declare-fun z$861 () Bool)
(declare-fun z$863 () Bool)
(declare-fun z$865 () Bool)
(declare-fun z$13 () Bool)
(declare-fun z$866 () Bool)
(declare-fun z$868 () Bool)
(declare-fun z$869 () Bool)
(declare-fun z$871 () Bool)
(declare-fun z$872 () Bool)
(declare-fun z$874 () Bool)
(declare-fun z$875 () Bool)
(declare-fun z$876 () Bool)
(declare-fun z$878 () Bool)
(declare-fun z$879 () Bool)
(declare-fun z$881 () Bool)
(declare-fun z$882 () Bool)
(declare-fun z$884 () Bool)
(declare-fun z$886 () Bool)
(declare-fun z$888 () Bool)
(declare-fun z$889 () Bool)
(declare-fun z$890 () Bool)
(declare-fun z$892 () Bool)
(declare-fun z$893 () Bool)
(declare-fun z$895 () Bool)
(declare-fun z$896 () Bool)
(declare-fun z$898 () Bool)
(declare-fun z$899 () Bool)
(declare-fun z$900 () Bool)
(declare-fun z$901 () Bool)
(declare-fun z$903 () Bool)
(declare-fun z$904 () Bool)
(declare-fun z$906 () Bool)
(declare-fun z$908 () Bool)
(declare-fun z$909 () Bool)
(declare-fun z$910 () Bool)
(declare-fun z$912 () Bool)
(declare-fun z$913 () Bool)
(declare-fun z$915 () Bool)
(declare-fun z$916 () Bool)
(declare-fun z$918 () Bool)
(declare-fun z$919 () Bool)
(declare-fun z$920 () Bool)
(declare-fun z$922 () Bool)
(declare-fun z$923 () Bool)
(declare-fun z$925 () Bool)
(declare-fun z$926 () Bool)
(declare-fun z$928 () Bool)
(declare-fun z$930 () Bool)
(declare-fun z$931 () Bool)
(declare-fun z$932 () Bool)
(declare-fun z$934 () Bool)
(declare-fun z$935 () Bool)
(declare-fun z$937 () Bool)
(declare-fun z$938 () Bool)
(declare-fun z$940 () Bool)
(declare-fun z$941 () Bool)
(declare-fun z$942 () Bool)
(declare-fun z$944 () Bool)
(declare-fun z$945 () Bool)
(declare-fun z$946 () Bool)
(declare-fun z$948 () Bool)
(declare-fun z$949 () Bool)
(declare-fun z$951 () Bool)
(declare-fun z$953 () Bool)
(declare-fun z$954 () Bool)
(declare-fun z$955 () Bool)
(declare-fun z$957 () Bool)
(declare-fun z$958 () Bool)
(declare-fun z$960 () Bool)
(declare-fun z$961 () Bool)
(declare-fun z$963 () Bool)
(declare-fun z$964 () Bool)
(declare-fun z$965 () Bool)
(declare-fun z$966 () Bool)
(declare-fun z$967 () Bool)
(declare-fun z$969 () Bool)
(declare-fun z$970 () Bool)
(declare-fun z$972 () Bool)
(declare-fun z$973 () Bool)
(declare-fun z$975 () Bool)
(declare-fun z$976 () Bool)
(declare-fun z$977 () Bool)
(declare-fun z$979 () Bool)
(declare-fun z$980 () Bool)
(declare-fun z$981 () Bool)
(declare-fun z$983 () Bool)
(declare-fun z$984 () Bool)
(declare-fun z$986 () Bool)
(declare-fun z$988 () Bool)
(declare-fun z$989 () Bool)
(declare-fun z$990 () Bool)
(declare-fun z$992 () Bool)
(declare-fun z$993 () Bool)
(declare-fun z$995 () Bool)
(declare-fun z$996 () Bool)
(declare-fun z$998 () Bool)
(declare-fun z$999 () Bool)
(declare-fun z$1000 () Bool)
(declare-fun z$1001 () Bool)
(declare-fun z$1002 () Bool)
(declare-fun z$1004 () Bool)
(declare-fun z$1005 () Bool)
(declare-fun z$1007 () Bool)
(declare-fun z$1008 () Bool)
(declare-fun z$1010 () Bool)
(declare-fun z$1011 () Bool)
(declare-fun z$1012 () Bool)
(declare-fun z$1014 () Bool)
(declare-fun z$1015 () Bool)
(declare-fun z$1016 () Bool)
(declare-fun z$1018 () Bool)
(declare-fun z$1019 () Bool)
(declare-fun z$1021 () Bool)
(declare-fun z$1023 () Bool)
(declare-fun z$1024 () Bool)
(declare-fun z$1025 () Bool)
(declare-fun z$1027 () Bool)
(declare-fun z$1028 () Bool)
(declare-fun z$1030 () Bool)
(declare-fun z$1031 () Bool)
(declare-fun z$1033 () Bool)
(declare-fun z$1034 () Bool)
(declare-fun z$1035 () Bool)
(declare-fun z$1037 () Bool)
(declare-fun z$1038 () Bool)
(declare-fun z$1039 () Bool)
(declare-fun z$1041 () Bool)
(declare-fun z$1042 () Bool)
(declare-fun z$1044 () Bool)
(declare-fun z$1046 () Bool)
(declare-fun z$1048 () Bool)
(declare-fun dve_invalid$next () Bool)
(declare-fun z$1049 () Bool)
(declare-fun z$1085 () Bool)
(declare-fun z$1086 () Bool)
(declare-fun z$1087 () Bool)
(declare-fun z$1088 () Bool)
(declare-fun z$1090 () Bool)
(declare-fun z$1091 () Bool)
(declare-fun z$1093 () Bool)
(declare-fun prop$next () Bool)
(declare-fun z$1094 () Bool)
(declare-fun z$139 () Bool)
(declare-fun z$149 () Bool)
(declare-fun z$1414 () Bool)
(declare-fun z$1419 () Bool)
(declare-fun z$1586 () Bool)
(declare-fun z$1587 () Bool)
(declare-fun z$1416 () Bool)
(declare-fun z$1630 () Bool)
(declare-fun z$1632 () Bool)
(declare-fun z$1218 () Bool)
(declare-fun z$1213 () Bool)
(declare-fun z$1149 () Bool)
(declare-fun z$1648 () Bool)
(declare-fun z$1649 () Bool)
(declare-fun z$1653 () Bool)
(declare-fun z$1223 () Bool)
(declare-fun z$1680 () Bool)
(declare-fun z$1682 () Bool)
(declare-fun z$1662 () Bool)
(declare-fun z$1253 () Bool)
(declare-fun z$1681 () Bool)
(declare-fun z$1692 () Bool)
(declare-fun z$1216 () Bool)
(declare-fun z$1714 () Bool)
(declare-fun z$1719 () Bool)
(declare-fun z$1717 () Bool)
(declare-fun z$1241 () Bool)
(declare-fun z$1718 () Bool)
(declare-fun z$1727 () Bool)
(declare-fun z$1239 () Bool)
(declare-fun z$1732 () Bool)
(declare-fun z$1756 () Bool)
(declare-fun z$1758 () Bool)
(declare-fun z$1214 () Bool)
(declare-fun z$1722 () Bool)
(declare-fun z$1755 () Bool)
(declare-fun z$1757 () Bool)
(declare-fun z$1283 () Bool)
(declare-fun z$48 () Bool)
(declare-fun z$1783 () Bool)
(declare-fun z$44 () Bool)
(declare-fun z$46 () Bool)
(declare-fun z$50 () Bool)
(declare-fun z$52 () Bool)
(declare-fun z$54 () Bool)
(declare-fun z$56 () Bool)
(declare-fun z$60 () Bool)
(declare-fun z$62 () Bool)
(declare-fun z$63 () Bool)
(declare-fun z$1785 () Bool)
(declare-fun z$1786 () Bool)
(declare-fun z$1787 () Bool)
(declare-fun f13$next () Bool)
(declare-fun z$1157 () Bool)
(declare-fun z$1771 () Bool)
(declare-fun z$1826 () Bool)
(declare-fun z$1828 () Bool)
(declare-fun z$1770 () Bool)
(declare-fun z$1825 () Bool)
(declare-fun z$1827 () Bool)
(declare-fun z$1853 () Bool)
(declare-fun z$1854 () Bool)
(declare-fun z$1492 () Bool)
(declare-fun z$1593 () Bool)
(declare-fun z$1887 () Bool)
(declare-fun z$1889 () Bool)
(declare-fun z$1435 () Bool)
(declare-fun z$1590 () Bool)
(declare-fun z$1886 () Bool)
(declare-fun z$1888 () Bool)
(declare-fun z$1603 () Bool)
(declare-fun z$1924 () Bool)
(declare-fun z$1926 () Bool)
(declare-fun z$1616 () Bool)
(declare-fun z$1925 () Bool)
(declare-fun z$1930 () Bool)
(declare-fun z$1605 () Bool)
(declare-fun z$1956 () Bool)
(declare-fun z$1958 () Bool)
(declare-fun z$1635 () Bool)
(declare-fun z$1618 () Bool)
(declare-fun z$1957 () Bool)
(declare-fun z$1968 () Bool)
(declare-fun z$1962 () Bool)
(declare-fun z$1479 () Bool)
(declare-fun z$1989 () Bool)
(declare-fun z$1990 () Bool)
(declare-fun z$2005 () Bool)
(declare-fun p$0 () Bool)
(declare-fun p$1 () Bool)
(declare-fun p$2 () Bool)
(declare-fun p$3 () Bool)
(assert
 (and (distinct z$n0s8 z$n1s8 z$n30s8 z$n255s8) true))
(assert
 (and (distinct z$n2s32 z$n1s32 z$n20s32 z$n30s32 z$n0s32 z$n255s32 z$n257s32) true))
(assert
 (let (($x149 (not a_send_ack)))
 (= z$29 $x149)))
(assert
 (= z$1170 (and a_ready_Consumer z$29)))
(assert
 (= z$1172 (not z$1170)))
(assert
 (= z$41 (not dve_invalid)))
(assert
 (= z$1179 (and a_ready_Consumer z$41)))
(assert
 (= z$1180 (not z$1179)))
(assert
 (= z$1263 (and a_got_msg_Receiver z$41)))
(assert
 (= z$1265 (not z$1263)))
(assert
 (= z$1318 (and a_ready_channel_K z$41)))
(assert
 (= z$1320 (not z$1318)))
(assert
 (= z$1190 (and a_ready_Consumer z$29 z$41)))
(assert
 (= z$1191 (not z$1190)))
(assert
 (let (($x137 (not a_ready_Sender)))
 (= z$23 $x137)))
(assert
 (= z$1340 (and z$23 a_ready_channel_K z$41)))
(assert
 (= z$1341 (not z$1340)))
(assert
 (= z$1348 (and a_got_msg_Receiver z$23 z$41)))
(assert
 (= z$1349 (not z$1348)))
(assert
 (= z$1356 (and a_ready_Consumer z$23 z$41)))
(assert
 (= z$1357 (not z$1356)))
(assert
 (let (($x165 (not a_wait_ack)))
 (= z$37 $x165)))
(assert
 (= z$1377 (and a_ready_channel_K z$37 z$41)))
(assert
 (= z$1378 (not z$1377)))
(assert
 (= z$1385 (and a_got_msg_Receiver z$37 z$41)))
(assert
 (= z$1386 (not z$1385)))
(assert
 (= z$1393 (and a_ready_Consumer z$37 z$41)))
(assert
 (= z$1394 (not z$1393)))
(assert
 (let (($x153 (not a_sending)))
 (= z$31 $x153)))
(assert
 (= z$834 (and a_ready_Sender z$31)))
(assert
 (let (($x1776 (not z$834)))
 (= z$1525 $x1776)))
(assert
 (= z$1534 (and a_ready_Sender z$41)))
(assert
 (= z$1535 (not z$1534)))
(assert
 (= z$1542 (and a_ready_Sender z$31 z$41)))
(assert
 (= z$1543 (not z$1542)))
(assert
 (let (($x43 (not a_consume0)))
 (= z$1 $x43)))
(assert
 (let (($x47 (not a_consume1)))
 (= z$3 $x47)))
(assert
 (= z$1052 (and z$1 z$3)))
(assert
 (= z$1054 (not z$1052)))
(assert
 (= z$1055 (and z$41 z$1054)))
(assert
 (= z$1057 (not z$1055)))
(assert
 (= z$1058 (= prop z$1057)))
(assert
 (let ((?x4282 (Concat_32_8_24 v_value_Sender z$n0s24)))
 (= z$68 ?x4282)))
(assert
 (let ((?x4023 (Mult_32_32_32 z$n2s32 z$68)))
 (= z$70 ?x4023)))
(assert
 (let ((?x4017 (Concat_32_8_24 v_sab z$n0s24)))
 (= z$72 ?x4017)))
(assert
 (let ((?x3235 (Add_32_32_32 z$70 z$72)))
 (= z$74 ?x3235)))
(assert
 (let ((?x4126 (Extract_8_7_0_32 z$74)))
 (= z$76 ?x4126)))
(assert
 (let ((?x33 (ite f10 z$76 v_v_channel_K)))
 (= z$79 ?x33)))
(assert
 (let ((?x3662 (ite f11 z$76 z$79)))
 (= z$81 ?x3662)))
(assert
 (let (($x4183 (= v_v_channel_K$next z$81)))
 (= z$83 $x4183)))
(assert
 (let ((?x218 (Concat_32_8_24 v_value_Receiver z$n0s24)))
 (= z$120 ?x218)))
(assert
 (let ((?x222 (Div_32_32_32 z$120 z$n2s32)))
 (= z$122 ?x222)))
(assert
 (let ((?x226 (Extract_8_7_0_32 z$122)))
 (= z$124 ?x226)))
(assert
 (let ((?x230 (ite f17 z$124 v_value_Consumer)))
 (= z$126 ?x230)))
(assert
 (let (($x234 (= v_value_Consumer$next z$126)))
 (= z$128 $x234)))
(assert
 (let ((?x4257 (ite f12 v_v_channel_K v_value_Receiver)))
 (= z$163 ?x4257)))
(assert
 (let (($x4185 (= v_value_Receiver$next z$163)))
 (= z$165 $x4185)))
(assert
 (let ((?x893 (BitWiseXor_8_8_8 z$n1s8 v_rab)))
 (= z$167 ?x893)))
(assert
 (let ((?x3988 (Concat_32_8_24 z$167 z$n0s24)))
 (= z$169 ?x3988)))
(assert
 (let ((?x2821 (Sub_32_32_32 z$n1s32 z$169)))
 (= z$171 ?x2821)))
(assert
 (let ((?x3629 (Extract_8_7_0_32 z$171)))
 (= z$173 ?x3629)))
(assert
 (let ((?x2295 (ite f13 z$173 z$167)))
 (= z$175 ?x2295)))
(assert
 (let ((?x3765 (BitWiseXor_8_8_8 z$n1s8 z$175)))
 (= z$177 ?x3765)))
(assert
 (let (($x3248 (= v_rab$next z$177)))
 (= z$179 $x3248)))
(assert
 (let (($x239 (not f00)))
 (= z$181 $x239)))
(assert
 (= z$182 (and a_ready_channel_K z$181)))
(assert
 (= z$184 (not z$182)))
(assert
 (let (($x250 (not f10)))
 (= z$185 $x250)))
(assert
 (= z$186 (and z$184 z$185)))
(assert
 (let (($x258 (not f11)))
 (= z$188 $x258)))
(assert
 (= z$189 (and z$186 z$188)))
(assert
 (= z$191 (not z$189)))
(assert
 (let (($x269 (not f12)))
 (= z$192 $x269)))
(assert
 (= z$193 (and z$191 z$192)))
(assert
 (= z$195 (not z$193)))
(assert
 (let (($x279 (not z$195)))
 (= z$196 $x279)))
(assert
 (= z$197 (= a_ready_channel_K$next z$196)))
(assert
 (= z$199 (and a_tr_channel_K z$181)))
(assert
 (= z$201 (not z$199)))
(assert
 (= z$202 (and z$201 z$185)))
(assert
 (= z$204 (not z$202)))
(assert
 (= z$205 (not z$204)))
(assert
 (= z$206 (and z$205 z$188)))
(assert
 (= z$208 (not z$206)))
(assert
 (= z$209 (and z$208 z$192)))
(assert
 (= z$211 (= a_tr_channel_K$next z$209)))
(assert
 (= z$213 (= a_data_lost$next a_data_lost)))
(assert
 (let (($x323 (not f01)))
 (= z$215 $x323)))
(assert
 (= z$216 (and a_ready_channel_L z$215)))
(assert
 (= z$218 (not z$216)))
(assert
 (let (($x334 (not f13)))
 (= z$219 $x334)))
(assert
 (= z$220 (and z$218 z$219)))
(assert
 (= z$222 (not z$220)))
(assert
 (let (($x345 (not f14)))
 (= z$223 $x345)))
(assert
 (= z$224 (and z$222 z$223)))
(assert
 (= z$226 (not z$224)))
(assert
 (let (($x355 (not z$226)))
 (= z$227 $x355)))
(assert
 (= z$228 (= a_ready_channel_L$next z$227)))
(assert
 (= z$230 (and a_tr_channel_L z$215)))
(assert
 (= z$232 (not z$230)))
(assert
 (= z$233 (and z$232 z$219)))
(assert
 (= z$235 (not z$233)))
(assert
 (= z$236 (and z$235 z$223)))
(assert
 (= z$238 (= a_tr_channel_L$next z$236)))
(assert
 (= z$240 (= a_dataOK$next a_dataOK)))
(assert
 (let (($x133 (not a_ready_Producer)))
 (= z$21 $x133)))
(assert
 (let (($x389 (not f02)))
 (= z$243 $x389)))
(assert
 (= z$244 (and z$21 z$243)))
(assert
 (let (($x397 (not f03)))
 (= z$247 $x397)))
(assert
 (= z$248 (and z$244 z$247)))
(assert
 (= z$250 (not z$248)))
(assert
 (let (($x408 (not f15)))
 (= z$251 $x408)))
(assert
 (= z$252 (and z$250 z$251)))
(assert
 (= z$254 (not z$252)))
(assert
 (= z$255 (not z$254)))
(assert
 (let (($x422 (not f16)))
 (= z$256 $x422)))
(assert
 (= z$257 (and z$255 z$256)))
(assert
 (= z$259 (not z$257)))
(assert
 (let (($x432 (not z$259)))
 (= z$260 $x432)))
(assert
 (= z$261 (= a_ready_Producer$next z$260)))
(assert
 (let (($x121 (not a_produce0)))
 (= z$15 $x121)))
(assert
 (= z$263 (and z$15 z$243)))
(assert
 (= z$265 (not z$263)))
(assert
 (= z$266 (and z$265 z$251)))
(assert
 (= z$268 (= a_produce0$next z$266)))
(assert
 (let (($x125 (not a_produce1)))
 (= z$17 $x125)))
(assert
 (= z$270 (and z$17 z$247)))
(assert
 (= z$272 (not z$270)))
(assert
 (= z$273 (and z$272 z$256)))
(assert
 (= z$275 (= a_produce1$next z$273)))
(assert
 (let (($x470 (not f06)))
 (= z$278 $x470)))
(assert
 (= z$279 (and a_ready_Consumer z$278)))
(assert
 (= z$281 (not z$279)))
(assert
 (= z$282 (not z$281)))
(assert
 (let (($x484 (not f07)))
 (= z$284 $x484)))
(assert
 (= z$285 (and z$282 z$284)))
(assert
 (= z$287 (not z$285)))
(assert
 (let (($x494 (not f17)))
 (= z$288 $x494)))
(assert
 (= z$289 (and z$287 z$288)))
(assert
 (let (($x501 (not z$289)))
 (= z$291 $x501)))
(assert
 (= z$292 (= a_ready_Consumer$next z$291)))
(assert
 (let (($x509 (not f04)))
 (= z$295 $x509)))
(assert
 (= z$296 (and a_got_msg_Consumer z$295)))
(assert
 (let (($x517 (not f05)))
 (= z$299 $x517)))
(assert
 (= z$300 (and z$296 z$299)))
(assert
 (= z$302 (not z$300)))
(assert
 (= z$303 (and z$302 z$288)))
(assert
 (= z$305 (not z$303)))
(assert
 (= z$306 (= a_got_msg_Consumer$next z$305)))
(assert
 (= z$308 (and z$1 z$295)))
(assert
 (= z$310 (not z$308)))
(assert
 (= z$311 (and z$310 z$278)))
(assert
 (= z$313 (= a_consume0$next z$311)))
(assert
 (= z$315 (and z$3 z$299)))
(assert
 (= z$317 (not z$315)))
(assert
 (= z$318 (and z$317 z$284)))
(assert
 (= z$320 (= a_consume1$next z$318)))
(assert
 (= z$322 (and a_ready_Sender z$223)))
(assert
 (= z$324 (not z$322)))
(assert
 (= z$325 (and z$324 z$251)))
(assert
 (= z$327 (and z$325 z$256)))
(assert
 (let (($x581 (not z$327)))
 (= z$329 $x581)))
(assert
 (= z$330 (= a_ready_Sender$next z$329)))
(assert
 (= z$332 (and a_sending z$185)))
(assert
 (= z$334 (not z$332)))
(assert
 (= z$335 (and z$334 z$251)))
(assert
 (= z$337 (not z$335)))
(assert
 (= z$338 (not z$337)))
(assert
 (= z$339 (and z$338 z$256)))
(assert
 (= z$341 (not z$339)))
(assert
 (= z$342 (= a_sending$next z$341)))
(assert
 (let (($x617 (not f08)))
 (= z$345 $x617)))
(assert
 (= z$346 (and a_wait_ack z$345)))
(assert
 (= z$348 (not z$346)))
(assert
 (= z$349 (and z$348 z$185)))
(assert
 (= z$351 (not z$349)))
(assert
 (= z$352 (and z$351 z$223)))
(assert
 (= z$354 (= a_wait_ack$next z$352)))
(assert
 (let (($x109 (not a_failed)))
 (= z$9 $x109)))
(assert
 (= z$356 (and z$9 z$345)))
(assert
 (= z$358 (not z$356)))
(assert
 (= z$359 (= a_failed$next z$358)))
(assert
 (let (($x654 (not f09)))
 (= z$362 $x654)))
(assert
 (= z$363 (and a_waiting z$362)))
(assert
 (= z$365 (not z$363)))
(assert
 (= z$366 (and z$365 z$192)))
(assert
 (= z$368 (not z$366)))
(assert
 (= z$369 (and z$368 z$219)))
(assert
 (= z$371 (not z$369)))
(assert
 (let (($x678 (not z$371)))
 (= z$372 $x678)))
(assert
 (= z$373 (= a_waiting$next z$372)))
(assert
 (= z$375 (and a_got_msg_Receiver z$362)))
(assert
 (= z$377 (not z$375)))
(assert
 (= z$378 (and z$377 z$192)))
(assert
 (= z$380 (not z$378)))
(assert
 (= z$381 (and z$380 z$288)))
(assert
 (= z$383 (= a_got_msg_Receiver$next z$381)))
(assert
 (= z$385 (and a_send_ack z$219)))
(assert
 (= z$387 (not z$385)))
(assert
 (= z$388 (and z$387 z$288)))
(assert
 (= z$390 (not z$388)))
(assert
 (= z$391 (= a_send_ack$next z$390)))
(assert
 (let ((?x724 (Concat_32_8_24 v_lost_channel_K z$n0s24)))
 (= z$88 ?x724)))
(assert
 (let (($x728 (GrEq_1_32_32 z$88 z$n20s32)))
 (= z$394 $x728)))
(assert
 (= z$396 (not z$394)))
(assert
 (= z$397 (and a_tr_channel_K z$396)))
(assert
 (= z$399 (not z$397)))
(assert
 (= z$400 (and f00 z$399)))
(assert
 (= z$402 (not z$400)))
(assert
 (let ((?x749 (Concat_32_8_24 v_lost_channel_L z$n0s24)))
 (= z$107 ?x749)))
(assert
 (let (($x753 (GrEq_1_32_32 z$107 z$n20s32)))
 (= z$403 $x753)))
(assert
 (= z$405 (not z$403)))
(assert
 (= z$406 (and a_tr_channel_L z$405)))
(assert
 (= z$408 (not z$406)))
(assert
 (= z$409 (and f01 z$408)))
(assert
 (= z$411 (not z$409)))
(assert
 (= z$412 (and z$402 z$411)))
(assert
 (= z$414 (and a_ready_Producer f02)))
(assert
 (= z$416 (not z$414)))
(assert
 (= z$417 (and z$412 z$416)))
(assert
 (= z$419 (and a_ready_Producer f03)))
(assert
 (= z$421 (not z$419)))
(assert
 (= z$422 (and z$417 z$421)))
(assert
 (let (($x201 (= v_value_Consumer z$n0s8)))
 (= z$58 $x201)))
(assert
 (= z$424 (and a_got_msg_Consumer z$58)))
(assert
 (= z$426 (not z$424)))
(assert
 (= z$427 (and f04 z$426)))
(assert
 (= z$429 (not z$427)))
(assert
 (= z$430 (and z$422 z$429)))
(assert
 (let (($x818 (= z$n1s8 v_value_Consumer)))
 (= z$432 $x818)))
(assert
 (= z$433 (and a_got_msg_Consumer z$432)))
(assert
 (= z$435 (not z$433)))
(assert
 (= z$436 (and f05 z$435)))
(assert
 (= z$438 (not z$436)))
(assert
 (= z$439 (and z$430 z$438)))
(assert
 (= z$441 (and z$1 f06)))
(assert
 (= z$443 (not z$441)))
(assert
 (= z$444 (and z$439 z$443)))
(assert
 (= z$446 (and z$3 f07)))
(assert
 (= z$448 (not z$446)))
(assert
 (= z$449 (and z$444 z$448)))
(assert
 (let (($x861 (= z$n30s8 v_retry)))
 (= z$452 $x861)))
(assert
 (= z$453 (and a_wait_ack z$452)))
(assert
 (= z$455 (not z$453)))
(assert
 (= z$456 (and f08 z$455)))
(assert
 (= z$458 (not z$456)))
(assert
 (= z$459 (and z$449 z$458)))
(assert
 (let ((?x882 (Mod_32_32_32 z$120 z$n2s32)))
 (= z$461 ?x882)))
(assert
 (let ((?x886 (Extract_24_31_8_32 z$461)))
 (= z$463 ?x886)))
(assert
 (let (($x890 (= z$n0s24 z$463)))
 (= z$465 $x890)))
(assert
 (let ((?x897 (Extract_8_7_0_32 z$461)))
 (= z$466 ?x897)))
(assert
 (let (($x901 (= z$167 z$466)))
 (= z$468 $x901)))
(assert
 (= z$469 (and z$465 z$468)))
(assert
 (let (($x908 (not z$469)))
 (= z$471 $x908)))
(assert
 (= z$472 (and a_got_msg_Receiver z$471)))
(assert
 (= z$474 (not z$472)))
(assert
 (= z$475 (and f09 z$474)))
(assert
 (= z$477 (not z$475)))
(assert
 (= z$478 (and z$459 z$477)))
(assert
 (let (($x141 (not a_ready_channel_K)))
 (= z$25 $x141)))
(assert
 (= z$480 (and z$25 a_sending)))
(assert
 (= z$482 (not z$480)))
(assert
 (= z$483 (and f10 z$482)))
(assert
 (= z$485 (not z$483)))
(assert
 (= z$486 (and z$478 z$485)))
(assert
 (= z$488 (and z$25 a_wait_ack)))
(assert
 (let ((?x951 (Concat_32_8_24 v_retry z$n0s24)))
 (= z$151 ?x951)))
(assert
 (let (($x955 (GrEq_1_32_32 z$151 z$n30s32)))
 (= z$491 $x955)))
(assert
 (= z$493 (not z$491)))
(assert
 (= z$494 (and z$488 z$493)))
(assert
 (= z$496 (not z$494)))
(assert
 (= z$497 (and f11 z$496)))
(assert
 (= z$499 (not z$497)))
(assert
 (= z$500 (and z$486 z$499)))
(assert
 (let (($x169 (not a_waiting)))
 (= z$39 $x169)))
(assert
 (= z$502 (and a_tr_channel_K z$39)))
(assert
 (= z$504 (not z$502)))
(assert
 (= z$505 (and f12 z$504)))
(assert
 (= z$507 (not z$505)))
(assert
 (= z$508 (and z$500 z$507)))
(assert
 (let (($x145 (not a_ready_channel_L)))
 (= z$27 $x145)))
(assert
 (= z$510 (and z$27 a_send_ack)))
(assert
 (= z$512 (not z$510)))
(assert
 (= z$513 (and f13 z$512)))
(assert
 (= z$515 (not z$513)))
(assert
 (= z$516 (and z$508 z$515)))
(assert
 (= z$518 (and a_tr_channel_L a_wait_ack)))
(assert
 (= z$520 (not z$518)))
(assert
 (= z$521 (and f14 z$520)))
(assert
 (= z$523 (not z$521)))
(assert
 (= z$524 (and z$516 z$523)))
(assert
 (= z$526 (and a_produce0 z$23)))
(assert
 (= z$528 (not z$526)))
(assert
 (= z$529 (and f15 z$528)))
(assert
 (= z$531 (not z$529)))
(assert
 (= z$532 (and z$524 z$531)))
(assert
 (= z$534 (and a_produce1 z$23)))
(assert
 (= z$536 (not z$534)))
(assert
 (= z$537 (and f16 z$536)))
(assert
 (= z$539 (not z$537)))
(assert
 (= z$540 (and z$532 z$539)))
(assert
 (let (($x129 (not a_ready_Consumer)))
 (= z$19 $x129)))
(assert
 (= z$542 (and z$19 a_got_msg_Receiver)))
(assert
 (= z$544 (and z$542 z$469)))
(assert
 (= z$546 (not z$544)))
(assert
 (= z$547 (and f17 z$546)))
(assert
 (= z$549 (not z$547)))
(assert
 (= z$550 (and z$540 z$549)))
(assert
 (= z$552 (and z$181 z$215)))
(assert
 (= z$554 (not z$552)))
(assert
 (let (($x1099 (not z$554)))
 (= z$555 $x1099)))
(assert
 (= z$556 (and z$243 z$555)))
(assert
 (= z$558 (not z$556)))
(assert
 (let (($x1109 (not z$558)))
 (= z$559 $x1109)))
(assert
 (= z$560 (and z$247 z$559)))
(assert
 (= z$562 (not z$560)))
(assert
 (let (($x1119 (not z$562)))
 (= z$563 $x1119)))
(assert
 (= z$564 (and z$295 z$563)))
(assert
 (= z$566 (not z$564)))
(assert
 (let (($x1129 (not z$566)))
 (= z$567 $x1129)))
(assert
 (= z$568 (and z$299 z$567)))
(assert
 (= z$570 (not z$568)))
(assert
 (let (($x1139 (not z$570)))
 (= z$571 $x1139)))
(assert
 (= z$572 (and z$278 z$571)))
(assert
 (= z$574 (not z$572)))
(assert
 (let (($x1149 (not z$574)))
 (= z$575 $x1149)))
(assert
 (= z$576 (and z$284 z$575)))
(assert
 (= z$578 (not z$576)))
(assert
 (let (($x1159 (not z$578)))
 (= z$579 $x1159)))
(assert
 (= z$580 (and z$345 z$579)))
(assert
 (= z$582 (not z$580)))
(assert
 (let (($x1169 (not z$582)))
 (= z$583 $x1169)))
(assert
 (= z$584 (and z$362 z$583)))
(assert
 (= z$586 (not z$584)))
(assert
 (let (($x1179 (not z$586)))
 (= z$587 $x1179)))
(assert
 (= z$588 (and z$185 z$587)))
(assert
 (= z$590 (not z$588)))
(assert
 (let (($x1189 (not z$590)))
 (= z$591 $x1189)))
(assert
 (= z$592 (and z$188 z$591)))
(assert
 (= z$594 (not z$592)))
(assert
 (let (($x1199 (not z$594)))
 (= z$595 $x1199)))
(assert
 (= z$596 (and z$192 z$595)))
(assert
 (= z$598 (not z$596)))
(assert
 (let (($x1209 (not z$598)))
 (= z$599 $x1209)))
(assert
 (= z$600 (and z$219 z$599)))
(assert
 (= z$602 (not z$600)))
(assert
 (let (($x1219 (not z$602)))
 (= z$603 $x1219)))
(assert
 (= z$604 (and z$223 z$603)))
(assert
 (= z$606 (not z$604)))
(assert
 (let (($x1229 (not z$606)))
 (= z$607 $x1229)))
(assert
 (= z$608 (and z$251 z$607)))
(assert
 (= z$610 (not z$608)))
(assert
 (let (($x1239 (not z$610)))
 (= z$611 $x1239)))
(assert
 (= z$612 (and z$256 z$611)))
(assert
 (= z$614 (not z$612)))
(assert
 (let (($x1249 (not z$614)))
 (= z$615 $x1249)))
(assert
 (= z$616 (and z$288 z$615)))
(assert
 (= z$618 (not z$616)))
(assert
 (= z$619 (and z$550 z$618)))
(assert
 (= z$621 (and f00 f01)))
(assert
 (= z$623 (not z$621)))
(assert
 (= z$624 (and f02 z$554)))
(assert
 (= z$626 (not z$624)))
(assert
 (= z$627 (and z$623 z$626)))
(assert
 (= z$629 (not z$627)))
(assert
 (= z$630 (not z$629)))
(assert
 (= z$631 (and f03 z$558)))
(assert
 (= z$633 (not z$631)))
(assert
 (= z$634 (and z$630 z$633)))
(assert
 (= z$636 (not z$634)))
(assert
 (= z$637 (not z$636)))
(assert
 (= z$638 (and f04 z$562)))
(assert
 (= z$640 (not z$638)))
(assert
 (= z$641 (and z$637 z$640)))
(assert
 (= z$643 (not z$641)))
(assert
 (= z$644 (not z$643)))
(assert
 (= z$645 (and f05 z$566)))
(assert
 (= z$647 (not z$645)))
(assert
 (= z$648 (and z$644 z$647)))
(assert
 (= z$650 (not z$648)))
(assert
 (= z$651 (not z$650)))
(assert
 (= z$652 (and f06 z$570)))
(assert
 (= z$654 (not z$652)))
(assert
 (= z$655 (and z$651 z$654)))
(assert
 (= z$657 (not z$655)))
(assert
 (= z$658 (not z$657)))
(assert
 (= z$659 (and f07 z$574)))
(assert
 (= z$661 (not z$659)))
(assert
 (= z$662 (and z$658 z$661)))
(assert
 (= z$664 (not z$662)))
(assert
 (= z$665 (not z$664)))
(assert
 (= z$666 (and f08 z$578)))
(assert
 (= z$668 (not z$666)))
(assert
 (= z$669 (and z$665 z$668)))
(assert
 (= z$671 (not z$669)))
(assert
 (= z$672 (not z$671)))
(assert
 (= z$673 (and f09 z$582)))
(assert
 (= z$675 (not z$673)))
(assert
 (= z$676 (and z$672 z$675)))
(assert
 (= z$678 (not z$676)))
(assert
 (= z$679 (not z$678)))
(assert
 (= z$680 (and f10 z$586)))
(assert
 (= z$682 (not z$680)))
(assert
 (= z$683 (and z$679 z$682)))
(assert
 (= z$685 (not z$683)))
(assert
 (= z$686 (not z$685)))
(assert
 (= z$687 (and f11 z$590)))
(assert
 (= z$689 (not z$687)))
(assert
 (= z$690 (and z$686 z$689)))
(assert
 (= z$692 (not z$690)))
(assert
 (= z$693 (not z$692)))
(assert
 (= z$694 (and f12 z$594)))
(assert
 (= z$696 (not z$694)))
(assert
 (= z$697 (and z$693 z$696)))
(assert
 (= z$699 (not z$697)))
(assert
 (= z$700 (not z$699)))
(assert
 (= z$701 (and f13 z$598)))
(assert
 (= z$703 (not z$701)))
(assert
 (= z$704 (and z$700 z$703)))
(assert
 (= z$706 (not z$704)))
(assert
 (= z$707 (not z$706)))
(assert
 (= z$708 (and f14 z$602)))
(assert
 (= z$710 (not z$708)))
(assert
 (= z$711 (and z$707 z$710)))
(assert
 (= z$713 (not z$711)))
(assert
 (= z$714 (not z$713)))
(assert
 (= z$715 (and f15 z$606)))
(assert
 (= z$717 (not z$715)))
(assert
 (= z$718 (and z$714 z$717)))
(assert
 (= z$720 (not z$718)))
(assert
 (= z$721 (not z$720)))
(assert
 (= z$722 (and f16 z$610)))
(assert
 (= z$724 (not z$722)))
(assert
 (= z$725 (and z$721 z$724)))
(assert
 (= z$727 (not z$725)))
(assert
 (= z$728 (not z$727)))
(assert
 (= z$729 (and f17 z$614)))
(assert
 (= z$731 (not z$729)))
(assert
 (= z$732 (and z$728 z$731)))
(assert
 (= z$734 (not z$732)))
(assert
 (= z$735 (not z$734)))
(assert
 (= z$736 (and z$619 z$735)))
(assert
 (= z$738 (and z$25 a_tr_channel_K)))
(assert
 (= z$740 (not z$738)))
(assert
 (let (($x157 (not a_tr_channel_K)))
 (= z$33 $x157)))
(assert
 (= z$741 (and a_ready_channel_K z$33)))
(assert
 (= z$743 (not z$741)))
(assert
 (= z$744 (and a_data_lost z$743)))
(assert
 (= z$746 (not z$744)))
(assert
 (= z$747 (and z$740 z$746)))
(assert
 (= z$749 (not z$747)))
(assert
 (= z$750 (not z$749)))
(assert
 (let (($x105 (not a_data_lost)))
 (= z$7 $x105)))
(assert
 (let (($x1577 (not z$743)))
 (= z$751 $x1577)))
(assert
 (= z$752 (and z$7 z$751)))
(assert
 (= z$754 (not z$752)))
(assert
 (= z$755 (and z$750 z$754)))
(assert
 (= z$757 (and z$27 a_tr_channel_L)))
(assert
 (= z$759 (not z$757)))
(assert
 (let (($x161 (not a_tr_channel_L)))
 (= z$35 $x161)))
(assert
 (= z$760 (and a_ready_channel_L z$35)))
(assert
 (= z$762 (not z$760)))
(assert
 (= z$763 (and a_dataOK z$762)))
(assert
 (= z$765 (not z$763)))
(assert
 (= z$766 (and z$759 z$765)))
(assert
 (= z$768 (not z$766)))
(assert
 (= z$769 (not z$768)))
(assert
 (= z$770 (and z$755 z$769)))
(assert
 (let (($x101 (not a_dataOK)))
 (= z$5 $x101)))
(assert
 (let (($x1626 (not z$762)))
 (= z$772 $x1626)))
(assert
 (= z$773 (and z$5 z$772)))
(assert
 (= z$775 (not z$773)))
(assert
 (= z$776 (and z$770 z$775)))
(assert
 (= z$778 (and z$21 a_produce0)))
(assert
 (= z$780 (not z$778)))
(assert
 (= z$781 (and a_ready_Producer z$15)))
(assert
 (= z$783 (not z$781)))
(assert
 (= z$784 (and a_produce1 z$783)))
(assert
 (= z$786 (not z$784)))
(assert
 (= z$787 (and z$780 z$786)))
(assert
 (= z$789 (not z$787)))
(assert
 (= z$790 (not z$789)))
(assert
 (= z$791 (and z$776 z$790)))
(assert
 (let (($x1675 (not z$783)))
 (= z$793 $x1675)))
(assert
 (= z$794 (and z$17 z$793)))
(assert
 (= z$796 (not z$794)))
(assert
 (= z$797 (and z$791 z$796)))
(assert
 (= z$799 (and z$19 a_got_msg_Consumer)))
(assert
 (= z$801 (not z$799)))
(assert
 (let (($x113 (not a_got_msg_Consumer)))
 (= z$11 $x113)))
(assert
 (= z$802 (and a_ready_Consumer z$11)))
(assert
 (= z$804 (not z$802)))
(assert
 (= z$805 (and a_consume0 z$804)))
(assert
 (= z$807 (not z$805)))
(assert
 (= z$808 (and z$801 z$807)))
(assert
 (= z$810 (not z$808)))
(assert
 (= z$811 (not z$810)))
(assert
 (let (($x1720 (not z$804)))
 (= z$812 $x1720)))
(assert
 (= z$813 (and z$1 z$812)))
(assert
 (= z$815 (not z$813)))
(assert
 (= z$816 (and a_consume1 z$815)))
(assert
 (= z$818 (not z$816)))
(assert
 (= z$819 (and z$811 z$818)))
(assert
 (= z$821 (not z$819)))
(assert
 (= z$822 (not z$821)))
(assert
 (= z$823 (and z$797 z$822)))
(assert
 (let (($x1751 (not z$815)))
 (= z$825 $x1751)))
(assert
 (= z$826 (and z$3 z$825)))
(assert
 (= z$828 (not z$826)))
(assert
 (= z$829 (and z$823 z$828)))
(assert
 (= z$831 (and z$23 a_sending)))
(assert
 (= z$833 (not z$831)))
(assert
 (let (($x1776 (not z$834)))
 (= z$836 $x1776)))
(assert
 (= z$837 (and a_wait_ack z$836)))
(assert
 (= z$839 (not z$837)))
(assert
 (= z$840 (and z$833 z$839)))
(assert
 (= z$842 (not z$840)))
(assert
 (= z$843 (not z$842)))
(assert
 (let (($x1796 (not z$836)))
 (= z$844 $x1796)))
(assert
 (= z$845 (and z$37 z$844)))
(assert
 (= z$847 (not z$845)))
(assert
 (= z$848 (and a_failed z$847)))
(assert
 (= z$850 (not z$848)))
(assert
 (= z$851 (and z$843 z$850)))
(assert
 (= z$853 (not z$851)))
(assert
 (= z$854 (not z$853)))
(assert
 (= z$855 (and z$829 z$854)))
(assert
 (let (($x1827 (not z$847)))
 (= z$857 $x1827)))
(assert
 (= z$858 (and z$9 z$857)))
(assert
 (= z$860 (not z$858)))
(assert
 (= z$861 (and z$855 z$860)))
(assert
 (= z$863 (and z$39 a_got_msg_Receiver)))
(assert
 (= z$865 (not z$863)))
(assert
 (let (($x117 (not a_got_msg_Receiver)))
 (= z$13 $x117)))
(assert
 (= z$866 (and a_waiting z$13)))
(assert
 (= z$868 (not z$866)))
(assert
 (= z$869 (and a_send_ack z$868)))
(assert
 (= z$871 (not z$869)))
(assert
 (= z$872 (and z$865 z$871)))
(assert
 (= z$874 (not z$872)))
(assert
 (= z$875 (not z$874)))
(assert
 (= z$876 (and z$861 z$875)))
(assert
 (let (($x1876 (not z$868)))
 (= z$878 $x1876)))
(assert
 (= z$879 (and z$29 z$878)))
(assert
 (= z$881 (not z$879)))
(assert
 (= z$882 (and z$876 z$881)))
(assert
 (= z$884 (and z$736 z$882)))
(assert
 (= z$886 (and z$195 z$209)))
(assert
 (= z$888 (not z$886)))
(assert
 (let (($x1901 (not z$209)))
 (= z$889 $x1901)))
(assert
 (= z$890 (and z$196 z$889)))
(assert
 (= z$892 (not z$890)))
(assert
 (= z$893 (and a_data_lost z$892)))
(assert
 (= z$895 (not z$893)))
(assert
 (= z$896 (and z$888 z$895)))
(assert
 (= z$898 (not z$896)))
(assert
 (= z$899 (not z$898)))
(assert
 (let (($x1928 (not z$892)))
 (= z$900 $x1928)))
(assert
 (= z$901 (and z$7 z$900)))
(assert
 (= z$903 (not z$901)))
(assert
 (= z$904 (and z$899 z$903)))
(assert
 (= z$906 (and z$226 z$236)))
(assert
 (= z$908 (not z$906)))
(assert
 (let (($x1949 (not z$236)))
 (= z$909 $x1949)))
(assert
 (= z$910 (and z$227 z$909)))
(assert
 (= z$912 (not z$910)))
(assert
 (= z$913 (and a_dataOK z$912)))
(assert
 (= z$915 (not z$913)))
(assert
 (= z$916 (and z$908 z$915)))
(assert
 (= z$918 (not z$916)))
(assert
 (= z$919 (not z$918)))
(assert
 (= z$920 (and z$904 z$919)))
(assert
 (let (($x1980 (not z$912)))
 (= z$922 $x1980)))
(assert
 (= z$923 (and z$5 z$922)))
(assert
 (= z$925 (not z$923)))
(assert
 (= z$926 (and z$920 z$925)))
(assert
 (= z$928 (and z$266 z$259)))
(assert
 (= z$930 (not z$928)))
(assert
 (let (($x2001 (not z$266)))
 (= z$931 $x2001)))
(assert
 (= z$932 (and z$931 z$260)))
(assert
 (= z$934 (not z$932)))
(assert
 (= z$935 (and z$273 z$934)))
(assert
 (= z$937 (not z$935)))
(assert
 (= z$938 (and z$930 z$937)))
(assert
 (= z$940 (not z$938)))
(assert
 (= z$941 (not z$940)))
(assert
 (= z$942 (and z$926 z$941)))
(assert
 (let (($x2032 (not z$273)))
 (= z$944 $x2032)))
(assert
 (let (($x2035 (not z$934)))
 (= z$945 $x2035)))
(assert
 (= z$946 (and z$944 z$945)))
(assert
 (= z$948 (not z$946)))
(assert
 (= z$949 (and z$942 z$948)))
(assert
 (= z$951 (and z$289 z$305)))
(assert
 (= z$953 (not z$951)))
(assert
 (let (($x2056 (not z$305)))
 (= z$954 $x2056)))
(assert
 (= z$955 (and z$291 z$954)))
(assert
 (= z$957 (not z$955)))
(assert
 (= z$958 (and z$311 z$957)))
(assert
 (= z$960 (not z$958)))
(assert
 (= z$961 (and z$953 z$960)))
(assert
 (= z$963 (not z$961)))
(assert
 (= z$964 (not z$963)))
(assert
 (let (($x2083 (not z$311)))
 (= z$965 $x2083)))
(assert
 (let (($x2086 (not z$957)))
 (= z$966 $x2086)))
(assert
 (= z$967 (and z$965 z$966)))
(assert
 (= z$969 (not z$967)))
(assert
 (= z$970 (and z$318 z$969)))
(assert
 (= z$972 (not z$970)))
(assert
 (= z$973 (and z$964 z$972)))
(assert
 (= z$975 (not z$973)))
(assert
 (= z$976 (not z$975)))
(assert
 (= z$977 (and z$949 z$976)))
(assert
 (let (($x2117 (not z$318)))
 (= z$979 $x2117)))
(assert
 (let (($x2120 (not z$969)))
 (= z$980 $x2120)))
(assert
 (= z$981 (and z$979 z$980)))
(assert
 (= z$983 (not z$981)))
(assert
 (= z$984 (and z$977 z$983)))
(assert
 (= z$986 (and z$327 z$341)))
(assert
 (= z$988 (not z$986)))
(assert
 (let (($x2141 (not z$341)))
 (= z$989 $x2141)))
(assert
 (= z$990 (and z$329 z$989)))
(assert
 (= z$992 (not z$990)))
(assert
 (= z$993 (and z$352 z$992)))
(assert
 (= z$995 (not z$993)))
(assert
 (= z$996 (and z$988 z$995)))
(assert
 (= z$998 (not z$996)))
(assert
 (= z$999 (not z$998)))
(assert
 (let (($x2168 (not z$352)))
 (= z$1000 $x2168)))
(assert
 (let (($x2171 (not z$992)))
 (= z$1001 $x2171)))
(assert
 (= z$1002 (and z$1000 z$1001)))
(assert
 (= z$1004 (not z$1002)))
(assert
 (= z$1005 (and z$358 z$1004)))
(assert
 (= z$1007 (not z$1005)))
(assert
 (= z$1008 (and z$999 z$1007)))
(assert
 (= z$1010 (not z$1008)))
(assert
 (= z$1011 (not z$1010)))
(assert
 (= z$1012 (and z$984 z$1011)))
(assert
 (let (($x2202 (not z$358)))
 (= z$1014 $x2202)))
(assert
 (let (($x2205 (not z$1004)))
 (= z$1015 $x2205)))
(assert
 (= z$1016 (and z$1014 z$1015)))
(assert
 (= z$1018 (not z$1016)))
(assert
 (= z$1019 (and z$1012 z$1018)))
(assert
 (= z$1021 (and z$371 z$381)))
(assert
 (= z$1023 (not z$1021)))
(assert
 (let (($x2226 (not z$381)))
 (= z$1024 $x2226)))
(assert
 (= z$1025 (and z$372 z$1024)))
(assert
 (= z$1027 (not z$1025)))
(assert
 (= z$1028 (and z$390 z$1027)))
(assert
 (= z$1030 (not z$1028)))
(assert
 (= z$1031 (and z$1023 z$1030)))
(assert
 (= z$1033 (not z$1031)))
(assert
 (= z$1034 (not z$1033)))
(assert
 (= z$1035 (and z$1019 z$1034)))
(assert
 (let (($x2257 (not z$390)))
 (= z$1037 $x2257)))
(assert
 (let (($x2260 (not z$1027)))
 (= z$1038 $x2260)))
(assert
 (= z$1039 (and z$1037 z$1038)))
(assert
 (= z$1041 (not z$1039)))
(assert
 (= z$1042 (and z$1035 z$1041)))
(assert
 (= z$1044 (and z$884 z$1042)))
(assert
 (= z$1046 (and z$1044 z$41)))
(assert
 (= z$1048 (not z$1046)))
(assert
 (= z$1049 (= dve_invalid$next z$1048)))
(assert
 (= z$1085 (not dve_invalid$next)))
(assert
 (= z$1086 (not a_consume0$next)))
(assert
 (= z$1087 (not a_consume1$next)))
(assert
 (= z$1088 (and z$1086 z$1087)))
(assert
 (= z$1090 (not z$1088)))
(assert
 (= z$1091 (and z$1085 z$1090)))
(assert
 (= z$1093 (not z$1091)))
(assert
 (= z$1094 (= prop$next z$1093)))
(assert
 (let ((?x4558 (ite f14 v_v_channel_L v_value_Sender)))
 (= z$133 ?x4558)))
(assert
 (let ((?x3045 (ite f15 z$n0s8 z$133)))
 (= z$135 ?x3045)))
(assert
 (let ((?x3416 (ite f16 z$n1s8 z$135)))
 (= z$137 ?x3416)))
(assert
 (let (($x3397 (= v_value_Sender$next z$137)))
 (= z$139 $x3397)))
(assert
 (let ((?x2723 (Sub_32_32_32 z$n1s32 z$72)))
 (= z$141 ?x2723)))
(assert
 (let ((?x4758 (Extract_8_7_0_32 z$141)))
 (= z$143 ?x4758)))
(assert
 (let ((?x2307 (ite f15 z$143 v_sab)))
 (= z$145 ?x2307)))
(assert
 (let ((?x4682 (ite f16 z$143 z$145)))
 (= z$147 ?x4682)))
(assert
 (let (($x3589 (= v_sab$next z$147)))
 (= z$149 $x3589)))
(assert
 (= z$1414 (and (distinct v_value_Sender z$n0s8) true)))
(assert
 (= z$1419 (and (distinct v_value_Sender z$n1s8) true)))
(assert
 (= z$1586 (and a_ready_Sender z$41 z$1414 z$1419)))
(assert
 (= z$1587 (not z$1586)))
(assert
 (= z$1416 (and (distinct v_sab z$n0s8) true)))
(assert
 (= z$1630 (and z$23 z$1416)))
(assert
 (= z$1632 (not z$1630)))
(assert
 (= z$1218 (and (distinct v_value_Receiver z$n1s8) true)))
(assert
 (= z$1213 (and (distinct v_value_Receiver z$n0s8) true)))
(assert
 (let (($x2421 (= v_value_Consumer$next z$n0s8)))
 (= z$1149 $x2421)))
(assert
 (= z$1648 (and f17 z$128 z$1218 z$1213 z$1149)))
(assert
 (= z$1649 (not z$1648)))
(assert
 (let (($x3195 (= v_value_Receiver z$n1s8)))
 (= z$1653 $x3195)))
(assert
 (= z$1223 (and (distinct z$120 z$461) true)))
(assert
 (= z$1680 (and z$1653 z$1223)))
(assert
 (= z$1682 (not z$1680)))
(assert
 (let (($x3307 (= v_value_Receiver$next z$n1s8)))
 (= z$1662 $x3307)))
(assert
 (let ((?x3653 (Concat_32_8_24 v_value_Receiver$next z$n0s24)))
 (= z$1229 ?x3653)))
(assert
 (let ((?x3933 (Mod_32_32_32 z$1229 z$n2s32)))
 (= z$1251 ?x3933)))
(assert
 (= z$1253 (and (distinct z$1229 z$1251) true)))
(assert
 (= z$1681 (and z$1662 z$1253)))
(assert
 (= z$1692 (not z$1681)))
(assert
 (= z$1216 (and (distinct z$167 z$n1s8) true)))
(assert
 (= z$1714 (and z$468 z$1216 z$1653)))
(assert
 (= z$1719 (not z$1714)))
(assert
 (let ((?x3595 (BitWiseXor_8_8_8 z$n1s8 v_rab$next)))
 (= z$1233 ?x3595)))
(assert
 (let ((?x18130 (Extract_8_7_0_32 z$1251)))
 (= z$1715 ?x18130)))
(assert
 (let (($x3155 (= z$1233 z$1715)))
 (= z$1717 $x3155)))
(assert
 (= z$1241 (and (distinct z$1233 z$n1s8) true)))
(assert
 (= z$1718 (and z$1717 z$1241 z$1662)))
(assert
 (= z$1727 (not z$1718)))
(assert
 (= z$1239 (and (distinct v_rab$next z$n0s8) true)))
(assert
 (let (($x10683 (= z$1233 z$n1s8)))
 (= z$1732 $x10683)))
(assert
 (= z$1756 (and z$1239 z$1732)))
(assert
 (= z$1758 (not z$1756)))
(assert
 (= z$1214 (and (distinct v_rab z$n0s8) true)))
(assert
 (let (($x4834 (= z$167 z$n1s8)))
 (= z$1722 $x4834)))
(assert
 (= z$1755 (and z$1214 z$1722)))
(assert
 (= z$1757 (not z$1755)))
(assert
 (= z$1283 (and (distinct z$177 z$n0s8) true)))
(assert
 (let (($x181 (= v_rab z$n0s8)))
 (= z$48 $x181)))
(assert
 (= z$1783 (and z$1283 z$48 z$41 z$219)))
(assert
 (let (($x173 (= v_lost_channel_K z$n0s8)))
 (= z$44 $x173)))
(assert
 (let (($x177 (= v_lost_channel_L z$n0s8)))
 (= z$46 $x177)))
(assert
 (let (($x185 (= v_retry z$n0s8)))
 (= z$50 $x185)))
(assert
 (let (($x189 (= v_sab z$n0s8)))
 (= z$52 $x189)))
(assert
 (let (($x193 (= v_v_channel_K z$n0s8)))
 (= z$54 $x193)))
(assert
 (let (($x197 (= v_v_channel_L z$n0s8)))
 (= z$56 $x197)))
(assert
 (let (($x205 (= v_value_Receiver z$n0s8)))
 (= z$60 $x205)))
(assert
 (let (($x209 (= v_value_Sender z$n0s8)))
 (= z$62 $x209)))
(assert
 (let (($x18580 (and z$1 z$3 z$5 z$7 z$9 z$11 z$13 z$15 z$17 z$19 z$21 z$23 z$25 z$27 z$29 z$31 z$33 z$35 z$37 z$39 z$41 z$44 z$46 z$48 z$50 z$52 z$54 z$56 z$58 z$60 z$62)))
 (= z$63 $x18580)))
(assert
 (= z$1785 (not z$63)))
(assert
 (= z$1786 (and z$1783 z$1785)))
(assert
 (= z$1787 (not z$1786)))
(assert
 (= z$1157 (not f13$next)))
(assert
 (let ((?x3464 (Concat_32_8_24 z$1233 z$n0s24)))
 (= z$1293 ?x3464)))
(assert
 (let ((?x3898 (Sub_32_32_32 z$n1s32 z$1293)))
 (= z$1295 ?x3898)))
(assert
 (let ((?x3166 (Extract_8_7_0_32 z$1295)))
 (= z$1297 ?x3166)))
(assert
 (let ((?x3104 (ite f13$next z$1297 z$1233)))
 (= z$1299 ?x3104)))
(assert
 (let ((?x3091 (BitWiseXor_8_8_8 z$n1s8 z$1299)))
 (= z$1301 ?x3091)))
(assert
 (let (($x10734 (= z$1301 z$n0s8)))
 (= z$1771 $x10734)))
(assert
 (= z$1826 (and z$1157 z$1771 z$1241)))
(assert
 (= z$1828 (not z$1826)))
(assert
 (let (($x19237 (= z$177 z$n0s8)))
 (= z$1770 $x19237)))
(assert
 (= z$1825 (and z$219 z$1770 z$1216)))
(assert
 (= z$1827 (not z$1825)))
(assert
 (= z$1853 (and a_waiting z$48 z$219 z$1283)))
(assert
 (= z$1854 (not z$1853)))
(assert
 (let ((?x4441 (Concat_32_8_24 v_value_Sender$next z$n0s24)))
 (= z$1483 ?x4441)))
(assert
 (let ((?x4617 (Mult_32_32_32 z$n2s32 z$1483)))
 (= z$1490 ?x4617)))
(assert
 (= z$1492 (and (distinct z$1490 z$n2s32) true)))
(assert
 (let (($x18418 (= v_value_Sender$next z$n1s8)))
 (= z$1593 $x18418)))
(assert
 (= z$1887 (and z$1492 z$1593)))
(assert
 (= z$1889 (not z$1887)))
(assert
 (= z$1435 (and (distinct z$70 z$n2s32) true)))
(assert
 (let (($x12599 (= v_value_Sender z$n1s8)))
 (= z$1590 $x12599)))
(assert
 (= z$1886 (and z$1435 z$1590)))
(assert
 (= z$1888 (not z$1886)))
(assert
 (= z$1603 (and (distinct z$169 z$n1s32) true)))
(assert
 (= z$1924 (and z$1603 z$1722)))
(assert
 (= z$1926 (not z$1924)))
(assert
 (= z$1616 (and (distinct z$1293 z$n1s32) true)))
(assert
 (= z$1925 (and z$1616 z$1732)))
(assert
 (= z$1930 (not z$1925)))
(assert
 (= z$1605 (and (distinct z$141 z$n1s32) true)))
(assert
 (= z$1956 (and z$52 z$1605)))
(assert
 (= z$1958 (not z$1956)))
(assert
 (let (($x3261 (= v_sab$next z$n0s8)))
 (= z$1635 $x3261)))
(assert
 (let ((?x2802 (Concat_32_8_24 v_sab$next z$n0s24)))
 (= z$1486 ?x2802)))
(assert
 (let ((?x3361 (Sub_32_32_32 z$n1s32 z$1486)))
 (= z$1613 ?x3361)))
(assert
 (= z$1618 (and (distinct z$1613 z$n1s32) true)))
(assert
 (= z$1957 (and z$1635 z$1618)))
(assert
 (= z$1968 (not z$1957)))
(assert
 (let (($x9517 (= z$141 z$n1s32)))
 (= z$1962 $x9517)))
(assert
 (= z$1479 (and (distinct v_sab$next z$n1s8) true)))
(assert
 (= z$1989 (and f16 z$1962 z$1479 z$149)))
(assert
 (= z$1990 (not z$1989)))
(assert
 (let (($x3246 (and z$1172 z$1180 z$1265 z$1320 z$1191 z$1341 z$1349 z$1357 z$1378 z$1386 z$1394 z$1525 z$1535 z$1543 z$1058 prop z$83 z$128 z$165 z$179 z$197 z$211 z$213 z$228 z$238 z$240 z$261 z$268 z$275 z$292 z$306 z$313 z$320 z$330 z$342 z$354 z$359 z$373 z$383 z$391 z$1049 z$1094 z$1191 z$1378 z$1349 z$1357 z$1386 z$1394 z$139 z$149 z$1587 z$1632 z$1649 z$1682 z$1692 z$1719 z$1727 z$1758 z$1757 z$1787 z$1828 z$1827 z$1854 z$1889 z$1888 z$1926 z$1930 z$1958 z$1968 z$1990)))
 (= z$2005 $x3246)))
(assert
 z$2005)
(assert
 (=> p$0 a_ready_Sender$next))
(assert
 (let (($x70 (= z$1085 (not dve_invalid$next))))
 (=> p$1 $x70)))
(assert
 (=> p$1 z$1085))
(assert
 (let (($x4569 (= z$1479 (and (distinct v_sab$next z$n1s8) true))))
 (=> p$2 $x4569)))
(assert
 (=> p$2 z$1479))
(assert
 (let (($x18418 (= v_value_Sender$next z$n1s8)))
 (let (($x4777 (= z$1593 $x18418)))
 (=> p$3 $x4777))))
(assert
 (=> p$3 z$1593))
(check-sat)
(assert p$2)
(assert p$0)
(assert p$3)
(set-info :status sat)
(check-sat)
(exit)
