(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: elevator.2.prop1
query-maker: "Z3"
query-time: 0.811000 ms
query-class: abstract
query-category: assume
query-type: mus_min
status: sat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

; 
(set-info :status sat)
(declare-sort utt8 0)
(declare-sort utt32 0)
(declare-sort utt24 0)
(declare-fun z$n2s8 () utt8)
(declare-fun z$n3s8 () utt8)
(declare-fun z$n1s8 () utt8)
(declare-fun z$n0s8 () utt8)
(declare-fun z$n4s32 () utt32)
(declare-fun z$n1s32 () utt32)
(declare-fun v_at_floor_Person_0 () utt8)
(declare-fun v_current () utt8)
(declare-fun z$237 () utt8)
(declare-fun v_at_floor_Person_0$next () utt8)
(declare-fun v_at_floor_Person_1 () utt8)
(declare-fun z$242 () utt8)
(declare-fun v_at_floor_Person_1$next () utt8)
(declare-fun v_who () utt8)
(declare-fun v_floor_queue_0_0 () utt8)
(declare-fun z$336 () utt8)
(declare-fun v_floor_queue_1_0 () utt8)
(declare-fun z$338 () utt8)
(declare-fun v_floor_queue_2_0 () utt8)
(declare-fun z$340 () utt8)
(declare-fun v_floor_queue_3_0 () utt8)
(declare-fun z$342 () utt8)
(declare-fun z$344 () utt8)
(declare-fun z$346 () utt8)
(declare-fun v_who$next () utt8)
(declare-fun v_floor () utt8)
(declare-fun v_floor_queue_0_act () utt8)
(declare-fun v_serving () utt8)
(declare-fun v_floor_queue_3_act () utt8)
(declare-fun v_floor_queue_2_act () utt8)
(declare-fun v_floor_queue_1_act () utt8)
(declare-fun Concat_32_8_24 (utt8 utt24) utt32)
(declare-fun z$n0s24 () utt24)
(declare-fun z$293 () utt32)
(declare-fun z$213 () utt32)
(declare-fun v_going_to () utt8)
(declare-fun z$823 () utt32)
(declare-fun v_caller () utt8)
(declare-fun z$181 () utt8)
(declare-fun v_floor_queue_3_1 () utt8)
(declare-fun z$183 () utt8)
(declare-fun v_floor_queue_3_0$next () utt8)
(declare-fun Add_32_32_32 (utt32 utt32) utt32)
(declare-fun z$215 () utt32)
(declare-fun Extract_8_7_0_32 (utt32) utt8)
(declare-fun z$217 () utt8)
(declare-fun Sub_32_32_32 (utt32 utt32) utt32)
(declare-fun z$220 () utt32)
(declare-fun z$222 () utt8)
(declare-fun z$226 () utt8)
(declare-fun z$228 () utt8)
(declare-fun z$230 () utt8)
(declare-fun z$232 () utt8)
(declare-fun v_current$next () utt8)
(declare-fun z$295 () utt32)
(declare-fun BitWiseNot_32_32 (utt32) utt32)
(declare-fun z$299 () utt32)
(declare-fun z$301 () utt32)
(declare-fun z$303 () utt32)
(declare-fun Mod_32_32_32 (utt32 utt32) utt32)
(declare-fun z$306 () utt32)
(declare-fun z$308 () utt32)
(declare-fun z$310 () utt32)
(declare-fun z$312 () utt32)
(declare-fun z$315 () utt8)
(declare-fun z$316 () utt8)
(declare-fun z$317 () utt8)
(declare-fun z$314 () utt8)
(declare-fun z$322 () utt8)
(declare-fun z$324 () utt8)
(declare-fun z$326 () utt8)
(declare-fun z$328 () utt8)
(declare-fun z$330 () utt8)
(declare-fun z$332 () utt8)
(declare-fun v_serving$next () utt8)
(declare-fun a_q_Servis () Bool)
(declare-fun z$15 () Bool)
(declare-fun a_out_Person_1 () Bool)
(declare-fun z$1689 () Bool)
(declare-fun z$1691 () Bool)
(declare-fun a_waiting_Person_0 () Bool)
(declare-fun z$21 () Bool)
(declare-fun a_q_Elevator () Bool)
(declare-fun a_out_Person_0 () Bool)
(declare-fun z$1698 () Bool)
(declare-fun z$1699 () Bool)
(declare-fun a_waiting_Person_1 () Bool)
(declare-fun z$23 () Bool)
(declare-fun z$1716 () Bool)
(declare-fun z$1717 () Bool)
(declare-fun dve_invalid () Bool)
(declare-fun z$25 () Bool)
(declare-fun z$1750 () Bool)
(declare-fun z$1751 () Bool)
(declare-fun z$1758 () Bool)
(declare-fun z$1759 () Bool)
(declare-fun z$1767 () Bool)
(declare-fun z$1768 () Bool)
(declare-fun a_in_elevator_Person_1 () Bool)
(declare-fun a_in_elevator_Person_0 () Bool)
(declare-fun z$1513 () Bool)
(declare-fun z$1515 () Bool)
(declare-fun z$1517 () Bool)
(declare-fun prop () Bool)
(declare-fun z$1518 () Bool)
(declare-fun f25 () Bool)
(declare-fun z$239 () Bool)
(declare-fun f31 () Bool)
(declare-fun z$244 () Bool)
(declare-fun a_move_next () Bool)
(declare-fun z$7 () Bool)
(declare-fun f08 () Bool)
(declare-fun z$489 () Bool)
(declare-fun z$515 () Bool)
(declare-fun z$517 () Bool)
(declare-fun z$518 () Bool)
(declare-fun f09 () Bool)
(declare-fun z$493 () Bool)
(declare-fun z$519 () Bool)
(declare-fun z$521 () Bool)
(declare-fun z$522 () Bool)
(declare-fun f10 () Bool)
(declare-fun z$497 () Bool)
(declare-fun z$523 () Bool)
(declare-fun z$525 () Bool)
(declare-fun z$526 () Bool)
(declare-fun f11 () Bool)
(declare-fun z$501 () Bool)
(declare-fun z$527 () Bool)
(declare-fun z$529 () Bool)
(declare-fun f14 () Bool)
(declare-fun z$530 () Bool)
(declare-fun z$531 () Bool)
(declare-fun f15 () Bool)
(declare-fun z$533 () Bool)
(declare-fun z$534 () Bool)
(declare-fun f16 () Bool)
(declare-fun z$536 () Bool)
(declare-fun z$537 () Bool)
(declare-fun f17 () Bool)
(declare-fun z$539 () Bool)
(declare-fun z$540 () Bool)
(declare-fun a_move_next$next () Bool)
(declare-fun z$542 () Bool)
(declare-fun z$348 () Bool)
(declare-fun z$9 () Bool)
(declare-fun f20 () Bool)
(declare-fun z$350 () Bool)
(declare-fun z$351 () Bool)
(declare-fun z$353 () Bool)
(declare-fun z$354 () Bool)
(declare-fun z$355 () Bool)
(declare-fun z$357 () Bool)
(declare-fun z$358 () Bool)
(declare-fun a_out_Person_0$next () Bool)
(declare-fun z$359 () Bool)
(declare-fun z$361 () Bool)
(declare-fun z$363 () Bool)
(declare-fun f21 () Bool)
(declare-fun z$364 () Bool)
(declare-fun z$365 () Bool)
(declare-fun f22 () Bool)
(declare-fun z$367 () Bool)
(declare-fun z$368 () Bool)
(declare-fun f23 () Bool)
(declare-fun z$370 () Bool)
(declare-fun z$371 () Bool)
(declare-fun f24 () Bool)
(declare-fun z$373 () Bool)
(declare-fun z$374 () Bool)
(declare-fun a_waiting_Person_0$next () Bool)
(declare-fun z$376 () Bool)
(declare-fun z$3 () Bool)
(declare-fun z$378 () Bool)
(declare-fun z$380 () Bool)
(declare-fun z$381 () Bool)
(declare-fun z$382 () Bool)
(declare-fun z$384 () Bool)
(declare-fun z$385 () Bool)
(declare-fun z$386 () Bool)
(declare-fun z$388 () Bool)
(declare-fun z$389 () Bool)
(declare-fun z$390 () Bool)
(declare-fun z$392 () Bool)
(declare-fun z$393 () Bool)
(declare-fun a_in_elevator_Person_0$next () Bool)
(declare-fun z$395 () Bool)
(declare-fun z$11 () Bool)
(declare-fun f26 () Bool)
(declare-fun z$397 () Bool)
(declare-fun z$398 () Bool)
(declare-fun z$400 () Bool)
(declare-fun z$401 () Bool)
(declare-fun z$402 () Bool)
(declare-fun z$404 () Bool)
(declare-fun z$405 () Bool)
(declare-fun a_out_Person_1$next () Bool)
(declare-fun z$406 () Bool)
(declare-fun z$408 () Bool)
(declare-fun z$410 () Bool)
(declare-fun f27 () Bool)
(declare-fun z$411 () Bool)
(declare-fun z$412 () Bool)
(declare-fun f28 () Bool)
(declare-fun z$414 () Bool)
(declare-fun z$415 () Bool)
(declare-fun f29 () Bool)
(declare-fun z$417 () Bool)
(declare-fun z$418 () Bool)
(declare-fun f30 () Bool)
(declare-fun z$420 () Bool)
(declare-fun z$421 () Bool)
(declare-fun a_waiting_Person_1$next () Bool)
(declare-fun z$423 () Bool)
(declare-fun z$5 () Bool)
(declare-fun z$425 () Bool)
(declare-fun z$427 () Bool)
(declare-fun z$428 () Bool)
(declare-fun z$429 () Bool)
(declare-fun z$431 () Bool)
(declare-fun z$432 () Bool)
(declare-fun z$433 () Bool)
(declare-fun z$435 () Bool)
(declare-fun z$436 () Bool)
(declare-fun z$437 () Bool)
(declare-fun z$439 () Bool)
(declare-fun z$440 () Bool)
(declare-fun a_in_elevator_Person_1$next () Bool)
(declare-fun z$442 () Bool)
(declare-fun f00 () Bool)
(declare-fun z$444 () Bool)
(declare-fun z$445 () Bool)
(declare-fun z$447 () Bool)
(declare-fun z$448 () Bool)
(declare-fun f01 () Bool)
(declare-fun z$449 () Bool)
(declare-fun z$450 () Bool)
(declare-fun z$452 () Bool)
(declare-fun z$453 () Bool)
(declare-fun f02 () Bool)
(declare-fun z$454 () Bool)
(declare-fun z$455 () Bool)
(declare-fun z$457 () Bool)
(declare-fun z$458 () Bool)
(declare-fun f03 () Bool)
(declare-fun z$459 () Bool)
(declare-fun z$460 () Bool)
(declare-fun z$462 () Bool)
(declare-fun z$463 () Bool)
(declare-fun z$465 () Bool)
(declare-fun z$467 () Bool)
(declare-fun a_q_Servis$next () Bool)
(declare-fun z$468 () Bool)
(declare-fun a_r () Bool)
(declare-fun z$470 () Bool)
(declare-fun z$472 () Bool)
(declare-fun z$474 () Bool)
(declare-fun z$476 () Bool)
(declare-fun z$478 () Bool)
(declare-fun z$479 () Bool)
(declare-fun z$481 () Bool)
(declare-fun z$482 () Bool)
(declare-fun z$483 () Bool)
(declare-fun z$485 () Bool)
(declare-fun a_r$next () Bool)
(declare-fun z$486 () Bool)
(declare-fun a_choose_next () Bool)
(declare-fun z$1 () Bool)
(declare-fun z$490 () Bool)
(declare-fun z$494 () Bool)
(declare-fun z$498 () Bool)
(declare-fun z$502 () Bool)
(declare-fun z$504 () Bool)
(declare-fun z$505 () Bool)
(declare-fun z$507 () Bool)
(declare-fun z$508 () Bool)
(declare-fun z$509 () Bool)
(declare-fun z$511 () Bool)
(declare-fun z$512 () Bool)
(declare-fun a_choose_next$next () Bool)
(declare-fun z$513 () Bool)
(declare-fun z$13 () Bool)
(declare-fun z$544 () Bool)
(declare-fun z$546 () Bool)
(declare-fun z$547 () Bool)
(declare-fun z$548 () Bool)
(declare-fun z$550 () Bool)
(declare-fun z$551 () Bool)
(declare-fun z$552 () Bool)
(declare-fun z$554 () Bool)
(declare-fun z$555 () Bool)
(declare-fun z$556 () Bool)
(declare-fun z$558 () Bool)
(declare-fun z$559 () Bool)
(declare-fun z$561 () Bool)
(declare-fun z$563 () Bool)
(declare-fun z$565 () Bool)
(declare-fun z$567 () Bool)
(declare-fun z$569 () Bool)
(declare-fun z$571 () Bool)
(declare-fun z$573 () Bool)
(declare-fun a_q_Elevator$next () Bool)
(declare-fun z$575 () Bool)
(declare-fun a_transporting () Bool)
(declare-fun z$19 () Bool)
(declare-fun z$577 () Bool)
(declare-fun z$579 () Bool)
(declare-fun z$580 () Bool)
(declare-fun z$581 () Bool)
(declare-fun z$583 () Bool)
(declare-fun z$584 () Bool)
(declare-fun z$585 () Bool)
(declare-fun z$587 () Bool)
(declare-fun z$588 () Bool)
(declare-fun z$589 () Bool)
(declare-fun z$591 () Bool)
(declare-fun z$592 () Bool)
(declare-fun z$594 () Bool)
(declare-fun z$595 () Bool)
(declare-fun z$597 () Bool)
(declare-fun z$598 () Bool)
(declare-fun z$599 () Bool)
(declare-fun z$601 () Bool)
(declare-fun z$602 () Bool)
(declare-fun z$603 () Bool)
(declare-fun z$605 () Bool)
(declare-fun z$606 () Bool)
(declare-fun z$607 () Bool)
(declare-fun z$609 () Bool)
(declare-fun z$610 () Bool)
(declare-fun a_transporting$next () Bool)
(declare-fun z$612 () Bool)
(declare-fun z$36 () Bool)
(declare-fun z$614 () Bool)
(declare-fun z$616 () Bool)
(declare-fun z$617 () Bool)
(declare-fun z$619 () Bool)
(declare-fun z$620 () Bool)
(declare-fun z$621 () Bool)
(declare-fun z$623 () Bool)
(declare-fun z$624 () Bool)
(declare-fun z$626 () Bool)
(declare-fun z$627 () Bool)
(declare-fun z$629 () Bool)
(declare-fun z$630 () Bool)
(declare-fun z$632 () Bool)
(declare-fun z$633 () Bool)
(declare-fun z$635 () Bool)
(declare-fun z$636 () Bool)
(declare-fun z$638 () Bool)
(declare-fun z$639 () Bool)
(declare-fun z$641 () Bool)
(declare-fun z$642 () Bool)
(declare-fun z$644 () Bool)
(declare-fun z$645 () Bool)
(declare-fun z$42 () Bool)
(declare-fun z$64 () Bool)
(declare-fun z$647 () Bool)
(declare-fun z$60 () Bool)
(declare-fun z$54 () Bool)
(declare-fun z$48 () Bool)
(declare-fun z$649 () Bool)
(declare-fun z$651 () Bool)
(declare-fun z$652 () Bool)
(declare-fun z$653 () Bool)
(declare-fun z$655 () Bool)
(declare-fun z$656 () Bool)
(declare-fun z$657 () Bool)
(declare-fun z$659 () Bool)
(declare-fun z$660 () Bool)
(declare-fun z$662 () Bool)
(declare-fun z$664 () Bool)
(declare-fun f04 () Bool)
(declare-fun z$665 () Bool)
(declare-fun z$667 () Bool)
(declare-fun z$668 () Bool)
(declare-fun z$670 () Bool)
(declare-fun z$671 () Bool)
(declare-fun z$673 () Bool)
(declare-fun z$675 () Bool)
(declare-fun z$677 () Bool)
(declare-fun f05 () Bool)
(declare-fun z$678 () Bool)
(declare-fun z$680 () Bool)
(declare-fun z$681 () Bool)
(declare-fun z$683 () Bool)
(declare-fun z$684 () Bool)
(declare-fun z$686 () Bool)
(declare-fun z$688 () Bool)
(declare-fun z$690 () Bool)
(declare-fun f06 () Bool)
(declare-fun z$691 () Bool)
(declare-fun z$693 () Bool)
(declare-fun z$694 () Bool)
(declare-fun z$696 () Bool)
(declare-fun z$697 () Bool)
(declare-fun z$699 () Bool)
(declare-fun z$701 () Bool)
(declare-fun z$703 () Bool)
(declare-fun f07 () Bool)
(declare-fun z$704 () Bool)
(declare-fun z$706 () Bool)
(declare-fun z$707 () Bool)
(declare-fun z$710 () Bool)
(declare-fun z$711 () Bool)
(declare-fun z$713 () Bool)
(declare-fun z$715 () Bool)
(declare-fun z$716 () Bool)
(declare-fun z$718 () Bool)
(declare-fun z$719 () Bool)
(declare-fun z$722 () Bool)
(declare-fun z$723 () Bool)
(declare-fun z$725 () Bool)
(declare-fun z$727 () Bool)
(declare-fun z$728 () Bool)
(declare-fun z$730 () Bool)
(declare-fun z$731 () Bool)
(declare-fun z$734 () Bool)
(declare-fun z$735 () Bool)
(declare-fun z$737 () Bool)
(declare-fun z$739 () Bool)
(declare-fun z$740 () Bool)
(declare-fun z$742 () Bool)
(declare-fun z$743 () Bool)
(declare-fun z$746 () Bool)
(declare-fun z$747 () Bool)
(declare-fun z$749 () Bool)
(declare-fun z$751 () Bool)
(declare-fun z$752 () Bool)
(declare-fun z$754 () Bool)
(declare-fun z$755 () Bool)
(declare-fun GrEq_1_32_32 (utt32 utt32) Bool)
(declare-fun z$757 () Bool)
(declare-fun z$759 () Bool)
(declare-fun z$760 () Bool)
(declare-fun z$762 () Bool)
(declare-fun f12 () Bool)
(declare-fun z$763 () Bool)
(declare-fun z$765 () Bool)
(declare-fun z$766 () Bool)
(declare-fun z$768 () Bool)
(declare-fun z$770 () Bool)
(declare-fun z$771 () Bool)
(declare-fun z$773 () Bool)
(declare-fun f13 () Bool)
(declare-fun z$774 () Bool)
(declare-fun z$776 () Bool)
(declare-fun z$777 () Bool)
(declare-fun z$779 () Bool)
(declare-fun z$34 () Bool)
(declare-fun z$780 () Bool)
(declare-fun z$782 () Bool)
(declare-fun z$784 () Bool)
(declare-fun z$785 () Bool)
(declare-fun z$787 () Bool)
(declare-fun z$788 () Bool)
(declare-fun z$790 () Bool)
(declare-fun z$791 () Bool)
(declare-fun z$793 () Bool)
(declare-fun z$795 () Bool)
(declare-fun z$796 () Bool)
(declare-fun z$798 () Bool)
(declare-fun z$799 () Bool)
(declare-fun z$801 () Bool)
(declare-fun z$802 () Bool)
(declare-fun z$804 () Bool)
(declare-fun z$806 () Bool)
(declare-fun z$807 () Bool)
(declare-fun z$809 () Bool)
(declare-fun z$810 () Bool)
(declare-fun z$812 () Bool)
(declare-fun z$813 () Bool)
(declare-fun z$815 () Bool)
(declare-fun z$817 () Bool)
(declare-fun z$818 () Bool)
(declare-fun z$820 () Bool)
(declare-fun z$821 () Bool)
(declare-fun z$825 () Bool)
(declare-fun z$827 () Bool)
(declare-fun z$828 () Bool)
(declare-fun z$830 () Bool)
(declare-fun f18 () Bool)
(declare-fun z$831 () Bool)
(declare-fun z$833 () Bool)
(declare-fun z$834 () Bool)
(declare-fun z$836 () Bool)
(declare-fun z$838 () Bool)
(declare-fun z$839 () Bool)
(declare-fun z$841 () Bool)
(declare-fun f19 () Bool)
(declare-fun z$842 () Bool)
(declare-fun z$844 () Bool)
(declare-fun z$845 () Bool)
(declare-fun z$847 () Bool)
(declare-fun z$849 () Bool)
(declare-fun z$850 () Bool)
(declare-fun z$852 () Bool)
(declare-fun z$853 () Bool)
(declare-fun z$855 () Bool)
(declare-fun z$66 () Bool)
(declare-fun z$857 () Bool)
(declare-fun z$860 () Bool)
(declare-fun z$861 () Bool)
(declare-fun z$863 () Bool)
(declare-fun z$864 () Bool)
(declare-fun z$866 () Bool)
(declare-fun z$867 () Bool)
(declare-fun z$871 () Bool)
(declare-fun z$872 () Bool)
(declare-fun z$874 () Bool)
(declare-fun z$875 () Bool)
(declare-fun z$877 () Bool)
(declare-fun z$878 () Bool)
(declare-fun z$882 () Bool)
(declare-fun z$883 () Bool)
(declare-fun z$885 () Bool)
(declare-fun z$886 () Bool)
(declare-fun z$888 () Bool)
(declare-fun z$889 () Bool)
(declare-fun z$893 () Bool)
(declare-fun z$894 () Bool)
(declare-fun z$896 () Bool)
(declare-fun z$897 () Bool)
(declare-fun z$899 () Bool)
(declare-fun z$900 () Bool)
(declare-fun z$902 () Bool)
(declare-fun z$904 () Bool)
(declare-fun z$905 () Bool)
(declare-fun z$907 () Bool)
(declare-fun z$909 () Bool)
(declare-fun z$910 () Bool)
(declare-fun z$912 () Bool)
(declare-fun z$913 () Bool)
(declare-fun z$915 () Bool)
(declare-fun z$917 () Bool)
(declare-fun z$918 () Bool)
(declare-fun z$920 () Bool)
(declare-fun z$921 () Bool)
(declare-fun z$923 () Bool)
(declare-fun z$925 () Bool)
(declare-fun z$926 () Bool)
(declare-fun z$929 () Bool)
(declare-fun z$930 () Bool)
(declare-fun z$932 () Bool)
(declare-fun z$933 () Bool)
(declare-fun z$935 () Bool)
(declare-fun z$936 () Bool)
(declare-fun z$940 () Bool)
(declare-fun z$941 () Bool)
(declare-fun z$943 () Bool)
(declare-fun z$944 () Bool)
(declare-fun z$946 () Bool)
(declare-fun z$947 () Bool)
(declare-fun z$951 () Bool)
(declare-fun z$952 () Bool)
(declare-fun z$954 () Bool)
(declare-fun z$955 () Bool)
(declare-fun z$957 () Bool)
(declare-fun z$958 () Bool)
(declare-fun z$962 () Bool)
(declare-fun z$963 () Bool)
(declare-fun z$965 () Bool)
(declare-fun z$966 () Bool)
(declare-fun z$968 () Bool)
(declare-fun z$969 () Bool)
(declare-fun z$971 () Bool)
(declare-fun z$973 () Bool)
(declare-fun z$975 () Bool)
(declare-fun z$977 () Bool)
(declare-fun z$978 () Bool)
(declare-fun z$980 () Bool)
(declare-fun z$981 () Bool)
(declare-fun z$983 () Bool)
(declare-fun z$984 () Bool)
(declare-fun z$985 () Bool)
(declare-fun z$986 () Bool)
(declare-fun z$987 () Bool)
(declare-fun z$988 () Bool)
(declare-fun z$989 () Bool)
(declare-fun z$990 () Bool)
(declare-fun z$991 () Bool)
(declare-fun z$993 () Bool)
(declare-fun z$994 () Bool)
(declare-fun z$995 () Bool)
(declare-fun z$997 () Bool)
(declare-fun z$998 () Bool)
(declare-fun z$999 () Bool)
(declare-fun z$1001 () Bool)
(declare-fun z$1002 () Bool)
(declare-fun z$1003 () Bool)
(declare-fun z$1005 () Bool)
(declare-fun z$1006 () Bool)
(declare-fun z$1007 () Bool)
(declare-fun z$1009 () Bool)
(declare-fun z$1010 () Bool)
(declare-fun z$1011 () Bool)
(declare-fun z$1013 () Bool)
(declare-fun z$1014 () Bool)
(declare-fun z$1015 () Bool)
(declare-fun z$1017 () Bool)
(declare-fun z$1018 () Bool)
(declare-fun z$1019 () Bool)
(declare-fun z$1021 () Bool)
(declare-fun z$1022 () Bool)
(declare-fun z$1023 () Bool)
(declare-fun z$1025 () Bool)
(declare-fun z$1026 () Bool)
(declare-fun z$1027 () Bool)
(declare-fun z$1029 () Bool)
(declare-fun z$1030 () Bool)
(declare-fun z$1031 () Bool)
(declare-fun z$1033 () Bool)
(declare-fun z$1034 () Bool)
(declare-fun z$1035 () Bool)
(declare-fun z$1037 () Bool)
(declare-fun z$1038 () Bool)
(declare-fun z$1039 () Bool)
(declare-fun z$1041 () Bool)
(declare-fun z$1042 () Bool)
(declare-fun z$1043 () Bool)
(declare-fun z$1045 () Bool)
(declare-fun z$1046 () Bool)
(declare-fun z$1047 () Bool)
(declare-fun z$1049 () Bool)
(declare-fun z$1050 () Bool)
(declare-fun z$1051 () Bool)
(declare-fun z$1053 () Bool)
(declare-fun z$1054 () Bool)
(declare-fun z$1055 () Bool)
(declare-fun z$1057 () Bool)
(declare-fun z$1058 () Bool)
(declare-fun z$1059 () Bool)
(declare-fun z$1061 () Bool)
(declare-fun z$1062 () Bool)
(declare-fun z$1063 () Bool)
(declare-fun z$1065 () Bool)
(declare-fun z$1066 () Bool)
(declare-fun z$1067 () Bool)
(declare-fun z$1069 () Bool)
(declare-fun z$1070 () Bool)
(declare-fun z$1071 () Bool)
(declare-fun z$1073 () Bool)
(declare-fun z$1074 () Bool)
(declare-fun z$1075 () Bool)
(declare-fun z$1077 () Bool)
(declare-fun z$1078 () Bool)
(declare-fun z$1079 () Bool)
(declare-fun z$1081 () Bool)
(declare-fun z$1082 () Bool)
(declare-fun z$1083 () Bool)
(declare-fun z$1085 () Bool)
(declare-fun z$1086 () Bool)
(declare-fun z$1087 () Bool)
(declare-fun z$1089 () Bool)
(declare-fun z$1090 () Bool)
(declare-fun z$1091 () Bool)
(declare-fun z$1093 () Bool)
(declare-fun z$1094 () Bool)
(declare-fun z$1095 () Bool)
(declare-fun z$1097 () Bool)
(declare-fun z$1098 () Bool)
(declare-fun z$1099 () Bool)
(declare-fun z$1101 () Bool)
(declare-fun z$1102 () Bool)
(declare-fun z$1103 () Bool)
(declare-fun z$1105 () Bool)
(declare-fun z$1106 () Bool)
(declare-fun z$1107 () Bool)
(declare-fun z$1109 () Bool)
(declare-fun z$1110 () Bool)
(declare-fun z$1111 () Bool)
(declare-fun z$1113 () Bool)
(declare-fun z$1114 () Bool)
(declare-fun z$1116 () Bool)
(declare-fun z$1118 () Bool)
(declare-fun z$1119 () Bool)
(declare-fun z$1121 () Bool)
(declare-fun z$1122 () Bool)
(declare-fun z$1124 () Bool)
(declare-fun z$1125 () Bool)
(declare-fun z$1126 () Bool)
(declare-fun z$1128 () Bool)
(declare-fun z$1129 () Bool)
(declare-fun z$1131 () Bool)
(declare-fun z$1132 () Bool)
(declare-fun z$1133 () Bool)
(declare-fun z$1135 () Bool)
(declare-fun z$1136 () Bool)
(declare-fun z$1138 () Bool)
(declare-fun z$1139 () Bool)
(declare-fun z$1140 () Bool)
(declare-fun z$1142 () Bool)
(declare-fun z$1143 () Bool)
(declare-fun z$1145 () Bool)
(declare-fun z$1146 () Bool)
(declare-fun z$1147 () Bool)
(declare-fun z$1149 () Bool)
(declare-fun z$1150 () Bool)
(declare-fun z$1152 () Bool)
(declare-fun z$1153 () Bool)
(declare-fun z$1154 () Bool)
(declare-fun z$1156 () Bool)
(declare-fun z$1157 () Bool)
(declare-fun z$1159 () Bool)
(declare-fun z$1160 () Bool)
(declare-fun z$1161 () Bool)
(declare-fun z$1163 () Bool)
(declare-fun z$1164 () Bool)
(declare-fun z$1166 () Bool)
(declare-fun z$1167 () Bool)
(declare-fun z$1168 () Bool)
(declare-fun z$1170 () Bool)
(declare-fun z$1171 () Bool)
(declare-fun z$1173 () Bool)
(declare-fun z$1174 () Bool)
(declare-fun z$1175 () Bool)
(declare-fun z$1177 () Bool)
(declare-fun z$1178 () Bool)
(declare-fun z$1180 () Bool)
(declare-fun z$1181 () Bool)
(declare-fun z$1182 () Bool)
(declare-fun z$1184 () Bool)
(declare-fun z$1185 () Bool)
(declare-fun z$1187 () Bool)
(declare-fun z$1188 () Bool)
(declare-fun z$1189 () Bool)
(declare-fun z$1191 () Bool)
(declare-fun z$1192 () Bool)
(declare-fun z$1194 () Bool)
(declare-fun z$1195 () Bool)
(declare-fun z$1196 () Bool)
(declare-fun z$1198 () Bool)
(declare-fun z$1199 () Bool)
(declare-fun z$1201 () Bool)
(declare-fun z$1202 () Bool)
(declare-fun z$1203 () Bool)
(declare-fun z$1205 () Bool)
(declare-fun z$1206 () Bool)
(declare-fun z$1208 () Bool)
(declare-fun z$1209 () Bool)
(declare-fun z$1210 () Bool)
(declare-fun z$1212 () Bool)
(declare-fun z$1213 () Bool)
(declare-fun z$1215 () Bool)
(declare-fun z$1216 () Bool)
(declare-fun z$1217 () Bool)
(declare-fun z$1219 () Bool)
(declare-fun z$1220 () Bool)
(declare-fun z$1222 () Bool)
(declare-fun z$1223 () Bool)
(declare-fun z$1224 () Bool)
(declare-fun z$1226 () Bool)
(declare-fun z$1227 () Bool)
(declare-fun z$1229 () Bool)
(declare-fun z$1230 () Bool)
(declare-fun z$1231 () Bool)
(declare-fun z$1233 () Bool)
(declare-fun z$1234 () Bool)
(declare-fun z$1236 () Bool)
(declare-fun z$1237 () Bool)
(declare-fun z$1238 () Bool)
(declare-fun z$1240 () Bool)
(declare-fun z$1241 () Bool)
(declare-fun z$1243 () Bool)
(declare-fun z$1244 () Bool)
(declare-fun z$1245 () Bool)
(declare-fun z$1247 () Bool)
(declare-fun z$1248 () Bool)
(declare-fun z$1250 () Bool)
(declare-fun z$1251 () Bool)
(declare-fun z$1252 () Bool)
(declare-fun z$1254 () Bool)
(declare-fun z$1255 () Bool)
(declare-fun z$1257 () Bool)
(declare-fun z$1258 () Bool)
(declare-fun z$1259 () Bool)
(declare-fun z$1261 () Bool)
(declare-fun z$1262 () Bool)
(declare-fun z$1264 () Bool)
(declare-fun z$1265 () Bool)
(declare-fun z$1266 () Bool)
(declare-fun z$1268 () Bool)
(declare-fun z$1269 () Bool)
(declare-fun z$1271 () Bool)
(declare-fun z$1272 () Bool)
(declare-fun z$1273 () Bool)
(declare-fun z$1275 () Bool)
(declare-fun z$1276 () Bool)
(declare-fun z$1278 () Bool)
(declare-fun z$1279 () Bool)
(declare-fun z$1280 () Bool)
(declare-fun z$1282 () Bool)
(declare-fun z$1283 () Bool)
(declare-fun z$1285 () Bool)
(declare-fun z$1286 () Bool)
(declare-fun z$1287 () Bool)
(declare-fun z$1289 () Bool)
(declare-fun z$1290 () Bool)
(declare-fun z$1292 () Bool)
(declare-fun z$1293 () Bool)
(declare-fun z$1294 () Bool)
(declare-fun z$1296 () Bool)
(declare-fun z$1297 () Bool)
(declare-fun z$1299 () Bool)
(declare-fun z$1300 () Bool)
(declare-fun z$1301 () Bool)
(declare-fun z$1303 () Bool)
(declare-fun z$1304 () Bool)
(declare-fun z$1306 () Bool)
(declare-fun z$1307 () Bool)
(declare-fun z$1308 () Bool)
(declare-fun z$1310 () Bool)
(declare-fun z$1311 () Bool)
(declare-fun z$1313 () Bool)
(declare-fun z$1314 () Bool)
(declare-fun z$1315 () Bool)
(declare-fun z$1317 () Bool)
(declare-fun z$1318 () Bool)
(declare-fun z$1320 () Bool)
(declare-fun z$1321 () Bool)
(declare-fun z$1322 () Bool)
(declare-fun z$1324 () Bool)
(declare-fun z$1325 () Bool)
(declare-fun z$1327 () Bool)
(declare-fun z$1328 () Bool)
(declare-fun z$1329 () Bool)
(declare-fun z$1331 () Bool)
(declare-fun z$1333 () Bool)
(declare-fun z$1334 () Bool)
(declare-fun z$1336 () Bool)
(declare-fun z$1337 () Bool)
(declare-fun z$1339 () Bool)
(declare-fun z$1340 () Bool)
(declare-fun z$1342 () Bool)
(declare-fun z$1343 () Bool)
(declare-fun z$1344 () Bool)
(declare-fun z$1345 () Bool)
(declare-fun z$1347 () Bool)
(declare-fun z$1348 () Bool)
(declare-fun z$1350 () Bool)
(declare-fun z$1352 () Bool)
(declare-fun z$1353 () Bool)
(declare-fun z$1355 () Bool)
(declare-fun z$1356 () Bool)
(declare-fun z$1358 () Bool)
(declare-fun z$1359 () Bool)
(declare-fun z$1361 () Bool)
(declare-fun z$1362 () Bool)
(declare-fun z$1363 () Bool)
(declare-fun z$1365 () Bool)
(declare-fun z$1366 () Bool)
(declare-fun z$1368 () Bool)
(declare-fun z$1369 () Bool)
(declare-fun z$1371 () Bool)
(declare-fun z$1373 () Bool)
(declare-fun z$1374 () Bool)
(declare-fun z$17 () Bool)
(declare-fun z$1376 () Bool)
(declare-fun z$1378 () Bool)
(declare-fun z$1379 () Bool)
(declare-fun z$1381 () Bool)
(declare-fun z$1383 () Bool)
(declare-fun z$1384 () Bool)
(declare-fun z$1386 () Bool)
(declare-fun z$1387 () Bool)
(declare-fun z$1389 () Bool)
(declare-fun z$1390 () Bool)
(declare-fun z$1392 () Bool)
(declare-fun z$1393 () Bool)
(declare-fun z$1394 () Bool)
(declare-fun z$1395 () Bool)
(declare-fun z$1397 () Bool)
(declare-fun z$1398 () Bool)
(declare-fun z$1400 () Bool)
(declare-fun z$1401 () Bool)
(declare-fun z$1403 () Bool)
(declare-fun z$1404 () Bool)
(declare-fun z$1405 () Bool)
(declare-fun z$1407 () Bool)
(declare-fun z$1408 () Bool)
(declare-fun z$1410 () Bool)
(declare-fun z$1411 () Bool)
(declare-fun z$1413 () Bool)
(declare-fun z$1415 () Bool)
(declare-fun z$1417 () Bool)
(declare-fun z$1418 () Bool)
(declare-fun z$1419 () Bool)
(declare-fun z$1421 () Bool)
(declare-fun z$1422 () Bool)
(declare-fun z$1424 () Bool)
(declare-fun z$1425 () Bool)
(declare-fun z$1427 () Bool)
(declare-fun z$1428 () Bool)
(declare-fun z$1429 () Bool)
(declare-fun z$1430 () Bool)
(declare-fun z$1431 () Bool)
(declare-fun z$1433 () Bool)
(declare-fun z$1434 () Bool)
(declare-fun z$1436 () Bool)
(declare-fun z$1438 () Bool)
(declare-fun z$1439 () Bool)
(declare-fun z$1440 () Bool)
(declare-fun z$1442 () Bool)
(declare-fun z$1443 () Bool)
(declare-fun z$1445 () Bool)
(declare-fun z$1446 () Bool)
(declare-fun z$1448 () Bool)
(declare-fun z$1449 () Bool)
(declare-fun z$1450 () Bool)
(declare-fun z$1452 () Bool)
(declare-fun z$1453 () Bool)
(declare-fun z$1454 () Bool)
(declare-fun z$1456 () Bool)
(declare-fun z$1457 () Bool)
(declare-fun z$1459 () Bool)
(declare-fun z$1461 () Bool)
(declare-fun z$1462 () Bool)
(declare-fun z$1464 () Bool)
(declare-fun z$1465 () Bool)
(declare-fun z$1467 () Bool)
(declare-fun z$1468 () Bool)
(declare-fun z$1470 () Bool)
(declare-fun z$1472 () Bool)
(declare-fun z$1473 () Bool)
(declare-fun z$1474 () Bool)
(declare-fun z$1476 () Bool)
(declare-fun z$1477 () Bool)
(declare-fun z$1479 () Bool)
(declare-fun z$1480 () Bool)
(declare-fun z$1482 () Bool)
(declare-fun z$1483 () Bool)
(declare-fun z$1484 () Bool)
(declare-fun z$1485 () Bool)
(declare-fun z$1486 () Bool)
(declare-fun z$1488 () Bool)
(declare-fun z$1489 () Bool)
(declare-fun z$1491 () Bool)
(declare-fun z$1492 () Bool)
(declare-fun z$1494 () Bool)
(declare-fun z$1495 () Bool)
(declare-fun z$1496 () Bool)
(declare-fun z$1498 () Bool)
(declare-fun z$1499 () Bool)
(declare-fun z$1500 () Bool)
(declare-fun z$1502 () Bool)
(declare-fun z$1503 () Bool)
(declare-fun z$1505 () Bool)
(declare-fun z$1507 () Bool)
(declare-fun z$1509 () Bool)
(declare-fun dve_invalid$next () Bool)
(declare-fun z$1510 () Bool)
(declare-fun z$1559 () Bool)
(declare-fun z$1560 () Bool)
(declare-fun z$1562 () Bool)
(declare-fun z$1564 () Bool)
(declare-fun prop$next () Bool)
(declare-fun z$1565 () Bool)
(declare-fun z$179 () Bool)
(declare-fun z$185 () Bool)
(declare-fun z$234 () Bool)
(declare-fun Extract_1_31_31_32 (utt32) Bool)
(declare-fun z$297 () Bool)
(declare-fun z$334 () Bool)
(declare-fun z$1786 () Bool)
(declare-fun z$1787 () Bool)
(declare-fun z$1727 () Bool)
(declare-fun z$1728 () Bool)
(declare-fun z$1806 () Bool)
(declare-fun z$1807 () Bool)
(declare-fun z$1810 () Bool)
(declare-fun p$0 () Bool)
(declare-fun p$1 () Bool)
(declare-fun p$2 () Bool)
(declare-fun p$3 () Bool)
(declare-fun p$4 () Bool)
(declare-fun z$1580 () Bool)
(declare-fun p$5 () Bool)
(declare-fun z$1582 () Bool)
(declare-fun p$6 () Bool)
(declare-fun z$1583 () Bool)
(declare-fun p$7 () Bool)
(declare-fun z$1584 () Bool)
(declare-fun p$8 () Bool)
(declare-fun z$1681 () Bool)
(declare-fun p$9 () Bool)
(assert
 (and (distinct z$n0s8 z$n1s8 z$n3s8 z$n2s8) true))
(assert
 (and (distinct z$n1s32 z$n4s32) true))
(assert
 (let (($x108 (not a_q_Servis)))
 (= z$15 $x108)))
(assert
 (= z$1689 (and a_out_Person_1 z$15)))
(assert
 (= z$1691 (not z$1689)))
(assert
 (let (($x120 (not a_waiting_Person_0)))
 (= z$21 $x120)))
(assert
 (= z$1698 (and a_out_Person_0 a_q_Elevator z$21)))
(assert
 (= z$1699 (not z$1698)))
(assert
 (let (($x124 (not a_waiting_Person_1)))
 (= z$23 $x124)))
(assert
 (= z$1716 (and a_out_Person_1 a_q_Elevator z$23)))
(assert
 (= z$1717 (not z$1716)))
(assert
 (= z$25 (not dve_invalid)))
(assert
 (= z$1750 (and a_out_Person_0 a_out_Person_1 z$25)))
(assert
 (= z$1751 (not z$1750)))
(assert
 (= z$1758 (and a_out_Person_0 a_out_Person_1 a_q_Elevator z$21 z$25)))
(assert
 (= z$1759 (not z$1758)))
(assert
 (= z$1767 (and a_out_Person_0 a_out_Person_1 z$23 z$25)))
(assert
 (= z$1768 (not z$1767)))
(assert
 (= z$1513 (and a_in_elevator_Person_0 a_in_elevator_Person_1)))
(assert
 (= z$1515 (and z$25 z$1513)))
(assert
 (= z$1517 (not z$1515)))
(assert
 (= z$1518 (= prop z$1517)))
(assert
 (let ((?x5396 (ite f25 v_current v_at_floor_Person_0)))
 (= z$237 ?x5396)))
(assert
 (let (($x5380 (= v_at_floor_Person_0$next z$237)))
 (= z$239 $x5380)))
(assert
 (let ((?x212 (ite f31 v_current v_at_floor_Person_1)))
 (= z$242 ?x212)))
(assert
 (let (($x216 (= v_at_floor_Person_1$next z$242)))
 (= z$244 $x216)))
(assert
 (let (($x92 (not a_move_next)))
 (= z$7 $x92)))
(assert
 (let (($x221 (not f08)))
 (= z$489 $x221)))
(assert
 (= z$515 (and z$7 z$489)))
(assert
 (= z$517 (not z$515)))
(assert
 (= z$518 (not z$517)))
(assert
 (let (($x235 (not f09)))
 (= z$493 $x235)))
(assert
 (= z$519 (and z$518 z$493)))
(assert
 (= z$521 (not z$519)))
(assert
 (= z$522 (not z$521)))
(assert
 (let (($x249 (not f10)))
 (= z$497 $x249)))
(assert
 (= z$523 (and z$522 z$497)))
(assert
 (= z$525 (not z$523)))
(assert
 (= z$526 (not z$525)))
(assert
 (let (($x263 (not f11)))
 (= z$501 $x263)))
(assert
 (= z$527 (and z$526 z$501)))
(assert
 (= z$529 (not z$527)))
(assert
 (let (($x274 (not f14)))
 (= z$530 $x274)))
(assert
 (= z$531 (and z$529 z$530)))
(assert
 (let (($x282 (not f15)))
 (= z$533 $x282)))
(assert
 (= z$534 (and z$531 z$533)))
(assert
 (let (($x290 (not f16)))
 (= z$536 $x290)))
(assert
 (= z$537 (and z$534 z$536)))
(assert
 (let (($x298 (not f17)))
 (= z$539 $x298)))
(assert
 (= z$540 (and z$537 z$539)))
(assert
 (= z$542 (= a_move_next$next z$540)))
(assert
 (let ((?x310 (ite f14 v_floor_queue_0_0 v_who)))
 (= z$336 ?x310)))
(assert
 (let ((?x314 (ite f15 v_floor_queue_1_0 z$336)))
 (= z$338 ?x314)))
(assert
 (let ((?x318 (ite f16 v_floor_queue_2_0 z$338)))
 (= z$340 ?x318)))
(assert
 (let ((?x322 (ite f17 v_floor_queue_3_0 z$340)))
 (= z$342 ?x322)))
(assert
 (let ((?x326 (ite f25 z$n0s8 z$342)))
 (= z$344 ?x326)))
(assert
 (let ((?x330 (ite f31 z$n0s8 z$344)))
 (= z$346 ?x330)))
(assert
 (let (($x334 (= v_who$next z$346)))
 (= z$348 $x334)))
(assert
 (let (($x96 (not a_out_Person_0)))
 (= z$9 $x96)))
(assert
 (let (($x339 (not f20)))
 (= z$350 $x339)))
(assert
 (= z$351 (and z$9 z$350)))
(assert
 (= z$353 (not z$351)))
(assert
 (let (($x349 (not f25)))
 (= z$354 $x349)))
(assert
 (= z$355 (and z$353 z$354)))
(assert
 (= z$357 (not z$355)))
(assert
 (let (($x359 (not z$357)))
 (= z$358 $x359)))
(assert
 (= z$359 (= a_out_Person_0$next z$358)))
(assert
 (= z$361 (and z$21 z$350)))
(assert
 (= z$363 (not z$361)))
(assert
 (let (($x374 (not f21)))
 (= z$364 $x374)))
(assert
 (= z$365 (and z$363 z$364)))
(assert
 (let (($x382 (not f22)))
 (= z$367 $x382)))
(assert
 (= z$368 (and z$365 z$367)))
(assert
 (let (($x390 (not f23)))
 (= z$370 $x390)))
(assert
 (= z$371 (and z$368 z$370)))
(assert
 (let (($x398 (not f24)))
 (= z$373 $x398)))
(assert
 (= z$374 (and z$371 z$373)))
(assert
 (= z$376 (= a_waiting_Person_0$next z$374)))
(assert
 (let (($x85 (not a_in_elevator_Person_0)))
 (= z$3 $x85)))
(assert
 (= z$378 (and z$3 z$364)))
(assert
 (= z$380 (not z$378)))
(assert
 (= z$381 (not z$380)))
(assert
 (= z$382 (and z$381 z$367)))
(assert
 (= z$384 (not z$382)))
(assert
 (= z$385 (not z$384)))
(assert
 (= z$386 (and z$385 z$370)))
(assert
 (= z$388 (not z$386)))
(assert
 (= z$389 (not z$388)))
(assert
 (= z$390 (and z$389 z$373)))
(assert
 (= z$392 (not z$390)))
(assert
 (= z$393 (and z$392 z$354)))
(assert
 (= z$395 (= a_in_elevator_Person_0$next z$393)))
(assert
 (let (($x100 (not a_out_Person_1)))
 (= z$11 $x100)))
(assert
 (let (($x454 (not f26)))
 (= z$397 $x454)))
(assert
 (= z$398 (and z$11 z$397)))
(assert
 (= z$400 (not z$398)))
(assert
 (let (($x464 (not f31)))
 (= z$401 $x464)))
(assert
 (= z$402 (and z$400 z$401)))
(assert
 (= z$404 (not z$402)))
(assert
 (let (($x474 (not z$404)))
 (= z$405 $x474)))
(assert
 (= z$406 (= a_out_Person_1$next z$405)))
(assert
 (= z$408 (and z$23 z$397)))
(assert
 (= z$410 (not z$408)))
(assert
 (let (($x489 (not f27)))
 (= z$411 $x489)))
(assert
 (= z$412 (and z$410 z$411)))
(assert
 (let (($x497 (not f28)))
 (= z$414 $x497)))
(assert
 (= z$415 (and z$412 z$414)))
(assert
 (let (($x505 (not f29)))
 (= z$417 $x505)))
(assert
 (= z$418 (and z$415 z$417)))
(assert
 (let (($x513 (not f30)))
 (= z$420 $x513)))
(assert
 (= z$421 (and z$418 z$420)))
(assert
 (= z$423 (= a_waiting_Person_1$next z$421)))
(assert
 (let (($x88 (not a_in_elevator_Person_1)))
 (= z$5 $x88)))
(assert
 (= z$425 (and z$5 z$411)))
(assert
 (= z$427 (not z$425)))
(assert
 (= z$428 (not z$427)))
(assert
 (= z$429 (and z$428 z$414)))
(assert
 (= z$431 (not z$429)))
(assert
 (= z$432 (not z$431)))
(assert
 (= z$433 (and z$432 z$417)))
(assert
 (= z$435 (not z$433)))
(assert
 (= z$436 (not z$435)))
(assert
 (= z$437 (and z$436 z$420)))
(assert
 (= z$439 (not z$437)))
(assert
 (= z$440 (and z$439 z$401)))
(assert
 (= z$442 (= a_in_elevator_Person_1$next z$440)))
(assert
 (let (($x569 (not f00)))
 (= z$444 $x569)))
(assert
 (= z$445 (and a_q_Servis z$444)))
(assert
 (= z$447 (not z$445)))
(assert
 (= z$448 (not z$447)))
(assert
 (let (($x583 (not f01)))
 (= z$449 $x583)))
(assert
 (= z$450 (and z$448 z$449)))
(assert
 (= z$452 (not z$450)))
(assert
 (= z$453 (not z$452)))
(assert
 (let (($x597 (not f02)))
 (= z$454 $x597)))
(assert
 (= z$455 (and z$453 z$454)))
(assert
 (= z$457 (not z$455)))
(assert
 (= z$458 (not z$457)))
(assert
 (let (($x611 (not f03)))
 (= z$459 $x611)))
(assert
 (= z$460 (and z$458 z$459)))
(assert
 (= z$462 (not z$460)))
(assert
 (= z$463 (and z$462 z$350)))
(assert
 (= z$465 (and z$463 z$397)))
(assert
 (let (($x629 (not z$465)))
 (= z$467 $x629)))
(assert
 (= z$468 (= a_q_Servis$next z$467)))
(assert
 (= z$470 (and a_r z$444)))
(assert
 (= z$472 (and z$470 z$449)))
(assert
 (= z$474 (and z$472 z$454)))
(assert
 (= z$476 (and z$474 z$459)))
(assert
 (= z$478 (not z$476)))
(assert
 (= z$479 (and z$478 z$350)))
(assert
 (= z$481 (not z$479)))
(assert
 (= z$482 (not z$481)))
(assert
 (= z$483 (and z$482 z$397)))
(assert
 (= z$485 (not z$483)))
(assert
 (= z$486 (= a_r$next z$485)))
(assert
 (let (($x82 (not a_choose_next)))
 (= z$1 $x82)))
(assert
 (= z$490 (and z$1 z$489)))
(assert
 (= z$494 (and z$490 z$493)))
(assert
 (= z$498 (and z$494 z$497)))
(assert
 (= z$502 (and z$498 z$501)))
(assert
 (= z$504 (not z$502)))
(assert
 (= z$505 (and z$504 z$354)))
(assert
 (= z$507 (not z$505)))
(assert
 (= z$508 (not z$507)))
(assert
 (= z$509 (and z$508 z$401)))
(assert
 (= z$511 (not z$509)))
(assert
 (let (($x712 (not z$511)))
 (= z$512 $x712)))
(assert
 (= z$513 (= a_choose_next$next z$512)))
(assert
 (let (($x104 (not a_q_Elevator)))
 (= z$13 $x104)))
(assert
 (= z$544 (and z$13 z$530)))
(assert
 (= z$546 (not z$544)))
(assert
 (= z$547 (not z$546)))
(assert
 (= z$548 (and z$547 z$533)))
(assert
 (= z$550 (not z$548)))
(assert
 (= z$551 (not z$550)))
(assert
 (= z$552 (and z$551 z$536)))
(assert
 (= z$554 (not z$552)))
(assert
 (= z$555 (not z$554)))
(assert
 (= z$556 (and z$555 z$539)))
(assert
 (= z$558 (not z$556)))
(assert
 (= z$559 (and z$558 z$364)))
(assert
 (= z$561 (and z$559 z$367)))
(assert
 (= z$563 (and z$561 z$370)))
(assert
 (= z$565 (and z$563 z$373)))
(assert
 (= z$567 (and z$565 z$411)))
(assert
 (= z$569 (and z$567 z$414)))
(assert
 (= z$571 (and z$569 z$417)))
(assert
 (= z$573 (and z$571 z$420)))
(assert
 (= z$575 (= a_q_Elevator$next z$573)))
(assert
 (let (($x116 (not a_transporting)))
 (= z$19 $x116)))
(assert
 (= z$577 (and z$19 z$364)))
(assert
 (= z$579 (not z$577)))
(assert
 (= z$580 (not z$579)))
(assert
 (= z$581 (and z$580 z$367)))
(assert
 (= z$583 (not z$581)))
(assert
 (= z$584 (not z$583)))
(assert
 (= z$585 (and z$584 z$370)))
(assert
 (= z$587 (not z$585)))
(assert
 (= z$588 (not z$587)))
(assert
 (= z$589 (and z$588 z$373)))
(assert
 (= z$591 (not z$589)))
(assert
 (= z$592 (and z$591 z$354)))
(assert
 (= z$594 (not z$592)))
(assert
 (= z$595 (and z$594 z$411)))
(assert
 (= z$597 (not z$595)))
(assert
 (= z$598 (not z$597)))
(assert
 (= z$599 (and z$598 z$414)))
(assert
 (= z$601 (not z$599)))
(assert
 (= z$602 (not z$601)))
(assert
 (= z$603 (and z$602 z$417)))
(assert
 (= z$605 (not z$603)))
(assert
 (= z$606 (not z$605)))
(assert
 (= z$607 (and z$606 z$420)))
(assert
 (= z$609 (not z$607)))
(assert
 (= z$610 (and z$609 z$401)))
(assert
 (= z$612 (= a_transporting$next z$610)))
(assert
 (let (($x144 (= v_floor z$n0s8)))
 (= z$36 $x144)))
(assert
 (= z$614 (and a_r z$36)))
(assert
 (= z$616 (not z$614)))
(assert
 (= z$617 (and f00 z$616)))
(assert
 (= z$619 (not z$617)))
(assert
 (let (($x894 (= z$n1s8 v_floor)))
 (= z$620 $x894)))
(assert
 (= z$621 (and a_r z$620)))
(assert
 (= z$623 (not z$621)))
(assert
 (= z$624 (and f01 z$623)))
(assert
 (= z$626 (not z$624)))
(assert
 (= z$627 (and z$619 z$626)))
(assert
 (let (($x915 (= z$n2s8 v_floor)))
 (= z$629 $x915)))
(assert
 (= z$630 (and a_r z$629)))
(assert
 (= z$632 (not z$630)))
(assert
 (= z$633 (and f02 z$632)))
(assert
 (= z$635 (not z$633)))
(assert
 (= z$636 (and z$627 z$635)))
(assert
 (let (($x936 (= z$n3s8 v_floor)))
 (= z$638 $x936)))
(assert
 (= z$639 (and a_r z$638)))
(assert
 (= z$641 (not z$639)))
(assert
 (= z$642 (and f03 z$641)))
(assert
 (= z$644 (not z$642)))
(assert
 (= z$645 (and z$636 z$644)))
(assert
 (let (($x156 (= v_floor_queue_0_act z$n0s8)))
 (= z$42 $x156)))
(assert
 (let (($x200 (= v_serving z$n0s8)))
 (= z$64 $x200)))
(assert
 (= z$647 (and z$42 z$64)))
(assert
 (let (($x192 (= v_floor_queue_3_act z$n0s8)))
 (= z$60 $x192)))
(assert
 (let (($x180 (= v_floor_queue_2_act z$n0s8)))
 (= z$54 $x180)))
(assert
 (let (($x168 (= v_floor_queue_1_act z$n0s8)))
 (= z$48 $x168)))
(assert
 (= z$649 (and z$42 z$48)))
(assert
 (= z$651 (not z$649)))
(assert
 (= z$652 (not z$651)))
(assert
 (= z$653 (and z$54 z$652)))
(assert
 (= z$655 (not z$653)))
(assert
 (= z$656 (not z$655)))
(assert
 (= z$657 (and z$60 z$656)))
(assert
 (= z$659 (not z$657)))
(assert
 (= z$660 (and z$647 z$659)))
(assert
 (= z$662 (and z$1 z$660)))
(assert
 (= z$664 (not z$662)))
(assert
 (= z$665 (and f04 z$664)))
(assert
 (= z$667 (not z$665)))
(assert
 (= z$668 (and z$645 z$667)))
(assert
 (let (($x1012 (= z$n1s8 v_serving)))
 (= z$670 $x1012)))
(assert
 (= z$671 (and z$48 z$670)))
(assert
 (= z$673 (and z$659 z$671)))
(assert
 (= z$675 (and z$1 z$673)))
(assert
 (= z$677 (not z$675)))
(assert
 (= z$678 (and f05 z$677)))
(assert
 (= z$680 (not z$678)))
(assert
 (= z$681 (and z$668 z$680)))
(assert
 (let (($x1042 (= z$n2s8 v_serving)))
 (= z$683 $x1042)))
(assert
 (= z$684 (and z$54 z$683)))
(assert
 (= z$686 (and z$659 z$684)))
(assert
 (= z$688 (and z$1 z$686)))
(assert
 (= z$690 (not z$688)))
(assert
 (= z$691 (and f06 z$690)))
(assert
 (= z$693 (not z$691)))
(assert
 (= z$694 (and z$681 z$693)))
(assert
 (let (($x1072 (= z$n3s8 v_serving)))
 (= z$696 $x1072)))
(assert
 (= z$697 (and z$60 z$696)))
(assert
 (= z$699 (and z$659 z$697)))
(assert
 (= z$701 (and z$1 z$699)))
(assert
 (= z$703 (not z$701)))
(assert
 (= z$704 (and f07 z$703)))
(assert
 (= z$706 (not z$704)))
(assert
 (= z$707 (and z$694 z$706)))
(assert
 (= z$710 (and (distinct v_floor_queue_0_act z$n0s8) true)))
(assert
 (= z$711 (and z$710 z$64)))
(assert
 (= z$713 (and z$1 z$711)))
(assert
 (= z$715 (not z$713)))
(assert
 (= z$716 (and f08 z$715)))
(assert
 (= z$718 (not z$716)))
(assert
 (= z$719 (and z$707 z$718)))
(assert
 (= z$722 (and (distinct v_floor_queue_1_act z$n0s8) true)))
(assert
 (= z$723 (and z$722 z$670)))
(assert
 (= z$725 (and z$1 z$723)))
(assert
 (= z$727 (not z$725)))
(assert
 (= z$728 (and f09 z$727)))
(assert
 (= z$730 (not z$728)))
(assert
 (= z$731 (and z$719 z$730)))
(assert
 (= z$734 (and (distinct v_floor_queue_2_act z$n0s8) true)))
(assert
 (= z$735 (and z$734 z$683)))
(assert
 (= z$737 (and z$1 z$735)))
(assert
 (= z$739 (not z$737)))
(assert
 (= z$740 (and f10 z$739)))
(assert
 (= z$742 (not z$740)))
(assert
 (= z$743 (and z$731 z$742)))
(assert
 (= z$746 (and (distinct v_floor_queue_3_act z$n0s8) true)))
(assert
 (= z$747 (and z$746 z$696)))
(assert
 (= z$749 (and z$1 z$747)))
(assert
 (= z$751 (not z$749)))
(assert
 (= z$752 (and f11 z$751)))
(assert
 (= z$754 (not z$752)))
(assert
 (= z$755 (and z$743 z$754)))
(assert
 (let ((?x1203 (Concat_32_8_24 v_serving z$n0s24)))
 (= z$293 ?x1203)))
(assert
 (let ((?x1207 (Concat_32_8_24 v_current z$n0s24)))
 (= z$213 ?x1207)))
(assert
 (let (($x1211 (GrEq_1_32_32 z$293 z$213)))
 (= z$757 $x1211)))
(assert
 (= z$759 (not z$757)))
(assert
 (= z$760 (and a_move_next z$759)))
(assert
 (= z$762 (not z$760)))
(assert
 (= z$763 (and f12 z$762)))
(assert
 (= z$765 (not z$763)))
(assert
 (= z$766 (and z$755 z$765)))
(assert
 (let (($x1237 (GrEq_1_32_32 z$213 z$293)))
 (= z$768 $x1237)))
(assert
 (= z$770 (not z$768)))
(assert
 (= z$771 (and a_move_next z$770)))
(assert
 (= z$773 (not z$771)))
(assert
 (= z$774 (and f13 z$773)))
(assert
 (= z$776 (not z$774)))
(assert
 (= z$777 (and z$766 z$776)))
(assert
 (let (($x1262 (= v_serving v_current)))
 (= z$779 $x1262)))
(assert
 (let (($x140 (= v_current z$n0s8)))
 (= z$34 $x140)))
(assert
 (= z$780 (and z$779 z$34)))
(assert
 (= z$782 (and a_move_next z$780)))
(assert
 (= z$784 (not z$782)))
(assert
 (= z$785 (and f14 z$784)))
(assert
 (= z$787 (not z$785)))
(assert
 (= z$788 (and z$777 z$787)))
(assert
 (let (($x1287 (= z$n1s8 v_current)))
 (= z$790 $x1287)))
(assert
 (= z$791 (and z$779 z$790)))
(assert
 (= z$793 (and a_move_next z$791)))
(assert
 (= z$795 (not z$793)))
(assert
 (= z$796 (and f15 z$795)))
(assert
 (= z$798 (not z$796)))
(assert
 (= z$799 (and z$788 z$798)))
(assert
 (let (($x1312 (= z$n2s8 v_current)))
 (= z$801 $x1312)))
(assert
 (= z$802 (and z$779 z$801)))
(assert
 (= z$804 (and a_move_next z$802)))
(assert
 (= z$806 (not z$804)))
(assert
 (= z$807 (and f16 z$806)))
(assert
 (= z$809 (not z$807)))
(assert
 (= z$810 (and z$799 z$809)))
(assert
 (let (($x1337 (= z$n3s8 v_current)))
 (= z$812 $x1337)))
(assert
 (= z$813 (and z$779 z$812)))
(assert
 (= z$815 (and a_move_next z$813)))
(assert
 (= z$817 (not z$815)))
(assert
 (= z$818 (and f17 z$817)))
(assert
 (= z$820 (not z$818)))
(assert
 (= z$821 (and z$810 z$820)))
(assert
 (let ((?x1363 (Concat_32_8_24 v_going_to z$n0s24)))
 (= z$823 ?x1363)))
(assert
 (let (($x1367 (GrEq_1_32_32 z$823 z$213)))
 (= z$825 $x1367)))
(assert
 (= z$827 (not z$825)))
(assert
 (= z$828 (and a_transporting z$827)))
(assert
 (= z$830 (not z$828)))
(assert
 (= z$831 (and f18 z$830)))
(assert
 (= z$833 (not z$831)))
(assert
 (= z$834 (and z$821 z$833)))
(assert
 (let (($x1393 (GrEq_1_32_32 z$213 z$823)))
 (= z$836 $x1393)))
(assert
 (= z$838 (not z$836)))
(assert
 (= z$839 (and a_transporting z$838)))
(assert
 (= z$841 (not z$839)))
(assert
 (= z$842 (and f19 z$841)))
(assert
 (= z$844 (not z$842)))
(assert
 (= z$845 (and z$834 z$844)))
(assert
 (= z$847 (and z$9 z$15)))
(assert
 (= z$849 (not z$847)))
(assert
 (= z$850 (and f20 z$849)))
(assert
 (= z$852 (not z$850)))
(assert
 (= z$853 (and z$845 z$852)))
(assert
 (= z$855 (and a_waiting_Person_0 a_q_Elevator)))
(assert
 (let (($x204 (= v_who z$n0s8)))
 (= z$66 $x204)))
(assert
 (= z$857 (and z$855 z$66)))
(assert
 (= z$860 (and (distinct v_at_floor_Person_0 z$n0s8) true)))
(assert
 (= z$861 (and z$857 z$860)))
(assert
 (= z$863 (not z$861)))
(assert
 (= z$864 (and f21 z$863)))
(assert
 (= z$866 (not z$864)))
(assert
 (= z$867 (and z$853 z$866)))
(assert
 (= z$871 (and (distinct v_at_floor_Person_0 z$n1s8) true)))
(assert
 (= z$872 (and z$857 z$871)))
(assert
 (= z$874 (not z$872)))
(assert
 (= z$875 (and f22 z$874)))
(assert
 (= z$877 (not z$875)))
(assert
 (= z$878 (and z$867 z$877)))
(assert
 (= z$882 (and (distinct v_at_floor_Person_0 z$n2s8) true)))
(assert
 (= z$883 (and z$857 z$882)))
(assert
 (= z$885 (not z$883)))
(assert
 (= z$886 (and f23 z$885)))
(assert
 (= z$888 (not z$886)))
(assert
 (= z$889 (and z$878 z$888)))
(assert
 (= z$893 (and (distinct v_at_floor_Person_0 z$n3s8) true)))
(assert
 (= z$894 (and z$857 z$893)))
(assert
 (= z$896 (not z$894)))
(assert
 (= z$897 (and f24 z$896)))
(assert
 (= z$899 (not z$897)))
(assert
 (= z$900 (and z$889 z$899)))
(assert
 (= z$902 (and a_in_elevator_Person_0 a_transporting)))
(assert
 (let (($x1532 (= v_going_to v_current)))
 (= z$904 $x1532)))
(assert
 (= z$905 (and z$66 z$904)))
(assert
 (= z$907 (and z$902 z$905)))
(assert
 (= z$909 (not z$907)))
(assert
 (= z$910 (and f25 z$909)))
(assert
 (= z$912 (not z$910)))
(assert
 (= z$913 (and z$900 z$912)))
(assert
 (= z$915 (and z$11 z$15)))
(assert
 (= z$917 (not z$915)))
(assert
 (= z$918 (and f26 z$917)))
(assert
 (= z$920 (not z$918)))
(assert
 (= z$921 (and z$913 z$920)))
(assert
 (= z$923 (and a_waiting_Person_1 a_q_Elevator)))
(assert
 (let (($x1579 (= z$n1s8 v_who)))
 (= z$925 $x1579)))
(assert
 (= z$926 (and z$923 z$925)))
(assert
 (= z$929 (and (distinct v_at_floor_Person_1 z$n0s8) true)))
(assert
 (= z$930 (and z$926 z$929)))
(assert
 (= z$932 (not z$930)))
(assert
 (= z$933 (and f27 z$932)))
(assert
 (= z$935 (not z$933)))
(assert
 (= z$936 (and z$921 z$935)))
(assert
 (= z$940 (and (distinct v_at_floor_Person_1 z$n1s8) true)))
(assert
 (= z$941 (and z$926 z$940)))
(assert
 (= z$943 (not z$941)))
(assert
 (= z$944 (and f28 z$943)))
(assert
 (= z$946 (not z$944)))
(assert
 (= z$947 (and z$936 z$946)))
(assert
 (= z$951 (and (distinct v_at_floor_Person_1 z$n2s8) true)))
(assert
 (= z$952 (and z$926 z$951)))
(assert
 (= z$954 (not z$952)))
(assert
 (= z$955 (and f29 z$954)))
(assert
 (= z$957 (not z$955)))
(assert
 (= z$958 (and z$947 z$957)))
(assert
 (= z$962 (and (distinct v_at_floor_Person_1 z$n3s8) true)))
(assert
 (= z$963 (and z$926 z$962)))
(assert
 (= z$965 (not z$963)))
(assert
 (= z$966 (and f30 z$965)))
(assert
 (= z$968 (not z$966)))
(assert
 (= z$969 (and z$958 z$968)))
(assert
 (= z$971 (and a_in_elevator_Person_1 a_transporting)))
(assert
 (= z$973 (and z$904 z$925)))
(assert
 (= z$975 (and z$971 z$973)))
(assert
 (= z$977 (not z$975)))
(assert
 (= z$978 (and f31 z$977)))
(assert
 (= z$980 (not z$978)))
(assert
 (= z$981 (and z$969 z$980)))
(assert
 (let (($x1696 (not f19)))
 (= z$983 $x1696)))
(assert
 (let (($x1699 (not f18)))
 (= z$984 $x1699)))
(assert
 (let (($x1702 (not f13)))
 (= z$985 $x1702)))
(assert
 (let (($x1705 (not f12)))
 (= z$986 $x1705)))
(assert
 (let (($x1708 (not f07)))
 (= z$987 $x1708)))
(assert
 (let (($x1711 (not f06)))
 (= z$988 $x1711)))
(assert
 (let (($x1714 (not f05)))
 (= z$989 $x1714)))
(assert
 (let (($x1717 (not f04)))
 (= z$990 $x1717)))
(assert
 (= z$991 (and z$444 z$449)))
(assert
 (= z$993 (not z$991)))
(assert
 (let (($x1727 (not z$993)))
 (= z$994 $x1727)))
(assert
 (= z$995 (and z$454 z$994)))
(assert
 (= z$997 (not z$995)))
(assert
 (let (($x1737 (not z$997)))
 (= z$998 $x1737)))
(assert
 (= z$999 (and z$459 z$998)))
(assert
 (= z$1001 (not z$999)))
(assert
 (let (($x1747 (not z$1001)))
 (= z$1002 $x1747)))
(assert
 (= z$1003 (and z$990 z$1002)))
(assert
 (= z$1005 (not z$1003)))
(assert
 (let (($x1757 (not z$1005)))
 (= z$1006 $x1757)))
(assert
 (= z$1007 (and z$989 z$1006)))
(assert
 (= z$1009 (not z$1007)))
(assert
 (let (($x1767 (not z$1009)))
 (= z$1010 $x1767)))
(assert
 (= z$1011 (and z$988 z$1010)))
(assert
 (= z$1013 (not z$1011)))
(assert
 (let (($x1777 (not z$1013)))
 (= z$1014 $x1777)))
(assert
 (= z$1015 (and z$987 z$1014)))
(assert
 (= z$1017 (not z$1015)))
(assert
 (let (($x1787 (not z$1017)))
 (= z$1018 $x1787)))
(assert
 (= z$1019 (and z$489 z$1018)))
(assert
 (= z$1021 (not z$1019)))
(assert
 (let (($x1797 (not z$1021)))
 (= z$1022 $x1797)))
(assert
 (= z$1023 (and z$493 z$1022)))
(assert
 (= z$1025 (not z$1023)))
(assert
 (let (($x1807 (not z$1025)))
 (= z$1026 $x1807)))
(assert
 (= z$1027 (and z$497 z$1026)))
(assert
 (= z$1029 (not z$1027)))
(assert
 (let (($x1817 (not z$1029)))
 (= z$1030 $x1817)))
(assert
 (= z$1031 (and z$501 z$1030)))
(assert
 (= z$1033 (not z$1031)))
(assert
 (let (($x1827 (not z$1033)))
 (= z$1034 $x1827)))
(assert
 (= z$1035 (and z$986 z$1034)))
(assert
 (= z$1037 (not z$1035)))
(assert
 (let (($x1837 (not z$1037)))
 (= z$1038 $x1837)))
(assert
 (= z$1039 (and z$985 z$1038)))
(assert
 (= z$1041 (not z$1039)))
(assert
 (let (($x1847 (not z$1041)))
 (= z$1042 $x1847)))
(assert
 (= z$1043 (and z$530 z$1042)))
(assert
 (= z$1045 (not z$1043)))
(assert
 (let (($x1857 (not z$1045)))
 (= z$1046 $x1857)))
(assert
 (= z$1047 (and z$533 z$1046)))
(assert
 (= z$1049 (not z$1047)))
(assert
 (let (($x1867 (not z$1049)))
 (= z$1050 $x1867)))
(assert
 (= z$1051 (and z$536 z$1050)))
(assert
 (= z$1053 (not z$1051)))
(assert
 (let (($x1877 (not z$1053)))
 (= z$1054 $x1877)))
(assert
 (= z$1055 (and z$539 z$1054)))
(assert
 (= z$1057 (not z$1055)))
(assert
 (let (($x1887 (not z$1057)))
 (= z$1058 $x1887)))
(assert
 (= z$1059 (and z$984 z$1058)))
(assert
 (= z$1061 (not z$1059)))
(assert
 (let (($x1897 (not z$1061)))
 (= z$1062 $x1897)))
(assert
 (= z$1063 (and z$983 z$1062)))
(assert
 (= z$1065 (not z$1063)))
(assert
 (let (($x1907 (not z$1065)))
 (= z$1066 $x1907)))
(assert
 (= z$1067 (and z$350 z$1066)))
(assert
 (= z$1069 (not z$1067)))
(assert
 (let (($x1917 (not z$1069)))
 (= z$1070 $x1917)))
(assert
 (= z$1071 (and z$364 z$1070)))
(assert
 (= z$1073 (not z$1071)))
(assert
 (let (($x1927 (not z$1073)))
 (= z$1074 $x1927)))
(assert
 (= z$1075 (and z$367 z$1074)))
(assert
 (= z$1077 (not z$1075)))
(assert
 (let (($x1937 (not z$1077)))
 (= z$1078 $x1937)))
(assert
 (= z$1079 (and z$370 z$1078)))
(assert
 (= z$1081 (not z$1079)))
(assert
 (let (($x1947 (not z$1081)))
 (= z$1082 $x1947)))
(assert
 (= z$1083 (and z$373 z$1082)))
(assert
 (= z$1085 (not z$1083)))
(assert
 (let (($x1957 (not z$1085)))
 (= z$1086 $x1957)))
(assert
 (= z$1087 (and z$354 z$1086)))
(assert
 (= z$1089 (not z$1087)))
(assert
 (let (($x1967 (not z$1089)))
 (= z$1090 $x1967)))
(assert
 (= z$1091 (and z$397 z$1090)))
(assert
 (= z$1093 (not z$1091)))
(assert
 (let (($x1977 (not z$1093)))
 (= z$1094 $x1977)))
(assert
 (= z$1095 (and z$411 z$1094)))
(assert
 (= z$1097 (not z$1095)))
(assert
 (let (($x1987 (not z$1097)))
 (= z$1098 $x1987)))
(assert
 (= z$1099 (and z$414 z$1098)))
(assert
 (= z$1101 (not z$1099)))
(assert
 (let (($x1997 (not z$1101)))
 (= z$1102 $x1997)))
(assert
 (= z$1103 (and z$417 z$1102)))
(assert
 (= z$1105 (not z$1103)))
(assert
 (let (($x2007 (not z$1105)))
 (= z$1106 $x2007)))
(assert
 (= z$1107 (and z$420 z$1106)))
(assert
 (= z$1109 (not z$1107)))
(assert
 (let (($x2017 (not z$1109)))
 (= z$1110 $x2017)))
(assert
 (= z$1111 (and z$401 z$1110)))
(assert
 (= z$1113 (not z$1111)))
(assert
 (= z$1114 (and z$981 z$1113)))
(assert
 (= z$1116 (and f00 f01)))
(assert
 (= z$1118 (not z$1116)))
(assert
 (= z$1119 (and f02 z$993)))
(assert
 (= z$1121 (not z$1119)))
(assert
 (= z$1122 (and z$1118 z$1121)))
(assert
 (= z$1124 (not z$1122)))
(assert
 (= z$1125 (not z$1124)))
(assert
 (= z$1126 (and f03 z$997)))
(assert
 (= z$1128 (not z$1126)))
(assert
 (= z$1129 (and z$1125 z$1128)))
(assert
 (= z$1131 (not z$1129)))
(assert
 (= z$1132 (not z$1131)))
(assert
 (= z$1133 (and f04 z$1001)))
(assert
 (= z$1135 (not z$1133)))
(assert
 (= z$1136 (and z$1132 z$1135)))
(assert
 (= z$1138 (not z$1136)))
(assert
 (= z$1139 (not z$1138)))
(assert
 (= z$1140 (and f05 z$1005)))
(assert
 (= z$1142 (not z$1140)))
(assert
 (= z$1143 (and z$1139 z$1142)))
(assert
 (= z$1145 (not z$1143)))
(assert
 (= z$1146 (not z$1145)))
(assert
 (= z$1147 (and f06 z$1009)))
(assert
 (= z$1149 (not z$1147)))
(assert
 (= z$1150 (and z$1146 z$1149)))
(assert
 (= z$1152 (not z$1150)))
(assert
 (= z$1153 (not z$1152)))
(assert
 (= z$1154 (and f07 z$1013)))
(assert
 (= z$1156 (not z$1154)))
(assert
 (= z$1157 (and z$1153 z$1156)))
(assert
 (= z$1159 (not z$1157)))
(assert
 (= z$1160 (not z$1159)))
(assert
 (= z$1161 (and f08 z$1017)))
(assert
 (= z$1163 (not z$1161)))
(assert
 (= z$1164 (and z$1160 z$1163)))
(assert
 (= z$1166 (not z$1164)))
(assert
 (= z$1167 (not z$1166)))
(assert
 (= z$1168 (and f09 z$1021)))
(assert
 (= z$1170 (not z$1168)))
(assert
 (= z$1171 (and z$1167 z$1170)))
(assert
 (= z$1173 (not z$1171)))
(assert
 (= z$1174 (not z$1173)))
(assert
 (= z$1175 (and f10 z$1025)))
(assert
 (= z$1177 (not z$1175)))
(assert
 (= z$1178 (and z$1174 z$1177)))
(assert
 (= z$1180 (not z$1178)))
(assert
 (= z$1181 (not z$1180)))
(assert
 (= z$1182 (and f11 z$1029)))
(assert
 (= z$1184 (not z$1182)))
(assert
 (= z$1185 (and z$1181 z$1184)))
(assert
 (= z$1187 (not z$1185)))
(assert
 (= z$1188 (not z$1187)))
(assert
 (= z$1189 (and f12 z$1033)))
(assert
 (= z$1191 (not z$1189)))
(assert
 (= z$1192 (and z$1188 z$1191)))
(assert
 (= z$1194 (not z$1192)))
(assert
 (= z$1195 (not z$1194)))
(assert
 (= z$1196 (and f13 z$1037)))
(assert
 (= z$1198 (not z$1196)))
(assert
 (= z$1199 (and z$1195 z$1198)))
(assert
 (= z$1201 (not z$1199)))
(assert
 (= z$1202 (not z$1201)))
(assert
 (= z$1203 (and f14 z$1041)))
(assert
 (= z$1205 (not z$1203)))
(assert
 (= z$1206 (and z$1202 z$1205)))
(assert
 (= z$1208 (not z$1206)))
(assert
 (= z$1209 (not z$1208)))
(assert
 (= z$1210 (and f15 z$1045)))
(assert
 (= z$1212 (not z$1210)))
(assert
 (= z$1213 (and z$1209 z$1212)))
(assert
 (= z$1215 (not z$1213)))
(assert
 (= z$1216 (not z$1215)))
(assert
 (= z$1217 (and f16 z$1049)))
(assert
 (= z$1219 (not z$1217)))
(assert
 (= z$1220 (and z$1216 z$1219)))
(assert
 (= z$1222 (not z$1220)))
(assert
 (= z$1223 (not z$1222)))
(assert
 (= z$1224 (and f17 z$1053)))
(assert
 (= z$1226 (not z$1224)))
(assert
 (= z$1227 (and z$1223 z$1226)))
(assert
 (= z$1229 (not z$1227)))
(assert
 (= z$1230 (not z$1229)))
(assert
 (= z$1231 (and f18 z$1057)))
(assert
 (= z$1233 (not z$1231)))
(assert
 (= z$1234 (and z$1230 z$1233)))
(assert
 (= z$1236 (not z$1234)))
(assert
 (= z$1237 (not z$1236)))
(assert
 (= z$1238 (and f19 z$1061)))
(assert
 (= z$1240 (not z$1238)))
(assert
 (= z$1241 (and z$1237 z$1240)))
(assert
 (= z$1243 (not z$1241)))
(assert
 (= z$1244 (not z$1243)))
(assert
 (= z$1245 (and f20 z$1065)))
(assert
 (= z$1247 (not z$1245)))
(assert
 (= z$1248 (and z$1244 z$1247)))
(assert
 (= z$1250 (not z$1248)))
(assert
 (= z$1251 (not z$1250)))
(assert
 (= z$1252 (and f21 z$1069)))
(assert
 (= z$1254 (not z$1252)))
(assert
 (= z$1255 (and z$1251 z$1254)))
(assert
 (= z$1257 (not z$1255)))
(assert
 (= z$1258 (not z$1257)))
(assert
 (= z$1259 (and f22 z$1073)))
(assert
 (= z$1261 (not z$1259)))
(assert
 (= z$1262 (and z$1258 z$1261)))
(assert
 (= z$1264 (not z$1262)))
(assert
 (= z$1265 (not z$1264)))
(assert
 (= z$1266 (and f23 z$1077)))
(assert
 (= z$1268 (not z$1266)))
(assert
 (= z$1269 (and z$1265 z$1268)))
(assert
 (= z$1271 (not z$1269)))
(assert
 (= z$1272 (not z$1271)))
(assert
 (= z$1273 (and f24 z$1081)))
(assert
 (= z$1275 (not z$1273)))
(assert
 (= z$1276 (and z$1272 z$1275)))
(assert
 (= z$1278 (not z$1276)))
(assert
 (= z$1279 (not z$1278)))
(assert
 (= z$1280 (and f25 z$1085)))
(assert
 (= z$1282 (not z$1280)))
(assert
 (= z$1283 (and z$1279 z$1282)))
(assert
 (= z$1285 (not z$1283)))
(assert
 (= z$1286 (not z$1285)))
(assert
 (= z$1287 (and f26 z$1089)))
(assert
 (= z$1289 (not z$1287)))
(assert
 (= z$1290 (and z$1286 z$1289)))
(assert
 (= z$1292 (not z$1290)))
(assert
 (= z$1293 (not z$1292)))
(assert
 (= z$1294 (and f27 z$1093)))
(assert
 (= z$1296 (not z$1294)))
(assert
 (= z$1297 (and z$1293 z$1296)))
(assert
 (= z$1299 (not z$1297)))
(assert
 (= z$1300 (not z$1299)))
(assert
 (= z$1301 (and f28 z$1097)))
(assert
 (= z$1303 (not z$1301)))
(assert
 (= z$1304 (and z$1300 z$1303)))
(assert
 (= z$1306 (not z$1304)))
(assert
 (= z$1307 (not z$1306)))
(assert
 (= z$1308 (and f29 z$1101)))
(assert
 (= z$1310 (not z$1308)))
(assert
 (= z$1311 (and z$1307 z$1310)))
(assert
 (= z$1313 (not z$1311)))
(assert
 (= z$1314 (not z$1313)))
(assert
 (= z$1315 (and f30 z$1105)))
(assert
 (= z$1317 (not z$1315)))
(assert
 (= z$1318 (and z$1314 z$1317)))
(assert
 (= z$1320 (not z$1318)))
(assert
 (= z$1321 (not z$1320)))
(assert
 (= z$1322 (and f31 z$1109)))
(assert
 (= z$1324 (not z$1322)))
(assert
 (= z$1325 (and z$1321 z$1324)))
(assert
 (= z$1327 (not z$1325)))
(assert
 (= z$1328 (not z$1327)))
(assert
 (= z$1329 (and z$1114 z$1328)))
(assert
 (= z$1331 (and z$9 a_waiting_Person_0)))
(assert
 (= z$1333 (not z$1331)))
(assert
 (= z$1334 (and a_out_Person_0 z$21)))
(assert
 (= z$1336 (not z$1334)))
(assert
 (= z$1337 (and a_in_elevator_Person_0 z$1336)))
(assert
 (= z$1339 (not z$1337)))
(assert
 (= z$1340 (and z$1333 z$1339)))
(assert
 (= z$1342 (not z$1340)))
(assert
 (= z$1343 (not z$1342)))
(assert
 (let (($x2583 (not z$1336)))
 (= z$1344 $x2583)))
(assert
 (= z$1345 (and z$3 z$1344)))
(assert
 (= z$1347 (not z$1345)))
(assert
 (= z$1348 (and z$1343 z$1347)))
(assert
 (= z$1350 (and z$11 a_waiting_Person_1)))
(assert
 (= z$1352 (not z$1350)))
(assert
 (= z$1353 (and a_out_Person_1 z$23)))
(assert
 (= z$1355 (not z$1353)))
(assert
 (= z$1356 (and a_in_elevator_Person_1 z$1355)))
(assert
 (= z$1358 (not z$1356)))
(assert
 (= z$1359 (and z$1352 z$1358)))
(assert
 (= z$1361 (not z$1359)))
(assert
 (= z$1362 (not z$1361)))
(assert
 (= z$1363 (and z$1348 z$1362)))
(assert
 (let (($x2632 (not z$1355)))
 (= z$1365 $x2632)))
(assert
 (= z$1366 (and z$5 z$1365)))
(assert
 (= z$1368 (not z$1366)))
(assert
 (= z$1369 (and z$1363 z$1368)))
(assert
 (= z$1371 (and z$15 a_r)))
(assert
 (= z$1373 (not z$1371)))
(assert
 (= z$1374 (and z$1369 z$1373)))
(assert
 (let (($x112 (not a_r)))
 (= z$17 $x112)))
(assert
 (= z$1376 (and a_q_Servis z$17)))
(assert
 (= z$1378 (not z$1376)))
(assert
 (= z$1379 (and z$1374 z$1378)))
(assert
 (= z$1381 (and z$1 a_move_next)))
(assert
 (= z$1383 (not z$1381)))
(assert
 (= z$1384 (and a_choose_next z$7)))
(assert
 (= z$1386 (not z$1384)))
(assert
 (= z$1387 (and a_q_Elevator z$1386)))
(assert
 (= z$1389 (not z$1387)))
(assert
 (= z$1390 (and z$1383 z$1389)))
(assert
 (= z$1392 (not z$1390)))
(assert
 (= z$1393 (not z$1392)))
(assert
 (let (($x2699 (not z$1386)))
 (= z$1394 $x2699)))
(assert
 (= z$1395 (and z$13 z$1394)))
(assert
 (= z$1397 (not z$1395)))
(assert
 (= z$1398 (and a_transporting z$1397)))
(assert
 (= z$1400 (not z$1398)))
(assert
 (= z$1401 (and z$1393 z$1400)))
(assert
 (= z$1403 (not z$1401)))
(assert
 (= z$1404 (not z$1403)))
(assert
 (= z$1405 (and z$1379 z$1404)))
(assert
 (let (($x2730 (not z$1397)))
 (= z$1407 $x2730)))
(assert
 (= z$1408 (and z$19 z$1407)))
(assert
 (= z$1410 (not z$1408)))
(assert
 (= z$1411 (and z$1405 z$1410)))
(assert
 (= z$1413 (and z$1329 z$1411)))
(assert
 (= z$1415 (and z$374 z$357)))
(assert
 (= z$1417 (not z$1415)))
(assert
 (let (($x2755 (not z$374)))
 (= z$1418 $x2755)))
(assert
 (= z$1419 (and z$1418 z$358)))
(assert
 (= z$1421 (not z$1419)))
(assert
 (= z$1422 (and z$393 z$1421)))
(assert
 (= z$1424 (not z$1422)))
(assert
 (= z$1425 (and z$1417 z$1424)))
(assert
 (= z$1427 (not z$1425)))
(assert
 (= z$1428 (not z$1427)))
(assert
 (let (($x2782 (not z$393)))
 (= z$1429 $x2782)))
(assert
 (let (($x2785 (not z$1421)))
 (= z$1430 $x2785)))
(assert
 (= z$1431 (and z$1429 z$1430)))
(assert
 (= z$1433 (not z$1431)))
(assert
 (= z$1434 (and z$1428 z$1433)))
(assert
 (= z$1436 (and z$421 z$404)))
(assert
 (= z$1438 (not z$1436)))
(assert
 (let (($x2806 (not z$421)))
 (= z$1439 $x2806)))
(assert
 (= z$1440 (and z$1439 z$405)))
(assert
 (= z$1442 (not z$1440)))
(assert
 (= z$1443 (and z$440 z$1442)))
(assert
 (= z$1445 (not z$1443)))
(assert
 (= z$1446 (and z$1438 z$1445)))
(assert
 (= z$1448 (not z$1446)))
(assert
 (= z$1449 (not z$1448)))
(assert
 (= z$1450 (and z$1434 z$1449)))
(assert
 (let (($x2837 (not z$440)))
 (= z$1452 $x2837)))
(assert
 (let (($x2840 (not z$1442)))
 (= z$1453 $x2840)))
(assert
 (= z$1454 (and z$1452 z$1453)))
(assert
 (= z$1456 (not z$1454)))
(assert
 (= z$1457 (and z$1450 z$1456)))
(assert
 (= z$1459 (and z$465 z$485)))
(assert
 (= z$1461 (not z$1459)))
(assert
 (= z$1462 (and z$1457 z$1461)))
(assert
 (let (($x2865 (not z$485)))
 (= z$1464 $x2865)))
(assert
 (= z$1465 (and z$467 z$1464)))
(assert
 (= z$1467 (not z$1465)))
(assert
 (= z$1468 (and z$1462 z$1467)))
(assert
 (= z$1470 (and z$540 z$511)))
(assert
 (= z$1472 (not z$1470)))
(assert
 (let (($x2886 (not z$540)))
 (= z$1473 $x2886)))
(assert
 (= z$1474 (and z$1473 z$512)))
(assert
 (= z$1476 (not z$1474)))
(assert
 (= z$1477 (and z$573 z$1476)))
(assert
 (= z$1479 (not z$1477)))
(assert
 (= z$1480 (and z$1472 z$1479)))
(assert
 (= z$1482 (not z$1480)))
(assert
 (= z$1483 (not z$1482)))
(assert
 (let (($x2913 (not z$573)))
 (= z$1484 $x2913)))
(assert
 (let (($x2916 (not z$1476)))
 (= z$1485 $x2916)))
(assert
 (= z$1486 (and z$1484 z$1485)))
(assert
 (= z$1488 (not z$1486)))
(assert
 (= z$1489 (and z$610 z$1488)))
(assert
 (= z$1491 (not z$1489)))
(assert
 (= z$1492 (and z$1483 z$1491)))
(assert
 (= z$1494 (not z$1492)))
(assert
 (= z$1495 (not z$1494)))
(assert
 (= z$1496 (and z$1468 z$1495)))
(assert
 (let (($x2947 (not z$610)))
 (= z$1498 $x2947)))
(assert
 (let (($x2950 (not z$1488)))
 (= z$1499 $x2950)))
(assert
 (= z$1500 (and z$1498 z$1499)))
(assert
 (= z$1502 (not z$1500)))
(assert
 (= z$1503 (and z$1496 z$1502)))
(assert
 (= z$1505 (and z$1413 z$1503)))
(assert
 (= z$1507 (and z$1505 z$25)))
(assert
 (= z$1509 (not z$1507)))
(assert
 (= z$1510 (= dve_invalid$next z$1509)))
(assert
 (= z$1559 (not dve_invalid$next)))
(assert
 (= z$1560 (and a_in_elevator_Person_0$next a_in_elevator_Person_1$next)))
(assert
 (= z$1562 (and z$1559 z$1560)))
(assert
 (= z$1564 (not z$1562)))
(assert
 (= z$1565 (= prop$next z$1564)))
(assert
 (= z$179 (and f03 z$60)))
(assert
 (let ((?x5678 (ite z$179 v_caller v_floor_queue_3_0)))
 (= z$181 ?x5678)))
(assert
 (let ((?x3297 (ite f17 v_floor_queue_3_1 z$181)))
 (= z$183 ?x3297)))
(assert
 (let (($x4297 (= v_floor_queue_3_0$next z$183)))
 (= z$185 $x4297)))
(assert
 (let ((?x4924 (Add_32_32_32 z$n1s32 z$213)))
 (= z$215 ?x4924)))
(assert
 (let ((?x3959 (Extract_8_7_0_32 z$215)))
 (= z$217 ?x3959)))
(assert
 (let ((?x3846 (Sub_32_32_32 z$213 z$n1s32)))
 (= z$220 ?x3846)))
(assert
 (let ((?x3670 (Extract_8_7_0_32 z$220)))
 (= z$222 ?x3670)))
(assert
 (let ((?x4886 (ite f12 z$222 v_current)))
 (= z$226 ?x4886)))
(assert
 (let ((?x4871 (ite f13 z$217 z$226)))
 (= z$228 ?x4871)))
(assert
 (let ((?x4851 (ite f18 z$222 z$228)))
 (= z$230 ?x4851)))
(assert
 (let ((?x5042 (ite f19 z$217 z$230)))
 (= z$232 ?x5042)))
(assert
 (let (($x4479 (= v_current$next z$232)))
 (= z$234 $x4479)))
(assert
 (let ((?x4095 (Add_32_32_32 z$n1s32 z$293)))
 (= z$295 ?x4095)))
(assert
 (let (($x4356 (Extract_1_31_31_32 z$295)))
 (= z$297 $x4356)))
(assert
 (let ((?x4519 (BitWiseNot_32_32 z$295)))
 (= z$299 ?x4519)))
(assert
 (let ((?x3985 (Add_32_32_32 z$299 z$n1s32)))
 (= z$301 ?x3985)))
(assert
 (let ((?x3949 (ite z$297 z$301 z$295)))
 (= z$303 ?x3949)))
(assert
 (let ((?x4354 (Mod_32_32_32 z$303 z$n4s32)))
 (= z$306 ?x4354)))
(assert
 (let ((?x3615 (BitWiseNot_32_32 z$306)))
 (= z$308 ?x3615)))
(assert
 (let ((?x3413 (Add_32_32_32 z$308 z$n1s32)))
 (= z$310 ?x3413)))
(assert
 (let ((?x4601 (ite z$297 z$310 z$306)))
 (= z$312 ?x4601)))
(assert
 (let ((?x4013 (Extract_8_7_0_32 z$310)))
 (= z$315 ?x4013)))
(assert
 (let ((?x3585 (Extract_8_7_0_32 z$306)))
 (= z$316 ?x3585)))
(assert
 (let ((?x3300 (ite z$297 z$315 z$316)))
 (= z$317 ?x3300)))
(assert
 (let ((?x5392 (Extract_8_7_0_32 z$312)))
 (= z$314 ?x5392)))
(assert
 (= z$314 z$317))
(assert
 (let ((?x3900 (ite f04 z$314 v_serving)))
 (= z$322 ?x3900)))
(assert
 (let ((?x5031 (ite f05 z$314 z$322)))
 (= z$324 ?x5031)))
(assert
 (let ((?x3799 (ite f06 z$314 z$324)))
 (= z$326 ?x3799)))
(assert
 (let ((?x4281 (ite f07 z$314 z$326)))
 (= z$328 ?x4281)))
(assert
 (let ((?x5329 (ite f25 v_current z$328)))
 (= z$330 ?x5329)))
(assert
 (let ((?x3934 (ite f31 v_current z$330)))
 (= z$332 ?x3934)))
(assert
 (let (($x3515 (= v_serving$next z$332)))
 (= z$334 $x3515)))
(assert
 (= z$1786 (and a_out_Person_0 a_out_Person_1 z$15 z$25)))
(assert
 (= z$1787 (not z$1786)))
(assert
 (let (($x5787 (and a_out_Person_0 a_out_Person_1 a_q_Elevator z$17 z$21 z$25)))
 (= z$1727 $x5787)))
(assert
 (= z$1728 (not z$1727)))
(assert
 (= z$1806 (and a_out_Person_0 z$15)))
(assert
 (= z$1807 (not z$1806)))
(assert
 (let (($x3276 (and z$1691 z$1699 z$1717 z$1751 z$1759 z$1768 z$1518 prop z$239 z$244 z$542 z$348 z$359 z$376 z$395 z$406 z$423 z$442 z$468 z$486 z$513 z$575 z$612 z$1510 z$1565 z$185 z$234 z$334 z$1787 z$1728 z$1807)))
 (= z$1810 $x3276)))
(assert
 z$1810)
(assert
 (=> p$0 a_out_Person_0$next))
(assert
 (=> p$1 a_in_elevator_Person_0$next))
(assert
 (=> p$2 a_choose_next$next))
(assert
 (=> p$3 a_q_Elevator$next))
(assert
 (let (($x60 (= z$1559 (not dve_invalid$next))))
 (=> p$4 $x60)))
(assert
 (=> p$4 z$1559))
(assert
 (=> p$5 (= z$1580 (not a_waiting_Person_0$next))))
(assert
 (=> p$5 z$1580))
(assert
 (=> p$6 (= z$1582 (not a_q_Servis$next))))
(assert
 (=> p$6 z$1582))
(assert
 (=> p$7 (= z$1583 (not a_r$next))))
(assert
 (=> p$7 z$1583))
(assert
 (=> p$8 (= z$1584 (not a_move_next$next))))
(assert
 (=> p$8 z$1584))
(assert
 (=> p$9 (= z$1681 (not a_transporting$next))))
(assert
 (=> p$9 z$1681))
(check-sat)
(assert p$7)
(assert p$1)
(assert p$3)
(set-info :status sat)
(check-sat)
(exit)
