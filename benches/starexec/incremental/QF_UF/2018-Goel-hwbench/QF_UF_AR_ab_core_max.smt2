(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: AR
query-maker: "Z3"
query-time: 4.746000 ms
query-class: abstract
query-category: assume
query-type: mus_core
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

; 
(set-info :status sat)
(declare-sort utt251 0)
(declare-fun z$n121s251 () utt251)
(declare-fun z$n56s251 () utt251)
(declare-fun z$n89202980794122492566142873090593446023921698s251 () utt251)
(declare-fun z$n117s251 () utt251)
(declare-fun z$n67s251 () utt251)
(declare-fun z$n144s251 () utt251)
(declare-fun z$n40s251 () utt251)
(declare-fun z$n53s251 () utt251)
(declare-fun z$n89s251 () utt251)
(declare-fun z$n54s251 () utt251)
(declare-fun z$n197s251 () utt251)
(declare-fun z$n12s251 () utt251)
(declare-fun z$n91s251 () utt251)
(declare-fun z$n23s251 () utt251)
(declare-fun z$n44s251 () utt251)
(declare-fun z$n206s251 () utt251)
(declare-fun z$n49s251 () utt251)
(declare-fun z$n69s251 () utt251)
(declare-fun z$n88s251 () utt251)
(declare-fun z$n32s251 () utt251)
(declare-fun z$n20s251 () utt251)
(declare-fun z$n34s251 () utt251)
(declare-fun z$n31s251 () utt251)
(declare-fun z$n21s251 () utt251)
(declare-fun z$n199s251 () utt251)
(declare-fun z$n123s251 () utt251)
(declare-fun z$n16s251 () utt251)
(declare-fun z$n11s251 () utt251)
(declare-fun z$n19s251 () utt251)
(declare-fun z$n205s251 () utt251)
(declare-fun z$n98s251 () utt251)
(declare-fun z$n33s251 () utt251)
(declare-fun z$n103s251 () utt251)
(declare-fun z$n11983157094615116375939581176584992905283330352356145485516558024746991618s251 () utt251)
(declare-fun z$n10s251 () utt251)
(declare-fun z$n35s251 () utt251)
(declare-fun z$n202s251 () utt251)
(declare-fun z$n77s251 () utt251)
(declare-fun z$n13s251 () utt251)
(declare-fun z$n203s251 () utt251)
(declare-fun z$n213s251 () utt251)
(declare-fun z$n43s251 () utt251)
(declare-fun z$n85s251 () utt251)
(declare-fun z$n74s251 () utt251)
(declare-fun z$n225s251 () utt251)
(declare-fun z$n248s251 () utt251)
(declare-fun z$n28s251 () utt251)
(declare-fun z$n65s251 () utt251)
(declare-fun z$n125s251 () utt251)
(declare-fun z$n8s251 () utt251)
(declare-fun z$n713623846352979940529142984724747568191373310s251 () utt251)
(declare-fun z$n15s251 () utt251)
(declare-fun z$n80s251 () utt251)
(declare-fun z$n2s251 () utt251)
(declare-fun z$n142s251 () utt251)
(declare-fun z$n27s251 () utt251)
(declare-fun z$n4s251 () utt251)
(declare-fun z$n55s251 () utt251)
(declare-fun z$n122s251 () utt251)
(declare-fun z$n62s251 () utt251)
(declare-fun z$n66s251 () utt251)
(declare-fun z$n6s251 () utt251)
(declare-fun z$n89202980794122492566142873090593446023921733s251 () utt251)
(declare-fun z$n194s251 () utt251)
(declare-fun z$n46s251 () utt251)
(declare-fun z$n72s251 () utt251)
(declare-fun z$n11983157094615116375939581176584992905283330352356145485516558024746991617s251 () utt251)
(declare-fun z$n30s251 () utt251)
(declare-fun z$n96s251 () utt251)
(declare-fun z$n24s251 () utt251)
(declare-fun z$n7s251 () utt251)
(declare-fun z$n713623846352979940529142984724747568191373313s251 () utt251)
(declare-fun z$n5s251 () utt251)
(declare-fun z$n79s251 () utt251)
(declare-fun z$n3s251 () utt251)
(declare-fun z$n124s251 () utt251)
(declare-fun z$n216s251 () utt251)
(declare-fun z$n14s251 () utt251)
(declare-fun z$n48s251 () utt251)
(declare-fun z$n204s251 () utt251)
(declare-fun z$n137438953664s251 () utt251)
(declare-fun z$n201s251 () utt251)
(declare-fun z$n78s251 () utt251)
(declare-fun z$n192s251 () utt251)
(declare-fun z$n120s251 () utt251)
(declare-fun z$n200s251 () utt251)
(declare-fun z$n100s251 () utt251)
(declare-fun z$n0s251 () utt251)
(declare-fun z$n1s251 () utt251)
(declare-fun z$n9s251 () utt251)
(declare-fun a () utt251)
(declare-fun b () utt251)
(declare-fun Add_251_251_251 (utt251 utt251) utt251)
(declare-fun z$11 () utt251)
(declare-fun z$13 () utt251)
(declare-fun a$next () utt251)
(declare-fun b$next () utt251)
(declare-fun z$69 () utt251)
(declare-fun z$2 () Bool)
(declare-fun z$5 () Bool)
(declare-fun z$6 () Bool)
(declare-fun z$114 () Bool)
(declare-fun z$277 () Bool)
(declare-fun z$1115 () Bool)
(declare-fun z$757 () Bool)
(declare-fun z$924 () Bool)
(declare-fun z$594 () Bool)
(declare-fun z$425 () Bool)
(declare-fun z$195 () Bool)
(declare-fun z$1593 () Bool)
(declare-fun z$1361 () Bool)
(declare-fun Le_1_251_251 (utt251 utt251) Bool)
(declare-fun z$9 () Bool)
(declare-fun z$1835 () Bool)
(declare-fun z$1838 () Bool)
(declare-fun z$1839 () Bool)
(declare-fun z$51 () Bool)
(declare-fun z$171 () Bool)
(declare-fun z$313 () Bool)
(declare-fun z$517 () Bool)
(declare-fun z$518 () Bool)
(declare-fun z$408 () Bool)
(declare-fun z$636 () Bool)
(declare-fun z$674 () Bool)
(declare-fun z$675 () Bool)
(declare-fun z$262 () Bool)
(declare-fun z$465 () Bool)
(declare-fun z$505 () Bool)
(declare-fun z$506 () Bool)
(declare-fun z$576 () Bool)
(declare-fun z$801 () Bool)
(declare-fun z$838 () Bool)
(declare-fun z$840 () Bool)
(declare-fun z$1094 () Bool)
(declare-fun z$1417 () Bool)
(declare-fun z$1460 () Bool)
(declare-fun z$1461 () Bool)
(declare-fun z$904 () Bool)
(declare-fun z$1167 () Bool)
(declare-fun z$1481 () Bool)
(declare-fun z$1483 () Bool)
(declare-fun z$738 () Bool)
(declare-fun z$969 () Bool)
(declare-fun z$1006 () Bool)
(declare-fun z$1008 () Bool)
(declare-fun z$260 () Bool)
(declare-fun z$1254 () Bool)
(declare-fun z$1256 () Bool)
(declare-fun z$183 () Bool)
(declare-fun z$1268 () Bool)
(declare-fun z$1270 () Bool)
(declare-fun z$406 () Bool)
(declare-fun z$1284 () Bool)
(declare-fun z$1285 () Bool)
(declare-fun z$118 () Bool)
(declare-fun z$1475 () Bool)
(declare-fun z$1476 () Bool)
(declare-fun z$1339 () Bool)
(declare-fun z$1652 () Bool)
(declare-fun z$1694 () Bool)
(declare-fun z$1696 () Bool)
(declare-fun z$1570 () Bool)
(declare-fun z$1782 () Bool)
(declare-fun z$1828 () Bool)
(declare-fun z$1830 () Bool)
(declare-fun z$58 () Bool)
(declare-fun z$1877 () Bool)
(declare-fun z$1880 () Bool)
(declare-fun z$1881 () Bool)
(declare-fun z$1568 () Bool)
(declare-fun z$1889 () Bool)
(declare-fun z$1891 () Bool)
(declare-fun z$1898 () Bool)
(declare-fun z$1900 () Bool)
(declare-fun z$1907 () Bool)
(declare-fun z$1909 () Bool)
(declare-fun z$1918 () Bool)
(declare-fun z$1919 () Bool)
(declare-fun z$1927 () Bool)
(declare-fun z$1929 () Bool)
(declare-fun z$1936 () Bool)
(declare-fun z$1938 () Bool)
(declare-fun z$1945 () Bool)
(declare-fun z$1947 () Bool)
(declare-fun z$21 () Bool)
(declare-fun prop () Bool)
(declare-fun z$23 () Bool)
(declare-fun z$15 () Bool)
(declare-fun z$17 () Bool)
(declare-fun z$32 () Bool)
(declare-fun prop$next () Bool)
(declare-fun z$34 () Bool)
(declare-fun z$41 () Bool)
(declare-fun z$42 () Bool)
(declare-fun z$43 () Bool)
(declare-fun z$45 () Bool)
(declare-fun z$36 () Bool)
(declare-fun z$40 () Bool)
(declare-fun z$44 () Bool)
(declare-fun z$71 () Bool)
(declare-fun z$85 () Bool)
(declare-fun z$86 () Bool)
(declare-fun z$88 () Bool)
(declare-fun z$59 () Bool)
(declare-fun z$84 () Bool)
(declare-fun z$87 () Bool)
(declare-fun z$132 () Bool)
(declare-fun z$133 () Bool)
(declare-fun z$191 () Bool)
(declare-fun z$192 () Bool)
(declare-fun z$273 () Bool)
(declare-fun z$274 () Bool)
(declare-fun z$284 () Bool)
(declare-fun z$309 () Bool)
(declare-fun z$310 () Bool)
(declare-fun z$319 () Bool)
(declare-fun z$336 () Bool)
(declare-fun z$337 () Bool)
(declare-fun z$421 () Bool)
(declare-fun z$422 () Bool)
(declare-fun z$432 () Bool)
(declare-fun z$461 () Bool)
(declare-fun z$462 () Bool)
(declare-fun z$468 () Bool)
(declare-fun z$489 () Bool)
(declare-fun z$490 () Bool)
(declare-fun z$590 () Bool)
(declare-fun z$591 () Bool)
(declare-fun z$601 () Bool)
(declare-fun z$632 () Bool)
(declare-fun z$633 () Bool)
(declare-fun z$639 () Bool)
(declare-fun z$658 () Bool)
(declare-fun z$659 () Bool)
(declare-fun z$753 () Bool)
(declare-fun z$754 () Bool)
(declare-fun z$574 () Bool)
(declare-fun z$764 () Bool)
(declare-fun z$797 () Bool)
(declare-fun z$798 () Bool)
(declare-fun z$804 () Bool)
(declare-fun z$824 () Bool)
(declare-fun z$825 () Bool)
(declare-fun z$920 () Bool)
(declare-fun z$921 () Bool)
(declare-fun z$736 () Bool)
(declare-fun z$931 () Bool)
(declare-fun z$965 () Bool)
(declare-fun z$966 () Bool)
(declare-fun z$972 () Bool)
(declare-fun z$992 () Bool)
(declare-fun z$993 () Bool)
(declare-fun z$1111 () Bool)
(declare-fun z$1112 () Bool)
(declare-fun z$902 () Bool)
(declare-fun z$1122 () Bool)
(declare-fun z$1163 () Bool)
(declare-fun z$1164 () Bool)
(declare-fun z$1170 () Bool)
(declare-fun z$1193 () Bool)
(declare-fun z$1194 () Bool)
(declare-fun z$1357 () Bool)
(declare-fun z$1358 () Bool)
(declare-fun z$1092 () Bool)
(declare-fun z$1368 () Bool)
(declare-fun z$1413 () Bool)
(declare-fun z$1414 () Bool)
(declare-fun z$1420 () Bool)
(declare-fun z$1444 () Bool)
(declare-fun z$1445 () Bool)
(declare-fun z$1589 () Bool)
(declare-fun z$1590 () Bool)
(declare-fun z$1337 () Bool)
(declare-fun z$1600 () Bool)
(declare-fun z$1648 () Bool)
(declare-fun z$1649 () Bool)
(declare-fun z$1655 () Bool)
(declare-fun z$1680 () Bool)
(declare-fun z$1681 () Bool)
(declare-fun z$66 () Bool)
(declare-fun z$1778 () Bool)
(declare-fun z$1779 () Bool)
(declare-fun z$1790 () Bool)
(declare-fun z$1814 () Bool)
(declare-fun z$1815 () Bool)
(declare-fun z$1992 () Bool)
(declare-fun z$1994 () Bool)
(declare-fun z$2001 () Bool)
(declare-fun z$2003 () Bool)
(declare-fun z$2012 () Bool)
(declare-fun z$2013 () Bool)
(declare-fun z$2021 () Bool)
(declare-fun z$2023 () Bool)
(declare-fun z$2032 () Bool)
(declare-fun z$2033 () Bool)
(declare-fun z$2043 () Bool)
(declare-fun z$2044 () Bool)
(declare-fun z$2051 () Bool)
(declare-fun z$2052 () Bool)
(declare-fun z$2063 () Bool)
(declare-fun z$2064 () Bool)
(declare-fun p$0 () Bool)
(declare-fun p$1 () Bool)
(declare-fun z$76 () Bool)
(declare-fun p$2 () Bool)
(declare-fun z$208 () Bool)
(declare-fun p$3 () Bool)
(declare-fun z$68 () Bool)
(declare-fun p$4 () Bool)
(declare-fun p$5 () Bool)
(declare-fun p$6 () Bool)
(declare-fun z$73 () Bool)
(declare-fun p$7 () Bool)
(declare-fun z$74 () Bool)
(declare-fun p$8 () Bool)
(declare-fun z$1569 () Bool)
(declare-fun p$9 () Bool)
(declare-fun z$1448 () Bool)
(declare-fun p$10 () Bool)
(assert
 (and (distinct z$n9s251 z$n1s251 z$n0s251 z$n100s251 z$n200s251 z$n120s251 z$n192s251 z$n78s251 z$n201s251 z$n137438953664s251 z$n204s251 z$n48s251 z$n14s251 z$n216s251 z$n124s251 z$n3s251 z$n79s251 z$n5s251 z$n713623846352979940529142984724747568191373313s251 z$n7s251 z$n24s251 z$n96s251 z$n30s251 z$n11983157094615116375939581176584992905283330352356145485516558024746991617s251 z$n72s251 z$n46s251 z$n194s251 z$n89202980794122492566142873090593446023921733s251 z$n6s251 z$n66s251 z$n62s251 z$n122s251 z$n55s251 z$n4s251 z$n27s251 z$n142s251 z$n2s251 z$n80s251 z$n15s251 z$n713623846352979940529142984724747568191373310s251 z$n8s251 z$n125s251 z$n65s251 z$n28s251 z$n248s251 z$n225s251 z$n74s251 z$n85s251 z$n43s251 z$n213s251 z$n203s251 z$n13s251 z$n77s251 z$n202s251 z$n35s251 z$n10s251 z$n11983157094615116375939581176584992905283330352356145485516558024746991618s251 z$n103s251 z$n33s251 z$n98s251 z$n205s251 z$n19s251 z$n11s251 z$n16s251 z$n123s251 z$n199s251 z$n21s251 z$n31s251 z$n34s251 z$n20s251 z$n32s251 z$n88s251 z$n69s251 z$n49s251 z$n206s251 z$n44s251 z$n23s251 z$n91s251 z$n12s251 z$n197s251 z$n54s251 z$n89s251 z$n53s251 z$n40s251 z$n144s251 z$n67s251 z$n117s251 z$n89202980794122492566142873090593446023921698s251 z$n56s251 z$n121s251) true))
(assert
 (let (($x170 (= a z$n1s251)))
 (= z$2 $x170)))
(assert
 (let (($x1455 (= b z$n0s251)))
 (= z$5 $x1455)))
(assert
 (= z$6 (and z$2 z$5)))
(assert
 (= z$114 (not z$6)))
(assert
 (= z$277 (and (distinct b z$n2s251) true)))
(assert
 (= z$1115 (and (distinct b z$n21s251) true)))
(assert
 (= z$757 (and (distinct b z$n8s251) true)))
(assert
 (= z$924 (and (distinct b z$n13s251) true)))
(assert
 (= z$594 (and (distinct b z$n5s251) true)))
(assert
 (= z$425 (and (distinct b z$n3s251) true)))
(assert
 (= z$195 (and (distinct b z$n1s251) true)))
(assert
 (= z$1593 (and (distinct b z$n55s251) true)))
(assert
 (= z$1361 (and (distinct b z$n34s251) true)))
(assert
 (let (($x6624 (Le_1_251_251 a z$n100s251)))
 (= z$9 $x6624)))
(assert
 (let (($x27536 (and z$277 z$1115 z$757 z$924 z$594 z$425 z$195 z$1593 z$1361 z$9)))
 (= z$1835 $x27536)))
(assert
 (= z$1838 (and z$114 z$1835)))
(assert
 (= z$1839 (not z$1838)))
(assert
 z$1839)
(assert
 (= z$51 (and (distinct a z$n1s251) true)))
(assert
 (let (($x29057 (= b z$n1s251)))
 (= z$171 $x29057)))
(assert
 (= z$313 (and (distinct a z$n2s251) true)))
(assert
 (= z$517 (and z$51 z$171 z$313)))
(assert
 (= z$518 (not z$517)))
(assert
 z$518)
(assert
 (let (($x23304 (= b z$n3s251)))
 (= z$408 $x23304)))
(assert
 (= z$636 (and (distinct a z$n5s251) true)))
(assert
 (= z$674 (and z$408 z$636)))
(assert
 (= z$675 (not z$674)))
(assert
 z$675)
(assert
 (let (($x5356 (= b z$n2s251)))
 (= z$262 $x5356)))
(assert
 (= z$465 (and (distinct a z$n3s251) true)))
(assert
 (= z$505 (and z$262 z$465)))
(assert
 (= z$506 (not z$505)))
(assert
 z$506)
(assert
 (let (($x2213 (= b z$n5s251)))
 (= z$576 $x2213)))
(assert
 (= z$801 (and (distinct a z$n8s251) true)))
(assert
 (= z$838 (and z$576 z$801)))
(assert
 (= z$840 (not z$838)))
(assert
 z$840)
(assert
 (let (($x11260 (= b z$n21s251)))
 (= z$1094 $x11260)))
(assert
 (= z$1417 (and (distinct a z$n34s251) true)))
(assert
 (= z$1460 (and z$1094 z$1417)))
(assert
 (= z$1461 (not z$1460)))
(assert
 z$1461)
(assert
 (let (($x16896 (= b z$n13s251)))
 (= z$904 $x16896)))
(assert
 (= z$1167 (and (distinct a z$n21s251) true)))
(assert
 (= z$1481 (and z$904 z$1167)))
(assert
 (= z$1483 (not z$1481)))
(assert
 z$1483)
(assert
 (let (($x37885 (= b z$n8s251)))
 (= z$738 $x37885)))
(assert
 (= z$969 (and (distinct a z$n13s251) true)))
(assert
 (= z$1006 (and z$738 z$969)))
(assert
 (= z$1008 (not z$1006)))
(assert
 z$1008)
(assert
 (let (($x15133 (= a z$n3s251)))
 (= z$260 $x15133)))
(assert
 (= z$1254 (and z$260 z$904)))
(assert
 (= z$1256 (not z$1254)))
(assert
 z$1256)
(assert
 (let (($x21186 (= a z$n2s251)))
 (= z$183 $x21186)))
(assert
 (= z$1268 (and z$183 z$904)))
(assert
 (= z$1270 (not z$1268)))
(assert
 z$1270)
(assert
 (let (($x23597 (= a z$n5s251)))
 (= z$406 $x23597)))
(assert
 (= z$1284 (and z$406 z$904)))
(assert
 (= z$1285 (not z$1284)))
(assert
 z$1285)
(assert
 (let (($x7135 (= a b)))
 (= z$118 $x7135)))
(assert
 (= z$1475 (and z$118 z$904)))
(assert
 (= z$1476 (not z$1475)))
(assert
 z$1476)
(assert
 (let (($x9340 (= b z$n34s251)))
 (= z$1339 $x9340)))
(assert
 (= z$1652 (and (distinct a z$n55s251) true)))
(assert
 (= z$1694 (and z$1339 z$1652)))
(assert
 (= z$1696 (not z$1694)))
(assert
 z$1696)
(assert
 (let (($x38843 (= b z$n55s251)))
 (= z$1570 $x38843)))
(assert
 (= z$1782 (and (distinct a z$n89s251) true)))
(assert
 (= z$1828 (and z$1570 z$1782)))
(assert
 (= z$1830 (not z$1828)))
(assert
 z$1830)
(assert
 (= z$58 (and (distinct a b) true)))
(assert
 (let (($x43898 (and z$1782 z$465 z$969 z$801 z$313 z$9 z$1167 z$1417 z$58 z$636 z$1652)))
 (= z$1877 $x43898)))
(assert
 (= z$1880 (and z$114 z$1877)))
(assert
 (= z$1881 (not z$1880)))
(assert
 z$1881)
(assert
 (let (($x14222 (= a z$n89s251)))
 (= z$1568 $x14222)))
(assert
 (= z$1889 (and z$1339 z$1568)))
(assert
 (= z$1891 (not z$1889)))
(assert
 z$1891)
(assert
 (= z$1898 (and z$408 z$1568)))
(assert
 (= z$1900 (not z$1898)))
(assert
 z$1900)
(assert
 (= z$1907 (and z$576 z$1568)))
(assert
 (= z$1909 (not z$1907)))
(assert
 z$1909)
(assert
 (= z$1918 (and z$904 z$1568)))
(assert
 (= z$1919 (not z$1918)))
(assert
 z$1919)
(assert
 (= z$1927 (and z$738 z$1568)))
(assert
 (= z$1929 (not z$1927)))
(assert
 z$1929)
(assert
 (= z$1936 (and z$1094 z$1568)))
(assert
 (= z$1938 (not z$1936)))
(assert
 z$1938)
(assert
 (= z$1945 (and z$262 z$1568)))
(assert
 (= z$1947 (not z$1945)))
(assert
 z$1947)
(assert
 (let (($x1398 (Le_1_251_251 a z$n200s251)))
 (= z$21 $x1398)))
(assert
 (= z$23 (= prop z$21)))
(assert
 z$23)
(assert
 prop)
(assert
 (let ((?x497 (Add_251_251_251 b a)))
 (= z$11 ?x497)))
(assert
 (let ((?x10915 (ite z$9 z$11 a)))
 (= z$13 ?x10915)))
(assert
 (let (($x5296 (= a$next z$13)))
 (= z$15 $x5296)))
(assert
 z$15)
(assert
 (let (($x327 (= b$next a)))
 (= z$17 $x327)))
(assert
 z$17)
(assert
 (let (($x398 (Le_1_251_251 a$next z$n200s251)))
 (= z$32 $x398)))
(assert
 (= z$34 (= prop$next z$32)))
(assert
 z$34)
(assert
 (let (($x1825 (= a$next z$n1s251)))
 (= z$41 $x1825)))
(assert
 (= z$42 (not z$32)))
(assert
 (= z$43 (and z$41 z$42)))
(assert
 (= z$45 (not z$43)))
(assert
 z$45)
(assert
 (= z$36 (not z$21)))
(assert
 (= z$40 (and z$2 z$36)))
(assert
 (= z$44 (not z$40)))
(assert
 z$44)
(assert
 (let ((?x489 (Add_251_251_251 b$next a$next)))
 (= z$69 ?x489)))
(assert
 (= z$71 (and (distinct a$next z$69) true)))
(assert
 (let (($x3758 (= b$next z$n0s251)))
 (= z$85 $x3758)))
(assert
 (= z$86 (and z$71 z$85)))
(assert
 (= z$88 (not z$86)))
(assert
 z$88)
(assert
 (= z$59 (and (distinct a z$11) true)))
(assert
 (= z$84 (and z$59 z$5)))
(assert
 (= z$87 (not z$84)))
(assert
 z$87)
(assert
 (= z$132 (and z$42 z$15 z$118 z$9)))
(assert
 (= z$133 (not z$132)))
(assert
 z$133)
(assert
 (= z$191 (and z$171 z$9 z$42 z$15)))
(assert
 (= z$192 (not z$191)))
(assert
 z$192)
(assert
 (= z$273 (and z$262 z$9 z$42 z$15)))
(assert
 (= z$274 (not z$273)))
(assert
 z$274)
(assert
 (= z$284 (and (distinct b$next z$n2s251) true)))
(assert
 (= z$309 (and z$183 z$284 z$17)))
(assert
 (= z$310 (not z$309)))
(assert
 z$310)
(assert
 (= z$319 (and (distinct a$next z$n2s251) true)))
(assert
 (= z$336 (and z$2 z$319 z$171 z$15)))
(assert
 (= z$337 (not z$336)))
(assert
 z$337)
(assert
 (= z$421 (and z$408 z$9 z$42 z$15)))
(assert
 (= z$422 (not z$421)))
(assert
 z$422)
(assert
 (= z$432 (and (distinct b$next z$n3s251) true)))
(assert
 (= z$461 (and z$260 z$432 z$17)))
(assert
 (= z$462 (not z$461)))
(assert
 z$462)
(assert
 (= z$468 (and (distinct a$next z$n3s251) true)))
(assert
 (= z$489 (and z$468 z$183 z$171 z$15)))
(assert
 (= z$490 (not z$489)))
(assert
 z$490)
(assert
 (= z$590 (and z$576 z$9 z$42 z$15)))
(assert
 (= z$591 (not z$590)))
(assert
 z$591)
(assert
 (= z$601 (and (distinct b$next z$n5s251) true)))
(assert
 (= z$632 (and z$406 z$601 z$17)))
(assert
 (= z$633 (not z$632)))
(assert
 z$633)
(assert
 (= z$639 (and (distinct a$next z$n5s251) true)))
(assert
 (= z$658 (and z$639 z$262 z$260 z$15)))
(assert
 (= z$659 (not z$658)))
(assert
 z$659)
(assert
 (= z$753 (and z$738 z$9 z$42 z$15)))
(assert
 (= z$754 (not z$753)))
(assert
 z$754)
(assert
 (let (($x27298 (= a z$n8s251)))
 (= z$574 $x27298)))
(assert
 (= z$764 (and (distinct b$next z$n8s251) true)))
(assert
 (= z$797 (and z$574 z$764 z$17)))
(assert
 (= z$798 (not z$797)))
(assert
 z$798)
(assert
 (= z$804 (and (distinct a$next z$n8s251) true)))
(assert
 (= z$824 (and z$804 z$408 z$406 z$15)))
(assert
 (= z$825 (not z$824)))
(assert
 z$825)
(assert
 (= z$920 (and z$904 z$9 z$42 z$15)))
(assert
 (= z$921 (not z$920)))
(assert
 z$921)
(assert
 (let (($x32702 (= a z$n13s251)))
 (= z$736 $x32702)))
(assert
 (= z$931 (and (distinct b$next z$n13s251) true)))
(assert
 (= z$965 (and z$736 z$931 z$17)))
(assert
 (= z$966 (not z$965)))
(assert
 z$966)
(assert
 (= z$972 (and (distinct a$next z$n13s251) true)))
(assert
 (= z$992 (and z$972 z$576 z$574 z$15)))
(assert
 (= z$993 (not z$992)))
(assert
 z$993)
(assert
 (= z$1111 (and z$1094 z$9 z$42 z$15)))
(assert
 (= z$1112 (not z$1111)))
(assert
 z$1112)
(assert
 (let (($x24302 (= a z$n21s251)))
 (= z$902 $x24302)))
(assert
 (= z$1122 (and (distinct b$next z$n21s251) true)))
(assert
 (= z$1163 (and z$902 z$1122 z$17)))
(assert
 (= z$1164 (not z$1163)))
(assert
 z$1164)
(assert
 (= z$1170 (and (distinct a$next z$n21s251) true)))
(assert
 (= z$1193 (and z$1170 z$738 z$736 z$15)))
(assert
 (= z$1194 (not z$1193)))
(assert
 z$1194)
(assert
 (= z$1357 (and z$1339 z$9 z$42 z$15)))
(assert
 (= z$1358 (not z$1357)))
(assert
 z$1358)
(assert
 (let (($x12417 (= a z$n34s251)))
 (= z$1092 $x12417)))
(assert
 (= z$1368 (and (distinct b$next z$n34s251) true)))
(assert
 (= z$1413 (and z$1092 z$1368 z$17)))
(assert
 (= z$1414 (not z$1413)))
(assert
 z$1414)
(assert
 (= z$1420 (and (distinct a$next z$n34s251) true)))
(assert
 (= z$1444 (and z$1420 z$904 z$902 z$15)))
(assert
 (= z$1445 (not z$1444)))
(assert
 z$1445)
(assert
 (= z$1589 (and z$1570 z$9 z$42 z$15)))
(assert
 (= z$1590 (not z$1589)))
(assert
 z$1590)
(assert
 (let (($x13225 (= a z$n55s251)))
 (= z$1337 $x13225)))
(assert
 (= z$1600 (and (distinct b$next z$n55s251) true)))
(assert
 (= z$1648 (and z$1337 z$1600 z$17)))
(assert
 (= z$1649 (not z$1648)))
(assert
 z$1649)
(assert
 (= z$1655 (and (distinct a$next z$n55s251) true)))
(assert
 (= z$1680 (and z$1655 z$1094 z$1092 z$15)))
(assert
 (= z$1681 (not z$1680)))
(assert
 z$1681)
(assert
 (let (($x10899 (Le_1_251_251 a$next z$n100s251)))
 (= z$66 $x10899)))
(assert
 (= z$1778 (and z$1568 z$1570 z$66 z$15)))
(assert
 (= z$1779 (not z$1778)))
(assert
 z$1779)
(assert
 (= z$1790 (and (distinct a$next z$n89s251) true)))
(assert
 (= z$1814 (and z$1790 z$1339 z$1337 z$15)))
(assert
 (= z$1815 (not z$1814)))
(assert
 z$1815)
(assert
 (= z$1992 (and z$260 z$1339)))
(assert
 (= z$1994 (not z$1992)))
(assert
 z$1994)
(assert
 (= z$2001 (and z$260 z$1570)))
(assert
 (= z$2003 (not z$2001)))
(assert
 z$2003)
(assert
 (= z$2012 (and z$9 z$118 z$408)))
(assert
 (= z$2013 (not z$2012)))
(assert
 z$2013)
(assert
 (= z$2021 (and z$260 z$576)))
(assert
 (= z$2023 (not z$2021)))
(assert
 z$2023)
(assert
 (= z$2032 (and z$260 z$738)))
(assert
 (= z$2033 (not z$2032)))
(assert
 z$2033)
(assert
 (= z$2043 (and z$260 z$1094)))
(assert
 (= z$2044 (not z$2043)))
(assert
 z$2044)
(assert
 (= z$2051 (and z$58 z$408 z$636)))
(assert
 (= z$2052 (not z$2051)))
(assert
 z$2052)
(assert
 (= z$2063 (and z$9 z$118 z$1339)))
(assert
 (= z$2064 (not z$2063)))
(assert
 z$2064)
(assert
 (let (($x398 (Le_1_251_251 a$next z$n200s251)))
 (let (($x3794 (= z$32 $x398)))
 (=> p$0 $x3794))))
(assert
 (=> p$0 z$32))
(assert
 (let ((?x489 (Add_251_251_251 b$next a$next)))
 (let (($x747 (= z$69 ?x489)))
 (=> p$1 $x747))))
(assert
 (let (($x2028 (= z$76 (and (distinct z$69 z$n200s251) true))))
 (=> p$1 $x2028)))
(assert
 (=> p$1 z$76))
(assert
 (let ((?x489 (Add_251_251_251 b$next a$next)))
 (let (($x747 (= z$69 ?x489)))
 (=> p$2 $x747))))
(assert
 (=> p$2 (= z$208 (and (distinct z$69 z$n1s251) true))))
(assert
 (=> p$2 z$208))
(assert
 (let (($x10899 (Le_1_251_251 a$next z$n100s251)))
 (let (($x10728 (= z$66 $x10899)))
 (=> p$3 $x10728))))
(assert
 (=> p$3 z$66))
(assert
 (let (($x1709 (= z$68 (and (distinct a$next b$next) true))))
 (=> p$4 $x1709)))
(assert
 (=> p$4 z$68))
(assert
 (let ((?x489 (Add_251_251_251 b$next a$next)))
 (let (($x747 (= z$69 ?x489)))
 (=> p$5 $x747))))
(assert
 (let (($x1419 (= z$71 (and (distinct a$next z$69) true))))
 (=> p$5 $x1419)))
(assert
 (=> p$5 z$71))
(assert
 (let ((?x489 (Add_251_251_251 b$next a$next)))
 (let (($x747 (= z$69 ?x489)))
 (=> p$6 $x747))))
(assert
 (let (($x1585 (= z$73 (and (distinct z$69 z$n100s251) true))))
 (=> p$6 $x1585)))
(assert
 (=> p$6 z$73))
(assert
 (let ((?x489 (Add_251_251_251 b$next a$next)))
 (let (($x747 (= z$69 ?x489)))
 (=> p$7 $x747))))
(assert
 (let (($x4601 (= z$74 (and (distinct b$next z$69) true))))
 (=> p$7 $x4601)))
(assert
 (=> p$7 z$74))
(assert
 (let (($x10899 (Le_1_251_251 a$next z$n100s251)))
 (let (($x10728 (= z$66 $x10899)))
 (=> p$8 $x10728))))
(assert
 (=> p$8 z$66))
(assert
 (=> p$9 (= z$1569 (= b$next z$n55s251))))
(assert
 (=> p$9 z$1569))
(assert
 (=> p$10 (= z$1448 (= a$next z$n34s251))))
(assert
 (=> p$10 z$1448))
(check-sat)
(assert p$0)
(assert p$1)
(assert p$2)
(assert p$3)
(assert p$4)
(assert p$5)
(assert p$6)
(assert p$7)
(assert p$8)
(assert p$9)
(assert p$10)
(set-info :status unsat)
(check-sat)
(exit)
