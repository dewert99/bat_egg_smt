(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: h_FIFO
query-maker: "Z3"
query-time: 12.072000 ms
query-class: abstract
query-category: assume
query-type: mus_core
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

; 
(set-info :status sat)
(declare-sort utt3 0)
(declare-sort utt4 0)
(declare-sort utt32 0)
(declare-sort utt28 0)
(declare-sort utt31 0)
(declare-fun z$n7s3 () utt3)
(declare-fun z$n5s3 () utt3)
(declare-fun z$n6s3 () utt3)
(declare-fun z$n1s3 () utt3)
(declare-fun z$n2s3 () utt3)
(declare-fun z$n4s3 () utt3)
(declare-fun z$n3s3 () utt3)
(declare-fun z$n0s3 () utt3)
(declare-fun z$n7s4 () utt4)
(declare-fun z$n10s4 () utt4)
(declare-fun z$n11s4 () utt4)
(declare-fun z$n5s4 () utt4)
(declare-fun z$n6s4 () utt4)
(declare-fun z$n3s4 () utt4)
(declare-fun z$n2s4 () utt4)
(declare-fun z$n8s4 () utt4)
(declare-fun z$n9s4 () utt4)
(declare-fun z$n1s4 () utt4)
(declare-fun z$n4s4 () utt4)
(declare-fun z$n12s4 () utt4)
(declare-fun z$n14s4 () utt4)
(declare-fun z$n13s4 () utt4)
(declare-fun z$n15s4 () utt4)
(declare-fun z$n0s4 () utt4)
(declare-fun z$n128s32 () utt32)
(declare-fun z$n1939603455s32 () utt32)
(declare-fun z$n2147483650s32 () utt32)
(declare-fun z$n97931009s32 () utt32)
(declare-fun z$n4087087103s32 () utt32)
(declare-fun z$n207880192s32 () utt32)
(declare-fun z$n2147483648s32 () utt32)
(declare-fun z$n3319156481s32 () utt32)
(declare-fun z$n4294967294s32 () utt32)
(declare-fun z$n8s32 () utt32)
(declare-fun z$n13s32 () utt32)
(declare-fun z$n11s32 () utt32)
(declare-fun z$n4294967295s32 () utt32)
(declare-fun z$n6s32 () utt32)
(declare-fun z$n5s32 () utt32)
(declare-fun z$n7s32 () utt32)
(declare-fun z$n15s32 () utt32)
(declare-fun z$n16s32 () utt32)
(declare-fun z$n2s32 () utt32)
(declare-fun z$n9s32 () utt32)
(declare-fun z$n14s32 () utt32)
(declare-fun z$n3s32 () utt32)
(declare-fun z$n12s32 () utt32)
(declare-fun z$n0s32 () utt32)
(declare-fun z$n4s32 () utt32)
(declare-fun z$n1s32 () utt32)
(declare-fun rb.head () utt4)
(declare-fun rb.tail () utt4)
(declare-fun sr.tail () utt4)
(declare-fun |rb.mem[0]| () utt4)
(declare-fun |sr.mem[3]| () utt4)
(declare-fun Concat_32_4_28 (utt4 utt28) utt32)
(declare-fun z$n0s28 () utt28)
(declare-fun z$43 () utt32)
(declare-fun Add_32_32_32 (utt32 utt32) utt32)
(declare-fun z$46 () utt32)
(declare-fun z$301 () utt32)
(declare-fun z$70 () utt4)
(declare-fun z$96 () utt4)
(declare-fun dataIn () utt4)
(declare-fun z$106 () utt4)
(declare-fun |rb.mem[1]| () utt4)
(declare-fun Concat_4_1_1_1_1 (Bool Bool Bool Bool) utt4)
(declare-fun z$186 () utt4)
(declare-fun |rb.mem[3]| () utt4)
(declare-fun z$248 () utt4)
(declare-fun z$156 () utt4)
(declare-fun |sr.mem[0]| () utt4)
(declare-fun |sr.mem[1]| () utt4)
(declare-fun |sr.mem[4]| () utt4)
(declare-fun z$673 () utt32)
(declare-fun Extract_4_3_0_32 (utt32) utt4)
(declare-fun z$2147 () utt4)
(declare-fun |rb.mem[2]| () utt4)
(declare-fun |rb.mem[4]| () utt4)
(declare-fun |sr.mem[2]| () utt4)
(declare-fun z$311 () utt32)
(declare-fun z$338 () utt32)
(declare-fun Extract_3_2_0_4 (utt4) utt3)
(declare-fun z$389 () utt3)
(declare-fun z$397 () utt4)
(declare-fun z$403 () utt4)
(declare-fun z$405 () utt4)
(declare-fun z$407 () utt4)
(declare-fun s$43 () utt3)
(declare-fun s$41 () utt4)
(declare-fun s$42 () utt4)
(declare-fun z$418 () utt4)
(declare-fun s$40 () utt4)
(declare-fun z$421 () utt4)
(declare-fun z$423 () utt4)
(declare-fun z$425 () utt4)
(declare-fun z$427 () utt4)
(declare-fun z$429 () utt4)
(declare-fun z$431 () utt4)
(declare-fun Concat_32_1_31 (Bool utt31) utt32)
(declare-fun z$n0s31 () utt31)
(declare-fun z$439 () utt32)
(declare-fun |rb.mem[0]$next| () utt4)
(declare-fun |rb.mem[1]$next| () utt4)
(declare-fun z$218 () utt4)
(declare-fun |rb.mem[2]$next| () utt4)
(declare-fun z$48 () utt4)
(declare-fun z$50 () utt4)
(declare-fun z$52 () utt4)
(declare-fun z$54 () utt4)
(declare-fun rb.tail$next () utt4)
(declare-fun z$303 () utt32)
(declare-fun z$305 () utt4)
(declare-fun z$307 () utt4)
(declare-fun rb.head$next () utt4)
(declare-fun z$340 () utt4)
(declare-fun z$342 () utt4)
(declare-fun z$344 () utt4)
(declare-fun Sub_32_32_32 (utt32 utt32) utt32)
(declare-fun z$346 () utt32)
(declare-fun z$348 () utt4)
(declare-fun z$350 () utt4)
(declare-fun z$352 () utt4)
(declare-fun z$354 () utt4)
(declare-fun z$356 () utt4)
(declare-fun z$358 () utt4)
(declare-fun z$360 () utt4)
(declare-fun sr.tail$next () utt4)
(declare-fun z$364 () utt4)
(declare-fun |sr.mem[0]$next| () utt4)
(declare-fun z$368 () utt4)
(declare-fun |sr.mem[1]$next| () utt4)
(declare-fun z$372 () utt4)
(declare-fun |sr.mem[2]$next| () utt4)
(declare-fun z$376 () utt4)
(declare-fun |sr.mem[3]$next| () utt4)
(declare-fun z$456 () utt32)
(declare-fun z$467 () utt3)
(declare-fun |sr.mem[4]$next| () utt4)
(declare-fun z$473 () utt4)
(declare-fun z$477 () utt4)
(declare-fun z$479 () utt4)
(declare-fun z$481 () utt4)
(declare-fun s$43$next () utt3)
(declare-fun s$41$next () utt4)
(declare-fun s$42$next () utt4)
(declare-fun z$489 () utt4)
(declare-fun |rb.mem[4]$next| () utt4)
(declare-fun s$40$next () utt4)
(declare-fun z$491 () utt4)
(declare-fun z$493 () utt4)
(declare-fun |rb.mem[3]$next| () utt4)
(declare-fun z$495 () utt4)
(declare-fun z$497 () utt4)
(declare-fun z$499 () utt4)
(declare-fun z$501 () utt4)
(declare-fun z$508 () utt32)
(declare-fun z$714 () utt4)
(declare-fun z$732 () utt4)
(declare-fun dataIn$next () utt4)
(declare-fun z$739 () utt4)
(declare-fun z$781 () utt4)
(declare-fun z$57 () utt3)
(declare-fun Extract_3_2_0_32 (utt32) utt3)
(declare-fun z$63 () utt3)
(declare-fun z$64 () utt3)
(declare-fun z$65 () utt3)
(declare-fun z$66 () utt3)
(declare-fun z$56 () utt3)
(declare-fun z$787 () utt32)
(declare-fun z$882 () utt32)
(declare-fun z$380 () utt4)
(declare-fun z$785 () utt32)
(declare-fun z$885 () utt32)
(declare-fun z$1136 () utt4)
(declare-fun z$2182 () utt32)
(declare-fun z$2911 () utt4)
(declare-fun z$880 () utt32)
(declare-fun z$1819 () utt4)
(declare-fun z$32 () Bool)
(declare-fun sr.empty () Bool)
(declare-fun z$319 () Bool)
(declare-fun z$1331 () Bool)
(declare-fun z$1332 () Bool)
(declare-fun z$685 () Bool)
(declare-fun z$1410 () Bool)
(declare-fun z$1434 () Bool)
(declare-fun z$1447 () Bool)
(declare-fun z$1449 () Bool)
(declare-fun z$1465 () Bool)
(declare-fun z$911 () Bool)
(declare-fun z$1348 () Bool)
(declare-fun z$1567 () Bool)
(declare-fun z$1570 () Bool)
(declare-fun z$1334 () Bool)
(declare-fun z$1599 () Bool)
(declare-fun z$1600 () Bool)
(declare-fun Extract_1_2_2_4 (utt4) Bool)
(declare-fun z$86 () Bool)
(declare-fun z$1610 () Bool)
(declare-fun z$1611 () Bool)
(declare-fun z$1305 () Bool)
(declare-fun z$1453 () Bool)
(declare-fun z$1619 () Bool)
(declare-fun z$1620 () Bool)
(declare-fun z$1435 () Bool)
(declare-fun z$1631 () Bool)
(declare-fun z$1632 () Bool)
(declare-fun Extract_1_1_1_4 (utt4) Bool)
(declare-fun z$80 () Bool)
(declare-fun rb.empty () Bool)
(declare-fun z$1935 () Bool)
(declare-fun z$1936 () Bool)
(declare-fun z$33 () Bool)
(declare-fun z$34 () Bool)
(declare-fun z$36 () Bool)
(declare-fun push_ () Bool)
(declare-fun z$37 () Bool)
(declare-fun Extract_1_0_0_4 (utt4) Bool)
(declare-fun z$73 () Bool)
(declare-fun z$76 () Bool)
(declare-fun z$72 () Bool)
(declare-fun z$82 () Bool)
(declare-fun z$79 () Bool)
(declare-fun z$84 () Bool)
(declare-fun z$88 () Bool)
(declare-fun z$85 () Bool)
(declare-fun z$90 () Bool)
(declare-fun z$91 () Bool)
(declare-fun z$160 () Bool)
(declare-fun z$101 () Bool)
(declare-fun z$98 () Bool)
(declare-fun z$162 () Bool)
(declare-fun z$109 () Bool)
(declare-fun z$110 () Bool)
(declare-fun z$108 () Bool)
(declare-fun z$164 () Bool)
(declare-fun z$166 () Bool)
(declare-fun z$116 () Bool)
(declare-fun z$168 () Bool)
(declare-fun z$122 () Bool)
(declare-fun z$123 () Bool)
(declare-fun z$121 () Bool)
(declare-fun z$170 () Bool)
(declare-fun z$172 () Bool)
(declare-fun z$129 () Bool)
(declare-fun z$174 () Bool)
(declare-fun z$135 () Bool)
(declare-fun z$136 () Bool)
(declare-fun z$134 () Bool)
(declare-fun z$176 () Bool)
(declare-fun z$178 () Bool)
(declare-fun Extract_1_3_3_4 (utt4) Bool)
(declare-fun z$142 () Bool)
(declare-fun z$180 () Bool)
(declare-fun z$149 () Bool)
(declare-fun z$150 () Bool)
(declare-fun z$148 () Bool)
(declare-fun z$182 () Bool)
(declare-fun z$184 () Bool)
(declare-fun z$1942 () Bool)
(declare-fun z$190 () Bool)
(declare-fun z$222 () Bool)
(declare-fun z$224 () Bool)
(declare-fun z$226 () Bool)
(declare-fun z$228 () Bool)
(declare-fun z$230 () Bool)
(declare-fun z$232 () Bool)
(declare-fun z$234 () Bool)
(declare-fun z$236 () Bool)
(declare-fun z$238 () Bool)
(declare-fun z$240 () Bool)
(declare-fun z$242 () Bool)
(declare-fun z$244 () Bool)
(declare-fun z$246 () Bool)
(declare-fun z$1944 () Bool)
(declare-fun z$1955 () Bool)
(declare-fun z$1956 () Bool)
(declare-fun z$1964 () Bool)
(declare-fun z$1973 () Bool)
(declare-fun z$1974 () Bool)
(declare-fun z$2025 () Bool)
(declare-fun z$2026 () Bool)
(declare-fun z$591 () Bool)
(declare-fun z$594 () Bool)
(declare-fun z$597 () Bool)
(declare-fun z$600 () Bool)
(declare-fun z$78 () Bool)
(declare-fun z$93 () Bool)
(declare-fun z$103 () Bool)
(declare-fun z$112 () Bool)
(declare-fun z$114 () Bool)
(declare-fun z$119 () Bool)
(declare-fun z$125 () Bool)
(declare-fun z$127 () Bool)
(declare-fun z$132 () Bool)
(declare-fun z$138 () Bool)
(declare-fun z$140 () Bool)
(declare-fun z$146 () Bool)
(declare-fun z$152 () Bool)
(declare-fun z$154 () Bool)
(declare-fun z$1436 () Bool)
(declare-fun z$1634 () Bool)
(declare-fun z$2036 () Bool)
(declare-fun z$2037 () Bool)
(declare-fun z$2089 () Bool)
(declare-fun z$2101 () Bool)
(declare-fun z$2102 () Bool)
(declare-fun z$1920 () Bool)
(declare-fun z$2140 () Bool)
(declare-fun z$2142 () Bool)
(declare-fun z$2162 () Bool)
(declare-fun z$26 () Bool)
(declare-fun z$2198 () Bool)
(declare-fun z$2205 () Bool)
(declare-fun z$2207 () Bool)
(declare-fun z$1107 () Bool)
(declare-fun z$1622 () Bool)
(declare-fun z$2152 () Bool)
(declare-fun z$2217 () Bool)
(declare-fun z$2219 () Bool)
(declare-fun z$1048 () Bool)
(declare-fun z$2229 () Bool)
(declare-fun z$2230 () Bool)
(declare-fun z$15 () Bool)
(declare-fun z$593 () Bool)
(declare-fun z$596 () Bool)
(declare-fun z$599 () Bool)
(declare-fun z$602 () Bool)
(declare-fun z$2278 () Bool)
(declare-fun z$2279 () Bool)
(declare-fun z$613 () Bool)
(declare-fun z$1788 () Bool)
(declare-fun z$612 () Bool)
(declare-fun z$614 () Bool)
(declare-fun z$611 () Bool)
(declare-fun z$843 () Bool)
(declare-fun z$2357 () Bool)
(declare-fun z$3 () Bool)
(declare-fun z$5 () Bool)
(declare-fun z$7 () Bool)
(declare-fun z$9 () Bool)
(declare-fun z$11 () Bool)
(declare-fun z$13 () Bool)
(declare-fun z$18 () Bool)
(declare-fun z$20 () Bool)
(declare-fun z$22 () Bool)
(declare-fun z$24 () Bool)
(declare-fun z$28 () Bool)
(declare-fun z$29 () Bool)
(declare-fun z$2359 () Bool)
(declare-fun z$2360 () Bool)
(declare-fun z$2361 () Bool)
(declare-fun z$1306 () Bool)
(declare-fun z$1341 () Bool)
(declare-fun z$2566 () Bool)
(declare-fun z$2569 () Bool)
(declare-fun z$2570 () Bool)
(declare-fun z$1344 () Bool)
(declare-fun z$2697 () Bool)
(declare-fun z$2698 () Bool)
(declare-fun z$1451 () Bool)
(declare-fun z$2707 () Bool)
(declare-fun z$2708 () Bool)
(declare-fun z$2717 () Bool)
(declare-fun z$2718 () Bool)
(declare-fun z$2748 () Bool)
(declare-fun z$2749 () Bool)
(declare-fun z$2755 () Bool)
(declare-fun z$2757 () Bool)
(declare-fun z$2764 () Bool)
(declare-fun z$2765 () Bool)
(declare-fun z$2773 () Bool)
(declare-fun z$2774 () Bool)
(declare-fun z$847 () Bool)
(declare-fun z$2808 () Bool)
(declare-fun z$2809 () Bool)
(declare-fun z$2821 () Bool)
(declare-fun z$2822 () Bool)
(declare-fun z$2784 () Bool)
(declare-fun z$2832 () Bool)
(declare-fun z$2833 () Bool)
(declare-fun z$557 () Bool)
(declare-fun z$1345 () Bool)
(declare-fun z$2846 () Bool)
(declare-fun z$2847 () Bool)
(declare-fun z$1304 () Bool)
(declare-fun z$2150 () Bool)
(declare-fun z$2861 () Bool)
(declare-fun z$2862 () Bool)
(declare-fun z$684 () Bool)
(declare-fun z$1572 () Bool)
(declare-fun z$2931 () Bool)
(declare-fun z$2932 () Bool)
(declare-fun z$2943 () Bool)
(declare-fun z$2944 () Bool)
(declare-fun z$2954 () Bool)
(declare-fun z$2955 () Bool)
(declare-fun z$1560 () Bool)
(declare-fun z$2963 () Bool)
(declare-fun z$2965 () Bool)
(declare-fun z$1308 () Bool)
(declare-fun z$2972 () Bool)
(declare-fun z$2974 () Bool)
(declare-fun z$821 () Bool)
(declare-fun z$3005 () Bool)
(declare-fun z$3006 () Bool)
(declare-fun z$3017 () Bool)
(declare-fun z$3018 () Bool)
(declare-fun z$3026 () Bool)
(declare-fun z$3027 () Bool)
(declare-fun z$2197 () Bool)
(declare-fun z$3042 () Bool)
(declare-fun z$3043 () Bool)
(declare-fun z$3049 () Bool)
(declare-fun z$3051 () Bool)
(declare-fun z$3060 () Bool)
(declare-fun z$3061 () Bool)
(declare-fun z$1168 () Bool)
(declare-fun z$3071 () Bool)
(declare-fun z$3072 () Bool)
(declare-fun z$3081 () Bool)
(declare-fun z$3083 () Bool)
(declare-fun z$3094 () Bool)
(declare-fun z$3095 () Bool)
(declare-fun z$3106 () Bool)
(declare-fun z$3107 () Bool)
(declare-fun z$3114 () Bool)
(declare-fun z$3115 () Bool)
(declare-fun z$549 () Bool)
(declare-fun z$3126 () Bool)
(declare-fun z$3127 () Bool)
(declare-fun z$3133 () Bool)
(declare-fun z$3141 () Bool)
(declare-fun z$3142 () Bool)
(declare-fun z$1732 () Bool)
(declare-fun z$3401 () Bool)
(declare-fun z$3402 () Bool)
(declare-fun z$3460 () Bool)
(declare-fun z$3462 () Bool)
(declare-fun z$3470 () Bool)
(declare-fun z$3471 () Bool)
(declare-fun z$603 () Bool)
(declare-fun z$2090 () Bool)
(declare-fun z$2636 () Bool)
(declare-fun z$3695 () Bool)
(declare-fun z$3696 () Bool)
(declare-fun z$3813 () Bool)
(declare-fun z$3814 () Bool)
(declare-fun z$3843 () Bool)
(declare-fun z$3844 () Bool)
(declare-fun z$3899 () Bool)
(declare-fun z$3901 () Bool)
(declare-fun z$3928 () Bool)
(declare-fun z$3929 () Bool)
(declare-fun z$604 () Bool)
(declare-fun z$605 () Bool)
(declare-fun z$606 () Bool)
(declare-fun z$3976 () Bool)
(declare-fun z$3977 () Bool)
(declare-fun z$4046 () Bool)
(declare-fun z$4047 () Bool)
(declare-fun z$2851 () Bool)
(declare-fun z$4081 () Bool)
(declare-fun z$4082 () Bool)
(declare-fun z$4093 () Bool)
(declare-fun z$4094 () Bool)
(declare-fun z$4104 () Bool)
(declare-fun z$4105 () Bool)
(declare-fun z$323 () Bool)
(declare-fun z$4115 () Bool)
(declare-fun z$4116 () Bool)
(declare-fun z$4173 () Bool)
(declare-fun z$4174 () Bool)
(declare-fun z$4182 () Bool)
(declare-fun z$4184 () Bool)
(declare-fun z$4191 () Bool)
(declare-fun z$4193 () Bool)
(declare-fun z$4304 () Bool)
(declare-fun z$4305 () Bool)
(declare-fun z$4313 () Bool)
(declare-fun z$4315 () Bool)
(declare-fun z$585 () Bool)
(declare-fun z$587 () Bool)
(declare-fun z$4433 () Bool)
(declare-fun z$4434 () Bool)
(declare-fun z$1354 () Bool)
(declare-fun z$4464 () Bool)
(declare-fun z$4466 () Bool)
(declare-fun z$4553 () Bool)
(declare-fun z$4554 () Bool)
(declare-fun z$4566 () Bool)
(declare-fun z$4567 () Bool)
(declare-fun z$314 () Bool)
(declare-fun z$385 () Bool)
(declare-fun z$386 () Bool)
(declare-fun z$387 () Bool)
(declare-fun z$392 () Bool)
(declare-fun z$394 () Bool)
(declare-fun z$395 () Bool)
(declare-fun z$400 () Bool)
(declare-fun z$402 () Bool)
(declare-fun Extract_1_2_2_3 (utt3) Bool)
(declare-fun z$410 () Bool)
(declare-fun Extract_1_1_1_3 (utt3) Bool)
(declare-fun z$412 () Bool)
(declare-fun Extract_1_0_0_3 (utt3) Bool)
(declare-fun z$414 () Bool)
(declare-fun z$433 () Bool)
(declare-fun z$434 () Bool)
(declare-fun z$436 () Bool)
(declare-fun z$441 () Bool)
(declare-fun prop () Bool)
(declare-fun z$442 () Bool)
(declare-fun z$158 () Bool)
(declare-fun z$188 () Bool)
(declare-fun z$192 () Bool)
(declare-fun z$194 () Bool)
(declare-fun z$196 () Bool)
(declare-fun z$198 () Bool)
(declare-fun z$200 () Bool)
(declare-fun z$202 () Bool)
(declare-fun z$204 () Bool)
(declare-fun z$206 () Bool)
(declare-fun z$208 () Bool)
(declare-fun z$210 () Bool)
(declare-fun z$212 () Bool)
(declare-fun z$214 () Bool)
(declare-fun z$216 () Bool)
(declare-fun z$220 () Bool)
(declare-fun pop_ () Bool)
(declare-fun z$40 () Bool)
(declare-fun z$284 () Bool)
(declare-fun z$285 () Bool)
(declare-fun z$287 () Bool)
(declare-fun z$289 () Bool)
(declare-fun z$291 () Bool)
(declare-fun z$293 () Bool)
(declare-fun z$295 () Bool)
(declare-fun rb.empty$next () Bool)
(declare-fun z$297 () Bool)
(declare-fun z$299 () Bool)
(declare-fun z$309 () Bool)
(declare-fun z$316 () Bool)
(declare-fun z$317 () Bool)
(declare-fun z$320 () Bool)
(declare-fun z$324 () Bool)
(declare-fun z$326 () Bool)
(declare-fun z$328 () Bool)
(declare-fun z$330 () Bool)
(declare-fun z$332 () Bool)
(declare-fun z$334 () Bool)
(declare-fun sr.empty$next () Bool)
(declare-fun z$336 () Bool)
(declare-fun z$362 () Bool)
(declare-fun z$366 () Bool)
(declare-fun z$370 () Bool)
(declare-fun z$374 () Bool)
(declare-fun z$378 () Bool)
(declare-fun z$458 () Bool)
(declare-fun z$459 () Bool)
(declare-fun z$460 () Bool)
(declare-fun z$461 () Bool)
(declare-fun z$463 () Bool)
(declare-fun z$464 () Bool)
(declare-fun z$465 () Bool)
(declare-fun z$469 () Bool)
(declare-fun z$470 () Bool)
(declare-fun z$471 () Bool)
(declare-fun z$475 () Bool)
(declare-fun z$476 () Bool)
(declare-fun z$483 () Bool)
(declare-fun z$485 () Bool)
(declare-fun z$487 () Bool)
(declare-fun z$503 () Bool)
(declare-fun z$504 () Bool)
(declare-fun z$506 () Bool)
(declare-fun z$510 () Bool)
(declare-fun prop$next () Bool)
(declare-fun z$511 () Bool)
(declare-fun z$536 () Bool)
(declare-fun z$537 () Bool)
(declare-fun z$539 () Bool)
(declare-fun z$535 () Bool)
(declare-fun z$538 () Bool)
(declare-fun z$543 () Bool)
(declare-fun z$562 () Bool)
(declare-fun z$563 () Bool)
(declare-fun z$565 () Bool)
(declare-fun z$527 () Bool)
(declare-fun z$561 () Bool)
(declare-fun z$564 () Bool)
(declare-fun z$711 () Bool)
(declare-fun push$next () Bool)
(declare-fun z$712 () Bool)
(declare-fun z$693 () Bool)
(declare-fun z$717 () Bool)
(declare-fun z$716 () Bool)
(declare-fun z$719 () Bool)
(declare-fun z$695 () Bool)
(declare-fun z$721 () Bool)
(declare-fun z$720 () Bool)
(declare-fun z$723 () Bool)
(declare-fun z$697 () Bool)
(declare-fun z$725 () Bool)
(declare-fun z$724 () Bool)
(declare-fun z$727 () Bool)
(declare-fun z$728 () Bool)
(declare-fun z$730 () Bool)
(declare-fun z$735 () Bool)
(declare-fun z$734 () Bool)
(declare-fun z$737 () Bool)
(declare-fun z$699 () Bool)
(declare-fun z$742 () Bool)
(declare-fun z$741 () Bool)
(declare-fun z$744 () Bool)
(declare-fun z$746 () Bool)
(declare-fun z$748 () Bool)
(declare-fun z$750 () Bool)
(declare-fun z$701 () Bool)
(declare-fun z$753 () Bool)
(declare-fun z$752 () Bool)
(declare-fun z$755 () Bool)
(declare-fun z$757 () Bool)
(declare-fun z$759 () Bool)
(declare-fun z$761 () Bool)
(declare-fun z$703 () Bool)
(declare-fun z$764 () Bool)
(declare-fun z$763 () Bool)
(declare-fun z$766 () Bool)
(declare-fun z$768 () Bool)
(declare-fun z$770 () Bool)
(declare-fun z$772 () Bool)
(declare-fun z$705 () Bool)
(declare-fun z$775 () Bool)
(declare-fun z$774 () Bool)
(declare-fun z$777 () Bool)
(declare-fun z$779 () Bool)
(declare-fun z$783 () Bool)
(declare-fun z$802 () Bool)
(declare-fun z$803 () Bool)
(declare-fun z$804 () Bool)
(declare-fun z$805 () Bool)
(declare-fun z$806 () Bool)
(declare-fun z$807 () Bool)
(declare-fun z$808 () Bool)
(declare-fun z$809 () Bool)
(declare-fun z$811 () Bool)
(declare-fun z$687 () Bool)
(declare-fun z$601 () Bool)
(declare-fun z$598 () Bool)
(declare-fun z$595 () Bool)
(declare-fun z$592 () Bool)
(declare-fun z$590 () Bool)
(declare-fun z$588 () Bool)
(declare-fun z$586 () Bool)
(declare-fun z$801 () Bool)
(declare-fun z$810 () Bool)
(declare-fun z$68 () Bool)
(declare-fun z$841 () Bool)
(declare-fun z$842 () Bool)
(declare-fun z$863 () Bool)
(declare-fun z$864 () Bool)
(declare-fun z$899 () Bool)
(declare-fun z$888 () Bool)
(declare-fun z$900 () Bool)
(declare-fun z$902 () Bool)
(declare-fun z$877 () Bool)
(declare-fun z$898 () Bool)
(declare-fun z$901 () Bool)
(declare-fun z$914 () Bool)
(declare-fun z$906 () Bool)
(declare-fun z$924 () Bool)
(declare-fun z$925 () Bool)
(declare-fun z$524 () Bool)
(declare-fun z$525 () Bool)
(declare-fun z$983 () Bool)
(declare-fun z$984 () Bool)
(declare-fun z$986 () Bool)
(declare-fun z$644 () Bool)
(declare-fun z$645 () Bool)
(declare-fun z$677 () Bool)
(declare-fun z$982 () Bool)
(declare-fun z$985 () Bool)
(declare-fun z$948 () Bool)
(declare-fun z$1011 () Bool)
(declare-fun z$1012 () Bool)
(declare-fun z$1014 () Bool)
(declare-fun z$276 () Bool)
(declare-fun z$1010 () Bool)
(declare-fun z$1013 () Bool)
(declare-fun z$1037 () Bool)
(declare-fun z$1038 () Bool)
(declare-fun z$1040 () Bool)
(declare-fun z$1036 () Bool)
(declare-fun z$1039 () Bool)
(declare-fun z$1098 () Bool)
(declare-fun z$1099 () Bool)
(declare-fun z$1101 () Bool)
(declare-fun z$1097 () Bool)
(declare-fun z$1100 () Bool)
(declare-fun z$1144 () Bool)
(declare-fun z$1146 () Bool)
(declare-fun z$1143 () Bool)
(declare-fun z$1145 () Bool)
(declare-fun z$819 () Bool)
(declare-fun z$1059 () Bool)
(declare-fun z$1150 () Bool)
(declare-fun z$1157 () Bool)
(declare-fun z$1158 () Bool)
(declare-fun z$813 () Bool)
(declare-fun z$1181 () Bool)
(declare-fun z$1183 () Bool)
(declare-fun z$1180 () Bool)
(declare-fun z$1182 () Bool)
(declare-fun z$650 () Bool)
(declare-fun z$1199 () Bool)
(declare-fun z$1200 () Bool)
(declare-fun z$1220 () Bool)
(declare-fun z$1221 () Bool)
(declare-fun z$1223 () Bool)
(declare-fun z$1210 () Bool)
(declare-fun z$1219 () Bool)
(declare-fun z$1222 () Bool)
(declare-fun z$1243 () Bool)
(declare-fun z$1244 () Bool)
(declare-fun z$1246 () Bool)
(declare-fun z$1233 () Bool)
(declare-fun z$1242 () Bool)
(declare-fun z$1245 () Bool)
(declare-fun z$1265 () Bool)
(declare-fun z$1266 () Bool)
(declare-fun z$1268 () Bool)
(declare-fun z$1256 () Bool)
(declare-fun z$1264 () Bool)
(declare-fun z$1267 () Bool)
(declare-fun z$270 () Bool)
(declare-fun z$617 () Bool)
(declare-fun z$940 () Bool)
(declare-fun z$995 () Bool)
(declare-fun z$996 () Bool)
(declare-fun z$382 () Bool)
(declare-fun z$1279 () Bool)
(declare-fun z$1280 () Bool)
(declare-fun z$1392 () Bool)
(declare-fun z$1394 () Bool)
(declare-fun z$566 () Bool)
(declare-fun z$1391 () Bool)
(declare-fun z$1393 () Bool)
(declare-fun z$630 () Bool)
(declare-fun z$1422 () Bool)
(declare-fun z$1424 () Bool)
(declare-fun z$518 () Bool)
(declare-fun z$1423 () Bool)
(declare-fun z$1427 () Bool)
(declare-fun z$915 () Bool)
(declare-fun z$1480 () Bool)
(declare-fun z$1481 () Bool)
(declare-fun z$683 () Bool)
(declare-fun z$1522 () Bool)
(declare-fun z$1523 () Bool)
(declare-fun z$1362 () Bool)
(declare-fun z$1549 () Bool)
(declare-fun z$1550 () Bool)
(declare-fun z$789 () Bool)
(declare-fun z$1582 () Bool)
(declare-fun z$1583 () Bool)
(declare-fun z$1661 () Bool)
(declare-fun z$1662 () Bool)
(declare-fun z$988 () Bool)
(declare-fun z$1702 () Bool)
(declare-fun z$1704 () Bool)
(declare-fun z$990 () Bool)
(declare-fun z$1701 () Bool)
(declare-fun z$1703 () Bool)
(declare-fun z$1744 () Bool)
(declare-fun z$1746 () Bool)
(declare-fun z$1743 () Bool)
(declare-fun z$1745 () Bool)
(declare-fun z$1775 () Bool)
(declare-fun z$1777 () Bool)
(declare-fun z$1774 () Bool)
(declare-fun z$1776 () Bool)
(declare-fun z$1754 () Bool)
(declare-fun z$1755 () Bool)
(declare-fun z$1845 () Bool)
(declare-fun z$1846 () Bool)
(declare-fun z$523 () Bool)
(declare-fun z$1248 () Bool)
(declare-fun z$1880 () Bool)
(declare-fun z$1882 () Bool)
(declare-fun z$643 () Bool)
(declare-fun z$678 () Bool)
(declare-fun z$1879 () Bool)
(declare-fun z$1881 () Bool)
(declare-fun z$1891 () Bool)
(declare-fun z$1892 () Bool)
(declare-fun z$1914 () Bool)
(declare-fun z$1915 () Bool)
(declare-fun z$1225 () Bool)
(declare-fun z$1990 () Bool)
(declare-fun z$1992 () Bool)
(declare-fun z$676 () Bool)
(declare-fun z$1989 () Bool)
(declare-fun z$1991 () Bool)
(declare-fun z$2005 () Bool)
(declare-fun z$2006 () Bool)
(declare-fun z$2050 () Bool)
(declare-fun z$2052 () Bool)
(declare-fun z$2051 () Bool)
(declare-fun z$2056 () Bool)
(declare-fun z$1270 () Bool)
(declare-fun z$2077 () Bool)
(declare-fun z$2079 () Bool)
(declare-fun z$679 () Bool)
(declare-fun z$2076 () Bool)
(declare-fun z$2078 () Bool)
(declare-fun z$2104 () Bool)
(declare-fun z$2107 () Bool)
(declare-fun z$2123 () Bool)
(declare-fun z$2124 () Bool)
(declare-fun z$622 () Bool)
(declare-fun z$2259 () Bool)
(declare-fun z$2261 () Bool)
(declare-fun z$2171 () Bool)
(declare-fun z$917 () Bool)
(declare-fun z$2260 () Bool)
(declare-fun z$2264 () Bool)
(declare-fun z$927 () Bool)
(declare-fun z$2294 () Bool)
(declare-fun z$2296 () Bool)
(declare-fun z$2295 () Bool)
(declare-fun z$2301 () Bool)
(declare-fun z$2318 () Bool)
(declare-fun z$2320 () Bool)
(declare-fun z$2317 () Bool)
(declare-fun z$2319 () Bool)
(declare-fun z$2342 () Bool)
(declare-fun z$2344 () Bool)
(declare-fun z$2341 () Bool)
(declare-fun z$2343 () Bool)
(declare-fun z$2383 () Bool)
(declare-fun z$2385 () Bool)
(declare-fun z$2382 () Bool)
(declare-fun z$2384 () Bool)
(declare-fun z$2406 () Bool)
(declare-fun z$2408 () Bool)
(declare-fun z$2407 () Bool)
(declare-fun z$2412 () Bool)
(declare-fun z$2423 () Bool)
(declare-fun z$2425 () Bool)
(declare-fun z$2422 () Bool)
(declare-fun z$2424 () Bool)
(declare-fun z$2445 () Bool)
(declare-fun z$2447 () Bool)
(declare-fun z$2444 () Bool)
(declare-fun z$2446 () Bool)
(declare-fun z$2519 () Bool)
(declare-fun z$2520 () Bool)
(declare-fun z$584 () Bool)
(declare-fun z$2557 () Bool)
(declare-fun z$2558 () Bool)
(declare-fun z$1526 () Bool)
(declare-fun z$2590 () Bool)
(declare-fun z$2592 () Bool)
(declare-fun z$2591 () Bool)
(declare-fun z$2595 () Bool)
(declare-fun z$2609 () Bool)
(declare-fun z$2611 () Bool)
(declare-fun z$2610 () Bool)
(declare-fun z$2613 () Bool)
(declare-fun z$2628 () Bool)
(declare-fun z$2630 () Bool)
(declare-fun z$2629 () Bool)
(declare-fun z$2632 () Bool)
(declare-fun z$522 () Bool)
(declare-fun z$2647 () Bool)
(declare-fun z$2649 () Bool)
(declare-fun z$640 () Bool)
(declare-fun z$2646 () Bool)
(declare-fun z$2648 () Bool)
(declare-fun z$2669 () Bool)
(declare-fun z$2670 () Bool)
(declare-fun z$2733 () Bool)
(declare-fun z$2735 () Bool)
(declare-fun z$1553 () Bool)
(declare-fun z$2734 () Bool)
(declare-fun z$2737 () Bool)
(declare-fun z$2889 () Bool)
(declare-fun z$2890 () Bool)
(declare-fun z$2917 () Bool)
(declare-fun z$2918 () Bool)
(declare-fun z$2991 () Bool)
(declare-fun z$2992 () Bool)
(declare-fun z$3166 () Bool)
(declare-fun z$3167 () Bool)
(declare-fun z$3187 () Bool)
(declare-fun z$3188 () Bool)
(declare-fun z$541 () Bool)
(declare-fun z$2267 () Bool)
(declare-fun z$3218 () Bool)
(declare-fun z$3220 () Bool)
(declare-fun z$3219 () Bool)
(declare-fun z$3224 () Bool)
(declare-fun z$1114 () Bool)
(declare-fun z$1718 () Bool)
(declare-fun z$1120 () Bool)
(declare-fun z$1719 () Bool)
(declare-fun z$1126 () Bool)
(declare-fun z$1720 () Bool)
(declare-fun z$1132 () Bool)
(declare-fun z$1733 () Bool)
(declare-fun z$3202 () Bool)
(declare-fun z$3237 () Bool)
(declare-fun z$3239 () Bool)
(declare-fun z$3236 () Bool)
(declare-fun z$3238 () Bool)
(declare-fun z$3260 () Bool)
(declare-fun z$3262 () Bool)
(declare-fun z$1110 () Bool)
(declare-fun z$1112 () Bool)
(declare-fun z$1116 () Bool)
(declare-fun z$1118 () Bool)
(declare-fun z$1122 () Bool)
(declare-fun z$1124 () Bool)
(declare-fun z$1128 () Bool)
(declare-fun z$1130 () Bool)
(declare-fun z$1134 () Bool)
(declare-fun z$1735 () Bool)
(declare-fun z$1734 () Bool)
(declare-fun z$3261 () Bool)
(declare-fun z$3273 () Bool)
(declare-fun z$1717 () Bool)
(declare-fun z$3297 () Bool)
(declare-fun z$3299 () Bool)
(declare-fun z$1723 () Bool)
(declare-fun z$3298 () Bool)
(declare-fun z$3303 () Bool)
(declare-fun z$3317 () Bool)
(declare-fun z$3318 () Bool)
(declare-fun z$2179 () Bool)
(declare-fun z$3331 () Bool)
(declare-fun z$3333 () Bool)
(declare-fun z$2187 () Bool)
(declare-fun z$3332 () Bool)
(declare-fun z$3337 () Bool)
(declare-fun z$3340 () Bool)
(declare-fun z$3355 () Bool)
(declare-fun z$3357 () Bool)
(declare-fun z$3336 () Bool)
(declare-fun z$3356 () Bool)
(declare-fun z$3360 () Bool)
(declare-fun z$3378 () Bool)
(declare-fun z$3379 () Bool)
(declare-fun z$2013 () Bool)
(declare-fun z$3412 () Bool)
(declare-fun z$3413 () Bool)
(declare-fun z$3429 () Bool)
(declare-fun z$3430 () Bool)
(declare-fun z$3446 () Bool)
(declare-fun z$3447 () Bool)
(declare-fun z$3493 () Bool)
(declare-fun z$3494 () Bool)
(declare-fun z$3509 () Bool)
(declare-fun z$3510 () Bool)
(declare-fun z$3521 () Bool)
(declare-fun z$3522 () Bool)
(declare-fun z$3547 () Bool)
(declare-fun z$3548 () Bool)
(declare-fun z$3560 () Bool)
(declare-fun z$3561 () Bool)
(declare-fun z$3586 () Bool)
(declare-fun z$3587 () Bool)
(declare-fun z$3601 () Bool)
(declare-fun z$3602 () Bool)
(declare-fun z$3630 () Bool)
(declare-fun z$3631 () Bool)
(declare-fun z$3658 () Bool)
(declare-fun z$3659 () Bool)
(declare-fun z$3684 () Bool)
(declare-fun z$3685 () Bool)
(declare-fun z$3710 () Bool)
(declare-fun z$3711 () Bool)
(declare-fun z$3725 () Bool)
(declare-fun z$3726 () Bool)
(declare-fun z$3755 () Bool)
(declare-fun z$3756 () Bool)
(declare-fun z$2015 () Bool)
(declare-fun z$3784 () Bool)
(declare-fun z$3785 () Bool)
(declare-fun z$3802 () Bool)
(declare-fun z$3803 () Bool)
(declare-fun z$3832 () Bool)
(declare-fun z$3833 () Bool)
(declare-fun z$3861 () Bool)
(declare-fun z$3862 () Bool)
(declare-fun z$3890 () Bool)
(declare-fun z$3891 () Bool)
(declare-fun z$3917 () Bool)
(declare-fun z$3918 () Bool)
(declare-fun z$3204 () Bool)
(declare-fun z$3940 () Bool)
(declare-fun z$3942 () Bool)
(declare-fun z$2059 () Bool)
(declare-fun z$3941 () Bool)
(declare-fun z$3946 () Bool)
(declare-fun z$3965 () Bool)
(declare-fun z$3966 () Bool)
(declare-fun z$4000 () Bool)
(declare-fun z$4002 () Bool)
(declare-fun z$3999 () Bool)
(declare-fun z$4001 () Bool)
(declare-fun z$1301 () Bool)
(declare-fun z$4015 () Bool)
(declare-fun z$4016 () Bool)
(declare-fun z$4034 () Bool)
(declare-fun z$4036 () Bool)
(declare-fun z$4035 () Bool)
(declare-fun z$4038 () Bool)
(declare-fun z$4065 () Bool)
(declare-fun z$4067 () Bool)
(declare-fun z$4064 () Bool)
(declare-fun z$4066 () Bool)
(declare-fun z$4133 () Bool)
(declare-fun z$4134 () Bool)
(declare-fun z$4153 () Bool)
(declare-fun z$4154 () Bool)
(declare-fun z$4211 () Bool)
(declare-fun z$4212 () Bool)
(declare-fun z$4257 () Bool)
(declare-fun z$4258 () Bool)
(declare-fun z$635 () Bool)
(declare-fun z$4277 () Bool)
(declare-fun z$4278 () Bool)
(declare-fun z$4319 () Bool)
(declare-fun z$4337 () Bool)
(declare-fun z$4339 () Bool)
(declare-fun z$4321 () Bool)
(declare-fun z$4338 () Bool)
(declare-fun z$4345 () Bool)
(declare-fun z$4363 () Bool)
(declare-fun z$4364 () Bool)
(declare-fun z$4400 () Bool)
(declare-fun z$4401 () Bool)
(declare-fun z$1369 () Bool)
(declare-fun z$4450 () Bool)
(declare-fun z$4451 () Bool)
(declare-fun z$4460 () Bool)
(declare-fun z$4478 () Bool)
(declare-fun z$4481 () Bool)
(declare-fun z$4479 () Bool)
(declare-fun z$4480 () Bool)
(declare-fun z$4484 () Bool)
(declare-fun z$4468 () Bool)
(declare-fun z$4496 () Bool)
(declare-fun z$4497 () Bool)
(declare-fun z$4515 () Bool)
(declare-fun z$4517 () Bool)
(declare-fun z$4514 () Bool)
(declare-fun z$4516 () Bool)
(declare-fun z$4538 () Bool)
(declare-fun z$4539 () Bool)
(declare-fun z$4589 () Bool)
(declare-fun z$4590 () Bool)
(declare-fun z$1561 () Bool)
(declare-fun z$4615 () Bool)
(declare-fun z$4616 () Bool)
(declare-fun z$4629 () Bool)
(declare-fun z$4630 () Bool)
(declare-fun z$2835 () Bool)
(declare-fun z$4648 () Bool)
(declare-fun z$4650 () Bool)
(declare-fun z$4660 () Bool)
(declare-fun z$4661 () Bool)
(declare-fun z$4680 () Bool)
(declare-fun z$4682 () Bool)
(declare-fun z$4679 () Bool)
(declare-fun z$4681 () Bool)
(declare-fun z$4694 () Bool)
(declare-fun z$4696 () Bool)
(declare-fun z$2913 () Bool)
(declare-fun z$4695 () Bool)
(declare-fun z$4698 () Bool)
(declare-fun z$2177 () Bool)
(declare-fun z$4717 () Bool)
(declare-fun z$4718 () Bool)
(declare-fun z$4745 () Bool)
(declare-fun z$4746 () Bool)
(declare-fun z$4755 () Bool)
(declare-fun z$4757 () Bool)
(declare-fun z$1356 () Bool)
(declare-fun z$4773 () Bool)
(declare-fun z$4774 () Bool)
(declare-fun z$1366 () Bool)
(declare-fun z$2853 () Bool)
(declare-fun z$4800 () Bool)
(declare-fun z$4802 () Bool)
(declare-fun z$1351 () Bool)
(declare-fun z$2852 () Bool)
(declare-fun z$4799 () Bool)
(declare-fun z$4801 () Bool)
(declare-fun z$1383 () Bool)
(declare-fun z$1314 () Bool)
(declare-fun z$4825 () Bool)
(declare-fun z$4827 () Bool)
(declare-fun z$1382 () Bool)
(declare-fun z$4824 () Bool)
(declare-fun z$4826 () Bool)
(declare-fun z$708 () Bool)
(declare-fun z$4849 () Bool)
(declare-fun z$4850 () Bool)
(declare-fun z$4862 () Bool)
(declare-fun z$4863 () Bool)
(declare-fun z$4880 () Bool)
(declare-fun z$4881 () Bool)
(declare-fun z$4894 () Bool)
(declare-fun z$4896 () Bool)
(declare-fun z$1365 () Bool)
(declare-fun z$4454 () Bool)
(declare-fun z$4910 () Bool)
(declare-fun z$4911 () Bool)
(declare-fun z$1350 () Bool)
(declare-fun z$4925 () Bool)
(declare-fun z$4926 () Bool)
(declare-fun z$4928 () Bool)
(declare-fun z$916 () Bool)
(declare-fun z$4948 () Bool)
(declare-fun z$4949 () Bool)
(declare-fun z$4914 () Bool)
(declare-fun z$4977 () Bool)
(declare-fun z$4979 () Bool)
(declare-fun z$4976 () Bool)
(declare-fun z$4978 () Bool)
(declare-fun z$4991 () Bool)
(declare-fun z$4992 () Bool)
(declare-fun z$5002 () Bool)
(declare-fun z$5003 () Bool)
(declare-fun z$4239 () Bool)
(declare-fun z$5013 () Bool)
(declare-fun z$5014 () Bool)
(declare-fun z$2872 () Bool)
(declare-fun z$5035 () Bool)
(declare-fun z$5037 () Bool)
(declare-fun z$1456 () Bool)
(declare-fun z$5044 () Bool)
(declare-fun z$5045 () Bool)
(declare-fun z$5064 () Bool)
(declare-fun z$5065 () Bool)
(declare-fun z$625 () Bool)
(declare-fun z$5098 () Bool)
(declare-fun z$5099 () Bool)
(declare-fun z$5151 () Bool)
(declare-fun z$5153 () Bool)
(declare-fun z$5150 () Bool)
(declare-fun z$5152 () Bool)
(declare-fun z$5170 () Bool)
(declare-fun z$5172 () Bool)
(declare-fun z$5171 () Bool)
(declare-fun z$5174 () Bool)
(declare-fun z$2184 () Bool)
(declare-fun z$5187 () Bool)
(declare-fun z$5188 () Bool)
(declare-fun z$2176 () Bool)
(declare-fun z$5203 () Bool)
(declare-fun z$5204 () Bool)
(declare-fun z$5216 () Bool)
(declare-fun z$5217 () Bool)
(declare-fun z$5305 () Bool)
(declare-fun z$5348 () Bool)
(declare-fun z$5349 () Bool)
(declare-fun z$5364 () Bool)
(declare-fun z$5377 () Bool)
(declare-fun z$5378 () Bool)
(declare-fun z$5352 () Bool)
(declare-fun z$5395 () Bool)
(declare-fun z$5396 () Bool)
(declare-fun z$5497 () Bool)
(declare-fun z$5561 () Bool)
(declare-fun z$5562 () Bool)
(declare-fun z$5576 () Bool)
(declare-fun z$5589 () Bool)
(declare-fun z$5590 () Bool)
(declare-fun z$5565 () Bool)
(declare-fun z$5603 () Bool)
(declare-fun z$5604 () Bool)
(declare-fun z$5616 () Bool)
(declare-fun z$5617 () Bool)
(declare-fun z$5628 () Bool)
(declare-fun z$5629 () Bool)
(declare-fun z$5652 () Bool)
(declare-fun z$5653 () Bool)
(declare-fun z$5666 () Bool)
(declare-fun z$5667 () Bool)
(declare-fun z$5680 () Bool)
(declare-fun z$5681 () Bool)
(declare-fun z$5688 () Bool)
(declare-fun z$5689 () Bool)
(declare-fun z$5699 () Bool)
(declare-fun z$5700 () Bool)
(declare-fun z$5711 () Bool)
(declare-fun z$5712 () Bool)
(declare-fun z$5722 () Bool)
(declare-fun z$5723 () Bool)
(declare-fun z$5731 () Bool)
(declare-fun z$5733 () Bool)
(declare-fun z$5744 () Bool)
(declare-fun z$5746 () Bool)
(declare-fun z$1359 () Bool)
(declare-fun z$2838 () Bool)
(declare-fun z$5745 () Bool)
(declare-fun z$5748 () Bool)
(declare-fun z$2235 () Bool)
(declare-fun z$5766 () Bool)
(declare-fun z$5768 () Bool)
(declare-fun z$5765 () Bool)
(declare-fun z$5767 () Bool)
(declare-fun z$791 () Bool)
(declare-fun z$5785 () Bool)
(declare-fun z$5786 () Bool)
(declare-fun z$691 () Bool)
(declare-fun z$5797 () Bool)
(declare-fun z$5799 () Bool)
(declare-fun z$1497 () Bool)
(declare-fun z$5809 () Bool)
(declare-fun z$5810 () Bool)
(declare-fun z$5812 () Bool)
(declare-fun z$620 () Bool)
(declare-fun z$5825 () Bool)
(declare-fun z$5827 () Bool)
(declare-fun z$5815 () Bool)
(declare-fun z$4701 () Bool)
(declare-fun z$5826 () Bool)
(declare-fun z$5831 () Bool)
(declare-fun z$5847 () Bool)
(declare-fun z$5849 () Bool)
(declare-fun z$5848 () Bool)
(declare-fun z$5853 () Bool)
(declare-fun z$4725 () Bool)
(declare-fun z$5870 () Bool)
(declare-fun z$5872 () Bool)
(declare-fun z$4721 () Bool)
(declare-fun z$5869 () Bool)
(declare-fun z$5871 () Bool)
(declare-fun z$5968 () Bool)
(declare-fun z$6012 () Bool)
(declare-fun z$6013 () Bool)
(declare-fun z$6041 () Bool)
(declare-fun z$6052 () Bool)
(declare-fun z$6053 () Bool)
(declare-fun z$6016 () Bool)
(declare-fun z$6069 () Bool)
(declare-fun z$6070 () Bool)
(declare-fun z$250 () Bool)
(declare-fun z$2351 () Bool)
(declare-fun z$6103 () Bool)
(declare-fun z$6104 () Bool)
(declare-fun z$6112 () Bool)
(declare-fun z$6114 () Bool)
(declare-fun z$6118 () Bool)
(declare-fun z$6120 () Bool)
(declare-fun z$2369 () Bool)
(declare-fun z$6143 () Bool)
(declare-fun z$6145 () Bool)
(declare-fun z$6155 () Bool)
(declare-fun z$6157 () Bool)
(declare-fun z$6163 () Bool)
(declare-fun z$6164 () Bool)
(declare-fun z$1690 () Bool)
(declare-fun z$6174 () Bool)
(declare-fun z$6175 () Bool)
(declare-fun z$6199 () Bool)
(declare-fun z$6200 () Bool)
(declare-fun z$6221 () Bool)
(declare-fun z$6222 () Bool)
(declare-fun z$6232 () Bool)
(declare-fun z$6233 () Bool)
(declare-fun z$4024 () Bool)
(declare-fun pop$next () Bool)
(declare-fun p$0 () Bool)
(declare-fun p$1 () Bool)
(declare-fun p$2 () Bool)
(declare-fun p$3 () Bool)
(declare-fun p$4 () Bool)
(declare-fun z$74 () Bool)
(declare-fun p$5 () Bool)
(declare-fun z$1147 () Bool)
(declare-fun z$1795 () Bool)
(declare-fun p$6 () Bool)
(declare-fun z$1832 () Bool)
(declare-fun p$7 () Bool)
(declare-fun z$1149 () Bool)
(declare-fun p$8 () Bool)
(declare-fun p$9 () Bool)
(declare-fun p$10 () Bool)
(declare-fun p$11 () Bool)
(declare-fun z$1318 () Bool)
(declare-fun z$1793 () Bool)
(declare-fun p$12 () Bool)
(declare-fun z$1941 () Bool)
(declare-fun p$13 () Bool)
(declare-fun p$14 () Bool)
(declare-fun z$1060 () Bool)
(declare-fun z$1797 () Bool)
(declare-fun z$1799 () Bool)
(declare-fun z$1789 () Bool)
(declare-fun z$1802 () Bool)
(declare-fun z$1804 () Bool)
(declare-fun z$1791 () Bool)
(declare-fun z$1807 () Bool)
(declare-fun z$1809 () Bool)
(declare-fun z$1812 () Bool)
(declare-fun z$1814 () Bool)
(declare-fun z$1817 () Bool)
(declare-fun z$1834 () Bool)
(declare-fun p$15 () Bool)
(declare-fun z$1790 () Bool)
(declare-fun p$16 () Bool)
(declare-fun p$17 () Bool)
(declare-fun z$1792 () Bool)
(declare-fun p$18 () Bool)
(declare-fun z$1822 () Bool)
(declare-fun z$2350 () Bool)
(declare-fun p$19 () Bool)
(declare-fun p$20 () Bool)
(declare-fun z$2783 () Bool)
(declare-fun p$21 () Bool)
(declare-fun z$2180 () Bool)
(declare-fun p$22 () Bool)
(declare-fun z$5381 () Bool)
(declare-fun p$23 () Bool)
(declare-fun z$6085 () Bool)
(declare-fun p$24 () Bool)
(declare-fun p$25 () Bool)
(declare-fun z$6241 () Bool)
(declare-fun p$26 () Bool)
(declare-fun z$6086 () Bool)
(assert
 (and (distinct z$n0s3 z$n3s3 z$n4s3 z$n2s3 z$n1s3 z$n6s3 z$n5s3 z$n7s3) true))
(assert
 (and (distinct z$n0s4 z$n15s4 z$n13s4 z$n14s4 z$n12s4 z$n4s4 z$n1s4 z$n9s4 z$n8s4 z$n2s4 z$n3s4 z$n6s4 z$n5s4 z$n11s4 z$n10s4 z$n7s4) true))
(assert
 (and (distinct z$n1s32 z$n4s32 z$n0s32 z$n12s32 z$n3s32 z$n14s32 z$n9s32 z$n2s32 z$n16s32 z$n15s32 z$n7s32 z$n5s32 z$n6s32 z$n4294967295s32 z$n11s32 z$n13s32 z$n8s32 z$n4294967294s32 z$n3319156481s32 z$n2147483648s32 z$n207880192s32 z$n4087087103s32 z$n97931009s32 z$n2147483650s32 z$n1939603455s32 z$n128s32) true))
(assert
 (let (($x2322 (= rb.tail rb.head)))
 (= z$32 $x2322)))
(assert
 (let (($x5933 (not sr.empty)))
 (= z$319 $x5933)))
(assert
 (= z$1331 (and z$32 z$319)))
(assert
 (= z$1332 (not z$1331)))
(assert
 z$1332)
(assert
 (let (($x6290 (= rb.tail sr.tail)))
 (= z$685 $x6290)))
(assert
 z$685)
(assert
 (let (($x6605 (= rb.tail |rb.mem[0]|)))
 (= z$1410 $x6605)))
(assert
 (= z$1434 (and (distinct |rb.mem[0]| |sr.mem[3]|) true)))
(assert
 (= z$1447 (and z$1410 z$1434)))
(assert
 (= z$1449 (not z$1447)))
(assert
 z$1449)
(assert
 (let (($x5708 (= rb.tail |sr.mem[3]|)))
 (= z$1465 $x5708)))
(assert
 z$1465)
(assert
 (let ((?x6739 (Concat_32_4_28 rb.tail z$n0s28)))
 (= z$43 ?x6739)))
(assert
 (let ((?x6045 (Add_32_32_32 z$43 z$n1s32)))
 (= z$46 ?x6045)))
(assert
 (let (($x5858 (= z$46 z$n1s32)))
 (= z$911 $x5858)))
(assert
 z$911)
(assert
 (let ((?x5972 (Concat_32_4_28 rb.head z$n0s28)))
 (= z$301 ?x5972)))
(assert
 (= z$1348 (and (distinct z$301 z$n1s32) true)))
(assert
 (= z$1567 (and z$319 z$1348)))
(assert
 (= z$1570 (not z$1567)))
(assert
 z$1570)
(assert
 (= z$1334 (and (distinct rb.head rb.tail) true)))
(assert
 (= z$1599 (and z$1334 z$1348)))
(assert
 (= z$1600 (not z$1599)))
(assert
 z$1600)
(assert
 (let (($x4018 (Extract_1_2_2_4 rb.head)))
 (= z$86 $x4018)))
(assert
 (= z$1610 (and sr.empty z$86)))
(assert
 (= z$1611 (not z$1610)))
(assert
 z$1611)
(assert
 (= z$1305 (and (distinct |rb.mem[0]| rb.head) true)))
(assert
 (let (($x3444 (= |rb.mem[0]| |sr.mem[3]|)))
 (= z$1453 $x3444)))
(assert
 (= z$1619 (and sr.empty z$1305 z$1453)))
(assert
 (= z$1620 (not z$1619)))
(assert
 z$1620)
(assert
 (= z$1435 (and (distinct |sr.mem[3]| rb.head) true)))
(assert
 (= z$1631 (and sr.empty z$1435)))
(assert
 (= z$1632 (not z$1631)))
(assert
 z$1632)
(assert
 (let (($x2402 (Extract_1_1_1_4 rb.head)))
 (= z$80 $x2402)))
(assert
 (= z$1935 (and rb.empty z$80)))
(assert
 (= z$1936 (not z$1935)))
(assert
 z$1936)
(assert
 (let (($x5324 (not rb.empty)))
 (= z$33 $x5324)))
(assert
 (= z$34 (and z$32 z$33)))
(assert
 (let (($x1056 (not z$34)))
 (= z$36 $x1056)))
(assert
 (= z$37 (and push_ z$36)))
(assert
 (let ((?x1876 (ite z$37 rb.head z$n0s4)))
 (= z$70 ?x1876)))
(assert
 (let (($x4962 (Extract_1_0_0_4 rb.head)))
 (= z$73 $x4962)))
(assert
 (= z$76 (ite z$37 z$73 false)))
(assert
 (let (($x3206 (Extract_1_0_0_4 z$70)))
 (= z$72 $x3206)))
(assert
 (= z$72 z$76))
(assert
 (= z$82 (ite z$37 z$80 false)))
(assert
 (let (($x2145 (Extract_1_1_1_4 z$70)))
 (= z$79 $x2145)))
(assert
 (= z$79 z$82))
(assert
 (let (($x5256 (not z$79)))
 (= z$84 $x5256)))
(assert
 (= z$88 (ite z$37 z$86 false)))
(assert
 (let (($x5058 (Extract_1_2_2_4 z$70)))
 (= z$85 $x5058)))
(assert
 (= z$85 z$88))
(assert
 (let (($x2482 (not z$85)))
 (= z$90 $x2482)))
(assert
 (= z$91 (and z$84 z$90)))
(assert
 (= z$160 (and z$72 z$91)))
(assert
 (let ((?x5523 (ite z$37 z$n15s4 z$n0s4)))
 (= z$96 ?x5523)))
(assert
 (= z$101 (ite z$37 true false)))
(assert
 (let (($x4649 (Extract_1_0_0_4 z$96)))
 (= z$98 $x4649)))
(assert
 (= z$98 z$101))
(assert
 (= z$162 (and z$160 z$98)))
(assert
 (let ((?x6382 (ite z$37 dataIn z$n0s4)))
 (= z$106 ?x6382)))
(assert
 (let (($x2805 (Extract_1_0_0_4 dataIn)))
 (= z$109 $x2805)))
(assert
 (= z$110 (ite z$37 z$109 false)))
(assert
 (let (($x6395 (Extract_1_0_0_4 z$106)))
 (= z$108 $x6395)))
(assert
 (= z$108 z$110))
(assert
 (let (($x8460 (Extract_1_0_0_4 |rb.mem[1]|)))
 (= z$164 $x8460)))
(assert
 (let (($x10605 (ite z$162 z$108 z$164)))
 (= z$166 $x10605)))
(assert
 (let (($x6020 (Extract_1_1_1_4 z$96)))
 (= z$116 $x6020)))
(assert
 (= z$116 z$101))
(assert
 (= z$168 (and z$160 z$116)))
(assert
 (let (($x3611 (Extract_1_1_1_4 dataIn)))
 (= z$122 $x3611)))
(assert
 (= z$123 (ite z$37 z$122 false)))
(assert
 (let (($x3276 (Extract_1_1_1_4 z$106)))
 (= z$121 $x3276)))
(assert
 (= z$121 z$123))
(assert
 (let (($x2839 (Extract_1_1_1_4 |rb.mem[1]|)))
 (= z$170 $x2839)))
(assert
 (let (($x5461 (ite z$168 z$121 z$170)))
 (= z$172 $x5461)))
(assert
 (let (($x6459 (Extract_1_2_2_4 z$96)))
 (= z$129 $x6459)))
(assert
 (= z$129 z$101))
(assert
 (= z$174 (and z$160 z$129)))
(assert
 (let (($x6709 (Extract_1_2_2_4 dataIn)))
 (= z$135 $x6709)))
(assert
 (= z$136 (ite z$37 z$135 false)))
(assert
 (let (($x2718 (Extract_1_2_2_4 z$106)))
 (= z$134 $x2718)))
(assert
 (= z$134 z$136))
(assert
 (let (($x7527 (Extract_1_2_2_4 |rb.mem[1]|)))
 (= z$176 $x7527)))
(assert
 (let (($x10608 (ite z$174 z$134 z$176)))
 (= z$178 $x10608)))
(assert
 (let (($x6428 (Extract_1_3_3_4 z$96)))
 (= z$142 $x6428)))
(assert
 (= z$142 z$101))
(assert
 (= z$180 (and z$160 z$142)))
(assert
 (let (($x6246 (Extract_1_3_3_4 dataIn)))
 (= z$149 $x6246)))
(assert
 (= z$150 (ite z$37 z$149 false)))
(assert
 (let (($x2762 (Extract_1_3_3_4 z$106)))
 (= z$148 $x2762)))
(assert
 (= z$148 z$150))
(assert
 (let (($x10815 (Extract_1_3_3_4 |rb.mem[1]|)))
 (= z$182 $x10815)))
(assert
 (let (($x7324 (ite z$180 z$148 z$182)))
 (= z$184 $x7324)))
(assert
 (let ((?x8143 (Concat_4_1_1_1_1 z$166 z$172 z$178 z$184)))
 (= z$186 ?x8143)))
(assert
 (let (($x10425 (= z$186 rb.head)))
 (= z$1942 $x10425)))
(assert
 (= z$190 (and z$79 z$90)))
(assert
 (= z$222 (and z$72 z$190)))
(assert
 (= z$224 (and z$222 z$98)))
(assert
 (let (($x1294 (Extract_1_0_0_4 |rb.mem[3]|)))
 (= z$226 $x1294)))
(assert
 (let (($x3332 (ite z$224 z$108 z$226)))
 (= z$228 $x3332)))
(assert
 (= z$230 (and z$222 z$116)))
(assert
 (let (($x4542 (Extract_1_1_1_4 |rb.mem[3]|)))
 (= z$232 $x4542)))
(assert
 (let (($x9667 (ite z$230 z$121 z$232)))
 (= z$234 $x9667)))
(assert
 (= z$236 (and z$222 z$129)))
(assert
 (let (($x865 (Extract_1_2_2_4 |rb.mem[3]|)))
 (= z$238 $x865)))
(assert
 (let (($x2035 (ite z$236 z$134 z$238)))
 (= z$240 $x2035)))
(assert
 (= z$242 (and z$222 z$142)))
(assert
 (let (($x4201 (Extract_1_3_3_4 |rb.mem[3]|)))
 (= z$244 $x4201)))
(assert
 (= z$246 (ite z$242 z$148 z$244)))
(assert
 (let ((?x2216 (Concat_4_1_1_1_1 z$228 z$234 z$240 z$246)))
 (= z$248 ?x2216)))
(assert
 (= z$1944 (and (distinct rb.head z$248) true)))
(assert
 (= z$1955 (and rb.empty z$1942 z$1944)))
(assert
 (= z$1956 (not z$1955)))
(assert
 z$1956)
(assert
 (= z$1964 (and (distinct z$248 z$186) true)))
(assert
 (= z$1973 (and rb.empty z$1964)))
(assert
 (= z$1974 (not z$1973)))
(assert
 z$1974)
(assert
 (= z$2025 (and rb.empty z$73)))
(assert
 (= z$2026 (not z$2025)))
(assert
 z$2026)
(assert
 (let (($x10680 (not z$109)))
 (= z$591 $x10680)))
(assert
 (let (($x2202 (not z$122)))
 (= z$594 $x2202)))
(assert
 (let (($x9881 (not z$135)))
 (= z$597 $x9881)))
(assert
 (let (($x10038 (not z$149)))
 (= z$600 $x10038)))
(assert
 (let (($x2512 (not z$72)))
 (= z$78 $x2512)))
(assert
 (= z$93 (and z$78 z$91)))
(assert
 (= z$103 (and z$93 z$98)))
(assert
 (let (($x4282 (Extract_1_0_0_4 |rb.mem[0]|)))
 (= z$112 $x4282)))
(assert
 (let (($x3081 (ite z$103 z$108 z$112)))
 (= z$114 $x3081)))
(assert
 (= z$119 (and z$93 z$116)))
(assert
 (let (($x5613 (Extract_1_1_1_4 |rb.mem[0]|)))
 (= z$125 $x5613)))
(assert
 (let (($x4015 (ite z$119 z$121 z$125)))
 (= z$127 $x4015)))
(assert
 (= z$132 (and z$93 z$129)))
(assert
 (let (($x4059 (Extract_1_2_2_4 |rb.mem[0]|)))
 (= z$138 $x4059)))
(assert
 (let (($x5637 (ite z$132 z$134 z$138)))
 (= z$140 $x5637)))
(assert
 (= z$146 (and z$93 z$142)))
(assert
 (let (($x2880 (Extract_1_3_3_4 |rb.mem[0]|)))
 (= z$152 $x2880)))
(assert
 (let (($x6468 (ite z$146 z$148 z$152)))
 (= z$154 $x6468)))
(assert
 (let ((?x3190 (Concat_4_1_1_1_1 z$114 z$127 z$140 z$154)))
 (= z$156 ?x3190)))
(assert
 (= z$1436 (and (distinct |sr.mem[3]| z$156) true)))
(assert
 (let (($x1374 (= rb.head |sr.mem[3]|)))
 (= z$1634 $x1374)))
(assert
 (= z$2036 (and push_ z$591 z$594 z$597 z$600 z$1436 z$1634)))
(assert
 (= z$2037 (not z$2036)))
(assert
 z$2037)
(assert
 (= z$2089 (and (distinct rb.head |sr.mem[0]|) true)))
(assert
 (= z$2101 (and rb.empty z$2089)))
(assert
 (= z$2102 (not z$2101)))
(assert
 z$2102)
(assert
 (= z$1920 (and (distinct rb.head |sr.mem[1]|) true)))
(assert
 (= z$2140 (and rb.empty z$1920)))
(assert
 (= z$2142 (not z$2140)))
(assert
 z$2142)
(assert
 (let (($x1056 (not z$34)))
 (= z$2162 $x1056)))
(assert
 z$2162)
(assert
 (let (($x2434 (= |sr.mem[4]| z$n0s4)))
 (= z$26 $x2434)))
(assert
 z$26)
(assert
 (= z$2198 (and (distinct |rb.mem[0]| |sr.mem[0]|) true)))
(assert
 (= z$2205 (and z$33 z$2198)))
(assert
 (= z$2207 (not z$2205)))
(assert
 z$2207)
(assert
 (= z$1107 (and (distinct |rb.mem[0]| z$n0s4) true)))
(assert
 (let (($x8049 (= rb.head |rb.mem[0]|)))
 (= z$1622 $x8049)))
(assert
 (let ((?x6045 (Add_32_32_32 z$43 z$n1s32)))
 (= z$673 ?x6045)))
(assert
 (let ((?x7985 (Extract_4_3_0_32 z$673)))
 (= z$2147 ?x7985)))
(assert
 (= z$2152 (and (distinct rb.head z$2147) true)))
(assert
 (= z$2217 (and z$1107 z$1622 z$2152)))
(assert
 (= z$2219 (not z$2217)))
(assert
 z$2219)
(assert
 (= z$1048 (and (distinct rb.head z$n0s4) true)))
(assert
 (= z$2229 (and z$1048 z$2152)))
(assert
 (= z$2230 (not z$2229)))
(assert
 z$2230)
(assert
 (let (($x6327 (= rb.tail z$n0s4)))
 (= z$15 $x6327)))
(assert
 z$15)
(assert
 (let (($x10866 (not z$112)))
 (= z$593 $x10866)))
(assert
 (let (($x3313 (not z$125)))
 (= z$596 $x3313)))
(assert
 (let (($x7272 (not z$138)))
 (= z$599 $x7272)))
(assert
 (let (($x8566 (not z$152)))
 (= z$602 $x8566)))
(assert
 (= z$2278 (and z$593 z$596 z$599 z$602 z$1048 z$1107)))
(assert
 (= z$2279 (not z$2278)))
(assert
 z$2279)
(assert
 (= z$613 (not z$238)))
(assert
 (= z$1788 (and (distinct |rb.mem[3]| z$248) true)))
(assert
 (= z$612 (not z$232)))
(assert
 (= z$614 (not z$244)))
(assert
 (= z$611 (not z$226)))
(assert
 (let (($x2392 (not push_)))
 (= z$843 $x2392)))
(assert
 (= z$2357 (and z$613 z$1788 z$612 z$614 z$611 z$843)))
(assert
 (let (($x6624 (= rb.head z$n0s4)))
 (= z$3 $x6624)))
(assert
 (let (($x5830 (= |rb.mem[0]| z$n0s4)))
 (= z$5 $x5830)))
(assert
 (let (($x5567 (= |rb.mem[1]| z$n0s4)))
 (= z$7 $x5567)))
(assert
 (let (($x2950 (= |rb.mem[2]| z$n0s4)))
 (= z$9 $x2950)))
(assert
 (let (($x1650 (= |rb.mem[3]| z$n0s4)))
 (= z$11 $x1650)))
(assert
 (let (($x5015 (= |rb.mem[4]| z$n0s4)))
 (= z$13 $x5015)))
(assert
 (let (($x1988 (= |sr.mem[0]| z$n0s4)))
 (= z$18 $x1988)))
(assert
 (let (($x1927 (= |sr.mem[1]| z$n0s4)))
 (= z$20 $x1927)))
(assert
 (let (($x5860 (= |sr.mem[2]| z$n0s4)))
 (= z$22 $x5860)))
(assert
 (let (($x5906 (= |sr.mem[3]| z$n0s4)))
 (= z$24 $x5906)))
(assert
 (let (($x6501 (= sr.tail z$n0s4)))
 (= z$28 $x6501)))
(assert
 (let (($x10631 (and rb.empty z$3 z$5 z$7 z$9 z$11 z$13 z$15 sr.empty z$18 z$20 z$22 z$24 z$26 z$28)))
 (= z$29 $x10631)))
(assert
 (= z$2359 (not z$29)))
(assert
 (= z$2360 (and z$2357 z$2359)))
(assert
 (= z$2361 (not z$2360)))
(assert
 z$2361)
(assert
 (= z$1306 (and (distinct |rb.mem[0]| z$156) true)))
(assert
 (let (($x7955 (= |sr.mem[0]| |rb.mem[0]|)))
 (= z$1341 $x7955)))
(assert
 (= z$2566 (and z$843 z$1306 z$1341)))
(assert
 (= z$2569 (and z$2359 z$2566)))
(assert
 (= z$2570 (not z$2569)))
(assert
 z$2570)
(assert
 (let (($x13894 (= z$156 rb.tail)))
 (= z$1344 $x13894)))
(assert
 (= z$2697 (and z$73 z$152 z$1344)))
(assert
 (= z$2698 (not z$2697)))
(assert
 z$2698)
(assert
 (= z$1451 (and (distinct |rb.mem[0]| rb.tail) true)))
(assert
 (= z$2707 (and z$86 z$1344 z$1451)))
(assert
 (= z$2708 (not z$2707)))
(assert
 z$2708)
(assert
 (= z$2717 (and z$80 z$1344 z$1451)))
(assert
 (= z$2718 (not z$2717)))
(assert
 z$2718)
(assert
 (= z$2748 (and z$73 z$138 z$1344)))
(assert
 (= z$2749 (not z$2748)))
(assert
 z$2749)
(assert
 (= z$2755 (and z$125 z$1341 z$1344)))
(assert
 (= z$2757 (not z$2755)))
(assert
 z$2757)
(assert
 (= z$2764 (and z$112 z$1341 z$1344)))
(assert
 (= z$2765 (not z$2764)))
(assert
 z$2765)
(assert
 (= z$2773 (and z$1306 z$1334)))
(assert
 (= z$2774 (not z$2773)))
(assert
 z$2774)
(assert
 (= z$847 (and (distinct rb.tail z$n0s4) true)))
(assert
 (= z$2808 (and z$847 z$1348)))
(assert
 (= z$2809 (not z$2808)))
(assert
 z$2809)
(assert
 (= z$2821 (and z$33 z$847)))
(assert
 (= z$2822 (not z$2821)))
(assert
 z$2822)
(assert
 (= z$2784 (and (distinct z$43 z$n0s32) true)))
(assert
 (= z$2832 (and z$15 z$2784)))
(assert
 (= z$2833 (not z$2832)))
(assert
 z$2833)
(assert
 (let ((?x4136 (Concat_32_4_28 sr.tail z$n0s28)))
 (= z$311 ?x4136)))
(assert
 (= z$557 (and (distinct z$311 z$n1s32) true)))
(assert
 (= z$1345 (and (distinct rb.tail sr.tail) true)))
(assert
 (= z$2846 (and z$557 z$1334 z$1345)))
(assert
 (= z$2847 (not z$2846)))
(assert
 z$2847)
(assert
 (= z$1304 (and (distinct sr.tail rb.head) true)))
(assert
 (let (($x5304 (= z$2147 rb.head)))
 (= z$2150 $x5304)))
(assert
 (= z$2861 (and z$15 z$1304 z$1345 z$2150)))
(assert
 (= z$2862 (not z$2861)))
(assert
 z$2862)
(assert
 (let (($x13283 (= rb.head sr.tail)))
 (= z$684 $x13283)))
(assert
 (let (($x2975 (= z$301 z$n1s32)))
 (= z$1572 $x2975)))
(assert
 (= z$2931 (and z$684 z$1572)))
(assert
 (= z$2932 (not z$2931)))
(assert
 z$2932)
(assert
 (= z$2943 (and sr.empty z$86 z$1348)))
(assert
 (= z$2944 (not z$2943)))
(assert
 z$2944)
(assert
 (= z$2954 (and sr.empty z$1334 z$1348)))
(assert
 (= z$2955 (not z$2954)))
(assert
 z$2955)
(assert
 (let (($x12527 (= z$311 z$n1s32)))
 (= z$1560 $x12527)))
(assert
 (= z$2963 (and sr.empty z$1560)))
(assert
 (= z$2965 (not z$2963)))
(assert
 z$2965)
(assert
 (let ((?x3101 (Add_32_32_32 z$311 z$n1s32)))
 (= z$338 ?x3101)))
(assert
 (= z$1308 (and (distinct z$338 z$n1s32) true)))
(assert
 (= z$2972 (and sr.empty z$1308)))
(assert
 (= z$2974 (not z$2972)))
(assert
 z$2974)
(assert
 (= z$821 (and (distinct z$n0s4 z$156) true)))
(assert
 (= z$3005 (and z$5 z$319 z$821 z$843)))
(assert
 (= z$3006 (not z$3005)))
(assert
 z$3006)
(assert
 (= z$3017 (and z$593 z$596 z$599 z$602 z$1107 z$1341)))
(assert
 (= z$3018 (not z$3017)))
(assert
 z$3018)
(assert
 (= z$3026 (and z$843 z$1107 z$1306 z$1341)))
(assert
 (= z$3027 (not z$3026)))
(assert
 z$3027)
(assert
 (= z$2197 (and (distinct |sr.mem[0]| z$n0s4) true)))
(assert
 (= z$3042 (and z$5 z$2197)))
(assert
 (= z$3043 (not z$3042)))
(assert
 z$3043)
(assert
 (= z$3049 (and z$5 z$28 z$2197)))
(assert
 (= z$3051 (not z$3049)))
(assert
 z$3051)
(assert
 (= z$3060 (and z$28 z$593 z$596 z$599 z$602 z$2197)))
(assert
 (= z$3061 (not z$3060)))
(assert
 z$3061)
(assert
 (let (($x13887 (= z$n0s4 z$156)))
 (= z$1168 $x13887)))
(assert
 (= z$3071 (and z$843 z$1107 z$1168 z$2197)))
(assert
 (= z$3072 (not z$3071)))
(assert
 z$3072)
(assert
 (= z$3081 (and z$18 z$28 z$319 z$1107)))
(assert
 (= z$3083 (not z$3081)))
(assert
 z$3083)
(assert
 (= z$3094 (and z$843 z$1306 z$2197)))
(assert
 (= z$3095 (not z$3094)))
(assert
 z$3095)
(assert
 (= z$3106 (and z$319 z$2198)))
(assert
 (= z$3107 (not z$3106)))
(assert
 z$3107)
(assert
 (= z$3114 (and z$28 z$2197 z$2198)))
(assert
 (= z$3115 (not z$3114)))
(assert
 z$3115)
(assert
 (= z$549 (and (distinct sr.tail z$n0s4) true)))
(assert
 (= z$3126 (and z$20 z$549 z$1107)))
(assert
 (= z$3127 (not z$3126)))
(assert
 z$3127)
(assert
 (= z$3133 (and (distinct |sr.mem[1]| |rb.mem[0]|) true)))
(assert
 (= z$3141 (and z$549 z$3133)))
(assert
 (= z$3142 (not z$3141)))
(assert
 z$3142)
(assert
 z$7)
(assert
 (= z$1732 (and (distinct z$186 z$n0s4) true)))
(assert
 (= z$3401 (and z$591 z$594 z$597 z$600 z$1732)))
(assert
 (= z$3402 (not z$3401)))
(assert
 z$3402)
(assert
 (= z$3460 (and z$86 z$1732)))
(assert
 (= z$3462 (not z$3460)))
(assert
 z$3462)
(assert
 (= z$3470 (and z$80 z$1732)))
(assert
 (= z$3471 (not z$3470)))
(assert
 z$3471)
(assert
 (let (($x4131 (not z$164)))
 (= z$603 $x4131)))
(assert
 (= z$2090 (and (distinct |rb.mem[1]| |sr.mem[0]|) true)))
(assert
 (= z$2636 (and (distinct |rb.mem[1]| z$n0s4) true)))
(assert
 (= z$3695 (and z$603 z$2090 z$2636)))
(assert
 (= z$3696 (not z$3695)))
(assert
 z$3696)
(assert
 (= z$3813 (and z$164 z$170 z$176 z$182 z$2090)))
(assert
 (= z$3814 (not z$3813)))
(assert
 z$3814)
(assert
 (= z$3843 (and z$170 z$2090 z$2636)))
(assert
 (= z$3844 (not z$3843)))
(assert
 z$3844)
(assert
 (= z$3899 (and z$176 z$2090 z$2636)))
(assert
 (= z$3901 (not z$3899)))
(assert
 z$3901)
(assert
 (= z$3928 (and z$182 z$2090 z$2636)))
(assert
 (= z$3929 (not z$3928)))
(assert
 z$3929)
(assert
 (let (($x10599 (not z$170)))
 (= z$604 $x10599)))
(assert
 (let (($x13464 (not z$176)))
 (= z$605 $x13464)))
(assert
 (let (($x11543 (not z$182)))
 (= z$606 $x11543)))
(assert
 (= z$3976 (and z$164 z$604 z$605 z$606 z$2090)))
(assert
 (= z$3977 (not z$3976)))
(assert
 z$3977)
(assert
 (= z$4046 (and z$549 z$603 z$604 z$605 z$606 z$2197)))
(assert
 (= z$4047 (not z$4046)))
(assert
 z$4047)
(assert
 (let (($x16575 (= |sr.mem[1]| |rb.mem[0]|)))
 (= z$2851 $x16575)))
(assert
 (= z$4081 (and z$593 z$596 z$599 z$602 z$1107 z$2851)))
(assert
 (= z$4082 (not z$4081)))
(assert
 z$4082)
(assert
 (= z$4093 (and z$549 z$843 z$1107 z$1168)))
(assert
 (= z$4094 (not z$4093)))
(assert
 z$4094)
(assert
 (= z$4104 (and z$319 z$843 z$1306)))
(assert
 (= z$4105 (not z$4104)))
(assert
 z$4105)
(assert
 (let (($x4358 (= z$311 z$n0s32)))
 (= z$323 $x4358)))
(assert
 (= z$4115 (and z$323 z$1334 z$2152)))
(assert
 (= z$4116 (not z$4115)))
(assert
 z$4116)
(assert
 (= z$4173 (and z$15 z$152 z$1410)))
(assert
 (= z$4174 (not z$4173)))
(assert
 z$4174)
(assert
 (= z$4182 (and z$138 z$1410 z$1560)))
(assert
 (= z$4184 (not z$4182)))
(assert
 z$4184)
(assert
 (= z$4191 (and z$73 z$1306)))
(assert
 (= z$4193 (not z$4191)))
(assert
 z$4193)
(assert
 (= z$4304 (and z$80 z$1306)))
(assert
 (= z$4305 (not z$4304)))
(assert
 z$4305)
(assert
 (= z$4313 (and z$86 z$1306)))
(assert
 (= z$4315 (not z$4313)))
(assert
 z$4315)
(assert
 (let (($x15396 (not z$73)))
 (= z$585 $x15396)))
(assert
 (let (($x10363 (not z$80)))
 (= z$587 $x10363)))
(assert
 (= z$4433 (and push_ z$585 z$587 z$1334)))
(assert
 (= z$4434 (not z$4433)))
(assert
 z$4434)
(assert
 (= z$1354 (and (distinct z$301 z$338) true)))
(assert
 (= z$4464 (and z$1334 z$1354)))
(assert
 (= z$4466 (not z$4464)))
(assert
 z$4466)
(assert
 (= z$4553 (and z$15 sr.empty z$73)))
(assert
 (= z$4554 (not z$4553)))
(assert
 z$4554)
(assert
 (= z$4566 (and z$15 z$32 z$80)))
(assert
 (= z$4567 (not z$4566)))
(assert
 z$4567)
(assert
 (let (($x3841 (= z$311 z$n4s32)))
 (= z$314 $x3841)))
(assert
 (= z$385 (= z$314 z$34)))
(assert
 (= z$386 (= sr.empty rb.empty)))
(assert
 (= z$387 (and z$385 z$386)))
(assert
 (let ((?x6485 (Extract_3_2_0_4 sr.tail)))
 (= z$389 ?x6485)))
(assert
 (let (($x3293 (= z$389 z$n3s3)))
 (= z$392 $x3293)))
(assert
 (let (($x2706 (= z$389 z$n4s3)))
 (= z$394 $x2706)))
(assert
 (let (($x2648 (or z$392 z$394)))
 (= z$395 $x2648)))
(assert
 (let ((?x4064 (ite z$394 |sr.mem[4]| |sr.mem[3]|)))
 (= z$397 ?x4064)))
(assert
 (let (($x5941 (= z$389 z$n2s3)))
 (= z$400 $x5941)))
(assert
 (let (($x513 (= z$389 z$n1s3)))
 (= z$402 $x513)))
(assert
 (let ((?x3693 (ite z$402 |sr.mem[1]| |sr.mem[0]|)))
 (= z$403 ?x3693)))
(assert
 (let ((?x508 (ite z$400 |sr.mem[2]| z$403)))
 (= z$405 ?x508)))
(assert
 (let ((?x6233 (ite z$395 z$397 z$405)))
 (= z$407 ?x6233)))
(assert
 (let (($x6140 (Extract_1_2_2_3 s$43)))
 (= z$410 $x6140)))
(assert
 (let (($x4315 (Extract_1_1_1_3 s$43)))
 (= z$412 $x4315)))
(assert
 (let (($x3744 (Extract_1_0_0_3 s$43)))
 (= z$414 $x3744)))
(assert
 (let ((?x5932 (ite z$414 s$42 s$41)))
 (= z$418 ?x5932)))
(assert
 (let ((?x1559 (ite z$414 s$40 |rb.mem[4]|)))
 (= z$421 ?x1559)))
(assert
 (let ((?x2956 (ite z$412 z$418 z$421)))
 (= z$423 ?x2956)))
(assert
 (let ((?x4216 (ite z$414 |rb.mem[3]| |rb.mem[2]|)))
 (= z$425 ?x4216)))
(assert
 (let ((?x1716 (ite z$414 |rb.mem[1]| |rb.mem[0]|)))
 (= z$427 ?x1716)))
(assert
 (let ((?x797 (ite z$412 z$425 z$427)))
 (= z$429 ?x797)))
(assert
 (let ((?x6454 (ite z$410 z$423 z$429)))
 (= z$431 ?x6454)))
(assert
 (let (($x5245 (= z$407 z$431)))
 (= z$433 $x5245)))
(assert
 (let (($x5450 (or sr.empty z$433)))
 (= z$434 $x5450)))
(assert
 (= z$436 (and z$387 z$434)))
(assert
 (let ((?x4281 (Concat_32_1_31 z$436 z$n0s31)))
 (= z$439 ?x4281)))
(assert
 (let (($x4506 (= z$439 z$n1s32)))
 (= z$441 $x4506)))
(assert
 (= z$442 (= prop z$441)))
(assert
 z$442)
(assert
 prop)
(assert
 (let (($x3730 (= |rb.mem[0]$next| z$156)))
 (= z$158 $x3730)))
(assert
 z$158)
(assert
 (let (($x5756 (= |rb.mem[1]$next| z$186)))
 (= z$188 $x5756)))
(assert
 z$188)
(assert
 (= z$192 (and z$78 z$190)))
(assert
 (= z$194 (and z$192 z$98)))
(assert
 (let (($x2340 (Extract_1_0_0_4 |rb.mem[2]|)))
 (= z$196 $x2340)))
(assert
 (let (($x7986 (ite z$194 z$108 z$196)))
 (= z$198 $x7986)))
(assert
 (= z$200 (and z$192 z$116)))
(assert
 (let (($x9501 (Extract_1_1_1_4 |rb.mem[2]|)))
 (= z$202 $x9501)))
(assert
 (let (($x10601 (ite z$200 z$121 z$202)))
 (= z$204 $x10601)))
(assert
 (= z$206 (and z$192 z$129)))
(assert
 (let (($x7845 (Extract_1_2_2_4 |rb.mem[2]|)))
 (= z$208 $x7845)))
(assert
 (let (($x5289 (ite z$206 z$134 z$208)))
 (= z$210 $x5289)))
(assert
 (= z$212 (and z$192 z$142)))
(assert
 (let (($x1447 (Extract_1_3_3_4 |rb.mem[2]|)))
 (= z$214 $x1447)))
(assert
 (let (($x10683 (ite z$212 z$148 z$214)))
 (= z$216 $x10683)))
(assert
 (let ((?x7857 (Concat_4_1_1_1_1 z$198 z$204 z$210 z$216)))
 (= z$218 ?x7857)))
(assert
 (let (($x9036 (= |rb.mem[2]$next| z$218)))
 (= z$220 $x9036)))
(assert
 z$220)
(assert
 (= z$40 (and pop_ z$33)))
(assert
 (let ((?x1844 (Extract_4_3_0_32 z$46)))
 (= z$48 ?x1844)))
(assert
 (let (($x1227 (= z$48 rb.head)))
 (= z$284 $x1227)))
(assert
 (= z$285 (ite z$284 true rb.empty)))
(assert
 (= z$287 (ite z$40 z$285 false)))
(assert
 (= z$289 (ite z$37 false z$287)))
(assert
 (let (($x4301 (ite z$40 z$289 rb.empty)))
 (= z$291 $x4301)))
(assert
 (= z$293 (ite z$37 false z$291)))
(assert
 (= z$295 (ite z$37 false z$293)))
(assert
 (= z$297 (= rb.empty$next z$295)))
(assert
 z$297)
(assert
 (let ((?x1514 (ite z$40 z$48 rb.tail)))
 (= z$50 ?x1514)))
(assert
 (let ((?x2767 (ite z$37 z$n0s4 z$50)))
 (= z$52 ?x2767)))
(assert
 (let ((?x5209 (ite z$37 rb.tail z$52)))
 (= z$54 ?x5209)))
(assert
 (let (($x4960 (= rb.tail$next z$54)))
 (= z$299 $x4960)))
(assert
 z$299)
(assert
 (let ((?x5457 (Add_32_32_32 z$301 z$n1s32)))
 (= z$303 ?x5457)))
(assert
 (let ((?x5936 (Extract_4_3_0_32 z$303)))
 (= z$305 ?x5936)))
(assert
 (let ((?x6219 (ite z$37 z$305 rb.head)))
 (= z$307 ?x6219)))
(assert
 (let (($x3387 (= rb.head$next z$307)))
 (= z$309 $x3387)))
(assert
 z$309)
(assert
 (= z$316 (and (distinct z$311 z$n4s32) true)))
(assert
 (= z$317 (and push_ z$316)))
(assert
 (= z$320 (and pop_ z$319)))
(assert
 (= z$324 (ite z$323 true sr.empty)))
(assert
 (= z$326 (ite z$320 z$324 false)))
(assert
 (= z$328 (ite z$317 false z$326)))
(assert
 (let (($x1779 (ite z$320 z$328 sr.empty)))
 (= z$330 $x1779)))
(assert
 (= z$332 (ite z$317 false z$330)))
(assert
 (= z$334 (ite z$317 false z$332)))
(assert
 (= z$336 (= sr.empty$next z$334)))
(assert
 z$336)
(assert
 (let ((?x4942 (Extract_4_3_0_32 z$338)))
 (= z$340 ?x4942)))
(assert
 (let ((?x4410 (ite z$319 z$340 sr.tail)))
 (= z$342 ?x4410)))
(assert
 (let ((?x5323 (ite z$317 z$342 z$n0s4)))
 (= z$344 ?x5323)))
(assert
 (let ((?x2449 (Sub_32_32_32 z$311 z$n1s32)))
 (= z$346 ?x2449)))
(assert
 (let ((?x6010 (Extract_4_3_0_32 z$346)))
 (= z$348 ?x6010)))
(assert
 (let ((?x3709 (ite z$323 sr.tail z$348)))
 (= z$350 ?x3709)))
(assert
 (let ((?x915 (ite z$320 z$350 z$n0s4)))
 (= z$352 ?x915)))
(assert
 (let ((?x4819 (ite z$317 z$n0s4 z$352)))
 (= z$354 ?x4819)))
(assert
 (let ((?x5844 (ite z$320 z$354 sr.tail)))
 (= z$356 ?x5844)))
(assert
 (let ((?x1296 (ite z$317 z$n0s4 z$356)))
 (= z$358 ?x1296)))
(assert
 (let ((?x5193 (ite z$317 z$344 z$358)))
 (= z$360 ?x5193)))
(assert
 (let (($x4932 (= sr.tail$next z$360)))
 (= z$362 $x4932)))
(assert
 z$362)
(assert
 (let ((?x3054 (ite z$317 dataIn |sr.mem[0]|)))
 (= z$364 ?x3054)))
(assert
 (let (($x5685 (= |sr.mem[0]$next| z$364)))
 (= z$366 $x5685)))
(assert
 z$366)
(assert
 (let ((?x970 (ite z$317 |sr.mem[0]| |sr.mem[1]|)))
 (= z$368 ?x970)))
(assert
 (let (($x8490 (= |sr.mem[1]$next| z$368)))
 (= z$370 $x8490)))
(assert
 z$370)
(assert
 (let ((?x9197 (ite z$317 |sr.mem[1]| |sr.mem[2]|)))
 (= z$372 ?x9197)))
(assert
 (let (($x7033 (= |sr.mem[2]$next| z$372)))
 (= z$374 $x7033)))
(assert
 z$374)
(assert
 (let ((?x5331 (ite z$317 |sr.mem[2]| |sr.mem[3]|)))
 (= z$376 ?x5331)))
(assert
 (let (($x5254 (= |sr.mem[3]$next| z$376)))
 (= z$378 $x5254)))
(assert
 z$378)
(assert
 (let ((?x2652 (Concat_32_4_28 sr.tail$next z$n0s28)))
 (= z$456 ?x2652)))
(assert
 (let (($x4676 (= z$456 z$n4s32)))
 (= z$458 $x4676)))
(assert
 (let (($x2601 (= rb.tail$next rb.head$next)))
 (= z$459 $x2601)))
(assert
 (let (($x5527 (not rb.empty$next)))
 (= z$460 $x5527)))
(assert
 (= z$461 (and z$459 z$460)))
(assert
 (= z$463 (= z$458 z$461)))
(assert
 (= z$464 (= sr.empty$next rb.empty$next)))
(assert
 (= z$465 (and z$463 z$464)))
(assert
 (let ((?x5430 (Extract_3_2_0_4 sr.tail$next)))
 (= z$467 ?x5430)))
(assert
 (let (($x6124 (= z$467 z$n3s3)))
 (= z$469 $x6124)))
(assert
 (let (($x3398 (= z$467 z$n4s3)))
 (= z$470 $x3398)))
(assert
 (let (($x6722 (or z$469 z$470)))
 (= z$471 $x6722)))
(assert
 (let ((?x6277 (ite z$470 |sr.mem[4]$next| |sr.mem[3]$next|)))
 (= z$473 ?x6277)))
(assert
 (let (($x854 (= z$467 z$n2s3)))
 (= z$475 $x854)))
(assert
 (let (($x6959 (= z$467 z$n1s3)))
 (= z$476 $x6959)))
(assert
 (let ((?x3470 (ite z$476 |sr.mem[1]$next| |sr.mem[0]$next|)))
 (= z$477 ?x3470)))
(assert
 (let ((?x6701 (ite z$475 |sr.mem[2]$next| z$477)))
 (= z$479 ?x6701)))
(assert
 (let ((?x6566 (ite z$471 z$473 z$479)))
 (= z$481 ?x6566)))
(assert
 (let (($x3108 (Extract_1_2_2_3 s$43$next)))
 (= z$483 $x3108)))
(assert
 (let (($x6693 (Extract_1_1_1_3 s$43$next)))
 (= z$485 $x6693)))
(assert
 (let (($x6432 (Extract_1_0_0_3 s$43$next)))
 (= z$487 $x6432)))
(assert
 (let ((?x4887 (ite z$487 s$42$next s$41$next)))
 (= z$489 ?x4887)))
(assert
 (let ((?x4843 (ite z$487 s$40$next |rb.mem[4]$next|)))
 (= z$491 ?x4843)))
(assert
 (let ((?x423 (ite z$485 z$489 z$491)))
 (= z$493 ?x423)))
(assert
 (let ((?x5692 (ite z$487 |rb.mem[3]$next| |rb.mem[2]$next|)))
 (= z$495 ?x5692)))
(assert
 (let ((?x6682 (ite z$487 |rb.mem[1]$next| |rb.mem[0]$next|)))
 (= z$497 ?x6682)))
(assert
 (let ((?x2475 (ite z$485 z$495 z$497)))
 (= z$499 ?x2475)))
(assert
 (let ((?x2034 (ite z$483 z$493 z$499)))
 (= z$501 ?x2034)))
(assert
 (let (($x6141 (= z$481 z$501)))
 (= z$503 $x6141)))
(assert
 (let (($x5971 (or sr.empty$next z$503)))
 (= z$504 $x5971)))
(assert
 (= z$506 (and z$465 z$504)))
(assert
 (let ((?x3679 (Concat_32_1_31 z$506 z$n0s31)))
 (= z$508 ?x3679)))
(assert
 (let (($x2281 (= z$508 z$n1s32)))
 (= z$510 $x2281)))
(assert
 (= z$511 (= prop$next z$510)))
(assert
 z$511)
(assert
 (let (($x5854 (= sr.tail$next z$n0s4)))
 (= z$536 $x5854)))
(assert
 (= z$537 (and z$536 z$458)))
(assert
 (= z$539 (not z$537)))
(assert
 z$539)
(assert
 (= z$535 (and z$28 z$314)))
(assert
 (= z$538 (not z$535)))
(assert
 z$538)
(assert
 (= z$543 (and (distinct z$456 z$n4s32) true)))
(assert
 (= z$562 (and (distinct z$508 z$n1s32) true)))
(assert
 (= z$563 (and rb.empty$next sr.empty$next z$543 z$562)))
(assert
 (= z$565 (not z$563)))
(assert
 z$565)
(assert
 (= z$527 (and (distinct z$439 z$n1s32) true)))
(assert
 (= z$561 (and rb.empty sr.empty z$316 z$527)))
(assert
 (= z$564 (not z$561)))
(assert
 z$564)
(assert
 (= z$711 (not z$461)))
(assert
 (= z$712 (and push$next z$711)))
(assert
 (let ((?x3257 (ite z$712 rb.head$next z$n0s4)))
 (= z$714 ?x3257)))
(assert
 (let (($x6547 (Extract_1_0_0_4 rb.head$next)))
 (= z$693 $x6547)))
(assert
 (= z$717 (ite z$712 z$693 false)))
(assert
 (let (($x1004 (Extract_1_0_0_4 z$714)))
 (= z$716 $x1004)))
(assert
 (= z$716 z$717))
(assert
 (let (($x958 (not z$716)))
 (= z$719 $x958)))
(assert
 (let (($x6543 (Extract_1_1_1_4 rb.head$next)))
 (= z$695 $x6543)))
(assert
 (= z$721 (ite z$712 z$695 false)))
(assert
 (let (($x2183 (Extract_1_1_1_4 z$714)))
 (= z$720 $x2183)))
(assert
 (= z$720 z$721))
(assert
 (let (($x2587 (not z$720)))
 (= z$723 $x2587)))
(assert
 (let (($x5684 (Extract_1_2_2_4 rb.head$next)))
 (= z$697 $x5684)))
(assert
 (= z$725 (ite z$712 z$697 false)))
(assert
 (let (($x1605 (Extract_1_2_2_4 z$714)))
 (= z$724 $x1605)))
(assert
 (= z$724 z$725))
(assert
 (let (($x3700 (not z$724)))
 (= z$727 $x3700)))
(assert
 (= z$728 (and z$723 z$727)))
(assert
 (= z$730 (and z$719 z$728)))
(assert
 (let ((?x5764 (ite z$712 z$n15s4 z$n0s4)))
 (= z$732 ?x5764)))
(assert
 (= z$735 (ite z$712 true false)))
(assert
 (let (($x5106 (Extract_1_0_0_4 z$732)))
 (= z$734 $x5106)))
(assert
 (= z$734 z$735))
(assert
 (= z$737 (and z$730 z$734)))
(assert
 (let ((?x6016 (ite z$712 dataIn$next z$n0s4)))
 (= z$739 ?x6016)))
(assert
 (let (($x3099 (Extract_1_0_0_4 dataIn$next)))
 (= z$699 $x3099)))
(assert
 (= z$742 (ite z$712 z$699 false)))
(assert
 (let (($x4195 (Extract_1_0_0_4 z$739)))
 (= z$741 $x4195)))
(assert
 (= z$741 z$742))
(assert
 (let (($x4049 (Extract_1_0_0_4 |rb.mem[0]$next|)))
 (= z$744 $x4049)))
(assert
 (let (($x3721 (ite z$737 z$741 z$744)))
 (= z$746 $x3721)))
(assert
 (let (($x2958 (Extract_1_1_1_4 z$732)))
 (= z$748 $x2958)))
(assert
 (= z$748 z$735))
(assert
 (= z$750 (and z$730 z$748)))
(assert
 (let (($x6813 (Extract_1_1_1_4 dataIn$next)))
 (= z$701 $x6813)))
(assert
 (= z$753 (ite z$712 z$701 false)))
(assert
 (let (($x2395 (Extract_1_1_1_4 z$739)))
 (= z$752 $x2395)))
(assert
 (= z$752 z$753))
(assert
 (let (($x4889 (Extract_1_1_1_4 |rb.mem[0]$next|)))
 (= z$755 $x4889)))
(assert
 (let (($x1191 (ite z$750 z$752 z$755)))
 (= z$757 $x1191)))
(assert
 (let (($x5887 (Extract_1_2_2_4 z$732)))
 (= z$759 $x5887)))
(assert
 (= z$759 z$735))
(assert
 (= z$761 (and z$730 z$759)))
(assert
 (let (($x6588 (Extract_1_2_2_4 dataIn$next)))
 (= z$703 $x6588)))
(assert
 (= z$764 (ite z$712 z$703 false)))
(assert
 (let (($x1667 (Extract_1_2_2_4 z$739)))
 (= z$763 $x1667)))
(assert
 (= z$763 z$764))
(assert
 (let (($x6519 (Extract_1_2_2_4 |rb.mem[0]$next|)))
 (= z$766 $x6519)))
(assert
 (let (($x6222 (ite z$761 z$763 z$766)))
 (= z$768 $x6222)))
(assert
 (let (($x3076 (Extract_1_3_3_4 z$732)))
 (= z$770 $x3076)))
(assert
 (= z$770 z$735))
(assert
 (= z$772 (and z$730 z$770)))
(assert
 (let (($x5313 (Extract_1_3_3_4 dataIn$next)))
 (= z$705 $x5313)))
(assert
 (= z$775 (ite z$712 z$705 false)))
(assert
 (let (($x5582 (Extract_1_3_3_4 z$739)))
 (= z$774 $x5582)))
(assert
 (= z$774 z$775))
(assert
 (let (($x1111 (Extract_1_3_3_4 |rb.mem[0]$next|)))
 (= z$777 $x1111)))
(assert
 (let (($x963 (ite z$772 z$774 z$777)))
 (= z$779 $x963)))
(assert
 (let ((?x5358 (Concat_4_1_1_1_1 z$746 z$757 z$768 z$779)))
 (= z$781 ?x5358)))
(assert
 (= z$783 (and (distinct sr.tail$next z$781) true)))
(assert
 (let (($x2954 (not z$774)))
 (= z$802 $x2954)))
(assert
 (= z$803 (not z$763)))
(assert
 (= z$804 (not z$752)))
(assert
 (= z$805 (not z$741)))
(assert
 (let (($x3700 (not z$724)))
 (= z$806 $x3700)))
(assert
 (let (($x2587 (not z$720)))
 (= z$807 $x2587)))
(assert
 (let (($x958 (not z$716)))
 (= z$808 $x958)))
(assert
 (let (($x925 (and z$783 z$802 z$803 z$804 z$805 z$806 z$807 z$808 z$536 z$748)))
 (= z$809 $x925)))
(assert
 (= z$811 (not z$809)))
(assert
 z$811)
(assert
 (= z$687 (and (distinct sr.tail z$156) true)))
(assert
 (let (($x1156 (not z$148)))
 (= z$601 $x1156)))
(assert
 (let (($x6320 (not z$134)))
 (= z$598 $x6320)))
(assert
 (let (($x3061 (not z$121)))
 (= z$595 $x3061)))
(assert
 (let (($x2403 (not z$108)))
 (= z$592 $x2403)))
(assert
 (let (($x2482 (not z$85)))
 (= z$590 $x2482)))
(assert
 (let (($x5256 (not z$79)))
 (= z$588 $x5256)))
(assert
 (let (($x2512 (not z$72)))
 (= z$586 $x2512)))
(assert
 (let (($x6849 (and z$687 z$601 z$598 z$595 z$592 z$590 z$588 z$586 z$28 z$116)))
 (= z$801 $x6849)))
(assert
 (= z$810 (not z$801)))
(assert
 z$810)
(assert
 (let ((?x4294 (Extract_3_2_0_4 rb.tail)))
 (= z$57 ?x4294)))
(assert
 (let ((?x6742 (Extract_3_2_0_32 z$46)))
 (= z$63 ?x6742)))
(assert
 (let ((?x6613 (ite z$40 z$63 z$57)))
 (= z$64 ?x6613)))
(assert
 (let ((?x483 (ite z$37 z$n0s3 z$64)))
 (= z$65 ?x483)))
(assert
 (let ((?x899 (ite z$37 z$57 z$65)))
 (= z$66 ?x899)))
(assert
 (let ((?x623 (Extract_3_2_0_4 z$54)))
 (= z$56 ?x623)))
(assert
 (= z$56 z$66))
(assert
 (let (($x6737 (= s$43$next z$56)))
 (= z$68 $x6737)))
(assert
 (= z$841 (and rb.empty push_ z$485 z$68 z$15)))
(assert
 (= z$842 (not z$841)))
(assert
 z$842)
(assert
 (= z$863 (and rb.empty push_ z$487 z$68 z$15)))
(assert
 (= z$864 (not z$863)))
(assert
 z$864)
(assert
 (let (($x572 (= rb.tail$next z$n0s4)))
 (= z$899 $x572)))
(assert
 (let ((?x459 (Concat_32_4_28 rb.tail$next z$n0s28)))
 (= z$787 ?x459)))
(assert
 (let ((?x6134 (Add_32_32_32 z$787 z$n1s32)))
 (= z$882 ?x6134)))
(assert
 (= z$888 (and (distinct z$882 z$n1s32) true)))
(assert
 (= z$900 (and z$899 z$888)))
(assert
 (= z$902 (not z$900)))
(assert
 z$902)
(assert
 (= z$877 (and (distinct z$46 z$n1s32) true)))
(assert
 (= z$898 (and z$15 z$877)))
(assert
 (= z$901 (not z$898)))
(assert
 z$901)
(assert
 (let (($x4582 (= z$303 z$n1s32)))
 (= z$914 $x4582)))
(assert
 (let (($x1963 (= z$882 z$n1s32)))
 (= z$906 $x1963)))
(assert
 (= z$924 (and rb.empty push_ z$459 z$914 z$906 z$309)))
(assert
 (= z$925 (not z$924)))
(assert
 z$925)
(assert
 (let (($x4458 (not z$412)))
 (= z$524 $x4458)))
(assert
 (let (($x2282 (not z$414)))
 (= z$525 $x2282)))
(assert
 (= z$983 (and (distinct s$43 z$n4s3) true)))
(assert
 (= z$984 (and z$410 z$524 z$525 z$983)))
(assert
 (= z$986 (not z$984)))
(assert
 z$986)
(assert
 (let (($x5456 (not z$485)))
 (= z$644 $x5456)))
(assert
 (let (($x2924 (not z$487)))
 (= z$645 $x2924)))
(assert
 (= z$677 (and (distinct s$43$next z$n4s3) true)))
(assert
 (= z$982 (and z$483 z$644 z$645 z$677)))
(assert
 (= z$985 (not z$982)))
(assert
 z$985)
(assert
 (let (($x6274 (Extract_1_3_3_4 |rb.mem[4]$next|)))
 (= z$948 $x6274)))
(assert
 (let (($x3225 (= |rb.mem[4]$next| z$n0s4)))
 (= z$1011 $x3225)))
(assert
 (= z$1012 (and z$948 z$1011)))
(assert
 (= z$1014 (not z$1012)))
(assert
 z$1014)
(assert
 (let (($x3951 (Extract_1_3_3_4 |rb.mem[4]|)))
 (= z$276 $x3951)))
(assert
 (= z$1010 (and z$276 z$13)))
(assert
 (= z$1013 (not z$1010)))
(assert
 z$1013)
(assert
 (let (($x2254 (= rb.head$next z$n0s4)))
 (= z$1037 $x2254)))
(assert
 (= z$1038 (and z$724 z$1037)))
(assert
 (= z$1040 (not z$1038)))
(assert
 z$1040)
(assert
 (= z$1036 (and z$85 z$3)))
(assert
 (= z$1039 (not z$1036)))
(assert
 z$1039)
(assert
 (let (($x1823 (= |rb.mem[0]$next| z$n0s4)))
 (= z$1098 $x1823)))
(assert
 (= z$1099 (and z$755 z$1098)))
(assert
 (= z$1101 (not z$1099)))
(assert
 z$1101)
(assert
 (= z$1097 (and z$125 z$5)))
(assert
 (= z$1100 (not z$1097)))
(assert
 z$1100)
(assert
 (= z$1144 (and z$744 z$1098)))
(assert
 (= z$1146 (not z$1144)))
(assert
 z$1146)
(assert
 (= z$1143 (and z$112 z$5)))
(assert
 (= z$1145 (not z$1143)))
(assert
 z$1145)
(assert
 (let (($x2300 (= sr.tail z$156)))
 (= z$819 $x2300)))
(assert
 (let (($x6675 (= |rb.mem[0]$next| sr.tail$next)))
 (= z$1059 $x6675)))
(assert
 (= z$1150 (and (distinct sr.tail$next |sr.mem[0]$next|) true)))
(assert
 (let (($x5374 (and z$819 z$601 z$598 z$595 z$592 z$366 z$1059 z$1150 z$28 z$98 z$158)))
 (= z$1157 $x5374)))
(assert
 (= z$1158 (not z$1157)))
(assert
 z$1158)
(assert
 (let (($x4998 (= sr.tail$next z$781)))
 (= z$813 $x4998)))
(assert
 (= z$1181 (and z$813 z$806 z$807 z$808 z$774 z$536)))
(assert
 (= z$1183 (not z$1181)))
(assert
 z$1183)
(assert
 (= z$1180 (and z$819 z$590 z$588 z$586 z$148 z$28)))
(assert
 (= z$1182 (not z$1180)))
(assert
 z$1182)
(assert
 (= z$650 (and (distinct |rb.mem[0]$next| |sr.mem[0]$next|) true)))
(assert
 (= z$1199 (and z$650 z$590 z$588 z$586 z$366 z$316 z$142 z$158)))
(assert
 (= z$1200 (not z$1199)))
(assert
 z$1200)
(assert
 (let (($x6138 (= s$43 z$n3s3)))
 (= z$1220 $x6138)))
(assert
 (= z$1221 (and z$525 z$1220)))
(assert
 (= z$1223 (not z$1221)))
(assert
 z$1223)
(assert
 (let (($x1952 (= s$43$next z$n3s3)))
 (= z$1210 $x1952)))
(assert
 (= z$1219 (and z$645 z$1210)))
(assert
 (= z$1222 (not z$1219)))
(assert
 z$1222)
(assert
 (let (($x2753 (= s$43 z$n2s3)))
 (= z$1243 $x2753)))
(assert
 (= z$1244 (and z$524 z$1243)))
(assert
 (= z$1246 (not z$1244)))
(assert
 z$1246)
(assert
 (let (($x5445 (= s$43$next z$n2s3)))
 (= z$1233 $x5445)))
(assert
 (= z$1242 (and z$644 z$1233)))
(assert
 (= z$1245 (not z$1242)))
(assert
 z$1245)
(assert
 (let (($x736 (= s$43 z$n1s3)))
 (= z$1265 $x736)))
(assert
 (= z$1266 (and z$525 z$1265)))
(assert
 (= z$1268 (not z$1266)))
(assert
 z$1268)
(assert
 (let (($x2874 (= s$43$next z$n1s3)))
 (= z$1256 $x2874)))
(assert
 (= z$1264 (and z$645 z$1256)))
(assert
 (= z$1267 (not z$1264)))
(assert
 z$1267)
(assert
 (let (($x5573 (Extract_1_2_2_4 |rb.mem[4]|)))
 (= z$270 $x5573)))
(assert
 (= z$617 (not z$270)))
(assert
 (let (($x5022 (= |rb.mem[4]| sr.tail)))
 (= z$940 $x5022)))
(assert
 (let (($x5020 (= sr.tail$next |sr.mem[4]$next|)))
 (= z$995 $x5020)))
(assert
 (let (($x2735 (= |sr.mem[3]| sr.tail)))
 (= z$996 $x2735)))
(assert
 (let ((?x1781 (ite z$317 |sr.mem[3]| |sr.mem[4]|)))
 (= z$380 ?x1781)))
(assert
 (let (($x5319 (= |sr.mem[4]$next| z$380)))
 (= z$382 $x5319)))
(assert
 (= z$1279 (and push_ z$617 z$940 z$995 z$996 z$470 z$382)))
(assert
 (= z$1280 (not z$1279)))
(assert
 z$1280)
(assert
 (= z$1392 (and z$32 z$33 z$319 z$314 z$433 z$527)))
(assert
 (= z$1394 (not z$1392)))
(assert
 z$1394)
(assert
 (let (($x5550 (not sr.empty$next)))
 (= z$566 $x5550)))
(assert
 (= z$1391 (and z$459 z$460 z$566 z$458 z$503 z$562)))
(assert
 (= z$1393 (not z$1391)))
(assert
 z$1393)
(assert
 (= z$630 (and (distinct z$467 z$n4s3) true)))
(assert
 (= z$1422 (and z$458 z$630)))
(assert
 (= z$1424 (not z$1422)))
(assert
 z$1424)
(assert
 (= z$518 (and (distinct z$389 z$n4s3) true)))
(assert
 (= z$1423 (and z$314 z$518)))
(assert
 (= z$1427 (not z$1423)))
(assert
 z$1427)
(assert
 (let (($x6294 (= z$338 z$n1s32)))
 (= z$915 $x6294)))
(assert
 (= z$1480 (and push_ z$915 z$458 z$362)))
(assert
 (= z$1481 (not z$1480)))
(assert
 z$1481)
(assert
 (= z$683 (and (distinct z$456 z$n1s32) true)))
(assert
 (= z$1522 (and push_ z$319 z$915 z$683 z$362)))
(assert
 (= z$1523 (not z$1522)))
(assert
 z$1523)
(assert
 (let ((?x1592 (Concat_32_4_28 rb.head$next z$n0s28)))
 (= z$785 ?x1592)))
(assert
 (= z$1362 (and (distinct z$785 z$n1s32) true)))
(assert
 (= z$1549 (and rb.empty push_ z$1362 z$914 z$309)))
(assert
 (= z$1550 (not z$1549)))
(assert
 z$1550)
(assert
 (let (($x5183 (= z$785 z$787)))
 (= z$789 $x5183)))
(assert
 (= z$1582 (and z$1572 z$906 z$789 z$309)))
(assert
 (= z$1583 (not z$1582)))
(assert
 z$1583)
(assert
 (= z$1661 (and rb.empty push_ z$483 z$1465 z$1634 z$68 z$590)))
(assert
 (= z$1662 (not z$1661)))
(assert
 z$1662)
(assert
 (let (($x4899 (= s$43 z$n4s3)))
 (= z$988 $x4899)))
(assert
 (= z$1702 (and z$412 z$988)))
(assert
 (= z$1704 (not z$1702)))
(assert
 z$1704)
(assert
 (let (($x10588 (= s$43$next z$n4s3)))
 (= z$990 $x10588)))
(assert
 (= z$1701 (and z$485 z$990)))
(assert
 (= z$1703 (not z$1701)))
(assert
 z$1703)
(assert
 (= z$1744 (and z$414 z$988)))
(assert
 (= z$1746 (not z$1744)))
(assert
 z$1746)
(assert
 (= z$1743 (and z$487 z$990)))
(assert
 (= z$1745 (not z$1743)))
(assert
 z$1745)
(assert
 (= z$1775 (and z$524 z$1220)))
(assert
 (= z$1777 (not z$1775)))
(assert
 z$1777)
(assert
 (= z$1774 (and z$644 z$1210)))
(assert
 (= z$1776 (not z$1774)))
(assert
 z$1776)
(assert
 (let (($x3864 (= rb.tail |sr.mem[2]|)))
 (= z$1754 $x3864)))
(assert
 (let (($x4268 (= rb.head |sr.mem[2]|)))
 (= z$1755 $x4268)))
(assert
 (= z$1845 (and rb.empty push_ z$487 z$1754 z$1755 z$68 z$586)))
(assert
 (= z$1846 (not z$1845)))
(assert
 z$1846)
(assert
 (let (($x1811 (not z$410)))
 (= z$523 $x1811)))
(assert
 (= z$1248 (and (distinct s$43 z$n2s3) true)))
(assert
 (= z$1880 (and z$412 z$523 z$525 z$1248)))
(assert
 (= z$1882 (not z$1880)))
(assert
 z$1882)
(assert
 (let (($x6736 (not z$483)))
 (= z$643 $x6736)))
(assert
 (= z$678 (and (distinct s$43$next z$n2s3) true)))
(assert
 (= z$1879 (and z$485 z$643 z$645 z$678)))
(assert
 (= z$1881 (not z$1879)))
(assert
 z$1881)
(assert
 (let (($x8786 (= rb.tail |sr.mem[1]|)))
 (= z$1891 $x8786)))
(assert
 (let (($x7204 (= rb.head |sr.mem[1]|)))
 (= z$1892 $x7204)))
(assert
 (= z$1914 (and rb.empty push_ z$485 z$1891 z$1892 z$68 z$588)))
(assert
 (= z$1915 (not z$1914)))
(assert
 z$1915)
(assert
 (= z$1225 (and (distinct s$43 z$n3s3) true)))
(assert
 (= z$1990 (and z$412 z$414 z$523 z$1225)))
(assert
 (= z$1992 (not z$1990)))
(assert
 z$1992)
(assert
 (= z$676 (and (distinct s$43$next z$n3s3) true)))
(assert
 (= z$1989 (and z$485 z$487 z$643 z$676)))
(assert
 (= z$1991 (not z$1989)))
(assert
 z$1991)
(assert
 (= z$2005 (and rb.empty push_ z$485 z$1754 z$1755 z$68 z$588)))
(assert
 (= z$2006 (not z$2005)))
(assert
 z$2006)
(assert
 (= z$2050 (and z$643 z$990)))
(assert
 (= z$2052 (not z$2050)))
(assert
 z$2052)
(assert
 (= z$2051 (and z$523 z$988)))
(assert
 (= z$2056 (not z$2051)))
(assert
 z$2056)
(assert
 (= z$1270 (and (distinct s$43 z$n1s3) true)))
(assert
 (= z$2077 (and z$414 z$523 z$524 z$1270)))
(assert
 (= z$2079 (not z$2077)))
(assert
 z$2079)
(assert
 (= z$679 (and (distinct s$43$next z$n1s3) true)))
(assert
 (= z$2076 (and z$487 z$643 z$644 z$679)))
(assert
 (= z$2078 (not z$2076)))
(assert
 z$2078)
(assert
 (let (($x1019 (= rb.head |sr.mem[0]|)))
 (= z$2104 $x1019)))
(assert
 (let (($x8492 (= rb.tail |sr.mem[0]|)))
 (= z$2107 $x8492)))
(assert
 (= z$2123 (and rb.empty push_ z$487 z$2104 z$2107 z$68 z$586)))
(assert
 (= z$2124 (not z$2123)))
(assert
 z$2124)
(assert
 (= z$622 (and (distinct z$311 z$n0s32) true)))
(assert
 (= z$2259 (and z$622 z$915)))
(assert
 (= z$2261 (not z$2259)))
(assert
 z$2261)
(assert
 (= z$2171 (and (distinct z$456 z$n0s32) true)))
(assert
 (let ((?x3082 (Add_32_32_32 z$456 z$n1s32)))
 (= z$885 ?x3082)))
(assert
 (let (($x5574 (= z$885 z$n1s32)))
 (= z$917 $x5574)))
(assert
 (= z$2260 (and z$2171 z$917)))
(assert
 (= z$2264 (not z$2260)))
(assert
 z$2264)
(assert
 (= z$927 (and (distinct rb.tail$next rb.head$next) true)))
(assert
 (= z$2294 (and z$460 z$566 z$927 z$503 z$562 z$543)))
(assert
 (= z$2296 (not z$2294)))
(assert
 z$2296)
(assert
 (= z$2295 (and z$33 z$319 z$1334 z$433 z$527 z$316)))
(assert
 (= z$2301 (not z$2295)))
(assert
 z$2301)
(assert
 (= z$2318 (and z$28 z$394)))
(assert
 (= z$2320 (not z$2318)))
(assert
 z$2320)
(assert
 (= z$2317 (and z$536 z$470)))
(assert
 (= z$2319 (not z$2317)))
(assert
 z$2319)
(assert
 (= z$2342 (and z$410 z$1220)))
(assert
 (= z$2344 (not z$2342)))
(assert
 z$2344)
(assert
 (= z$2341 (and z$483 z$1210)))
(assert
 (= z$2343 (not z$2341)))
(assert
 z$2343)
(assert
 (= z$2383 (and z$28 z$392)))
(assert
 (= z$2385 (not z$2383)))
(assert
 z$2385)
(assert
 (= z$2382 (and z$536 z$469)))
(assert
 (= z$2384 (not z$2382)))
(assert
 z$2384)
(assert
 (= z$2406 (and z$487 z$1233)))
(assert
 (= z$2408 (not z$2406)))
(assert
 z$2408)
(assert
 (= z$2407 (and z$414 z$1243)))
(assert
 (= z$2412 (not z$2407)))
(assert
 z$2412)
(assert
 (= z$2423 (and z$410 z$1243)))
(assert
 (= z$2425 (not z$2423)))
(assert
 z$2425)
(assert
 (= z$2422 (and z$483 z$1233)))
(assert
 (= z$2424 (not z$2422)))
(assert
 z$2424)
(assert
 (= z$2445 (and z$28 z$400)))
(assert
 (= z$2447 (not z$2445)))
(assert
 z$2447)
(assert
 (= z$2444 (and z$536 z$475)))
(assert
 (= z$2446 (not z$2444)))
(assert
 z$2446)
(assert
 (= z$2519 (and z$15 z$485 z$68)))
(assert
 (= z$2520 (not z$2519)))
(assert
 z$2520)
(assert
 (let (($x3626 (not pop_)))
 (= z$584 $x3626)))
(assert
 (= z$2557 (and z$487 z$584 z$68 z$15)))
(assert
 (= z$2558 (not z$2557)))
(assert
 z$2558)
(assert
 (let (($x2750 (= z$456 z$n1s32)))
 (= z$1526 $x2750)))
(assert
 (= z$2590 (and z$469 z$1526)))
(assert
 (= z$2592 (not z$2590)))
(assert
 z$2592)
(assert
 (= z$2591 (and z$392 z$1560)))
(assert
 (= z$2595 (not z$2591)))
(assert
 z$2595)
(assert
 (= z$2609 (and z$470 z$1526)))
(assert
 (= z$2611 (not z$2609)))
(assert
 z$2611)
(assert
 (= z$2610 (and z$394 z$1560)))
(assert
 (= z$2613 (not z$2610)))
(assert
 z$2613)
(assert
 (= z$2628 (and z$475 z$1526)))
(assert
 (= z$2630 (not z$2628)))
(assert
 z$2630)
(assert
 (= z$2629 (and z$400 z$1560)))
(assert
 (= z$2632 (not z$2629)))
(assert
 z$2632)
(assert
 (= z$522 (and (distinct z$389 z$n1s3) true)))
(assert
 (= z$2647 (and z$522 z$1560)))
(assert
 (= z$2649 (not z$2647)))
(assert
 z$2649)
(assert
 (= z$640 (and (distinct z$467 z$n1s3) true)))
(assert
 (= z$2646 (and z$640 z$1526)))
(assert
 (= z$2648 (not z$2646)))
(assert
 z$2648)
(assert
 (= z$2669 (and push_ z$487 z$15 z$68 z$1572)))
(assert
 (= z$2670 (not z$2669)))
(assert
 z$2670)
(assert
 (= z$2733 (and z$1572 z$586 z$98)))
(assert
 (= z$2735 (not z$2733)))
(assert
 z$2735)
(assert
 (let (($x1186 (= z$785 z$n1s32)))
 (= z$1553 $x1186)))
(assert
 (= z$2734 (and z$1553 z$808 z$734)))
(assert
 (= z$2737 (not z$2734)))
(assert
 z$2737)
(assert
 (= z$2889 (and z$1560 z$458 z$362 z$843)))
(assert
 (= z$2890 (not z$2889)))
(assert
 z$2890)
(assert
 (= z$2917 (and push_ z$15 z$309 z$1572 z$1553)))
(assert
 (= z$2918 (not z$2917)))
(assert
 z$2918)
(assert
 (= z$2991 (and rb.empty push_ z$1572 z$1553 z$309)))
(assert
 (= z$2992 (not z$2991)))
(assert
 z$2992)
(assert
 (= z$3166 (and z$33 pop_ z$645 z$843 z$68 z$911)))
(assert
 (= z$3167 (not z$3166)))
(assert
 z$3167)
(assert
 (= z$3187 (and z$911 z$68 z$483)))
(assert
 (= z$3188 (not z$3187)))
(assert
 z$3188)
(assert
 (= z$541 (and (distinct sr.tail$next z$n0s4) true)))
(assert
 (let (($x1672 (= z$456 z$n0s32)))
 (= z$2267 $x1672)))
(assert
 (= z$3218 (and z$541 z$2267)))
(assert
 (= z$3220 (not z$3218)))
(assert
 z$3220)
(assert
 (= z$3219 (and z$549 z$323)))
(assert
 (= z$3224 (not z$3219)))
(assert
 z$3224)
(assert
 (let (($x9010 (Extract_1_0_0_4 |rb.mem[1]$next|)))
 (= z$1114 $x9010)))
(assert
 (let (($x1493 (not z$1114)))
 (= z$1718 $x1493)))
(assert
 (let (($x7534 (Extract_1_1_1_4 |rb.mem[1]$next|)))
 (= z$1120 $x7534)))
(assert
 (let (($x9359 (not z$1120)))
 (= z$1719 $x9359)))
(assert
 (let (($x9598 (Extract_1_2_2_4 |rb.mem[1]$next|)))
 (= z$1126 $x9598)))
(assert
 (let (($x5514 (not z$1126)))
 (= z$1720 $x5514)))
(assert
 (let (($x9947 (Extract_1_3_3_4 |rb.mem[1]$next|)))
 (= z$1132 $x9947)))
(assert
 (let (($x3010 (not z$1132)))
 (= z$1733 $x3010)))
(assert
 (= z$3202 (and (distinct |rb.mem[1]$next| z$n0s4) true)))
(assert
 (= z$3237 (and z$1718 z$1719 z$1720 z$1733 z$3202)))
(assert
 (= z$3239 (not z$3237)))
(assert
 z$3239)
(assert
 (= z$3236 (and z$603 z$604 z$605 z$606 z$2636)))
(assert
 (= z$3238 (not z$3236)))
(assert
 z$3238)
(assert
 (= z$3260 (and z$1732 z$586 z$7)))
(assert
 (= z$3262 (not z$3260)))
(assert
 z$3262)
(assert
 (= z$1110 (and z$716 z$728)))
(assert
 (= z$1112 (and z$1110 z$734)))
(assert
 (let (($x4997 (ite z$1112 z$741 z$1114)))
 (= z$1116 $x4997)))
(assert
 (= z$1118 (and z$1110 z$748)))
(assert
 (let (($x377 (ite z$1118 z$752 z$1120)))
 (= z$1122 $x377)))
(assert
 (= z$1124 (and z$1110 z$759)))
(assert
 (let (($x4152 (ite z$1124 z$763 z$1126)))
 (= z$1128 $x4152)))
(assert
 (= z$1130 (and z$1110 z$770)))
(assert
 (let (($x7631 (ite z$1130 z$774 z$1132)))
 (= z$1134 $x7631)))
(assert
 (let ((?x10801 (Concat_4_1_1_1_1 z$1116 z$1122 z$1128 z$1134)))
 (= z$1136 ?x10801)))
(assert
 (= z$1735 (and (distinct z$1136 z$n0s4) true)))
(assert
 (let (($x4215 (= |rb.mem[1]$next| z$n0s4)))
 (= z$1734 $x4215)))
(assert
 (= z$3261 (and z$1735 z$808 z$1734)))
(assert
 (= z$3273 (not z$3261)))
(assert
 z$3273)
(assert
 (= z$1717 (and (distinct |rb.mem[1]| z$186) true)))
(assert
 (= z$3297 (and z$1717 z$586)))
(assert
 (= z$3299 (not z$3297)))
(assert
 z$3299)
(assert
 (= z$1723 (and (distinct |rb.mem[1]$next| z$1136) true)))
(assert
 (= z$3298 (and z$1723 z$808)))
(assert
 (= z$3303 (not z$3298)))
(assert
 z$3303)
(assert
 (= z$3317 (and pop_ z$319 z$843 z$1560 z$541 z$362)))
(assert
 (= z$3318 (not z$3317)))
(assert
 z$3318)
(assert
 (= z$2179 (and (distinct z$346 z$n0s32) true)))
(assert
 (= z$3331 (and z$1560 z$2179)))
(assert
 (= z$3333 (not z$3331)))
(assert
 z$3333)
(assert
 (let ((?x10157 (Sub_32_32_32 z$456 z$n1s32)))
 (= z$2182 ?x10157)))
(assert
 (= z$2187 (and (distinct z$2182 z$n0s32) true)))
(assert
 (= z$3332 (and z$1526 z$2187)))
(assert
 (= z$3337 (not z$3332)))
(assert
 z$3337)
(assert
 (let (($x10967 (= z$2182 z$n0s32)))
 (= z$3340 $x10967)))
(assert
 (= z$3355 (and z$2267 z$3340)))
(assert
 (= z$3357 (not z$3355)))
(assert
 z$3357)
(assert
 (let (($x3619 (= z$346 z$n0s32)))
 (= z$3336 $x3619)))
(assert
 (= z$3356 (and z$323 z$3336)))
(assert
 (= z$3360 (not z$3356)))
(assert
 z$3360)
(assert
 (= z$3378 (and z$1720 z$72 z$590 z$588 z$188 z$134)))
(assert
 (= z$3379 (not z$3378)))
(assert
 z$3379)
(assert
 (= z$2013 (and (distinct |rb.mem[1]$next| |sr.mem[0]$next|) true)))
(assert
 (let (($x3876 (and z$598 z$595 z$592 z$366 z$323 z$1132 z$1718 z$1719 z$1720 z$2013 z$148)))
 (= z$3412 $x3876)))
(assert
 (= z$3413 (not z$3412)))
(assert
 z$3413)
(assert
 (= z$3429 (and z$1719 z$72 z$590 z$588 z$188 z$121)))
(assert
 (= z$3430 (not z$3429)))
(assert
 z$3430)
(assert
 (= z$3446 (and z$1718 z$72 z$590 z$588 z$188 z$108)))
(assert
 (= z$3447 (not z$3446)))
(assert
 z$3447)
(assert
 (= z$3493 (and z$1132 z$72 z$601 z$590 z$588 z$188)))
(assert
 (= z$3494 (not z$3493)))
(assert
 z$3494)
(assert
 (let (($x5950 (and z$595 z$592 z$366 z$323 z$1126 z$1132 z$1718 z$1719 z$2013 z$134 z$148)))
 (= z$3509 $x5950)))
(assert
 (= z$3510 (not z$3509)))
(assert
 z$3510)
(assert
 (= z$3521 (and z$1126 z$72 z$598 z$590 z$588 z$188)))
(assert
 (= z$3522 (not z$3521)))
(assert
 z$3522)
(assert
 (= z$3547 (and z$1733 z$72 z$590 z$588 z$188 z$148)))
(assert
 (= z$3548 (not z$3547)))
(assert
 z$3548)
(assert
 (let (($x9622 (and z$601 z$595 z$592 z$366 z$323 z$1126 z$1718 z$1719 z$1733 z$2013 z$134)))
 (= z$3560 $x9622)))
(assert
 (= z$3561 (not z$3560)))
(assert
 z$3561)
(assert
 (= z$3586 (and z$1120 z$72 z$595 z$590 z$588 z$188)))
(assert
 (= z$3587 (not z$3586)))
(assert
 z$3587)
(assert
 (let (($x2715 (and z$601 z$592 z$366 z$323 z$1120 z$1126 z$1718 z$1733 z$2013 z$121 z$134)))
 (= z$3601 $x2715)))
(assert
 (= z$3602 (not z$3601)))
(assert
 z$3602)
(assert
 (let (($x14142 (and z$592 z$366 z$323 z$1120 z$1126 z$1132 z$1718 z$2013 z$121 z$134 z$148)))
 (= z$3630 $x14142)))
(assert
 (= z$3631 (not z$3630)))
(assert
 z$3631)
(assert
 (let (($x12854 (and z$598 z$592 z$366 z$323 z$1120 z$1132 z$1718 z$1720 z$2013 z$121 z$148)))
 (= z$3658 $x12854)))
(assert
 (= z$3659 (not z$3658)))
(assert
 z$3659)
(assert
 (let (($x9348 (and z$601 z$598 z$592 z$366 z$323 z$1120 z$1718 z$1720 z$1733 z$2013 z$121)))
 (= z$3684 $x9348)))
(assert
 (= z$3685 (not z$3684)))
(assert
 z$3685)
(assert
 (= z$3710 (and z$1114 z$72 z$592 z$590 z$588 z$188)))
(assert
 (= z$3711 (not z$3710)))
(assert
 z$3711)
(assert
 (let (($x4384 (and z$601 z$598 z$366 z$323 z$1114 z$1120 z$1720 z$1733 z$2013 z$108 z$121)))
 (= z$3725 $x4384)))
(assert
 (= z$3726 (not z$3725)))
(assert
 z$3726)
(assert
 (let (($x14520 (and z$598 z$366 z$323 z$1114 z$1120 z$1132 z$1720 z$2013 z$108 z$121 z$148)))
 (= z$3755 $x14520)))
(assert
 (= z$3756 (not z$3755)))
(assert
 z$3756)
(assert
 (= z$2015 (and (distinct z$186 z$n15s4) true)))
(assert
 (= z$3784 (and z$1114 z$1120 z$1126 z$1132 z$2015 z$188)))
(assert
 (= z$3785 (not z$3784)))
(assert
 z$3785)
(assert
 (let (($x13793 (and z$366 z$323 z$148 z$134 z$121 z$108 z$2013 z$1132 z$1126 z$1120 z$1114)))
 (= z$3802 $x13793)))
(assert
 (= z$3803 (not z$3802)))
(assert
 z$3803)
(assert
 (let (($x11513 (and z$601 z$366 z$323 z$1114 z$1120 z$1126 z$1733 z$2013 z$108 z$121 z$134)))
 (= z$3832 $x11513)))
(assert
 (= z$3833 (not z$3832)))
(assert
 z$3833)
(assert
 (let (($x10901 (and z$601 z$595 z$366 z$323 z$1114 z$1126 z$1719 z$1733 z$2013 z$108 z$134)))
 (= z$3861 $x10901)))
(assert
 (= z$3862 (not z$3861)))
(assert
 z$3862)
(assert
 (let (($x14082 (and z$595 z$366 z$323 z$1114 z$1126 z$1132 z$1719 z$2013 z$108 z$134 z$148)))
 (= z$3890 $x14082)))
(assert
 (= z$3891 (not z$3890)))
(assert
 z$3891)
(assert
 (let (($x15252 (and z$598 z$595 z$366 z$323 z$1114 z$1132 z$1719 z$1720 z$2013 z$108 z$148)))
 (= z$3917 $x15252)))
(assert
 (= z$3918 (not z$3917)))
(assert
 z$3918)
(assert
 (= z$3204 (and (distinct sr.tail |rb.mem[1]|) true)))
(assert
 (= z$3940 (and z$164 z$604 z$605 z$606 z$3204 z$1560)))
(assert
 (= z$3942 (not z$3940)))
(assert
 z$3942)
(assert
 (= z$2059 (and (distinct sr.tail$next |rb.mem[1]$next|) true)))
(assert
 (= z$3941 (and z$1114 z$1719 z$1720 z$1733 z$2059 z$1526)))
(assert
 (= z$3946 (not z$3941)))
(assert
 z$3946)
(assert
 (let (($x13337 (and z$601 z$598 z$595 z$366 z$323 z$1114 z$1719 z$1720 z$1733 z$2013 z$108)))
 (= z$3965 $x13337)))
(assert
 (= z$3966 (not z$3965)))
(assert
 z$3966)
(assert
 (= z$4000 (and z$1553 z$724)))
(assert
 (= z$4002 (not z$4000)))
(assert
 z$4002)
(assert
 (= z$3999 (and z$1572 z$85)))
(assert
 (= z$4001 (not z$3999)))
(assert
 z$4001)
(assert
 (= z$1301 (and (distinct |sr.mem[0]$next| z$n0s4) true)))
(assert
 (= z$4015 (and z$1301 z$601 z$598 z$595 z$592 z$366 z$323 z$72)))
(assert
 (= z$4016 (not z$4015)))
(assert
 z$4016)
(assert
 (= z$4034 (and z$1572 z$79)))
(assert
 (= z$4036 (not z$4034)))
(assert
 z$4036)
(assert
 (= z$4035 (and z$1553 z$720)))
(assert
 (= z$4038 (not z$4035)))
(assert
 z$4038)
(assert
 (= z$4065 (and z$28 z$402)))
(assert
 (= z$4067 (not z$4065)))
(assert
 z$4067)
(assert
 (= z$4064 (and z$536 z$476)))
(assert
 (= z$4066 (not z$4064)))
(assert
 z$4066)
(assert
 (= z$4133 (and push_ z$1560 z$458 z$362)))
(assert
 (= z$4134 (not z$4133)))
(assert
 z$4134)
(assert
 (= z$4153 (and z$487 z$15 z$68 z$72)))
(assert
 (= z$4154 (not z$4153)))
(assert
 z$4154)
(assert
 (= z$4211 (and push_ z$1560 z$470 z$362)))
(assert
 (= z$4212 (not z$4211)))
(assert
 z$4212)
(assert
 (= z$4257 (and push_ z$1560 z$469 z$362)))
(assert
 (= z$4258 (not z$4257)))
(assert
 z$4258)
(assert
 (= z$635 (and (distinct z$467 z$n2s3) true)))
(assert
 (= z$4277 (and push_ z$319 z$1560 z$635 z$362)))
(assert
 (= z$4278 (not z$4277)))
(assert
 z$4278)
(assert
 (let (($x9845 (= rb.tail |rb.mem[1]|)))
 (= z$4319 $x9845)))
(assert
 (= z$4337 (and z$182 z$4319 z$15)))
(assert
 (= z$4339 (not z$4337)))
(assert
 z$4339)
(assert
 (let (($x16641 (= rb.tail$next |rb.mem[1]$next|)))
 (= z$4321 $x16641)))
(assert
 (= z$4338 (and z$1132 z$4321 z$899)))
(assert
 (= z$4345 (not z$4338)))
(assert
 z$4345)
(assert
 (= z$4363 (and push_ z$487 z$603 z$68 z$4319 z$1334)))
(assert
 (= z$4364 (not z$4363)))
(assert
 z$4364)
(assert
 (= z$4400 (and z$1572 z$808 z$807 z$734 z$309)))
(assert
 (= z$4401 (not z$4400)))
(assert
 z$4401)
(assert
 (= z$1369 (and (distinct z$785 z$885) true)))
(assert
 (= z$4450 (and z$1572 z$1526 z$1369 z$1362 z$309)))
(assert
 (= z$4451 (not z$4450)))
(assert
 z$4451)
(assert
 (let (($x806 (= z$885 z$787)))
 (= z$4460 $x806)))
(assert
 (= z$4478 (and z$906 z$4460)))
(assert
 (= z$4481 (not z$4478)))
(assert
 z$4481)
(assert
 (let (($x12242 (= z$338 z$43)))
 (= z$4479 $x12242)))
(assert
 (= z$4480 (and z$911 z$4479)))
(assert
 (= z$4484 (not z$4480)))
(assert
 z$4484)
(assert
 (let (($x11482 (= z$301 z$338)))
 (= z$4468 $x11482)))
(assert
 (= z$4496 (and z$4468 z$1560 z$906 z$789 z$309)))
(assert
 (= z$4497 (not z$4496)))
(assert
 z$4497)
(assert
 (= z$4515 (and z$1114 z$4321 z$899)))
(assert
 (= z$4517 (not z$4515)))
(assert
 z$4517)
(assert
 (= z$4514 (and z$164 z$4319 z$15)))
(assert
 (= z$4516 (not z$4514)))
(assert
 z$4516)
(assert
 (= z$4538 (and push_ z$487 z$15 z$68 z$4468)))
(assert
 (= z$4539 (not z$4538)))
(assert
 z$4539)
(assert
 (= z$4589 (and z$32 z$645 z$68 z$72)))
(assert
 (= z$4590 (not z$4589)))
(assert
 z$4590)
(assert
 (let (($x14862 (= z$43 z$n1s32)))
 (= z$1561 $x14862)))
(assert
 (= z$4615 (and rb.empty push_ z$485 z$68 z$1561)))
(assert
 (= z$4616 (not z$4615)))
(assert
 z$4616)
(assert
 (= z$4629 (and rb.empty push_ z$483 z$68 z$1561)))
(assert
 (= z$4630 (not z$4629)))
(assert
 z$4630)
(assert
 (let (($x16664 (= z$43 z$n0s32)))
 (= z$2835 $x16664)))
(assert
 (= z$4648 (and z$877 z$2835)))
(assert
 (= z$4650 (not z$4648)))
(assert
 z$4650)
(assert
 (= z$4660 (and z$622 z$847)))
(assert
 (= z$4661 (not z$4660)))
(assert
 z$4661)
(assert
 (= z$4680 (and z$314 z$3336)))
(assert
 (= z$4682 (not z$4680)))
(assert
 z$4682)
(assert
 (= z$4679 (and z$458 z$3340)))
(assert
 (= z$4681 (not z$4679)))
(assert
 z$4681)
(assert
 (= z$4694 (and z$284 z$911 z$1348)))
(assert
 (= z$4696 (not z$4694)))
(assert
 z$4696)
(assert
 (let ((?x15821 (Extract_4_3_0_32 z$882)))
 (= z$2911 ?x15821)))
(assert
 (let (($x15161 (= z$2911 rb.head$next)))
 (= z$2913 $x15161)))
(assert
 (= z$4695 (and z$2913 z$906 z$1362)))
(assert
 (= z$4698 (not z$4695)))
(assert
 z$4698)
(assert
 (= z$2177 (and (distinct z$346 z$n4s32) true)))
(assert
 (= z$4717 (and z$2177 z$843 z$316 z$362 z$458)))
(assert
 (= z$4718 (not z$4717)))
(assert
 z$4718)
(assert
 (= z$4745 (and z$309 z$4468 z$1560 z$1553)))
(assert
 (= z$4746 (not z$4745)))
(assert
 z$4746)
(assert
 (= z$4755 (and z$911 z$1345 z$2150)))
(assert
 (= z$4757 (not z$4755)))
(assert
 z$4757)
(assert
 (= z$1356 (and (distinct z$303 z$338) true)))
(assert
 (let (($x8478 (and z$319 z$459 z$1334 z$15 z$309 z$316 z$362 z$1356 z$917 z$906)))
 (= z$4773 $x8478)))
(assert
 (= z$4774 (not z$4773)))
(assert
 z$4774)
(assert
 (= z$1366 (and (distinct z$456 z$785) true)))
(assert
 (let ((?x6145 (Add_32_32_32 z$785 z$n1s32)))
 (= z$880 ?x6145)))
(assert
 (let (($x14027 (= z$885 z$880)))
 (= z$2853 $x14027)))
(assert
 (= z$4800 (and z$1366 z$2853)))
(assert
 (= z$4802 (not z$4800)))
(assert
 z$4802)
(assert
 (= z$1351 (and (distinct z$311 z$301) true)))
(assert
 (let (($x18040 (= z$338 z$303)))
 (= z$2852 $x18040)))
(assert
 (= z$4799 (and z$1351 z$2852)))
(assert
 (= z$4801 (not z$4799)))
(assert
 z$4801)
(assert
 (let (($x9654 (= z$785 z$456)))
 (= z$1383 $x9654)))
(assert
 (= z$1314 (and (distinct sr.tail$next rb.head$next) true)))
(assert
 (= z$4825 (and z$1383 z$1314)))
(assert
 (= z$4827 (not z$4825)))
(assert
 z$4827)
(assert
 (let (($x11369 (= z$301 z$311)))
 (= z$1382 $x11369)))
(assert
 (= z$4824 (and z$1382 z$1304)))
(assert
 (= z$4826 (not z$4824)))
(assert
 z$4826)
(assert
 (let (($x9850 (= rb.head$next sr.tail$next)))
 (= z$708 $x9850)))
(assert
 (= z$4849 (and push_ z$708 z$15 z$309 z$362 z$1560 z$4468)))
(assert
 (= z$4850 (not z$4849)))
(assert
 z$4850)
(assert
 (= z$4862 (and z$15 z$1334 z$1382)))
(assert
 (= z$4863 (not z$4862)))
(assert
 z$4863)
(assert
 (let (($x6520 (and push_ z$319 z$1314 z$309 z$4468 z$1560 z$1369 z$362)))
 (= z$4880 $x6520)))
(assert
 (= z$4881 (not z$4880)))
(assert
 z$4881)
(assert
 (= z$4894 (and z$15 z$1345 z$1354)))
(assert
 (= z$4896 (not z$4894)))
(assert
 z$4896)
(assert
 (= z$1365 (and (distinct z$880 z$n4s32) true)))
(assert
 (let (($x12990 (= z$785 z$885)))
 (= z$4454 $x12990)))
(assert
 (= z$4910 (and push_ z$319 z$362 z$1365 z$1560 z$4454)))
(assert
 (= z$4911 (not z$4910)))
(assert
 z$4911)
(assert
 (= z$1350 (and (distinct z$303 z$n4s32) true)))
(assert
 (= z$4925 (and z$15 z$557 z$1345 z$1350)))
(assert
 (= z$4926 (not z$4925)))
(assert
 z$4926)
(assert
 (let (($x11982 (= z$303 z$n4s32)))
 (= z$4928 $x11982)))
(assert
 (let (($x3519 (= z$880 z$n1s32)))
 (= z$916 $x3519)))
(assert
 (= z$4948 (and z$309 z$4928 z$916)))
(assert
 (= z$4949 (not z$4948)))
(assert
 z$4949)
(assert
 (let (($x6230 (= z$880 z$n4s32)))
 (= z$4914 $x6230)))
(assert
 (= z$4977 (and z$4914 z$808 z$734)))
(assert
 (= z$4979 (not z$4977)))
(assert
 z$4979)
(assert
 (= z$4976 (and z$4928 z$586 z$98)))
(assert
 (= z$4978 (not z$4976)))
(assert
 z$4978)
(assert
 (= z$4991 (and z$73 z$1344 z$1345 z$1451)))
(assert
 (= z$4992 (not z$4991)))
(assert
 z$4992)
(assert
 (= z$5002 (and z$73 z$1306 z$1348)))
(assert
 (= z$5003 (not z$5002)))
(assert
 z$5003)
(assert
 (= z$4239 (and (distinct |sr.mem[2]| |rb.mem[0]|) true)))
(assert
 (= z$5013 (and z$15 z$557 z$1345 z$4239)))
(assert
 (= z$5014 (not z$5013)))
(assert
 z$5014)
(assert
 z$20)
(assert
 (= z$2872 (and (distinct |sr.mem[2]| z$n0s4) true)))
(assert
 (= z$5035 (and z$1048 z$1348 z$2872)))
(assert
 (= z$5037 (not z$5035)))
(assert
 z$5037)
(assert
 (= z$1456 (and (distinct rb.tail |sr.mem[3]|) true)))
(assert
 (= z$5044 (and z$557 z$1348 z$1456 z$4468)))
(assert
 (= z$5045 (not z$5044)))
(assert
 z$5045)
(assert
 (= z$5064 (and z$4468 z$470 z$362 z$316 z$72 z$319)))
(assert
 (= z$5065 (not z$5064)))
(assert
 z$5065)
(assert
 (= z$625 (and (distinct z$467 z$n3s3) true)))
(assert
 (= z$5098 (and z$4928 z$4468 z$625 z$362 z$319 z$72)))
(assert
 (= z$5099 (not z$5098)))
(assert
 z$5099)
(assert
 z$22)
(assert
 z$24)
(assert
 (= z$5151 (and z$4454 z$1526 z$724)))
(assert
 (= z$5153 (not z$5151)))
(assert
 z$5153)
(assert
 (= z$5150 (and z$4468 z$1560 z$85)))
(assert
 (= z$5152 (not z$5150)))
(assert
 z$5152)
(assert
 (= z$5170 (and z$4468 z$1560 z$72)))
(assert
 (= z$5172 (not z$5170)))
(assert
 z$5172)
(assert
 (= z$5171 (and z$4454 z$1526 z$716)))
(assert
 (= z$5174 (not z$5171)))
(assert
 z$5174)
(assert
 (= z$2184 (and (distinct z$2182 z$n1s32) true)))
(assert
 (= z$5187 (and push_ z$2184 z$1560 z$683 z$362)))
(assert
 (= z$5188 (not z$5187)))
(assert
 z$5188)
(assert
 (= z$2176 (and (distinct z$346 z$n1s32) true)))
(assert
 (= z$5203 (and z$549 z$557 z$2176)))
(assert
 (= z$5204 (not z$5203)))
(assert
 z$5204)
(assert
 (= z$5216 (and z$20 z$549 z$557 z$2636)))
(assert
 (= z$5217 (not z$5216)))
(assert
 z$5217)
(assert
 (let (($x16743 (= sr.tail z$n1s4)))
 (= z$5305 $x16743)))
(assert
 (= z$5348 (and z$5305 z$843 z$584 z$640 z$362)))
(assert
 (= z$5349 (not z$5348)))
(assert
 z$5349)
(assert
 (= z$5364 (and (distinct sr.tail$next z$n1s4) true)))
(assert
 (= z$5377 (and push_ z$319 z$5364 z$915 z$362)))
(assert
 (= z$5378 (not z$5377)))
(assert
 z$5378)
(assert
 (= z$5352 (and (distinct sr.tail z$n1s4) true)))
(assert
 (= z$5395 (and z$1048 z$1348 z$5352)))
(assert
 (= z$5396 (not z$5395)))
(assert
 z$5396)
(assert
 (let (($x14435 (= sr.tail z$n2s4)))
 (= z$5497 $x14435)))
(assert
 (= z$5561 (and z$5497 z$843 z$584 z$635 z$362)))
(assert
 (= z$5562 (not z$5561)))
(assert
 z$5562)
(assert
 (= z$5576 (and (distinct sr.tail$next z$n2s4) true)))
(assert
 (= z$5589 (and z$5576 z$319 z$79 z$362 z$1560)))
(assert
 (= z$5590 (not z$5589)))
(assert
 z$5590)
(assert
 (= z$5565 (and (distinct sr.tail z$n2s4) true)))
(assert
 (= z$5603 (and z$549 z$5352 z$5565)))
(assert
 (= z$5604 (not z$5603)))
(assert
 z$5604)
(assert
 (= z$5616 (and z$20 z$1107 z$5305)))
(assert
 (= z$5617 (not z$5616)))
(assert
 z$5617)
(assert
 (= z$5628 (and z$1334 z$1572 z$2152)))
(assert
 (= z$5629 (not z$5628)))
(assert
 z$5629)
(assert
 (= z$5652 (and z$33 pop_ z$843 z$911 z$899 z$299)))
(assert
 (= z$5653 (not z$5652)))
(assert
 z$5653)
(assert
 (= z$5666 (and z$15 z$33 z$323 z$1348)))
(assert
 (= z$5667 (not z$5666)))
(assert
 z$5667)
(assert
 (= z$5680 (and rb.empty z$1560)))
(assert
 (= z$5681 (not z$5680)))
(assert
 z$5681)
(assert
 (= z$5688 (and z$15 z$18 z$28 z$319 z$1107)))
(assert
 (= z$5689 (not z$5688)))
(assert
 z$5689)
(assert
 (= z$5699 (and z$18 z$1560 z$2636)))
(assert
 (= z$5700 (not z$5699)))
(assert
 z$5700)
(assert
 (= z$5711 (and z$1560 z$5497)))
(assert
 (= z$5712 (not z$5711)))
(assert
 z$5712)
(assert
 (= z$5722 (and z$7 z$2197 z$5305)))
(assert
 (= z$5723 (not z$5722)))
(assert
 z$5723)
(assert
 (= z$5731 (and z$1560 z$2090)))
(assert
 (= z$5733 (not z$5731)))
(assert
 z$5733)
(assert
 (= z$5744 (and z$1345 z$2835 z$323)))
(assert
 (= z$5746 (not z$5744)))
(assert
 z$5746)
(assert
 (= z$1359 (and (distinct rb.tail$next sr.tail$next) true)))
(assert
 (let (($x13194 (= z$787 z$n0s32)))
 (= z$2838 $x13194)))
(assert
 (= z$5745 (and z$1359 z$2838 z$2267)))
(assert
 (= z$5748 (not z$5745)))
(assert
 z$5748)
(assert
 (= z$2235 (and (distinct z$787 z$n0s32) true)))
(assert
 (= z$5766 (and z$906 z$2235)))
(assert
 (= z$5768 (not z$5766)))
(assert
 z$5768)
(assert
 (= z$5765 (and z$911 z$2784)))
(assert
 (= z$5767 (not z$5765)))
(assert
 z$5767)
(assert
 (= z$791 (and (distinct z$787 z$n1s32) true)))
(assert
 (= z$5785 (and z$33 pop_ z$843 z$911 z$791 z$299)))
(assert
 (= z$5786 (not z$5785)))
(assert
 z$5786)
(assert
 (= z$691 (and (distinct z$43 z$n1s32) true)))
(assert
 (= z$5797 (and z$691 z$847)))
(assert
 (= z$5799 (not z$5797)))
(assert
 z$5799)
(assert
 (= z$1497 (and (distinct z$46 z$301) true)))
(assert
 (= z$5809 (and z$847 z$1348 z$1497 z$2152)))
(assert
 (= z$5810 (not z$5809)))
(assert
 z$5810)
(assert
 (let (($x7371 (= z$46 z$301)))
 (= z$5812 $x7371)))
(assert
 (= z$620 (and (distinct rb.head z$48) true)))
(assert
 (= z$5825 (and z$5812 z$620)))
(assert
 (= z$5827 (not z$5825)))
(assert
 z$5827)
(assert
 (let (($x17074 (= z$882 z$785)))
 (= z$5815 $x17074)))
(assert
 (= z$4701 (and (distinct rb.head$next z$2911) true)))
(assert
 (= z$5826 (and z$5815 z$4701)))
(assert
 (= z$5831 (not z$5826)))
(assert
 z$5831)
(assert
 (= z$5847 (and z$483 z$1256)))
(assert
 (= z$5849 (not z$5847)))
(assert
 z$5849)
(assert
 (= z$5848 (and z$410 z$1265)))
(assert
 (= z$5853 (not z$5848)))
(assert
 z$5853)
(assert
 (let (($x15383 (= z$2182 z$n4s32)))
 (= z$4725 $x15383)))
(assert
 (= z$5870 (and z$2267 z$4725)))
(assert
 (= z$5872 (not z$5870)))
(assert
 z$5872)
(assert
 (let (($x9362 (= z$346 z$n4s32)))
 (= z$4721 $x9362)))
(assert
 (= z$5869 (and z$323 z$4721)))
(assert
 (= z$5871 (not z$5869)))
(assert
 z$5871)
(assert
 (let (($x19093 (= rb.tail z$n1s4)))
 (= z$5968 $x19093)))
(assert
 (= z$6012 (and z$5968 z$483 z$68)))
(assert
 (= z$6013 (not z$6012)))
(assert
 z$6013)
(assert
 (= z$6041 (and (distinct rb.tail$next z$n1s4) true)))
(assert
 (= z$6052 (and z$33 pop_ z$843 z$299 z$911 z$6041)))
(assert
 (= z$6053 (not z$6052)))
(assert
 z$6053)
(assert
 (= z$6016 (and (distinct rb.tail z$n1s4) true)))
(assert
 (= z$6069 (and z$847 z$6016)))
(assert
 (= z$6070 (not z$6069)))
(assert
 z$6070)
(assert
 (let (($x10069 (= |rb.mem[3]$next| z$248)))
 (= z$250 $x10069)))
(assert
 z$250)
(assert
 z$11)
(assert
 (= z$2351 (and (distinct |rb.mem[3]| z$n0s4) true)))
(assert
 (= z$6103 (and z$18 z$2351)))
(assert
 (= z$6104 (not z$6103)))
(assert
 z$6104)
(assert
 (= z$6112 (and rb.empty z$2351)))
(assert
 (= z$6114 (not z$6112)))
(assert
 z$6114)
(assert
 (= z$6118 (and z$18 z$2351 z$5968)))
(assert
 (= z$6120 (not z$6118)))
(assert
 z$6120)
(assert
 z$9)
(assert
 (= z$2369 (and (distinct |rb.mem[2]| z$n0s4) true)))
(assert
 (= z$6143 (and rb.empty z$2369)))
(assert
 (= z$6145 (not z$6143)))
(assert
 z$6145)
(assert
 (= z$6155 (and z$18 z$2369)))
(assert
 (= z$6157 (not z$6155)))
(assert
 z$6157)
(assert
 (= z$6163 (and z$18 z$2369 z$5968)))
(assert
 (= z$6164 (not z$6163)))
(assert
 z$6164)
(assert
 (= z$1690 (and (distinct z$218 z$n0s4) true)))
(assert
 (= z$6174 (and z$18 z$843 z$1690 z$5968)))
(assert
 (= z$6175 (not z$6174)))
(assert
 z$6175)
(assert
 (= z$6199 (and z$584 z$645 z$5968 z$68)))
(assert
 (= z$6200 (not z$6199)))
(assert
 z$6200)
(assert
 (= z$6221 (and z$18 z$2636 z$5968)))
(assert
 (= z$6222 (not z$6221)))
(assert
 z$6222)
(assert
 (= z$6232 (and z$2090 z$2636 z$5968)))
(assert
 (= z$6233 (not z$6232)))
(assert
 z$6233)
(assert
 (let (($x21172 (= z$248 z$n0s4)))
 (= z$4024 $x21172)))
(assert
 z$4024)
(assert
 z$614)
(assert
 (=> p$0 pop$next))
(assert
 (let (($x5527 (not rb.empty$next)))
 (let (($x5617 (= z$460 $x5527)))
 (=> p$1 $x5617))))
(assert
 (=> p$1 z$460))
(assert
 (let ((?x459 (Concat_32_4_28 rb.tail$next z$n0s28)))
 (let (($x5259 (= z$787 ?x459)))
 (=> p$2 $x5259))))
(assert
 (let ((?x6134 (Add_32_32_32 z$787 z$n1s32)))
 (let (($x2366 (= z$882 ?x6134)))
 (=> p$2 $x2366))))
(assert
 (let (($x1963 (= z$882 z$n1s32)))
 (let (($x6839 (= z$906 $x1963)))
 (=> p$2 $x6839))))
(assert
 (=> p$2 z$906))
(assert
 (let (($x572 (= rb.tail$next z$n0s4)))
 (let (($x394 (= z$899 $x572)))
 (=> p$3 $x394))))
(assert
 (=> p$3 z$899))
(assert
 (let (($x5550 (not sr.empty$next)))
 (let (($x6159 (= z$566 $x5550)))
 (=> p$4 $x6159))))
(assert
 (=> p$4 z$566))
(assert
 (=> p$5 (= z$74 (Extract_1_0_0_4 z$n0s4))))
(assert
 (=> p$5 (= z$74 false)))
(assert
 (=> p$5 (= z$1147 (not z$74))))
(assert
 (=> p$5 z$1147))
(assert
 (let (($x9422 (Extract_1_3_3_4 |rb.mem[3]$next|)))
 (let (($x9031 (= z$1795 $x9422)))
 (=> p$6 $x9031))))
(assert
 (=> p$6 (= z$1832 (not z$1795))))
(assert
 (=> p$6 z$1832))
(assert
 (let (($x2737 (= z$1150 (and (distinct sr.tail$next |sr.mem[0]$next|) true))))
 (=> p$7 $x2737)))
(assert
 (=> p$7 z$1150))
(assert
 (=> p$8 (= z$1149 (not push$next))))
(assert
 (=> p$8 z$1149))
(assert
 (let ((?x459 (Concat_32_4_28 rb.tail$next z$n0s28)))
 (let (($x5259 (= z$787 ?x459)))
 (=> p$9 $x5259))))
(assert
 (let (($x13194 (= z$787 z$n0s32)))
 (let (($x10747 (= z$2838 $x13194)))
 (=> p$9 $x10747))))
(assert
 (=> p$9 z$2838))
(assert
 (let (($x7057 (= z$1301 (and (distinct |sr.mem[0]$next| z$n0s4) true))))
 (=> p$10 $x7057)))
(assert
 (=> p$10 z$1301))
(assert
 (let ((?x2652 (Concat_32_4_28 sr.tail$next z$n0s28)))
 (let (($x4544 (= z$456 ?x2652)))
 (=> p$11 $x4544))))
(assert
 (let ((?x3082 (Add_32_32_32 z$456 z$n1s32)))
 (let (($x294 (= z$885 ?x3082)))
 (=> p$11 $x294))))
(assert
 (=> p$11 (= z$1318 (and (distinct z$885 z$n1s32) true))))
(assert
 (=> p$11 z$1318))
(assert
 (let (($x9152 (Extract_1_2_2_4 |rb.mem[3]$next|)))
 (let (($x7155 (= z$1793 $x9152)))
 (=> p$12 $x7155))))
(assert
 (=> p$12 z$1793))
(assert
 (=> p$13 (= z$1941 (and (distinct |rb.mem[3]$next| |sr.mem[0]$next|) true))))
(assert
 (=> p$13 z$1941))
(assert
 (let (($x2601 (= rb.tail$next rb.head$next)))
 (let (($x5500 (= z$459 $x2601)))
 (=> p$14 $x5500))))
(assert
 (let (($x5527 (not rb.empty$next)))
 (let (($x5617 (= z$460 $x5527)))
 (=> p$14 $x5617))))
(assert
 (let (($x5377 (= z$461 (and z$459 z$460))))
 (=> p$14 $x5377)))
(assert
 (let (($x6095 (= z$711 (not z$461))))
 (=> p$14 $x6095)))
(assert
 (let (($x2264 (= z$712 (and push$next z$711))))
 (=> p$14 $x2264)))
(assert
 (let ((?x3257 (ite z$712 rb.head$next z$n0s4)))
 (let (($x5817 (= z$714 ?x3257)))
 (=> p$14 $x5817))))
(assert
 (let (($x6547 (Extract_1_0_0_4 rb.head$next)))
 (let (($x2823 (= z$693 $x6547)))
 (=> p$14 $x2823))))
(assert
 (let (($x1203 (= z$717 (ite z$712 z$693 false))))
 (=> p$14 $x1203)))
(assert
 (let (($x1004 (Extract_1_0_0_4 z$714)))
 (let (($x2242 (= z$716 $x1004)))
 (=> p$14 $x2242))))
(assert
 (let (($x5266 (= z$716 z$717)))
 (=> p$14 $x5266)))
(assert
 (let (($x6543 (Extract_1_1_1_4 rb.head$next)))
 (let (($x5172 (= z$695 $x6543)))
 (=> p$14 $x5172))))
(assert
 (let (($x3737 (= z$721 (ite z$712 z$695 false))))
 (=> p$14 $x3737)))
(assert
 (let (($x2183 (Extract_1_1_1_4 z$714)))
 (let (($x6827 (= z$720 $x2183)))
 (=> p$14 $x6827))))
(assert
 (let (($x5027 (= z$720 z$721)))
 (=> p$14 $x5027)))
(assert
 (let (($x5684 (Extract_1_2_2_4 rb.head$next)))
 (let (($x1566 (= z$697 $x5684)))
 (=> p$14 $x1566))))
(assert
 (let (($x4716 (= z$725 (ite z$712 z$697 false))))
 (=> p$14 $x4716)))
(assert
 (let (($x1605 (Extract_1_2_2_4 z$714)))
 (let (($x2902 (= z$724 $x1605)))
 (=> p$14 $x2902))))
(assert
 (let (($x4656 (= z$724 z$725)))
 (=> p$14 $x4656)))
(assert
 (let (($x3700 (not z$724)))
 (let (($x1124 (= z$727 $x3700)))
 (=> p$14 $x1124))))
(assert
 (let (($x9035 (= z$1060 (and z$720 z$727))))
 (=> p$14 $x9035)))
(assert
 (let (($x8467 (= z$1797 (and z$716 z$1060))))
 (=> p$14 $x8467)))
(assert
 (let ((?x5764 (ite z$712 z$n15s4 z$n0s4)))
 (let (($x2445 (= z$732 ?x5764)))
 (=> p$14 $x2445))))
(assert
 (let (($x2017 (= z$735 (ite z$712 true false))))
 (=> p$14 $x2017)))
(assert
 (let (($x5106 (Extract_1_0_0_4 z$732)))
 (let (($x1689 (= z$734 $x5106)))
 (=> p$14 $x1689))))
(assert
 (let (($x609 (= z$734 z$735)))
 (=> p$14 $x609)))
(assert
 (let (($x7396 (= z$1799 (and z$1797 z$734))))
 (=> p$14 $x7396)))
(assert
 (let ((?x6016 (ite z$712 dataIn$next z$n0s4)))
 (let (($x3574 (= z$739 ?x6016)))
 (=> p$14 $x3574))))
(assert
 (let (($x3099 (Extract_1_0_0_4 dataIn$next)))
 (let (($x6710 (= z$699 $x3099)))
 (=> p$14 $x6710))))
(assert
 (let (($x4844 (= z$742 (ite z$712 z$699 false))))
 (=> p$14 $x4844)))
(assert
 (let (($x4195 (Extract_1_0_0_4 z$739)))
 (let (($x5454 (= z$741 $x4195)))
 (=> p$14 $x5454))))
(assert
 (let (($x5728 (= z$741 z$742)))
 (=> p$14 $x5728)))
(assert
 (let (($x597 (Extract_1_0_0_4 |rb.mem[3]$next|)))
 (let (($x562 (= z$1789 $x597)))
 (=> p$14 $x562))))
(assert
 (let (($x5718 (ite z$1799 z$741 z$1789)))
 (let (($x1733 (= z$1802 $x5718)))
 (=> p$14 $x1733))))
(assert
 (let (($x2958 (Extract_1_1_1_4 z$732)))
 (let (($x4156 (= z$748 $x2958)))
 (=> p$14 $x4156))))
(assert
 (let (($x3800 (= z$748 z$735)))
 (=> p$14 $x3800)))
(assert
 (let (($x9978 (= z$1804 (and z$1797 z$748))))
 (=> p$14 $x9978)))
(assert
 (let (($x6813 (Extract_1_1_1_4 dataIn$next)))
 (let (($x4041 (= z$701 $x6813)))
 (=> p$14 $x4041))))
(assert
 (let (($x2182 (= z$753 (ite z$712 z$701 false))))
 (=> p$14 $x2182)))
(assert
 (let (($x2395 (Extract_1_1_1_4 z$739)))
 (let (($x6789 (= z$752 $x2395)))
 (=> p$14 $x6789))))
(assert
 (let (($x3290 (= z$752 z$753)))
 (=> p$14 $x3290)))
(assert
 (let (($x9957 (Extract_1_1_1_4 |rb.mem[3]$next|)))
 (let (($x4698 (= z$1791 $x9957)))
 (=> p$14 $x4698))))
(assert
 (let (($x7987 (ite z$1804 z$752 z$1791)))
 (let (($x7043 (= z$1807 $x7987)))
 (=> p$14 $x7043))))
(assert
 (let (($x5887 (Extract_1_2_2_4 z$732)))
 (let (($x4600 (= z$759 $x5887)))
 (=> p$14 $x4600))))
(assert
 (let (($x4856 (= z$759 z$735)))
 (=> p$14 $x4856)))
(assert
 (let (($x9428 (= z$1809 (and z$1797 z$759))))
 (=> p$14 $x9428)))
(assert
 (let (($x6588 (Extract_1_2_2_4 dataIn$next)))
 (let (($x6103 (= z$703 $x6588)))
 (=> p$14 $x6103))))
(assert
 (let (($x6259 (= z$764 (ite z$712 z$703 false))))
 (=> p$14 $x6259)))
(assert
 (let (($x1667 (Extract_1_2_2_4 z$739)))
 (let (($x4990 (= z$763 $x1667)))
 (=> p$14 $x4990))))
(assert
 (let (($x3183 (= z$763 z$764)))
 (=> p$14 $x3183)))
(assert
 (let (($x9152 (Extract_1_2_2_4 |rb.mem[3]$next|)))
 (let (($x7155 (= z$1793 $x9152)))
 (=> p$14 $x7155))))
(assert
 (let (($x9550 (ite z$1809 z$763 z$1793)))
 (let (($x10898 (= z$1812 $x9550)))
 (=> p$14 $x10898))))
(assert
 (let (($x3076 (Extract_1_3_3_4 z$732)))
 (let (($x2787 (= z$770 $x3076)))
 (=> p$14 $x2787))))
(assert
 (let (($x3356 (= z$770 z$735)))
 (=> p$14 $x3356)))
(assert
 (let (($x8713 (= z$1814 (and z$1797 z$770))))
 (=> p$14 $x8713)))
(assert
 (let (($x5313 (Extract_1_3_3_4 dataIn$next)))
 (let (($x4122 (= z$705 $x5313)))
 (=> p$14 $x4122))))
(assert
 (let (($x4553 (= z$775 (ite z$712 z$705 false))))
 (=> p$14 $x4553)))
(assert
 (let (($x5582 (Extract_1_3_3_4 z$739)))
 (let (($x5820 (= z$774 $x5582)))
 (=> p$14 $x5820))))
(assert
 (let (($x3557 (= z$774 z$775)))
 (=> p$14 $x3557)))
(assert
 (let (($x9422 (Extract_1_3_3_4 |rb.mem[3]$next|)))
 (let (($x9031 (= z$1795 $x9422)))
 (=> p$14 $x9031))))
(assert
 (let (($x6135 (ite z$1814 z$774 z$1795)))
 (let (($x8063 (= z$1817 $x6135)))
 (=> p$14 $x8063))))
(assert
 (let ((?x3820 (Concat_4_1_1_1_1 z$1802 z$1807 z$1812 z$1817)))
 (let (($x6347 (= z$1819 ?x3820)))
 (=> p$14 $x6347))))
(assert
 (=> p$14 (= z$1834 (and (distinct z$1819 z$n0s4) true))))
(assert
 (=> p$14 z$1834))
(assert
 (let (($x597 (Extract_1_0_0_4 |rb.mem[3]$next|)))
 (let (($x562 (= z$1789 $x597)))
 (=> p$15 $x562))))
(assert
 (=> p$15 (= z$1790 (not z$1789))))
(assert
 (=> p$15 z$1790))
(assert
 (let ((?x2652 (Concat_32_4_28 sr.tail$next z$n0s28)))
 (let (($x4544 (= z$456 ?x2652)))
 (=> p$16 $x4544))))
(assert
 (let (($x2750 (= z$456 z$n1s32)))
 (let (($x7516 (= z$1526 $x2750)))
 (=> p$16 $x7516))))
(assert
 (=> p$16 z$1526))
(assert
 (let (($x9957 (Extract_1_1_1_4 |rb.mem[3]$next|)))
 (let (($x4698 (= z$1791 $x9957)))
 (=> p$17 $x4698))))
(assert
 (=> p$17 (= z$1792 (not z$1791))))
(assert
 (=> p$17 z$1792))
(assert
 (let (($x2601 (= rb.tail$next rb.head$next)))
 (let (($x5500 (= z$459 $x2601)))
 (=> p$18 $x5500))))
(assert
 (let (($x5527 (not rb.empty$next)))
 (let (($x5617 (= z$460 $x5527)))
 (=> p$18 $x5617))))
(assert
 (let (($x5377 (= z$461 (and z$459 z$460))))
 (=> p$18 $x5377)))
(assert
 (let (($x6095 (= z$711 (not z$461))))
 (=> p$18 $x6095)))
(assert
 (let (($x2264 (= z$712 (and push$next z$711))))
 (=> p$18 $x2264)))
(assert
 (let ((?x3257 (ite z$712 rb.head$next z$n0s4)))
 (let (($x5817 (= z$714 ?x3257)))
 (=> p$18 $x5817))))
(assert
 (let (($x6547 (Extract_1_0_0_4 rb.head$next)))
 (let (($x2823 (= z$693 $x6547)))
 (=> p$18 $x2823))))
(assert
 (let (($x1203 (= z$717 (ite z$712 z$693 false))))
 (=> p$18 $x1203)))
(assert
 (let (($x1004 (Extract_1_0_0_4 z$714)))
 (let (($x2242 (= z$716 $x1004)))
 (=> p$18 $x2242))))
(assert
 (let (($x5266 (= z$716 z$717)))
 (=> p$18 $x5266)))
(assert
 (let (($x6543 (Extract_1_1_1_4 rb.head$next)))
 (let (($x5172 (= z$695 $x6543)))
 (=> p$18 $x5172))))
(assert
 (let (($x3737 (= z$721 (ite z$712 z$695 false))))
 (=> p$18 $x3737)))
(assert
 (let (($x2183 (Extract_1_1_1_4 z$714)))
 (let (($x6827 (= z$720 $x2183)))
 (=> p$18 $x6827))))
(assert
 (let (($x5027 (= z$720 z$721)))
 (=> p$18 $x5027)))
(assert
 (let (($x5684 (Extract_1_2_2_4 rb.head$next)))
 (let (($x1566 (= z$697 $x5684)))
 (=> p$18 $x1566))))
(assert
 (let (($x4716 (= z$725 (ite z$712 z$697 false))))
 (=> p$18 $x4716)))
(assert
 (let (($x1605 (Extract_1_2_2_4 z$714)))
 (let (($x2902 (= z$724 $x1605)))
 (=> p$18 $x2902))))
(assert
 (let (($x4656 (= z$724 z$725)))
 (=> p$18 $x4656)))
(assert
 (let (($x3700 (not z$724)))
 (let (($x1124 (= z$727 $x3700)))
 (=> p$18 $x1124))))
(assert
 (let (($x9035 (= z$1060 (and z$720 z$727))))
 (=> p$18 $x9035)))
(assert
 (let (($x8467 (= z$1797 (and z$716 z$1060))))
 (=> p$18 $x8467)))
(assert
 (let ((?x5764 (ite z$712 z$n15s4 z$n0s4)))
 (let (($x2445 (= z$732 ?x5764)))
 (=> p$18 $x2445))))
(assert
 (let (($x2017 (= z$735 (ite z$712 true false))))
 (=> p$18 $x2017)))
(assert
 (let (($x5106 (Extract_1_0_0_4 z$732)))
 (let (($x1689 (= z$734 $x5106)))
 (=> p$18 $x1689))))
(assert
 (let (($x609 (= z$734 z$735)))
 (=> p$18 $x609)))
(assert
 (let (($x7396 (= z$1799 (and z$1797 z$734))))
 (=> p$18 $x7396)))
(assert
 (let ((?x6016 (ite z$712 dataIn$next z$n0s4)))
 (let (($x3574 (= z$739 ?x6016)))
 (=> p$18 $x3574))))
(assert
 (let (($x3099 (Extract_1_0_0_4 dataIn$next)))
 (let (($x6710 (= z$699 $x3099)))
 (=> p$18 $x6710))))
(assert
 (let (($x4844 (= z$742 (ite z$712 z$699 false))))
 (=> p$18 $x4844)))
(assert
 (let (($x4195 (Extract_1_0_0_4 z$739)))
 (let (($x5454 (= z$741 $x4195)))
 (=> p$18 $x5454))))
(assert
 (let (($x5728 (= z$741 z$742)))
 (=> p$18 $x5728)))
(assert
 (let (($x597 (Extract_1_0_0_4 |rb.mem[3]$next|)))
 (let (($x562 (= z$1789 $x597)))
 (=> p$18 $x562))))
(assert
 (let (($x5718 (ite z$1799 z$741 z$1789)))
 (let (($x1733 (= z$1802 $x5718)))
 (=> p$18 $x1733))))
(assert
 (let (($x2958 (Extract_1_1_1_4 z$732)))
 (let (($x4156 (= z$748 $x2958)))
 (=> p$18 $x4156))))
(assert
 (let (($x3800 (= z$748 z$735)))
 (=> p$18 $x3800)))
(assert
 (let (($x9978 (= z$1804 (and z$1797 z$748))))
 (=> p$18 $x9978)))
(assert
 (let (($x6813 (Extract_1_1_1_4 dataIn$next)))
 (let (($x4041 (= z$701 $x6813)))
 (=> p$18 $x4041))))
(assert
 (let (($x2182 (= z$753 (ite z$712 z$701 false))))
 (=> p$18 $x2182)))
(assert
 (let (($x2395 (Extract_1_1_1_4 z$739)))
 (let (($x6789 (= z$752 $x2395)))
 (=> p$18 $x6789))))
(assert
 (let (($x3290 (= z$752 z$753)))
 (=> p$18 $x3290)))
(assert
 (let (($x9957 (Extract_1_1_1_4 |rb.mem[3]$next|)))
 (let (($x4698 (= z$1791 $x9957)))
 (=> p$18 $x4698))))
(assert
 (let (($x7987 (ite z$1804 z$752 z$1791)))
 (let (($x7043 (= z$1807 $x7987)))
 (=> p$18 $x7043))))
(assert
 (let (($x5887 (Extract_1_2_2_4 z$732)))
 (let (($x4600 (= z$759 $x5887)))
 (=> p$18 $x4600))))
(assert
 (let (($x4856 (= z$759 z$735)))
 (=> p$18 $x4856)))
(assert
 (let (($x9428 (= z$1809 (and z$1797 z$759))))
 (=> p$18 $x9428)))
(assert
 (let (($x6588 (Extract_1_2_2_4 dataIn$next)))
 (let (($x6103 (= z$703 $x6588)))
 (=> p$18 $x6103))))
(assert
 (let (($x6259 (= z$764 (ite z$712 z$703 false))))
 (=> p$18 $x6259)))
(assert
 (let (($x1667 (Extract_1_2_2_4 z$739)))
 (let (($x4990 (= z$763 $x1667)))
 (=> p$18 $x4990))))
(assert
 (let (($x3183 (= z$763 z$764)))
 (=> p$18 $x3183)))
(assert
 (let (($x9152 (Extract_1_2_2_4 |rb.mem[3]$next|)))
 (let (($x7155 (= z$1793 $x9152)))
 (=> p$18 $x7155))))
(assert
 (let (($x9550 (ite z$1809 z$763 z$1793)))
 (let (($x10898 (= z$1812 $x9550)))
 (=> p$18 $x10898))))
(assert
 (let (($x3076 (Extract_1_3_3_4 z$732)))
 (let (($x2787 (= z$770 $x3076)))
 (=> p$18 $x2787))))
(assert
 (let (($x3356 (= z$770 z$735)))
 (=> p$18 $x3356)))
(assert
 (let (($x8713 (= z$1814 (and z$1797 z$770))))
 (=> p$18 $x8713)))
(assert
 (let (($x5313 (Extract_1_3_3_4 dataIn$next)))
 (let (($x4122 (= z$705 $x5313)))
 (=> p$18 $x4122))))
(assert
 (let (($x4553 (= z$775 (ite z$712 z$705 false))))
 (=> p$18 $x4553)))
(assert
 (let (($x5582 (Extract_1_3_3_4 z$739)))
 (let (($x5820 (= z$774 $x5582)))
 (=> p$18 $x5820))))
(assert
 (let (($x3557 (= z$774 z$775)))
 (=> p$18 $x3557)))
(assert
 (let (($x9422 (Extract_1_3_3_4 |rb.mem[3]$next|)))
 (let (($x9031 (= z$1795 $x9422)))
 (=> p$18 $x9031))))
(assert
 (let (($x6135 (ite z$1814 z$774 z$1795)))
 (let (($x8063 (= z$1817 $x6135)))
 (=> p$18 $x8063))))
(assert
 (let ((?x3820 (Concat_4_1_1_1_1 z$1802 z$1807 z$1812 z$1817)))
 (let (($x6347 (= z$1819 ?x3820)))
 (=> p$18 $x6347))))
(assert
 (=> p$18 (= z$1822 (and (distinct |rb.mem[3]$next| z$1819) true))))
(assert
 (=> p$18 z$1822))
(assert
 (=> p$19 (= z$2350 (and (distinct |rb.mem[3]$next| z$n0s4) true))))
(assert
 (=> p$19 z$2350))
(assert
 (let ((?x2652 (Concat_32_4_28 sr.tail$next z$n0s28)))
 (let (($x4544 (= z$456 ?x2652)))
 (=> p$20 $x4544))))
(assert
 (let ((?x3082 (Add_32_32_32 z$456 z$n1s32)))
 (let (($x294 (= z$885 ?x3082)))
 (=> p$20 $x294))))
(assert
 (=> p$20 (= z$2783 (and (distinct z$885 z$n0s32) true))))
(assert
 (=> p$20 z$2783))
(assert
 (let ((?x2652 (Concat_32_4_28 sr.tail$next z$n0s28)))
 (let (($x4544 (= z$456 ?x2652)))
 (=> p$21 $x4544))))
(assert
 (=> p$21 (= z$2180 (and (distinct z$456 z$n0s32) true))))
(assert
 (=> p$21 z$2180))
(assert
 (let ((?x2652 (Concat_32_4_28 sr.tail$next z$n0s28)))
 (let (($x4544 (= z$456 ?x2652)))
 (=> p$22 $x4544))))
(assert
 (let ((?x10157 (Sub_32_32_32 z$456 z$n1s32)))
 (let (($x2285 (= z$2182 ?x10157)))
 (=> p$22 $x2285))))
(assert
 (let (($x10967 (= z$2182 z$n0s32)))
 (let (($x13496 (= z$3340 $x10967)))
 (=> p$22 $x13496))))
(assert
 (=> p$22 z$3340))
(assert
 (=> p$23 (= z$5381 (= sr.tail$next z$n1s4))))
(assert
 (=> p$23 z$5381))
(assert
 (=> p$24 (= z$6085 (and (distinct sr.tail$next |rb.mem[3]$next|) true))))
(assert
 (=> p$24 z$6085))
(assert
 (let (($x2601 (= rb.tail$next rb.head$next)))
 (let (($x5500 (= z$459 $x2601)))
 (=> p$25 $x5500))))
(assert
 (let (($x5527 (not rb.empty$next)))
 (let (($x5617 (= z$460 $x5527)))
 (=> p$25 $x5617))))
(assert
 (let (($x5377 (= z$461 (and z$459 z$460))))
 (=> p$25 $x5377)))
(assert
 (let (($x6095 (= z$711 (not z$461))))
 (=> p$25 $x6095)))
(assert
 (let (($x2264 (= z$712 (and push$next z$711))))
 (=> p$25 $x2264)))
(assert
 (let ((?x3257 (ite z$712 rb.head$next z$n0s4)))
 (let (($x5817 (= z$714 ?x3257)))
 (=> p$25 $x5817))))
(assert
 (let (($x6547 (Extract_1_0_0_4 rb.head$next)))
 (let (($x2823 (= z$693 $x6547)))
 (=> p$25 $x2823))))
(assert
 (let (($x1203 (= z$717 (ite z$712 z$693 false))))
 (=> p$25 $x1203)))
(assert
 (let (($x1004 (Extract_1_0_0_4 z$714)))
 (let (($x2242 (= z$716 $x1004)))
 (=> p$25 $x2242))))
(assert
 (let (($x5266 (= z$716 z$717)))
 (=> p$25 $x5266)))
(assert
 (let (($x6543 (Extract_1_1_1_4 rb.head$next)))
 (let (($x5172 (= z$695 $x6543)))
 (=> p$25 $x5172))))
(assert
 (let (($x3737 (= z$721 (ite z$712 z$695 false))))
 (=> p$25 $x3737)))
(assert
 (let (($x2183 (Extract_1_1_1_4 z$714)))
 (let (($x6827 (= z$720 $x2183)))
 (=> p$25 $x6827))))
(assert
 (let (($x5027 (= z$720 z$721)))
 (=> p$25 $x5027)))
(assert
 (let (($x5684 (Extract_1_2_2_4 rb.head$next)))
 (let (($x1566 (= z$697 $x5684)))
 (=> p$25 $x1566))))
(assert
 (let (($x4716 (= z$725 (ite z$712 z$697 false))))
 (=> p$25 $x4716)))
(assert
 (let (($x1605 (Extract_1_2_2_4 z$714)))
 (let (($x2902 (= z$724 $x1605)))
 (=> p$25 $x2902))))
(assert
 (let (($x4656 (= z$724 z$725)))
 (=> p$25 $x4656)))
(assert
 (let (($x3700 (not z$724)))
 (let (($x1124 (= z$727 $x3700)))
 (=> p$25 $x1124))))
(assert
 (let (($x9035 (= z$1060 (and z$720 z$727))))
 (=> p$25 $x9035)))
(assert
 (let (($x8467 (= z$1797 (and z$716 z$1060))))
 (=> p$25 $x8467)))
(assert
 (let ((?x5764 (ite z$712 z$n15s4 z$n0s4)))
 (let (($x2445 (= z$732 ?x5764)))
 (=> p$25 $x2445))))
(assert
 (let (($x2017 (= z$735 (ite z$712 true false))))
 (=> p$25 $x2017)))
(assert
 (let (($x5106 (Extract_1_0_0_4 z$732)))
 (let (($x1689 (= z$734 $x5106)))
 (=> p$25 $x1689))))
(assert
 (let (($x609 (= z$734 z$735)))
 (=> p$25 $x609)))
(assert
 (let (($x7396 (= z$1799 (and z$1797 z$734))))
 (=> p$25 $x7396)))
(assert
 (let ((?x6016 (ite z$712 dataIn$next z$n0s4)))
 (let (($x3574 (= z$739 ?x6016)))
 (=> p$25 $x3574))))
(assert
 (let (($x3099 (Extract_1_0_0_4 dataIn$next)))
 (let (($x6710 (= z$699 $x3099)))
 (=> p$25 $x6710))))
(assert
 (let (($x4844 (= z$742 (ite z$712 z$699 false))))
 (=> p$25 $x4844)))
(assert
 (let (($x4195 (Extract_1_0_0_4 z$739)))
 (let (($x5454 (= z$741 $x4195)))
 (=> p$25 $x5454))))
(assert
 (let (($x5728 (= z$741 z$742)))
 (=> p$25 $x5728)))
(assert
 (let (($x597 (Extract_1_0_0_4 |rb.mem[3]$next|)))
 (let (($x562 (= z$1789 $x597)))
 (=> p$25 $x562))))
(assert
 (let (($x5718 (ite z$1799 z$741 z$1789)))
 (let (($x1733 (= z$1802 $x5718)))
 (=> p$25 $x1733))))
(assert
 (let (($x2958 (Extract_1_1_1_4 z$732)))
 (let (($x4156 (= z$748 $x2958)))
 (=> p$25 $x4156))))
(assert
 (let (($x3800 (= z$748 z$735)))
 (=> p$25 $x3800)))
(assert
 (let (($x9978 (= z$1804 (and z$1797 z$748))))
 (=> p$25 $x9978)))
(assert
 (let (($x6813 (Extract_1_1_1_4 dataIn$next)))
 (let (($x4041 (= z$701 $x6813)))
 (=> p$25 $x4041))))
(assert
 (let (($x2182 (= z$753 (ite z$712 z$701 false))))
 (=> p$25 $x2182)))
(assert
 (let (($x2395 (Extract_1_1_1_4 z$739)))
 (let (($x6789 (= z$752 $x2395)))
 (=> p$25 $x6789))))
(assert
 (let (($x3290 (= z$752 z$753)))
 (=> p$25 $x3290)))
(assert
 (let (($x9957 (Extract_1_1_1_4 |rb.mem[3]$next|)))
 (let (($x4698 (= z$1791 $x9957)))
 (=> p$25 $x4698))))
(assert
 (let (($x7987 (ite z$1804 z$752 z$1791)))
 (let (($x7043 (= z$1807 $x7987)))
 (=> p$25 $x7043))))
(assert
 (let (($x5887 (Extract_1_2_2_4 z$732)))
 (let (($x4600 (= z$759 $x5887)))
 (=> p$25 $x4600))))
(assert
 (let (($x4856 (= z$759 z$735)))
 (=> p$25 $x4856)))
(assert
 (let (($x9428 (= z$1809 (and z$1797 z$759))))
 (=> p$25 $x9428)))
(assert
 (let (($x6588 (Extract_1_2_2_4 dataIn$next)))
 (let (($x6103 (= z$703 $x6588)))
 (=> p$25 $x6103))))
(assert
 (let (($x6259 (= z$764 (ite z$712 z$703 false))))
 (=> p$25 $x6259)))
(assert
 (let (($x1667 (Extract_1_2_2_4 z$739)))
 (let (($x4990 (= z$763 $x1667)))
 (=> p$25 $x4990))))
(assert
 (let (($x3183 (= z$763 z$764)))
 (=> p$25 $x3183)))
(assert
 (let (($x9152 (Extract_1_2_2_4 |rb.mem[3]$next|)))
 (let (($x7155 (= z$1793 $x9152)))
 (=> p$25 $x7155))))
(assert
 (let (($x9550 (ite z$1809 z$763 z$1793)))
 (let (($x10898 (= z$1812 $x9550)))
 (=> p$25 $x10898))))
(assert
 (let (($x3076 (Extract_1_3_3_4 z$732)))
 (let (($x2787 (= z$770 $x3076)))
 (=> p$25 $x2787))))
(assert
 (let (($x3356 (= z$770 z$735)))
 (=> p$25 $x3356)))
(assert
 (let (($x8713 (= z$1814 (and z$1797 z$770))))
 (=> p$25 $x8713)))
(assert
 (let (($x5313 (Extract_1_3_3_4 dataIn$next)))
 (let (($x4122 (= z$705 $x5313)))
 (=> p$25 $x4122))))
(assert
 (let (($x4553 (= z$775 (ite z$712 z$705 false))))
 (=> p$25 $x4553)))
(assert
 (let (($x5582 (Extract_1_3_3_4 z$739)))
 (let (($x5820 (= z$774 $x5582)))
 (=> p$25 $x5820))))
(assert
 (let (($x3557 (= z$774 z$775)))
 (=> p$25 $x3557)))
(assert
 (let (($x9422 (Extract_1_3_3_4 |rb.mem[3]$next|)))
 (let (($x9031 (= z$1795 $x9422)))
 (=> p$25 $x9031))))
(assert
 (let (($x6135 (ite z$1814 z$774 z$1795)))
 (let (($x8063 (= z$1817 $x6135)))
 (=> p$25 $x8063))))
(assert
 (let ((?x3820 (Concat_4_1_1_1_1 z$1802 z$1807 z$1812 z$1817)))
 (let (($x6347 (= z$1819 ?x3820)))
 (=> p$25 $x6347))))
(assert
 (=> p$25 (= z$6241 (and (distinct |sr.mem[0]$next| z$1819) true))))
(assert
 (=> p$25 z$6241))
(assert
 (let (($x2601 (= rb.tail$next rb.head$next)))
 (let (($x5500 (= z$459 $x2601)))
 (=> p$26 $x5500))))
(assert
 (let (($x5527 (not rb.empty$next)))
 (let (($x5617 (= z$460 $x5527)))
 (=> p$26 $x5617))))
(assert
 (let (($x5377 (= z$461 (and z$459 z$460))))
 (=> p$26 $x5377)))
(assert
 (let (($x6095 (= z$711 (not z$461))))
 (=> p$26 $x6095)))
(assert
 (let (($x2264 (= z$712 (and push$next z$711))))
 (=> p$26 $x2264)))
(assert
 (let ((?x3257 (ite z$712 rb.head$next z$n0s4)))
 (let (($x5817 (= z$714 ?x3257)))
 (=> p$26 $x5817))))
(assert
 (let (($x6547 (Extract_1_0_0_4 rb.head$next)))
 (let (($x2823 (= z$693 $x6547)))
 (=> p$26 $x2823))))
(assert
 (let (($x1203 (= z$717 (ite z$712 z$693 false))))
 (=> p$26 $x1203)))
(assert
 (let (($x1004 (Extract_1_0_0_4 z$714)))
 (let (($x2242 (= z$716 $x1004)))
 (=> p$26 $x2242))))
(assert
 (let (($x5266 (= z$716 z$717)))
 (=> p$26 $x5266)))
(assert
 (let (($x6543 (Extract_1_1_1_4 rb.head$next)))
 (let (($x5172 (= z$695 $x6543)))
 (=> p$26 $x5172))))
(assert
 (let (($x3737 (= z$721 (ite z$712 z$695 false))))
 (=> p$26 $x3737)))
(assert
 (let (($x2183 (Extract_1_1_1_4 z$714)))
 (let (($x6827 (= z$720 $x2183)))
 (=> p$26 $x6827))))
(assert
 (let (($x5027 (= z$720 z$721)))
 (=> p$26 $x5027)))
(assert
 (let (($x5684 (Extract_1_2_2_4 rb.head$next)))
 (let (($x1566 (= z$697 $x5684)))
 (=> p$26 $x1566))))
(assert
 (let (($x4716 (= z$725 (ite z$712 z$697 false))))
 (=> p$26 $x4716)))
(assert
 (let (($x1605 (Extract_1_2_2_4 z$714)))
 (let (($x2902 (= z$724 $x1605)))
 (=> p$26 $x2902))))
(assert
 (let (($x4656 (= z$724 z$725)))
 (=> p$26 $x4656)))
(assert
 (let (($x3700 (not z$724)))
 (let (($x1124 (= z$727 $x3700)))
 (=> p$26 $x1124))))
(assert
 (let (($x9035 (= z$1060 (and z$720 z$727))))
 (=> p$26 $x9035)))
(assert
 (let (($x8467 (= z$1797 (and z$716 z$1060))))
 (=> p$26 $x8467)))
(assert
 (let ((?x5764 (ite z$712 z$n15s4 z$n0s4)))
 (let (($x2445 (= z$732 ?x5764)))
 (=> p$26 $x2445))))
(assert
 (let (($x2017 (= z$735 (ite z$712 true false))))
 (=> p$26 $x2017)))
(assert
 (let (($x5106 (Extract_1_0_0_4 z$732)))
 (let (($x1689 (= z$734 $x5106)))
 (=> p$26 $x1689))))
(assert
 (let (($x609 (= z$734 z$735)))
 (=> p$26 $x609)))
(assert
 (let (($x7396 (= z$1799 (and z$1797 z$734))))
 (=> p$26 $x7396)))
(assert
 (let ((?x6016 (ite z$712 dataIn$next z$n0s4)))
 (let (($x3574 (= z$739 ?x6016)))
 (=> p$26 $x3574))))
(assert
 (let (($x3099 (Extract_1_0_0_4 dataIn$next)))
 (let (($x6710 (= z$699 $x3099)))
 (=> p$26 $x6710))))
(assert
 (let (($x4844 (= z$742 (ite z$712 z$699 false))))
 (=> p$26 $x4844)))
(assert
 (let (($x4195 (Extract_1_0_0_4 z$739)))
 (let (($x5454 (= z$741 $x4195)))
 (=> p$26 $x5454))))
(assert
 (let (($x5728 (= z$741 z$742)))
 (=> p$26 $x5728)))
(assert
 (let (($x597 (Extract_1_0_0_4 |rb.mem[3]$next|)))
 (let (($x562 (= z$1789 $x597)))
 (=> p$26 $x562))))
(assert
 (let (($x5718 (ite z$1799 z$741 z$1789)))
 (let (($x1733 (= z$1802 $x5718)))
 (=> p$26 $x1733))))
(assert
 (let (($x2958 (Extract_1_1_1_4 z$732)))
 (let (($x4156 (= z$748 $x2958)))
 (=> p$26 $x4156))))
(assert
 (let (($x3800 (= z$748 z$735)))
 (=> p$26 $x3800)))
(assert
 (let (($x9978 (= z$1804 (and z$1797 z$748))))
 (=> p$26 $x9978)))
(assert
 (let (($x6813 (Extract_1_1_1_4 dataIn$next)))
 (let (($x4041 (= z$701 $x6813)))
 (=> p$26 $x4041))))
(assert
 (let (($x2182 (= z$753 (ite z$712 z$701 false))))
 (=> p$26 $x2182)))
(assert
 (let (($x2395 (Extract_1_1_1_4 z$739)))
 (let (($x6789 (= z$752 $x2395)))
 (=> p$26 $x6789))))
(assert
 (let (($x3290 (= z$752 z$753)))
 (=> p$26 $x3290)))
(assert
 (let (($x9957 (Extract_1_1_1_4 |rb.mem[3]$next|)))
 (let (($x4698 (= z$1791 $x9957)))
 (=> p$26 $x4698))))
(assert
 (let (($x7987 (ite z$1804 z$752 z$1791)))
 (let (($x7043 (= z$1807 $x7987)))
 (=> p$26 $x7043))))
(assert
 (let (($x5887 (Extract_1_2_2_4 z$732)))
 (let (($x4600 (= z$759 $x5887)))
 (=> p$26 $x4600))))
(assert
 (let (($x4856 (= z$759 z$735)))
 (=> p$26 $x4856)))
(assert
 (let (($x9428 (= z$1809 (and z$1797 z$759))))
 (=> p$26 $x9428)))
(assert
 (let (($x6588 (Extract_1_2_2_4 dataIn$next)))
 (let (($x6103 (= z$703 $x6588)))
 (=> p$26 $x6103))))
(assert
 (let (($x6259 (= z$764 (ite z$712 z$703 false))))
 (=> p$26 $x6259)))
(assert
 (let (($x1667 (Extract_1_2_2_4 z$739)))
 (let (($x4990 (= z$763 $x1667)))
 (=> p$26 $x4990))))
(assert
 (let (($x3183 (= z$763 z$764)))
 (=> p$26 $x3183)))
(assert
 (let (($x9152 (Extract_1_2_2_4 |rb.mem[3]$next|)))
 (let (($x7155 (= z$1793 $x9152)))
 (=> p$26 $x7155))))
(assert
 (let (($x9550 (ite z$1809 z$763 z$1793)))
 (let (($x10898 (= z$1812 $x9550)))
 (=> p$26 $x10898))))
(assert
 (let (($x3076 (Extract_1_3_3_4 z$732)))
 (let (($x2787 (= z$770 $x3076)))
 (=> p$26 $x2787))))
(assert
 (let (($x3356 (= z$770 z$735)))
 (=> p$26 $x3356)))
(assert
 (let (($x8713 (= z$1814 (and z$1797 z$770))))
 (=> p$26 $x8713)))
(assert
 (let (($x5313 (Extract_1_3_3_4 dataIn$next)))
 (let (($x4122 (= z$705 $x5313)))
 (=> p$26 $x4122))))
(assert
 (let (($x4553 (= z$775 (ite z$712 z$705 false))))
 (=> p$26 $x4553)))
(assert
 (let (($x5582 (Extract_1_3_3_4 z$739)))
 (let (($x5820 (= z$774 $x5582)))
 (=> p$26 $x5820))))
(assert
 (let (($x3557 (= z$774 z$775)))
 (=> p$26 $x3557)))
(assert
 (let (($x9422 (Extract_1_3_3_4 |rb.mem[3]$next|)))
 (let (($x9031 (= z$1795 $x9422)))
 (=> p$26 $x9031))))
(assert
 (let (($x6135 (ite z$1814 z$774 z$1795)))
 (let (($x8063 (= z$1817 $x6135)))
 (=> p$26 $x8063))))
(assert
 (let ((?x3820 (Concat_4_1_1_1_1 z$1802 z$1807 z$1812 z$1817)))
 (let (($x6347 (= z$1819 ?x3820)))
 (=> p$26 $x6347))))
(assert
 (=> p$26 (= z$6086 (and (distinct sr.tail$next z$1819) true))))
(assert
 (=> p$26 z$6086))
(check-sat)
(assert p$0)
(assert p$1)
(assert p$2)
(assert p$3)
(assert p$4)
(assert p$5)
(assert p$6)
(assert p$7)
(assert p$8)
(assert p$9)
(assert p$10)
(assert p$11)
(assert p$12)
(assert p$13)
(assert p$14)
(assert p$15)
(assert p$16)
(assert p$17)
(assert p$18)
(assert p$19)
(assert p$20)
(assert p$21)
(assert p$22)
(assert p$23)
(assert p$24)
(assert p$25)
(assert p$26)
(set-info :status unsat)
(check-sat)
(exit)
