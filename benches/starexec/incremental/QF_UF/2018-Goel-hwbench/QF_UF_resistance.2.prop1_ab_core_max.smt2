(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: resistance.2.prop1
query-maker: "Z3"
query-time: 6.256000 ms
query-class: abstract
query-category: assume
query-type: mus_core
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

; 
(set-info :status sat)
(declare-sort utt16 0)
(declare-sort utt32 0)
(declare-fun z$n3s16 () utt16)
(declare-fun z$n1s16 () utt16)
(declare-fun z$n0s16 () utt16)
(declare-fun z$n65536s32 () utt32)
(declare-fun z$n5s32 () utt32)
(declare-fun z$n5800s32 () utt32)
(declare-fun z$n1000s32 () utt32)
(declare-fun z$n5999s32 () utt32)
(declare-fun z$n999s32 () utt32)
(declare-fun z$n6200s32 () utt32)
(declare-fun z$n0s32 () utt32)
(declare-fun z$n1s32 () utt32)
(declare-fun z$n16s32 () utt32)
(declare-fun v_actual_resistance () utt16)
(declare-fun v_cage_safe () utt16)
(declare-fun v_range () utt16)
(declare-fun Concat_32_16_16 (utt16 utt16) utt32)
(declare-fun z$471 () utt32)
(declare-fun BitWiseNot_32_32 (utt32) utt32)
(declare-fun z$473 () utt32)
(declare-fun ShiftR_32_32_32 (utt32 utt32) utt32)
(declare-fun z$475 () utt32)
(declare-fun z$477 () utt32)
(declare-fun z$479 () utt32)
(declare-fun z$481 () utt32)
(declare-fun z$1553 () utt32)
(declare-fun v_cage_safe$next () utt16)
(declare-fun z$1606 () utt32)
(declare-fun z$1608 () utt32)
(declare-fun z$1610 () utt32)
(declare-fun z$1612 () utt32)
(declare-fun z$1614 () utt32)
(declare-fun z$1616 () utt32)
(declare-fun z$1619 () utt32)
(declare-fun z$88 () utt32)
(declare-fun z$90 () utt32)
(declare-fun z$93 () utt32)
(declare-fun z$95 () utt32)
(declare-fun z$97 () utt32)
(declare-fun z$99 () utt32)
(declare-fun z$137 () utt32)
(declare-fun z$139 () utt32)
(declare-fun z$141 () utt32)
(declare-fun z$143 () utt32)
(declare-fun z$145 () utt32)
(declare-fun z$147 () utt32)
(declare-fun a_S1 () Bool)
(declare-fun z$1 () Bool)
(declare-fun a_S2 () Bool)
(declare-fun z$3 () Bool)
(declare-fun a_cage_opened_Measuring_0 () Bool)
(declare-fun z$5 () Bool)
(declare-fun a_cage_opened_Measuring_1 () Bool)
(declare-fun z$7 () Bool)
(declare-fun a_correct_value () Bool)
(declare-fun z$9 () Bool)
(declare-fun a_err7 () Bool)
(declare-fun z$11 () Bool)
(declare-fun a_finished_measuring () Bool)
(declare-fun z$13 () Bool)
(declare-fun a_initial_Device_state () Bool)
(declare-fun z$15 () Bool)
(declare-fun a_initial_Measuring_0 () Bool)
(declare-fun z$17 () Bool)
(declare-fun a_initial_Measuring_1 () Bool)
(declare-fun z$19 () Bool)
(declare-fun a_large_resistance () Bool)
(declare-fun z$21 () Bool)
(declare-fun a_measure_done_Measuring_0 () Bool)
(declare-fun z$23 () Bool)
(declare-fun a_measure_done_Measuring_1 () Bool)
(declare-fun z$25 () Bool)
(declare-fun a_measure_in_progress_Measuring_0 () Bool)
(declare-fun z$27 () Bool)
(declare-fun a_measure_in_progress_Measuring_1 () Bool)
(declare-fun z$29 () Bool)
(declare-fun a_measured () Bool)
(declare-fun z$31 () Bool)
(declare-fun a_new_range () Bool)
(declare-fun z$33 () Bool)
(declare-fun a_small_resistance () Bool)
(declare-fun z$35 () Bool)
(declare-fun a_start () Bool)
(declare-fun z$37 () Bool)
(declare-fun a_state0 () Bool)
(declare-fun z$39 () Bool)
(declare-fun a_state1 () Bool)
(declare-fun z$41 () Bool)
(declare-fun a_state_request () Bool)
(declare-fun z$43 () Bool)
(declare-fun a_too_large_resistance () Bool)
(declare-fun z$45 () Bool)
(declare-fun a_too_small_resistance () Bool)
(declare-fun z$47 () Bool)
(declare-fun dve_invalid () Bool)
(declare-fun z$49 () Bool)
(declare-fun z$52 () Bool)
(declare-fun z$54 () Bool)
(declare-fun z$56 () Bool)
(declare-fun Extract_1_15_15_16 (utt16) Bool)
(declare-fun z$469 () Bool)
(declare-fun z$1552 () Bool)
(declare-fun z$1555 () Bool)
(declare-fun z$1556 () Bool)
(declare-fun z$1558 () Bool)
(declare-fun z$1560 () Bool)
(declare-fun prop () Bool)
(declare-fun z$1561 () Bool)
(declare-fun dve_invalid$next () Bool)
(declare-fun z$1603 () Bool)
(declare-fun z$1604 () Bool)
(declare-fun z$1618 () Bool)
(declare-fun a_measure_in_progress_Measuring_0$next () Bool)
(declare-fun z$1621 () Bool)
(declare-fun z$1622 () Bool)
(declare-fun z$1624 () Bool)
(declare-fun z$1626 () Bool)
(declare-fun prop$next () Bool)
(declare-fun z$1627 () Bool)
(declare-fun z$1751 () Bool)
(declare-fun z$1752 () Bool)
(declare-fun z$1753 () Bool)
(declare-fun z$1755 () Bool)
(declare-fun z$1706 () Bool)
(declare-fun z$1710 () Bool)
(declare-fun z$1750 () Bool)
(declare-fun z$1754 () Bool)
(declare-fun z$1788 () Bool)
(declare-fun z$1790 () Bool)
(declare-fun z$1787 () Bool)
(declare-fun z$1789 () Bool)
(declare-fun f00 () Bool)
(declare-fun z$167 () Bool)
(declare-fun z$168 () Bool)
(declare-fun z$170 () Bool)
(declare-fun z$171 () Bool)
(declare-fun f02 () Bool)
(declare-fun z$172 () Bool)
(declare-fun z$173 () Bool)
(declare-fun z$175 () Bool)
(declare-fun f03 () Bool)
(declare-fun z$176 () Bool)
(declare-fun z$177 () Bool)
(declare-fun z$179 () Bool)
(declare-fun f05 () Bool)
(declare-fun z$180 () Bool)
(declare-fun z$181 () Bool)
(declare-fun z$183 () Bool)
(declare-fun f28 () Bool)
(declare-fun z$185 () Bool)
(declare-fun z$186 () Bool)
(declare-fun z$188 () Bool)
(declare-fun z$190 () Bool)
(declare-fun f04 () Bool)
(declare-fun z$193 () Bool)
(declare-fun z$194 () Bool)
(declare-fun z$196 () Bool)
(declare-fun z$197 () Bool)
(declare-fun z$199 () Bool)
(declare-fun a_measure_done_Measuring_0$next () Bool)
(declare-fun z$200 () Bool)
(declare-fun z$202 () Bool)
(declare-fun z$204 () Bool)
(declare-fun z$205 () Bool)
(declare-fun z$207 () Bool)
(declare-fun z$208 () Bool)
(declare-fun z$209 () Bool)
(declare-fun z$211 () Bool)
(declare-fun a_cage_opened_Measuring_0$next () Bool)
(declare-fun z$212 () Bool)
(declare-fun z$214 () Bool)
(declare-fun z$216 () Bool)
(declare-fun a_initial_Measuring_0$next () Bool)
(declare-fun z$217 () Bool)
(declare-fun f06 () Bool)
(declare-fun z$220 () Bool)
(declare-fun z$221 () Bool)
(declare-fun z$223 () Bool)
(declare-fun z$224 () Bool)
(declare-fun f08 () Bool)
(declare-fun z$225 () Bool)
(declare-fun z$226 () Bool)
(declare-fun z$228 () Bool)
(declare-fun f09 () Bool)
(declare-fun z$229 () Bool)
(declare-fun z$230 () Bool)
(declare-fun z$232 () Bool)
(declare-fun f11 () Bool)
(declare-fun z$233 () Bool)
(declare-fun z$234 () Bool)
(declare-fun z$236 () Bool)
(declare-fun f29 () Bool)
(declare-fun z$238 () Bool)
(declare-fun z$239 () Bool)
(declare-fun a_measure_in_progress_Measuring_1$next () Bool)
(declare-fun z$241 () Bool)
(declare-fun z$243 () Bool)
(declare-fun f10 () Bool)
(declare-fun z$246 () Bool)
(declare-fun z$247 () Bool)
(declare-fun z$249 () Bool)
(declare-fun z$250 () Bool)
(declare-fun z$252 () Bool)
(declare-fun a_measure_done_Measuring_1$next () Bool)
(declare-fun z$253 () Bool)
(declare-fun z$255 () Bool)
(declare-fun z$257 () Bool)
(declare-fun z$258 () Bool)
(declare-fun z$260 () Bool)
(declare-fun z$261 () Bool)
(declare-fun z$262 () Bool)
(declare-fun z$264 () Bool)
(declare-fun a_cage_opened_Measuring_1$next () Bool)
(declare-fun z$265 () Bool)
(declare-fun z$267 () Bool)
(declare-fun z$269 () Bool)
(declare-fun a_initial_Measuring_1$next () Bool)
(declare-fun z$270 () Bool)
(declare-fun f12 () Bool)
(declare-fun z$272 () Bool)
(declare-fun z$273 () Bool)
(declare-fun f13 () Bool)
(declare-fun z$275 () Bool)
(declare-fun z$276 () Bool)
(declare-fun f14 () Bool)
(declare-fun z$278 () Bool)
(declare-fun z$279 () Bool)
(declare-fun z$281 () Bool)
(declare-fun f31 () Bool)
(declare-fun z$283 () Bool)
(declare-fun z$284 () Bool)
(declare-fun z$286 () Bool)
(declare-fun a_measured$next () Bool)
(declare-fun z$287 () Bool)
(declare-fun f15 () Bool)
(declare-fun z$289 () Bool)
(declare-fun z$290 () Bool)
(declare-fun z$292 () Bool)
(declare-fun z$293 () Bool)
(declare-fun f16 () Bool)
(declare-fun z$294 () Bool)
(declare-fun z$295 () Bool)
(declare-fun z$297 () Bool)
(declare-fun z$298 () Bool)
(declare-fun f17 () Bool)
(declare-fun z$299 () Bool)
(declare-fun z$300 () Bool)
(declare-fun z$302 () Bool)
(declare-fun z$303 () Bool)
(declare-fun z$305 () Bool)
(declare-fun a_new_range$next () Bool)
(declare-fun z$307 () Bool)
(declare-fun z$309 () Bool)
(declare-fun z$311 () Bool)
(declare-fun z$312 () Bool)
(declare-fun f18 () Bool)
(declare-fun z$315 () Bool)
(declare-fun z$316 () Bool)
(declare-fun a_small_resistance$next () Bool)
(declare-fun z$318 () Bool)
(declare-fun z$320 () Bool)
(declare-fun z$322 () Bool)
(declare-fun f22 () Bool)
(declare-fun z$324 () Bool)
(declare-fun z$325 () Bool)
(declare-fun a_correct_value$next () Bool)
(declare-fun z$327 () Bool)
(declare-fun z$329 () Bool)
(declare-fun z$331 () Bool)
(declare-fun z$332 () Bool)
(declare-fun f19 () Bool)
(declare-fun z$335 () Bool)
(declare-fun z$336 () Bool)
(declare-fun z$338 () Bool)
(declare-fun f32 () Bool)
(declare-fun z$340 () Bool)
(declare-fun z$341 () Bool)
(declare-fun z$343 () Bool)
(declare-fun a_large_resistance$next () Bool)
(declare-fun z$344 () Bool)
(declare-fun z$346 () Bool)
(declare-fun z$348 () Bool)
(declare-fun f20 () Bool)
(declare-fun z$350 () Bool)
(declare-fun z$351 () Bool)
(declare-fun a_too_small_resistance$next () Bool)
(declare-fun z$353 () Bool)
(declare-fun z$355 () Bool)
(declare-fun z$357 () Bool)
(declare-fun f21 () Bool)
(declare-fun z$359 () Bool)
(declare-fun z$360 () Bool)
(declare-fun a_too_large_resistance$next () Bool)
(declare-fun z$362 () Bool)
(declare-fun z$364 () Bool)
(declare-fun z$366 () Bool)
(declare-fun f23 () Bool)
(declare-fun z$368 () Bool)
(declare-fun z$369 () Bool)
(declare-fun z$371 () Bool)
(declare-fun z$372 () Bool)
(declare-fun a_start$next () Bool)
(declare-fun z$373 () Bool)
(declare-fun z$375 () Bool)
(declare-fun z$377 () Bool)
(declare-fun z$378 () Bool)
(declare-fun z$379 () Bool)
(declare-fun z$381 () Bool)
(declare-fun z$382 () Bool)
(declare-fun z$383 () Bool)
(declare-fun z$385 () Bool)
(declare-fun z$386 () Bool)
(declare-fun a_finished_measuring$next () Bool)
(declare-fun z$388 () Bool)
(declare-fun z$390 () Bool)
(declare-fun z$392 () Bool)
(declare-fun z$393 () Bool)
(declare-fun z$394 () Bool)
(declare-fun z$396 () Bool)
(declare-fun f30 () Bool)
(declare-fun z$398 () Bool)
(declare-fun z$399 () Bool)
(declare-fun a_S1$next () Bool)
(declare-fun z$401 () Bool)
(declare-fun z$403 () Bool)
(declare-fun z$405 () Bool)
(declare-fun z$406 () Bool)
(declare-fun z$408 () Bool)
(declare-fun a_S2$next () Bool)
(declare-fun z$410 () Bool)
(declare-fun f24 () Bool)
(declare-fun z$413 () Bool)
(declare-fun z$414 () Bool)
(declare-fun f25 () Bool)
(declare-fun z$417 () Bool)
(declare-fun z$418 () Bool)
(declare-fun z$420 () Bool)
(declare-fun z$421 () Bool)
(declare-fun z$423 () Bool)
(declare-fun a_state_request$next () Bool)
(declare-fun z$424 () Bool)
(declare-fun z$426 () Bool)
(declare-fun z$428 () Bool)
(declare-fun f26 () Bool)
(declare-fun z$429 () Bool)
(declare-fun z$430 () Bool)
(declare-fun f27 () Bool)
(declare-fun z$433 () Bool)
(declare-fun z$434 () Bool)
(declare-fun a_state0$next () Bool)
(declare-fun z$436 () Bool)
(declare-fun z$438 () Bool)
(declare-fun z$440 () Bool)
(declare-fun z$441 () Bool)
(declare-fun z$442 () Bool)
(declare-fun z$444 () Bool)
(declare-fun z$445 () Bool)
(declare-fun a_err7$next () Bool)
(declare-fun z$447 () Bool)
(declare-fun z$449 () Bool)
(declare-fun z$451 () Bool)
(declare-fun z$452 () Bool)
(declare-fun z$454 () Bool)
(declare-fun z$455 () Bool)
(declare-fun z$456 () Bool)
(declare-fun z$458 () Bool)
(declare-fun z$459 () Bool)
(declare-fun a_initial_Device_state$next () Bool)
(declare-fun z$460 () Bool)
(declare-fun z$462 () Bool)
(declare-fun z$464 () Bool)
(declare-fun z$465 () Bool)
(declare-fun a_state1$next () Bool)
(declare-fun z$467 () Bool)
(declare-fun z$483 () Bool)
(declare-fun z$484 () Bool)
(declare-fun z$486 () Bool)
(declare-fun z$487 () Bool)
(declare-fun z$489 () Bool)
(declare-fun z$86 () Bool)
(declare-fun GrEq_1_32_32 (utt32 utt32) Bool)
(declare-fun z$491 () Bool)
(declare-fun z$493 () Bool)
(declare-fun z$494 () Bool)
(declare-fun z$496 () Bool)
(declare-fun z$498 () Bool)
(declare-fun f01 () Bool)
(declare-fun z$499 () Bool)
(declare-fun z$501 () Bool)
(declare-fun z$502 () Bool)
(declare-fun z$504 () Bool)
(declare-fun z$506 () Bool)
(declare-fun z$507 () Bool)
(declare-fun z$509 () Bool)
(declare-fun z$511 () Bool)
(declare-fun z$512 () Bool)
(declare-fun z$515 () Bool)
(declare-fun z$516 () Bool)
(declare-fun z$518 () Bool)
(declare-fun z$519 () Bool)
(declare-fun z$521 () Bool)
(declare-fun z$522 () Bool)
(declare-fun z$524 () Bool)
(declare-fun z$526 () Bool)
(declare-fun z$527 () Bool)
(declare-fun z$529 () Bool)
(declare-fun z$531 () Bool)
(declare-fun z$532 () Bool)
(declare-fun z$534 () Bool)
(declare-fun z$535 () Bool)
(declare-fun z$537 () Bool)
(declare-fun z$539 () Bool)
(declare-fun f07 () Bool)
(declare-fun z$540 () Bool)
(declare-fun z$542 () Bool)
(declare-fun z$543 () Bool)
(declare-fun z$545 () Bool)
(declare-fun z$547 () Bool)
(declare-fun z$548 () Bool)
(declare-fun z$550 () Bool)
(declare-fun z$552 () Bool)
(declare-fun z$553 () Bool)
(declare-fun z$555 () Bool)
(declare-fun z$557 () Bool)
(declare-fun z$558 () Bool)
(declare-fun z$560 () Bool)
(declare-fun z$561 () Bool)
(declare-fun z$563 () Bool)
(declare-fun z$565 () Bool)
(declare-fun z$566 () Bool)
(declare-fun z$569 () Bool)
(declare-fun z$571 () Bool)
(declare-fun z$573 () Bool)
(declare-fun z$575 () Bool)
(declare-fun z$576 () Bool)
(declare-fun z$578 () Bool)
(declare-fun z$580 () Bool)
(declare-fun z$581 () Bool)
(declare-fun z$583 () Bool)
(declare-fun z$584 () Bool)
(declare-fun z$587 () Bool)
(declare-fun z$589 () Bool)
(declare-fun z$590 () Bool)
(declare-fun z$592 () Bool)
(declare-fun z$593 () Bool)
(declare-fun z$595 () Bool)
(declare-fun z$596 () Bool)
(declare-fun z$599 () Bool)
(declare-fun z$601 () Bool)
(declare-fun z$602 () Bool)
(declare-fun z$604 () Bool)
(declare-fun z$605 () Bool)
(declare-fun z$607 () Bool)
(declare-fun z$608 () Bool)
(declare-fun z$135 () Bool)
(declare-fun z$610 () Bool)
(declare-fun z$612 () Bool)
(declare-fun z$613 () Bool)
(declare-fun z$615 () Bool)
(declare-fun z$616 () Bool)
(declare-fun z$618 () Bool)
(declare-fun z$619 () Bool)
(declare-fun z$622 () Bool)
(declare-fun z$624 () Bool)
(declare-fun z$625 () Bool)
(declare-fun z$627 () Bool)
(declare-fun z$628 () Bool)
(declare-fun z$630 () Bool)
(declare-fun z$631 () Bool)
(declare-fun z$633 () Bool)
(declare-fun z$635 () Bool)
(declare-fun z$636 () Bool)
(declare-fun z$638 () Bool)
(declare-fun z$639 () Bool)
(declare-fun z$641 () Bool)
(declare-fun z$642 () Bool)
(declare-fun z$644 () Bool)
(declare-fun z$645 () Bool)
(declare-fun z$647 () Bool)
(declare-fun z$648 () Bool)
(declare-fun z$650 () Bool)
(declare-fun z$651 () Bool)
(declare-fun z$653 () Bool)
(declare-fun z$654 () Bool)
(declare-fun z$656 () Bool)
(declare-fun z$658 () Bool)
(declare-fun z$659 () Bool)
(declare-fun z$661 () Bool)
(declare-fun z$663 () Bool)
(declare-fun z$664 () Bool)
(declare-fun z$666 () Bool)
(declare-fun z$668 () Bool)
(declare-fun z$669 () Bool)
(declare-fun z$671 () Bool)
(declare-fun z$673 () Bool)
(declare-fun z$674 () Bool)
(declare-fun z$676 () Bool)
(declare-fun z$678 () Bool)
(declare-fun z$679 () Bool)
(declare-fun z$681 () Bool)
(declare-fun z$683 () Bool)
(declare-fun z$684 () Bool)
(declare-fun z$686 () Bool)
(declare-fun z$688 () Bool)
(declare-fun z$689 () Bool)
(declare-fun z$691 () Bool)
(declare-fun z$693 () Bool)
(declare-fun z$694 () Bool)
(declare-fun z$696 () Bool)
(declare-fun z$698 () Bool)
(declare-fun z$700 () Bool)
(declare-fun z$701 () Bool)
(declare-fun z$703 () Bool)
(declare-fun z$704 () Bool)
(declare-fun z$706 () Bool)
(declare-fun z$708 () Bool)
(declare-fun z$710 () Bool)
(declare-fun z$711 () Bool)
(declare-fun z$713 () Bool)
(declare-fun z$714 () Bool)
(declare-fun z$716 () Bool)
(declare-fun z$718 () Bool)
(declare-fun z$719 () Bool)
(declare-fun z$721 () Bool)
(declare-fun z$722 () Bool)
(declare-fun z$724 () Bool)
(declare-fun z$726 () Bool)
(declare-fun z$727 () Bool)
(declare-fun z$729 () Bool)
(declare-fun z$730 () Bool)
(declare-fun z$732 () Bool)
(declare-fun z$734 () Bool)
(declare-fun z$735 () Bool)
(declare-fun z$737 () Bool)
(declare-fun z$738 () Bool)
(declare-fun z$740 () Bool)
(declare-fun z$741 () Bool)
(declare-fun z$742 () Bool)
(declare-fun z$744 () Bool)
(declare-fun z$745 () Bool)
(declare-fun z$746 () Bool)
(declare-fun z$748 () Bool)
(declare-fun z$749 () Bool)
(declare-fun z$750 () Bool)
(declare-fun z$752 () Bool)
(declare-fun z$753 () Bool)
(declare-fun z$754 () Bool)
(declare-fun z$756 () Bool)
(declare-fun z$757 () Bool)
(declare-fun z$758 () Bool)
(declare-fun z$760 () Bool)
(declare-fun z$761 () Bool)
(declare-fun z$762 () Bool)
(declare-fun z$764 () Bool)
(declare-fun z$765 () Bool)
(declare-fun z$766 () Bool)
(declare-fun z$768 () Bool)
(declare-fun z$769 () Bool)
(declare-fun z$770 () Bool)
(declare-fun z$772 () Bool)
(declare-fun z$773 () Bool)
(declare-fun z$774 () Bool)
(declare-fun z$776 () Bool)
(declare-fun z$777 () Bool)
(declare-fun z$778 () Bool)
(declare-fun z$780 () Bool)
(declare-fun z$781 () Bool)
(declare-fun z$782 () Bool)
(declare-fun z$784 () Bool)
(declare-fun z$785 () Bool)
(declare-fun z$786 () Bool)
(declare-fun z$788 () Bool)
(declare-fun z$789 () Bool)
(declare-fun z$790 () Bool)
(declare-fun z$792 () Bool)
(declare-fun z$793 () Bool)
(declare-fun z$794 () Bool)
(declare-fun z$796 () Bool)
(declare-fun z$797 () Bool)
(declare-fun z$798 () Bool)
(declare-fun z$800 () Bool)
(declare-fun z$801 () Bool)
(declare-fun z$802 () Bool)
(declare-fun z$804 () Bool)
(declare-fun z$805 () Bool)
(declare-fun z$806 () Bool)
(declare-fun z$808 () Bool)
(declare-fun z$809 () Bool)
(declare-fun z$810 () Bool)
(declare-fun z$812 () Bool)
(declare-fun z$813 () Bool)
(declare-fun z$814 () Bool)
(declare-fun z$816 () Bool)
(declare-fun z$817 () Bool)
(declare-fun z$818 () Bool)
(declare-fun z$820 () Bool)
(declare-fun z$821 () Bool)
(declare-fun z$822 () Bool)
(declare-fun z$824 () Bool)
(declare-fun z$825 () Bool)
(declare-fun z$826 () Bool)
(declare-fun z$828 () Bool)
(declare-fun z$829 () Bool)
(declare-fun z$830 () Bool)
(declare-fun z$832 () Bool)
(declare-fun z$833 () Bool)
(declare-fun z$834 () Bool)
(declare-fun z$836 () Bool)
(declare-fun z$837 () Bool)
(declare-fun z$838 () Bool)
(declare-fun z$840 () Bool)
(declare-fun z$841 () Bool)
(declare-fun z$842 () Bool)
(declare-fun z$844 () Bool)
(declare-fun z$845 () Bool)
(declare-fun z$846 () Bool)
(declare-fun z$848 () Bool)
(declare-fun z$849 () Bool)
(declare-fun z$850 () Bool)
(declare-fun z$852 () Bool)
(declare-fun z$853 () Bool)
(declare-fun z$854 () Bool)
(declare-fun z$856 () Bool)
(declare-fun z$857 () Bool)
(declare-fun z$858 () Bool)
(declare-fun z$860 () Bool)
(declare-fun z$861 () Bool)
(declare-fun z$862 () Bool)
(declare-fun z$864 () Bool)
(declare-fun z$865 () Bool)
(declare-fun z$866 () Bool)
(declare-fun z$868 () Bool)
(declare-fun z$869 () Bool)
(declare-fun z$871 () Bool)
(declare-fun z$873 () Bool)
(declare-fun z$874 () Bool)
(declare-fun z$876 () Bool)
(declare-fun z$877 () Bool)
(declare-fun z$879 () Bool)
(declare-fun z$880 () Bool)
(declare-fun z$881 () Bool)
(declare-fun z$883 () Bool)
(declare-fun z$884 () Bool)
(declare-fun z$886 () Bool)
(declare-fun z$887 () Bool)
(declare-fun z$888 () Bool)
(declare-fun z$890 () Bool)
(declare-fun z$891 () Bool)
(declare-fun z$893 () Bool)
(declare-fun z$894 () Bool)
(declare-fun z$895 () Bool)
(declare-fun z$897 () Bool)
(declare-fun z$898 () Bool)
(declare-fun z$900 () Bool)
(declare-fun z$901 () Bool)
(declare-fun z$902 () Bool)
(declare-fun z$904 () Bool)
(declare-fun z$905 () Bool)
(declare-fun z$907 () Bool)
(declare-fun z$908 () Bool)
(declare-fun z$909 () Bool)
(declare-fun z$911 () Bool)
(declare-fun z$912 () Bool)
(declare-fun z$914 () Bool)
(declare-fun z$915 () Bool)
(declare-fun z$916 () Bool)
(declare-fun z$918 () Bool)
(declare-fun z$919 () Bool)
(declare-fun z$921 () Bool)
(declare-fun z$922 () Bool)
(declare-fun z$923 () Bool)
(declare-fun z$925 () Bool)
(declare-fun z$926 () Bool)
(declare-fun z$928 () Bool)
(declare-fun z$929 () Bool)
(declare-fun z$930 () Bool)
(declare-fun z$932 () Bool)
(declare-fun z$933 () Bool)
(declare-fun z$935 () Bool)
(declare-fun z$936 () Bool)
(declare-fun z$937 () Bool)
(declare-fun z$939 () Bool)
(declare-fun z$940 () Bool)
(declare-fun z$942 () Bool)
(declare-fun z$943 () Bool)
(declare-fun z$944 () Bool)
(declare-fun z$946 () Bool)
(declare-fun z$947 () Bool)
(declare-fun z$949 () Bool)
(declare-fun z$950 () Bool)
(declare-fun z$951 () Bool)
(declare-fun z$953 () Bool)
(declare-fun z$954 () Bool)
(declare-fun z$956 () Bool)
(declare-fun z$957 () Bool)
(declare-fun z$958 () Bool)
(declare-fun z$960 () Bool)
(declare-fun z$961 () Bool)
(declare-fun z$963 () Bool)
(declare-fun z$964 () Bool)
(declare-fun z$965 () Bool)
(declare-fun z$967 () Bool)
(declare-fun z$968 () Bool)
(declare-fun z$970 () Bool)
(declare-fun z$971 () Bool)
(declare-fun z$972 () Bool)
(declare-fun z$974 () Bool)
(declare-fun z$975 () Bool)
(declare-fun z$977 () Bool)
(declare-fun z$978 () Bool)
(declare-fun z$979 () Bool)
(declare-fun z$981 () Bool)
(declare-fun z$982 () Bool)
(declare-fun z$984 () Bool)
(declare-fun z$985 () Bool)
(declare-fun z$986 () Bool)
(declare-fun z$988 () Bool)
(declare-fun z$989 () Bool)
(declare-fun z$991 () Bool)
(declare-fun z$992 () Bool)
(declare-fun z$993 () Bool)
(declare-fun z$995 () Bool)
(declare-fun z$996 () Bool)
(declare-fun z$998 () Bool)
(declare-fun z$999 () Bool)
(declare-fun z$1000 () Bool)
(declare-fun z$1002 () Bool)
(declare-fun z$1003 () Bool)
(declare-fun z$1005 () Bool)
(declare-fun z$1006 () Bool)
(declare-fun z$1007 () Bool)
(declare-fun z$1009 () Bool)
(declare-fun z$1010 () Bool)
(declare-fun z$1012 () Bool)
(declare-fun z$1013 () Bool)
(declare-fun z$1014 () Bool)
(declare-fun z$1016 () Bool)
(declare-fun z$1017 () Bool)
(declare-fun z$1019 () Bool)
(declare-fun z$1020 () Bool)
(declare-fun z$1021 () Bool)
(declare-fun z$1023 () Bool)
(declare-fun z$1024 () Bool)
(declare-fun z$1026 () Bool)
(declare-fun z$1027 () Bool)
(declare-fun z$1028 () Bool)
(declare-fun z$1030 () Bool)
(declare-fun z$1031 () Bool)
(declare-fun z$1033 () Bool)
(declare-fun z$1034 () Bool)
(declare-fun z$1035 () Bool)
(declare-fun z$1037 () Bool)
(declare-fun z$1038 () Bool)
(declare-fun z$1040 () Bool)
(declare-fun z$1041 () Bool)
(declare-fun z$1042 () Bool)
(declare-fun z$1044 () Bool)
(declare-fun z$1045 () Bool)
(declare-fun z$1047 () Bool)
(declare-fun z$1048 () Bool)
(declare-fun z$1049 () Bool)
(declare-fun z$1051 () Bool)
(declare-fun z$1052 () Bool)
(declare-fun z$1054 () Bool)
(declare-fun z$1055 () Bool)
(declare-fun z$1056 () Bool)
(declare-fun z$1058 () Bool)
(declare-fun z$1059 () Bool)
(declare-fun z$1061 () Bool)
(declare-fun z$1062 () Bool)
(declare-fun z$1063 () Bool)
(declare-fun z$1065 () Bool)
(declare-fun z$1066 () Bool)
(declare-fun z$1068 () Bool)
(declare-fun z$1069 () Bool)
(declare-fun z$1070 () Bool)
(declare-fun z$1072 () Bool)
(declare-fun z$1073 () Bool)
(declare-fun z$1075 () Bool)
(declare-fun z$1076 () Bool)
(declare-fun z$1077 () Bool)
(declare-fun z$1079 () Bool)
(declare-fun z$1080 () Bool)
(declare-fun z$1082 () Bool)
(declare-fun z$1083 () Bool)
(declare-fun z$1084 () Bool)
(declare-fun z$1086 () Bool)
(declare-fun z$1087 () Bool)
(declare-fun z$1089 () Bool)
(declare-fun z$1090 () Bool)
(declare-fun z$1091 () Bool)
(declare-fun z$1093 () Bool)
(declare-fun z$1095 () Bool)
(declare-fun z$1096 () Bool)
(declare-fun z$1098 () Bool)
(declare-fun z$1099 () Bool)
(declare-fun z$1101 () Bool)
(declare-fun z$1102 () Bool)
(declare-fun z$1104 () Bool)
(declare-fun z$1105 () Bool)
(declare-fun z$1106 () Bool)
(declare-fun z$1107 () Bool)
(declare-fun z$1109 () Bool)
(declare-fun z$1110 () Bool)
(declare-fun z$1112 () Bool)
(declare-fun z$1113 () Bool)
(declare-fun z$1115 () Bool)
(declare-fun z$1116 () Bool)
(declare-fun z$1117 () Bool)
(declare-fun z$1118 () Bool)
(declare-fun z$1120 () Bool)
(declare-fun z$1121 () Bool)
(declare-fun z$1123 () Bool)
(declare-fun z$1125 () Bool)
(declare-fun z$1126 () Bool)
(declare-fun z$1128 () Bool)
(declare-fun z$1129 () Bool)
(declare-fun z$1131 () Bool)
(declare-fun z$1132 () Bool)
(declare-fun z$1134 () Bool)
(declare-fun z$1135 () Bool)
(declare-fun z$1136 () Bool)
(declare-fun z$1137 () Bool)
(declare-fun z$1139 () Bool)
(declare-fun z$1140 () Bool)
(declare-fun z$1142 () Bool)
(declare-fun z$1143 () Bool)
(declare-fun z$1145 () Bool)
(declare-fun z$1146 () Bool)
(declare-fun z$1147 () Bool)
(declare-fun z$1149 () Bool)
(declare-fun z$1150 () Bool)
(declare-fun z$1152 () Bool)
(declare-fun z$1153 () Bool)
(declare-fun z$1155 () Bool)
(declare-fun z$1157 () Bool)
(declare-fun z$1158 () Bool)
(declare-fun z$1160 () Bool)
(declare-fun z$1161 () Bool)
(declare-fun z$1163 () Bool)
(declare-fun z$1164 () Bool)
(declare-fun z$1166 () Bool)
(declare-fun z$1167 () Bool)
(declare-fun z$1168 () Bool)
(declare-fun z$1169 () Bool)
(declare-fun z$1171 () Bool)
(declare-fun z$1172 () Bool)
(declare-fun z$1174 () Bool)
(declare-fun z$1175 () Bool)
(declare-fun z$1177 () Bool)
(declare-fun z$1178 () Bool)
(declare-fun z$1179 () Bool)
(declare-fun z$1180 () Bool)
(declare-fun z$1182 () Bool)
(declare-fun z$1183 () Bool)
(declare-fun z$1185 () Bool)
(declare-fun z$1186 () Bool)
(declare-fun z$1188 () Bool)
(declare-fun z$1189 () Bool)
(declare-fun z$1190 () Bool)
(declare-fun z$1191 () Bool)
(declare-fun z$1193 () Bool)
(declare-fun z$1194 () Bool)
(declare-fun z$1196 () Bool)
(declare-fun z$1197 () Bool)
(declare-fun z$1199 () Bool)
(declare-fun z$1200 () Bool)
(declare-fun z$1201 () Bool)
(declare-fun z$1202 () Bool)
(declare-fun z$1204 () Bool)
(declare-fun z$1205 () Bool)
(declare-fun z$1207 () Bool)
(declare-fun z$1208 () Bool)
(declare-fun z$1210 () Bool)
(declare-fun z$1211 () Bool)
(declare-fun z$1212 () Bool)
(declare-fun z$1213 () Bool)
(declare-fun z$1215 () Bool)
(declare-fun z$1216 () Bool)
(declare-fun z$1218 () Bool)
(declare-fun z$1219 () Bool)
(declare-fun z$1221 () Bool)
(declare-fun z$1222 () Bool)
(declare-fun z$1223 () Bool)
(declare-fun z$1224 () Bool)
(declare-fun z$1226 () Bool)
(declare-fun z$1227 () Bool)
(declare-fun z$1229 () Bool)
(declare-fun z$1230 () Bool)
(declare-fun z$1232 () Bool)
(declare-fun z$1233 () Bool)
(declare-fun z$1234 () Bool)
(declare-fun z$1235 () Bool)
(declare-fun z$1237 () Bool)
(declare-fun z$1238 () Bool)
(declare-fun z$1240 () Bool)
(declare-fun z$1241 () Bool)
(declare-fun z$1243 () Bool)
(declare-fun z$1244 () Bool)
(declare-fun z$1245 () Bool)
(declare-fun z$1246 () Bool)
(declare-fun z$1248 () Bool)
(declare-fun z$1249 () Bool)
(declare-fun z$1251 () Bool)
(declare-fun z$1252 () Bool)
(declare-fun z$1254 () Bool)
(declare-fun z$1255 () Bool)
(declare-fun z$1256 () Bool)
(declare-fun z$1258 () Bool)
(declare-fun z$1259 () Bool)
(declare-fun z$1261 () Bool)
(declare-fun z$1262 () Bool)
(declare-fun z$1264 () Bool)
(declare-fun z$1266 () Bool)
(declare-fun z$1267 () Bool)
(declare-fun z$1269 () Bool)
(declare-fun z$1270 () Bool)
(declare-fun z$1272 () Bool)
(declare-fun z$1273 () Bool)
(declare-fun z$1275 () Bool)
(declare-fun z$1276 () Bool)
(declare-fun z$1277 () Bool)
(declare-fun z$1278 () Bool)
(declare-fun z$1280 () Bool)
(declare-fun z$1281 () Bool)
(declare-fun z$1283 () Bool)
(declare-fun z$1284 () Bool)
(declare-fun z$1286 () Bool)
(declare-fun z$1287 () Bool)
(declare-fun z$1288 () Bool)
(declare-fun z$1289 () Bool)
(declare-fun z$1291 () Bool)
(declare-fun z$1292 () Bool)
(declare-fun z$1294 () Bool)
(declare-fun z$1295 () Bool)
(declare-fun z$1297 () Bool)
(declare-fun z$1298 () Bool)
(declare-fun z$1299 () Bool)
(declare-fun z$1301 () Bool)
(declare-fun z$1302 () Bool)
(declare-fun z$1304 () Bool)
(declare-fun z$1305 () Bool)
(declare-fun z$1307 () Bool)
(declare-fun z$1309 () Bool)
(declare-fun z$1311 () Bool)
(declare-fun z$1312 () Bool)
(declare-fun z$1313 () Bool)
(declare-fun z$1314 () Bool)
(declare-fun z$1316 () Bool)
(declare-fun z$1317 () Bool)
(declare-fun z$1319 () Bool)
(declare-fun z$1320 () Bool)
(declare-fun z$1322 () Bool)
(declare-fun z$1323 () Bool)
(declare-fun z$1324 () Bool)
(declare-fun z$1325 () Bool)
(declare-fun z$1326 () Bool)
(declare-fun z$1328 () Bool)
(declare-fun z$1329 () Bool)
(declare-fun z$1331 () Bool)
(declare-fun z$1332 () Bool)
(declare-fun z$1334 () Bool)
(declare-fun z$1335 () Bool)
(declare-fun z$1336 () Bool)
(declare-fun z$1337 () Bool)
(declare-fun z$1339 () Bool)
(declare-fun z$1340 () Bool)
(declare-fun z$1342 () Bool)
(declare-fun z$1344 () Bool)
(declare-fun z$1345 () Bool)
(declare-fun z$1346 () Bool)
(declare-fun z$1347 () Bool)
(declare-fun z$1349 () Bool)
(declare-fun z$1350 () Bool)
(declare-fun z$1352 () Bool)
(declare-fun z$1353 () Bool)
(declare-fun z$1355 () Bool)
(declare-fun z$1356 () Bool)
(declare-fun z$1357 () Bool)
(declare-fun z$1358 () Bool)
(declare-fun z$1359 () Bool)
(declare-fun z$1361 () Bool)
(declare-fun z$1362 () Bool)
(declare-fun z$1364 () Bool)
(declare-fun z$1365 () Bool)
(declare-fun z$1367 () Bool)
(declare-fun z$1368 () Bool)
(declare-fun z$1369 () Bool)
(declare-fun z$1371 () Bool)
(declare-fun z$1372 () Bool)
(declare-fun z$1374 () Bool)
(declare-fun z$1375 () Bool)
(declare-fun z$1377 () Bool)
(declare-fun z$1379 () Bool)
(declare-fun z$1380 () Bool)
(declare-fun z$1381 () Bool)
(declare-fun z$1382 () Bool)
(declare-fun z$1384 () Bool)
(declare-fun z$1385 () Bool)
(declare-fun z$1387 () Bool)
(declare-fun z$1388 () Bool)
(declare-fun z$1390 () Bool)
(declare-fun z$1391 () Bool)
(declare-fun z$1392 () Bool)
(declare-fun z$1393 () Bool)
(declare-fun z$1394 () Bool)
(declare-fun z$1396 () Bool)
(declare-fun z$1397 () Bool)
(declare-fun z$1399 () Bool)
(declare-fun z$1400 () Bool)
(declare-fun z$1402 () Bool)
(declare-fun z$1403 () Bool)
(declare-fun z$1404 () Bool)
(declare-fun z$1405 () Bool)
(declare-fun z$1406 () Bool)
(declare-fun z$1408 () Bool)
(declare-fun z$1409 () Bool)
(declare-fun z$1411 () Bool)
(declare-fun z$1412 () Bool)
(declare-fun z$1414 () Bool)
(declare-fun z$1415 () Bool)
(declare-fun z$1416 () Bool)
(declare-fun z$1417 () Bool)
(declare-fun z$1418 () Bool)
(declare-fun z$1420 () Bool)
(declare-fun z$1421 () Bool)
(declare-fun z$1423 () Bool)
(declare-fun z$1424 () Bool)
(declare-fun z$1426 () Bool)
(declare-fun z$1427 () Bool)
(declare-fun z$1428 () Bool)
(declare-fun z$1429 () Bool)
(declare-fun z$1430 () Bool)
(declare-fun z$1432 () Bool)
(declare-fun z$1433 () Bool)
(declare-fun z$1435 () Bool)
(declare-fun z$1436 () Bool)
(declare-fun z$1438 () Bool)
(declare-fun z$1439 () Bool)
(declare-fun z$1440 () Bool)
(declare-fun z$1441 () Bool)
(declare-fun z$1442 () Bool)
(declare-fun z$1444 () Bool)
(declare-fun z$1445 () Bool)
(declare-fun z$1447 () Bool)
(declare-fun z$1448 () Bool)
(declare-fun z$1450 () Bool)
(declare-fun z$1451 () Bool)
(declare-fun z$1452 () Bool)
(declare-fun z$1453 () Bool)
(declare-fun z$1455 () Bool)
(declare-fun z$1456 () Bool)
(declare-fun z$1458 () Bool)
(declare-fun z$1459 () Bool)
(declare-fun z$1461 () Bool)
(declare-fun z$1462 () Bool)
(declare-fun z$1463 () Bool)
(declare-fun z$1464 () Bool)
(declare-fun z$1465 () Bool)
(declare-fun z$1467 () Bool)
(declare-fun z$1468 () Bool)
(declare-fun z$1470 () Bool)
(declare-fun z$1471 () Bool)
(declare-fun z$1473 () Bool)
(declare-fun z$1474 () Bool)
(declare-fun z$1475 () Bool)
(declare-fun z$1476 () Bool)
(declare-fun z$1477 () Bool)
(declare-fun z$1479 () Bool)
(declare-fun z$1480 () Bool)
(declare-fun z$1482 () Bool)
(declare-fun z$1483 () Bool)
(declare-fun z$1485 () Bool)
(declare-fun z$1486 () Bool)
(declare-fun z$1487 () Bool)
(declare-fun z$1489 () Bool)
(declare-fun z$1490 () Bool)
(declare-fun z$1491 () Bool)
(declare-fun z$1493 () Bool)
(declare-fun z$1494 () Bool)
(declare-fun z$1496 () Bool)
(declare-fun z$1498 () Bool)
(declare-fun z$1499 () Bool)
(declare-fun z$1500 () Bool)
(declare-fun z$1501 () Bool)
(declare-fun z$1503 () Bool)
(declare-fun z$1504 () Bool)
(declare-fun z$1506 () Bool)
(declare-fun z$1507 () Bool)
(declare-fun z$1509 () Bool)
(declare-fun z$1510 () Bool)
(declare-fun z$1511 () Bool)
(declare-fun z$1512 () Bool)
(declare-fun z$1513 () Bool)
(declare-fun z$1515 () Bool)
(declare-fun z$1516 () Bool)
(declare-fun z$1518 () Bool)
(declare-fun z$1519 () Bool)
(declare-fun z$1521 () Bool)
(declare-fun z$1522 () Bool)
(declare-fun z$1523 () Bool)
(declare-fun z$1524 () Bool)
(declare-fun z$1526 () Bool)
(declare-fun z$1527 () Bool)
(declare-fun z$1529 () Bool)
(declare-fun z$1530 () Bool)
(declare-fun z$1532 () Bool)
(declare-fun z$1533 () Bool)
(declare-fun z$1534 () Bool)
(declare-fun z$1536 () Bool)
(declare-fun z$1537 () Bool)
(declare-fun z$1538 () Bool)
(declare-fun z$1540 () Bool)
(declare-fun z$1541 () Bool)
(declare-fun z$1543 () Bool)
(declare-fun z$1545 () Bool)
(declare-fun z$1547 () Bool)
(declare-fun z$1548 () Bool)
(declare-fun p$0 () Bool)
(declare-fun p$1 () Bool)
(declare-fun p$2 () Bool)
(declare-fun p$3 () Bool)
(declare-fun f09$next () Bool)
(declare-fun p$4 () Bool)
(declare-fun p$5 () Bool)
(declare-fun z$1633 () Bool)
(declare-fun p$6 () Bool)
(declare-fun z$1632 () Bool)
(declare-fun p$7 () Bool)
(declare-fun z$1648 () Bool)
(declare-fun p$8 () Bool)
(declare-fun z$1635 () Bool)
(declare-fun p$9 () Bool)
(declare-fun z$1647 () Bool)
(declare-fun p$10 () Bool)
(declare-fun z$1646 () Bool)
(declare-fun p$11 () Bool)
(declare-fun z$1644 () Bool)
(declare-fun p$12 () Bool)
(declare-fun z$1636 () Bool)
(declare-fun p$13 () Bool)
(declare-fun z$1638 () Bool)
(declare-fun p$14 () Bool)
(declare-fun z$1643 () Bool)
(declare-fun p$15 () Bool)
(declare-fun z$1640 () Bool)
(declare-fun p$16 () Bool)
(declare-fun z$1641 () Bool)
(declare-fun p$17 () Bool)
(declare-fun z$1649 () Bool)
(declare-fun p$18 () Bool)
(declare-fun z$1650 () Bool)
(declare-fun p$19 () Bool)
(declare-fun z$1651 () Bool)
(declare-fun p$20 () Bool)
(declare-fun z$1652 () Bool)
(declare-fun p$21 () Bool)
(declare-fun z$1653 () Bool)
(declare-fun p$22 () Bool)
(declare-fun z$1639 () Bool)
(declare-fun p$23 () Bool)
(declare-fun z$1642 () Bool)
(declare-fun p$24 () Bool)
(declare-fun z$1645 () Bool)
(declare-fun p$25 () Bool)
(declare-fun f26$next () Bool)
(declare-fun z$1712 () Bool)
(declare-fun p$26 () Bool)
(declare-fun f11$next () Bool)
(declare-fun z$1713 () Bool)
(declare-fun p$27 () Bool)
(declare-fun f08$next () Bool)
(declare-fun z$1715 () Bool)
(declare-fun p$28 () Bool)
(declare-fun f28$next () Bool)
(declare-fun z$1716 () Bool)
(declare-fun p$29 () Bool)
(declare-fun f00$next () Bool)
(declare-fun z$1717 () Bool)
(declare-fun p$30 () Bool)
(declare-fun f01$next () Bool)
(declare-fun z$1718 () Bool)
(declare-fun p$31 () Bool)
(declare-fun f02$next () Bool)
(declare-fun z$1719 () Bool)
(declare-fun p$32 () Bool)
(declare-fun f03$next () Bool)
(declare-fun z$1720 () Bool)
(declare-fun p$33 () Bool)
(declare-fun f04$next () Bool)
(declare-fun z$1721 () Bool)
(declare-fun p$34 () Bool)
(declare-fun f06$next () Bool)
(declare-fun z$1723 () Bool)
(declare-fun p$35 () Bool)
(declare-fun f07$next () Bool)
(declare-fun z$1724 () Bool)
(declare-fun p$36 () Bool)
(declare-fun f10$next () Bool)
(declare-fun z$1725 () Bool)
(declare-fun p$37 () Bool)
(declare-fun f12$next () Bool)
(declare-fun z$1726 () Bool)
(declare-fun p$38 () Bool)
(declare-fun f13$next () Bool)
(declare-fun z$1727 () Bool)
(declare-fun p$39 () Bool)
(declare-fun f14$next () Bool)
(declare-fun z$1728 () Bool)
(declare-fun p$40 () Bool)
(declare-fun f15$next () Bool)
(declare-fun z$1729 () Bool)
(declare-fun p$41 () Bool)
(declare-fun f16$next () Bool)
(declare-fun z$1730 () Bool)
(declare-fun p$42 () Bool)
(declare-fun f18$next () Bool)
(declare-fun z$1731 () Bool)
(declare-fun p$43 () Bool)
(declare-fun f19$next () Bool)
(declare-fun z$1732 () Bool)
(declare-fun p$44 () Bool)
(declare-fun f20$next () Bool)
(declare-fun z$1733 () Bool)
(declare-fun p$45 () Bool)
(declare-fun f21$next () Bool)
(declare-fun z$1734 () Bool)
(declare-fun p$46 () Bool)
(declare-fun f22$next () Bool)
(declare-fun z$1735 () Bool)
(declare-fun p$47 () Bool)
(declare-fun f23$next () Bool)
(declare-fun z$1736 () Bool)
(declare-fun p$48 () Bool)
(declare-fun f24$next () Bool)
(declare-fun z$1737 () Bool)
(declare-fun p$49 () Bool)
(declare-fun f25$next () Bool)
(declare-fun z$1738 () Bool)
(declare-fun p$50 () Bool)
(declare-fun f27$next () Bool)
(declare-fun z$1739 () Bool)
(declare-fun p$51 () Bool)
(declare-fun f29$next () Bool)
(declare-fun z$1740 () Bool)
(declare-fun p$52 () Bool)
(declare-fun f30$next () Bool)
(declare-fun z$1741 () Bool)
(declare-fun p$53 () Bool)
(declare-fun f31$next () Bool)
(declare-fun z$1742 () Bool)
(declare-fun p$54 () Bool)
(declare-fun f32$next () Bool)
(declare-fun z$1743 () Bool)
(declare-fun p$55 () Bool)
(declare-fun f17$next () Bool)
(declare-fun z$1744 () Bool)
(declare-fun p$56 () Bool)
(declare-fun f05$next () Bool)
(declare-fun z$1800 () Bool)
(declare-fun p$57 () Bool)
(assert
 (and (distinct z$n0s16 z$n1s16 z$n3s16) true))
(assert
 (and (distinct z$n16s32 z$n1s32 z$n0s32 z$n6200s32 z$n999s32 z$n5999s32 z$n1000s32 z$n5800s32 z$n5s32 z$n65536s32) true))
(assert
 (= z$1 (not a_S1)))
(assert
 z$1)
(assert
 (= z$3 (not a_S2)))
(assert
 z$3)
(assert
 (= z$5 (not a_cage_opened_Measuring_0)))
(assert
 z$5)
(assert
 (= z$7 (not a_cage_opened_Measuring_1)))
(assert
 z$7)
(assert
 (= z$9 (not a_correct_value)))
(assert
 z$9)
(assert
 (= z$11 (not a_err7)))
(assert
 z$11)
(assert
 (= z$13 (not a_finished_measuring)))
(assert
 z$13)
(assert
 (= z$15 (not a_initial_Device_state)))
(assert
 z$15)
(assert
 (= z$17 (not a_initial_Measuring_0)))
(assert
 z$17)
(assert
 (= z$19 (not a_initial_Measuring_1)))
(assert
 z$19)
(assert
 (= z$21 (not a_large_resistance)))
(assert
 z$21)
(assert
 (= z$23 (not a_measure_done_Measuring_0)))
(assert
 z$23)
(assert
 (= z$25 (not a_measure_done_Measuring_1)))
(assert
 z$25)
(assert
 (= z$27 (not a_measure_in_progress_Measuring_0)))
(assert
 z$27)
(assert
 (= z$29 (not a_measure_in_progress_Measuring_1)))
(assert
 z$29)
(assert
 (= z$31 (not a_measured)))
(assert
 z$31)
(assert
 (= z$33 (not a_new_range)))
(assert
 z$33)
(assert
 (= z$35 (not a_small_resistance)))
(assert
 z$35)
(assert
 (= z$37 (not a_start)))
(assert
 z$37)
(assert
 (= z$39 (not a_state0)))
(assert
 z$39)
(assert
 (= z$41 (not a_state1)))
(assert
 z$41)
(assert
 (= z$43 (not a_state_request)))
(assert
 z$43)
(assert
 (= z$45 (not a_too_large_resistance)))
(assert
 z$45)
(assert
 (= z$47 (not a_too_small_resistance)))
(assert
 z$47)
(assert
 (= z$49 (not dve_invalid)))
(assert
 z$49)
(assert
 (let (($x1974 (= v_actual_resistance z$n0s16)))
 (= z$52 $x1974)))
(assert
 z$52)
(assert
 (let (($x1976 (= v_cage_safe z$n0s16)))
 (= z$54 $x1976)))
(assert
 z$54)
(assert
 (let (($x1668 (= v_range z$n0s16)))
 (= z$56 $x1668)))
(assert
 z$56)
(assert
 (let (($x786 (Extract_1_15_15_16 v_cage_safe)))
 (= z$469 $x786)))
(assert
 (let ((?x427 (Concat_32_16_16 z$n0s16 v_cage_safe)))
 (= z$471 ?x427)))
(assert
 (let ((?x1222 (BitWiseNot_32_32 z$471)))
 (= z$473 ?x1222)))
(assert
 (let ((?x699 (ShiftR_32_32_32 z$473 z$n16s32)))
 (= z$475 ?x699)))
(assert
 (let ((?x415 (BitWiseNot_32_32 z$475)))
 (= z$477 ?x415)))
(assert
 (let ((?x1158 (ShiftR_32_32_32 z$471 z$n16s32)))
 (= z$479 ?x1158)))
(assert
 (let ((?x713 (ite z$469 z$477 z$479)))
 (= z$481 ?x713)))
(assert
 (= z$1552 (and (distinct z$481 z$n1s32) true)))
(assert
 (= z$1553 (ite a_measure_in_progress_Measuring_0 z$n1s32 z$n0s32)))
(assert
 (let (($x725 (= z$n1s32 z$1553)))
 (= z$1555 $x725)))
(assert
 (= z$1556 (and z$1552 z$1555)))
(assert
 (= z$1558 (and z$49 z$1556)))
(assert
 (= z$1560 (not z$1558)))
(assert
 (= z$1561 (= prop z$1560)))
(assert
 z$1561)
(assert
 prop)
(assert
 (= z$1603 (not dve_invalid$next)))
(assert
 (let (($x694 (Extract_1_15_15_16 v_cage_safe$next)))
 (= z$1604 $x694)))
(assert
 (let ((?x566 (Concat_32_16_16 z$n0s16 v_cage_safe$next)))
 (= z$1606 ?x566)))
(assert
 (let ((?x570 (BitWiseNot_32_32 z$1606)))
 (= z$1608 ?x570)))
(assert
 (let ((?x580 (ShiftR_32_32_32 z$1608 z$n16s32)))
 (= z$1610 ?x580)))
(assert
 (let ((?x584 (BitWiseNot_32_32 z$1610)))
 (= z$1612 ?x584)))
(assert
 (let ((?x949 (ShiftR_32_32_32 z$1606 z$n16s32)))
 (= z$1614 ?x949)))
(assert
 (let ((?x594 (ite z$1604 z$1612 z$1614)))
 (= z$1616 ?x594)))
(assert
 (= z$1618 (and (distinct z$1616 z$n1s32) true)))
(assert
 (let ((?x961 (ite a_measure_in_progress_Measuring_0$next z$n1s32 z$n0s32)))
 (= z$1619 ?x961)))
(assert
 (let (($x477 (= z$n1s32 z$1619)))
 (= z$1621 $x477)))
(assert
 (= z$1622 (and z$1618 z$1621)))
(assert
 (= z$1624 (and z$1603 z$1622)))
(assert
 (= z$1626 (not z$1624)))
(assert
 (= z$1627 (= prop$next z$1626)))
(assert
 z$1627)
(assert
 (let (($x877 (= v_cage_safe z$n1s16)))
 (= z$1751 $x877)))
(assert
 (= z$1752 (and (distinct z$479 z$n1s32) true)))
(assert
 (= z$1753 (and z$1751 z$1752)))
(assert
 (= z$1755 (not z$1753)))
(assert
 z$1755)
(assert
 (let (($x83 (= v_cage_safe$next z$n1s16)))
 (= z$1706 $x83)))
(assert
 (= z$1710 (and (distinct z$1614 z$n1s32) true)))
(assert
 (= z$1750 (and z$1706 z$1710)))
(assert
 (= z$1754 (not z$1750)))
(assert
 z$1754)
(assert
 (= z$1788 (and z$1751 z$469)))
(assert
 (= z$1790 (not z$1788)))
(assert
 z$1790)
(assert
 (= z$1787 (and z$1706 z$1604)))
(assert
 (= z$1789 (not z$1787)))
(assert
 z$1789)
(assert
 (let (($x1664 (not f00)))
 (= z$167 $x1664)))
(assert
 (= z$168 (and z$27 z$167)))
(assert
 (= z$170 (not z$168)))
(assert
 (= z$171 (not z$170)))
(assert
 (let (($x294 (not f02)))
 (= z$172 $x294)))
(assert
 (= z$173 (and z$171 z$172)))
(assert
 (= z$175 (not z$173)))
(assert
 (let (($x1264 (not f03)))
 (= z$176 $x1264)))
(assert
 (= z$177 (and z$175 z$176)))
(assert
 (= z$179 (not z$177)))
(assert
 (let (($x1646 (not f05)))
 (= z$180 $x1646)))
(assert
 (= z$181 (and z$179 z$180)))
(assert
 (= z$183 (not z$181)))
(assert
 (let (($x1764 (not f28)))
 (= z$185 $x1764)))
(assert
 (= z$186 (and z$183 z$185)))
(assert
 (= z$188 (= a_measure_in_progress_Measuring_0$next z$186)))
(assert
 z$188)
(assert
 (= z$190 (and a_measure_done_Measuring_0 z$167)))
(assert
 (let (($x1768 (not f04)))
 (= z$193 $x1768)))
(assert
 (= z$194 (and z$190 z$193)))
(assert
 (= z$196 (not z$194)))
(assert
 (= z$197 (and z$196 z$185)))
(assert
 (= z$199 (not z$197)))
(assert
 (= z$200 (= a_measure_done_Measuring_0$next z$199)))
(assert
 z$200)
(assert
 (= z$202 (and a_cage_opened_Measuring_0 z$172)))
(assert
 (= z$204 (not z$202)))
(assert
 (= z$205 (and z$204 z$176)))
(assert
 (= z$207 (not z$205)))
(assert
 (= z$208 (not z$207)))
(assert
 (= z$209 (and z$208 z$193)))
(assert
 (= z$211 (not z$209)))
(assert
 (= z$212 (= a_cage_opened_Measuring_0$next z$211)))
(assert
 z$212)
(assert
 (= z$214 (and z$17 z$180)))
(assert
 (let (($x1567 (not z$214)))
 (= z$216 $x1567)))
(assert
 (= z$217 (= a_initial_Measuring_0$next z$216)))
(assert
 z$217)
(assert
 (let (($x1481 (not f06)))
 (= z$220 $x1481)))
(assert
 (= z$221 (and z$29 z$220)))
(assert
 (= z$223 (not z$221)))
(assert
 (= z$224 (not z$223)))
(assert
 (let (($x2101 (not f08)))
 (= z$225 $x2101)))
(assert
 (= z$226 (and z$224 z$225)))
(assert
 (= z$228 (not z$226)))
(assert
 (let (($x997 (not f09)))
 (= z$229 $x997)))
(assert
 (= z$230 (and z$228 z$229)))
(assert
 (= z$232 (not z$230)))
(assert
 (let (($x1367 (not f11)))
 (= z$233 $x1367)))
(assert
 (= z$234 (and z$232 z$233)))
(assert
 (= z$236 (not z$234)))
(assert
 (let (($x849 (not f29)))
 (= z$238 $x849)))
(assert
 (= z$239 (and z$236 z$238)))
(assert
 (= z$241 (= a_measure_in_progress_Measuring_1$next z$239)))
(assert
 z$241)
(assert
 (= z$243 (and a_measure_done_Measuring_1 z$220)))
(assert
 (let (($x841 (not f10)))
 (= z$246 $x841)))
(assert
 (= z$247 (and z$243 z$246)))
(assert
 (= z$249 (not z$247)))
(assert
 (= z$250 (and z$249 z$238)))
(assert
 (= z$252 (not z$250)))
(assert
 (= z$253 (= a_measure_done_Measuring_1$next z$252)))
(assert
 z$253)
(assert
 (= z$255 (and a_cage_opened_Measuring_1 z$225)))
(assert
 (= z$257 (not z$255)))
(assert
 (= z$258 (and z$257 z$229)))
(assert
 (= z$260 (not z$258)))
(assert
 (= z$261 (not z$260)))
(assert
 (= z$262 (and z$261 z$246)))
(assert
 (= z$264 (not z$262)))
(assert
 (= z$265 (= a_cage_opened_Measuring_1$next z$264)))
(assert
 z$265)
(assert
 (= z$267 (and z$19 z$233)))
(assert
 (let (($x499 (not z$267)))
 (= z$269 $x499)))
(assert
 (= z$270 (= a_initial_Measuring_1$next z$269)))
(assert
 z$270)
(assert
 (let (($x1875 (not f12)))
 (= z$272 $x1875)))
(assert
 (= z$273 (and a_measured z$272)))
(assert
 (let (($x1248 (not f13)))
 (= z$275 $x1248)))
(assert
 (= z$276 (and z$273 z$275)))
(assert
 (let (($x335 (not f14)))
 (= z$278 $x335)))
(assert
 (= z$279 (and z$276 z$278)))
(assert
 (= z$281 (not z$279)))
(assert
 (let (($x1995 (not f31)))
 (= z$283 $x1995)))
(assert
 (= z$284 (and z$281 z$283)))
(assert
 (= z$286 (not z$284)))
(assert
 (= z$287 (= a_measured$next z$286)))
(assert
 z$287)
(assert
 (let (($x1969 (not f15)))
 (= z$289 $x1969)))
(assert
 (= z$290 (and z$33 z$289)))
(assert
 (= z$292 (not z$290)))
(assert
 (= z$293 (not z$292)))
(assert
 (let (($x1166 (not f16)))
 (= z$294 $x1166)))
(assert
 (= z$295 (and z$293 z$294)))
(assert
 (= z$297 (not z$295)))
(assert
 (= z$298 (not z$297)))
(assert
 (let (($x1661 (not f17)))
 (= z$299 $x1661)))
(assert
 (= z$300 (and z$298 z$299)))
(assert
 (= z$302 (not z$300)))
(assert
 (= z$303 (and z$302 z$185)))
(assert
 (= z$305 (and z$303 z$238)))
(assert
 (= z$307 (= a_new_range$next z$305)))
(assert
 z$307)
(assert
 (= z$309 (and z$35 z$275)))
(assert
 (= z$311 (not z$309)))
(assert
 (= z$312 (and z$311 z$289)))
(assert
 (let (($x2051 (not f18)))
 (= z$315 $x2051)))
(assert
 (= z$316 (and z$312 z$315)))
(assert
 (= z$318 (= a_small_resistance$next z$316)))
(assert
 z$318)
(assert
 (= z$320 (and z$9 z$272)))
(assert
 (= z$322 (not z$320)))
(assert
 (let (($x287 (not f22)))
 (= z$324 $x287)))
(assert
 (= z$325 (and z$322 z$324)))
(assert
 (= z$327 (= a_correct_value$next z$325)))
(assert
 z$327)
(assert
 (= z$329 (and z$21 z$278)))
(assert
 (= z$331 (not z$329)))
(assert
 (= z$332 (and z$331 z$294)))
(assert
 (let (($x1584 (not f19)))
 (= z$335 $x1584)))
(assert
 (= z$336 (and z$332 z$335)))
(assert
 (= z$338 (not z$336)))
(assert
 (let (($x805 (not f32)))
 (= z$340 $x805)))
(assert
 (= z$341 (and z$338 z$340)))
(assert
 (= z$343 (not z$341)))
(assert
 (= z$344 (= a_large_resistance$next z$343)))
(assert
 z$344)
(assert
 (= z$346 (and z$47 z$315)))
(assert
 (= z$348 (not z$346)))
(assert
 (let (($x1568 (not f20)))
 (= z$350 $x1568)))
(assert
 (= z$351 (and z$348 z$350)))
(assert
 (= z$353 (= a_too_small_resistance$next z$351)))
(assert
 z$353)
(assert
 (= z$355 (and z$45 z$335)))
(assert
 (= z$357 (not z$355)))
(assert
 (let (($x828 (not f21)))
 (= z$359 $x828)))
(assert
 (= z$360 (and z$357 z$359)))
(assert
 (= z$362 (= a_too_large_resistance$next z$360)))
(assert
 z$362)
(assert
 (= z$364 (and z$37 z$299)))
(assert
 (= z$366 (not z$364)))
(assert
 (let (($x858 (not f23)))
 (= z$368 $x858)))
(assert
 (= z$369 (and z$366 z$368)))
(assert
 (= z$371 (not z$369)))
(assert
 (let (($x1793 (not z$371)))
 (= z$372 $x1793)))
(assert
 (= z$373 (= a_start$next z$372)))
(assert
 z$373)
(assert
 (= z$375 (and z$13 z$350)))
(assert
 (= z$377 (not z$375)))
(assert
 (= z$378 (not z$377)))
(assert
 (= z$379 (and z$378 z$359)))
(assert
 (= z$381 (not z$379)))
(assert
 (= z$382 (not z$381)))
(assert
 (= z$383 (and z$382 z$324)))
(assert
 (= z$385 (not z$383)))
(assert
 (= z$386 (and z$385 z$368)))
(assert
 (= z$388 (= a_finished_measuring$next z$386)))
(assert
 z$388)
(assert
 (= z$390 (and z$1 z$185)))
(assert
 (= z$392 (not z$390)))
(assert
 (= z$393 (not z$392)))
(assert
 (= z$394 (and z$393 z$238)))
(assert
 (= z$396 (not z$394)))
(assert
 (let (($x510 (not f30)))
 (= z$398 $x510)))
(assert
 (= z$399 (and z$396 z$398)))
(assert
 (= z$401 (= a_S1$next z$399)))
(assert
 z$401)
(assert
 (= z$403 (and z$3 z$398)))
(assert
 (= z$405 (not z$403)))
(assert
 (= z$406 (and z$405 z$283)))
(assert
 (= z$408 (and z$406 z$340)))
(assert
 (= z$410 (= a_S2$next z$408)))
(assert
 z$410)
(assert
 (let (($x1033 (not f24)))
 (= z$413 $x1033)))
(assert
 (= z$414 (and a_state_request z$413)))
(assert
 (let (($x1057 (not f25)))
 (= z$417 $x1057)))
(assert
 (= z$418 (and z$414 z$417)))
(assert
 (= z$420 (not z$418)))
(assert
 (= z$421 (and z$420 z$398)))
(assert
 (= z$423 (not z$421)))
(assert
 (= z$424 (= a_state_request$next z$423)))
(assert
 z$424)
(assert
 (= z$426 (and z$39 z$413)))
(assert
 (= z$428 (not z$426)))
(assert
 (let (($x1748 (not f26)))
 (= z$429 $x1748)))
(assert
 (= z$430 (and z$428 z$429)))
(assert
 (let (($x2905 (not f27)))
 (= z$433 $x2905)))
(assert
 (= z$434 (and z$430 z$433)))
(assert
 (= z$436 (= a_state0$next z$434)))
(assert
 z$436)
(assert
 (= z$438 (and z$11 z$417)))
(assert
 (= z$440 (not z$438)))
(assert
 (= z$441 (not z$440)))
(assert
 (= z$442 (and z$441 z$433)))
(assert
 (= z$444 (not z$442)))
(assert
 (= z$445 (and z$444 z$340)))
(assert
 (= z$447 (= a_err7$next z$445)))
(assert
 z$447)
(assert
 (= z$449 (and z$15 z$398)))
(assert
 (= z$451 (not z$449)))
(assert
 (= z$452 (and z$451 z$283)))
(assert
 (= z$454 (not z$452)))
(assert
 (= z$455 (not z$454)))
(assert
 (= z$456 (and z$455 z$340)))
(assert
 (= z$458 (not z$456)))
(assert
 (let (($x2935 (not z$458)))
 (= z$459 $x2935)))
(assert
 (= z$460 (= a_initial_Device_state$next z$459)))
(assert
 z$460)
(assert
 (= z$462 (and z$41 z$429)))
(assert
 (= z$464 (not z$462)))
(assert
 (= z$465 (and z$464 z$283)))
(assert
 (= z$467 (= a_state1$next z$465)))
(assert
 z$467)
(assert
 (let (($x1093 (= z$n1s32 z$481)))
 (= z$483 $x1093)))
(assert
 (= z$484 (and a_measure_done_Measuring_0 z$483)))
(assert
 (= z$486 (not z$484)))
(assert
 (= z$487 (and f00 z$486)))
(assert
 (= z$489 (not z$487)))
(assert
 (let (($x1111 (Extract_1_15_15_16 v_actual_resistance)))
 (= z$86 $x1111)))
(assert
 (let ((?x1115 (Concat_32_16_16 z$n0s16 v_actual_resistance)))
 (= z$88 ?x1115)))
(assert
 (let ((?x1119 (BitWiseNot_32_32 z$88)))
 (= z$90 ?x1119)))
(assert
 (let ((?x1123 (ShiftR_32_32_32 z$90 z$n16s32)))
 (= z$93 ?x1123)))
(assert
 (let ((?x289 (BitWiseNot_32_32 z$93)))
 (= z$95 ?x289)))
(assert
 (let ((?x1066 (ShiftR_32_32_32 z$88 z$n16s32)))
 (= z$97 ?x1066)))
(assert
 (let ((?x1074 (ite z$86 z$95 z$97)))
 (= z$99 ?x1074)))
(assert
 (let (($x1082 (GrEq_1_32_32 z$99 z$n6200s32)))
 (= z$491 $x1082)))
(assert
 (= z$493 (not z$491)))
(assert
 (= z$494 (and z$483 z$493)))
(assert
 (= z$496 (and a_measure_in_progress_Measuring_0 z$494)))
(assert
 (= z$498 (not z$496)))
(assert
 (= z$499 (and f01 z$498)))
(assert
 (= z$501 (not z$499)))
(assert
 (= z$502 (and z$489 z$501)))
(assert
 (= z$504 (and z$5 f02)))
(assert
 (= z$506 (not z$504)))
(assert
 (= z$507 (and z$502 z$506)))
(assert
 (= z$509 (and z$27 f03)))
(assert
 (= z$511 (not z$509)))
(assert
 (= z$512 (and z$507 z$511)))
(assert
 (let (($x1441 (= z$n0s32 z$481)))
 (= z$515 $x1441)))
(assert
 (= z$516 (and a_measure_done_Measuring_0 z$515)))
(assert
 (= z$518 (not z$516)))
(assert
 (= z$519 (and f04 z$518)))
(assert
 (= z$521 (not z$519)))
(assert
 (= z$522 (and z$512 z$521)))
(assert
 (= z$524 (and a_initial_Measuring_0 f05)))
(assert
 (= z$526 (not z$524)))
(assert
 (= z$527 (and z$522 z$526)))
(assert
 (= z$529 (and a_measure_done_Measuring_1 z$483)))
(assert
 (= z$531 (not z$529)))
(assert
 (= z$532 (and f06 z$531)))
(assert
 (= z$534 (not z$532)))
(assert
 (= z$535 (and z$527 z$534)))
(assert
 (= z$537 (and a_measure_in_progress_Measuring_1 z$494)))
(assert
 (= z$539 (not z$537)))
(assert
 (= z$540 (and f07 z$539)))
(assert
 (= z$542 (not z$540)))
(assert
 (= z$543 (and z$535 z$542)))
(assert
 (= z$545 (and z$7 f08)))
(assert
 (= z$547 (not z$545)))
(assert
 (= z$548 (and z$543 z$547)))
(assert
 (= z$550 (and z$29 f09)))
(assert
 (= z$552 (not z$550)))
(assert
 (= z$553 (and z$548 z$552)))
(assert
 (= z$555 (and a_measure_done_Measuring_1 z$515)))
(assert
 (= z$557 (not z$555)))
(assert
 (= z$558 (and f10 z$557)))
(assert
 (= z$560 (not z$558)))
(assert
 (= z$561 (and z$553 z$560)))
(assert
 (= z$563 (and a_initial_Measuring_1 f11)))
(assert
 (= z$565 (not z$563)))
(assert
 (= z$566 (and z$561 z$565)))
(assert
 (let (($x1557 (GrEq_1_32_32 z$n999s32 z$99)))
 (= z$569 $x1557)))
(assert
 (= z$571 (not z$569)))
(assert
 (let (($x1564 (GrEq_1_32_32 z$99 z$n5999s32)))
 (= z$573 $x1564)))
(assert
 (= z$575 (not z$573)))
(assert
 (= z$576 (and z$571 z$575)))
(assert
 (= z$578 (and a_measured z$576)))
(assert
 (= z$580 (not z$578)))
(assert
 (= z$581 (and f12 z$580)))
(assert
 (= z$583 (not z$581)))
(assert
 (= z$584 (and z$566 z$583)))
(assert
 (let (($x1606 (GrEq_1_32_32 z$99 z$n1000s32)))
 (= z$587 $x1606)))
(assert
 (= z$589 (not z$587)))
(assert
 (= z$590 (and a_measured z$589)))
(assert
 (= z$592 (not z$590)))
(assert
 (= z$593 (and f13 z$592)))
(assert
 (= z$595 (not z$593)))
(assert
 (= z$596 (and z$584 z$595)))
(assert
 (let (($x539 (GrEq_1_32_32 z$n5800s32 z$99)))
 (= z$599 $x539)))
(assert
 (= z$601 (not z$599)))
(assert
 (= z$602 (and a_measured z$601)))
(assert
 (= z$604 (not z$602)))
(assert
 (= z$605 (and f14 z$604)))
(assert
 (= z$607 (not z$605)))
(assert
 (= z$608 (and z$596 z$607)))
(assert
 (let (($x356 (Extract_1_15_15_16 v_range)))
 (= z$135 $x356)))
(assert
 (let ((?x341 (Concat_32_16_16 z$n0s16 v_range)))
 (= z$137 ?x341)))
(assert
 (let ((?x1708 (BitWiseNot_32_32 z$137)))
 (= z$139 ?x1708)))
(assert
 (let ((?x1712 (ShiftR_32_32_32 z$139 z$n16s32)))
 (= z$141 ?x1712)))
(assert
 (let ((?x1716 (BitWiseNot_32_32 z$141)))
 (= z$143 ?x1716)))
(assert
 (let ((?x1720 (ShiftR_32_32_32 z$137 z$n16s32)))
 (= z$145 ?x1720)))
(assert
 (let ((?x598 (ite z$135 z$143 z$145)))
 (= z$147 ?x598)))
(assert
 (let (($x735 (GrEq_1_32_32 z$n0s32 z$147)))
 (= z$610 $x735)))
(assert
 (= z$612 (not z$610)))
(assert
 (= z$613 (and a_small_resistance z$612)))
(assert
 (= z$615 (not z$613)))
(assert
 (= z$616 (and f15 z$615)))
(assert
 (= z$618 (not z$616)))
(assert
 (= z$619 (and z$608 z$618)))
(assert
 (let (($x760 (GrEq_1_32_32 z$147 z$n5s32)))
 (= z$622 $x760)))
(assert
 (= z$624 (not z$622)))
(assert
 (= z$625 (and a_large_resistance z$624)))
(assert
 (= z$627 (not z$625)))
(assert
 (= z$628 (and f16 z$627)))
(assert
 (= z$630 (not z$628)))
(assert
 (= z$631 (and z$619 z$630)))
(assert
 (= z$633 (and a_start f17)))
(assert
 (= z$635 (not z$633)))
(assert
 (= z$636 (and z$631 z$635)))
(assert
 (let (($x647 (= z$n0s32 z$147)))
 (= z$638 $x647)))
(assert
 (= z$639 (and a_small_resistance z$638)))
(assert
 (= z$641 (not z$639)))
(assert
 (= z$642 (and f18 z$641)))
(assert
 (= z$644 (not z$642)))
(assert
 (= z$645 (and z$636 z$644)))
(assert
 (let (($x2884 (= z$n5s32 z$147)))
 (= z$647 $x2884)))
(assert
 (= z$648 (and a_large_resistance z$647)))
(assert
 (= z$650 (not z$648)))
(assert
 (= z$651 (and f19 z$650)))
(assert
 (= z$653 (not z$651)))
(assert
 (= z$654 (and z$645 z$653)))
(assert
 (= z$656 (and z$47 f20)))
(assert
 (= z$658 (not z$656)))
(assert
 (= z$659 (and z$654 z$658)))
(assert
 (= z$661 (and z$45 f21)))
(assert
 (= z$663 (not z$661)))
(assert
 (= z$664 (and z$659 z$663)))
(assert
 (= z$666 (and z$9 f22)))
(assert
 (= z$668 (not z$666)))
(assert
 (= z$669 (and z$664 z$668)))
(assert
 (= z$671 (and z$13 f23)))
(assert
 (= z$673 (not z$671)))
(assert
 (= z$674 (and z$669 z$673)))
(assert
 (= z$676 (and z$43 f24)))
(assert
 (= z$678 (not z$676)))
(assert
 (= z$679 (and z$674 z$678)))
(assert
 (= z$681 (and z$43 f25)))
(assert
 (= z$683 (not z$681)))
(assert
 (= z$684 (and z$679 z$683)))
(assert
 (= z$686 (and z$39 f26)))
(assert
 (= z$688 (not z$686)))
(assert
 (= z$689 (and z$684 z$688)))
(assert
 (= z$691 (and z$39 f27)))
(assert
 (= z$693 (not z$691)))
(assert
 (= z$694 (and z$689 z$693)))
(assert
 (= z$696 (and a_measure_in_progress_Measuring_0 a_new_range)))
(assert
 (= z$698 (and z$696 z$483)))
(assert
 (= z$700 (not z$698)))
(assert
 (= z$701 (and f28 z$700)))
(assert
 (= z$703 (not z$701)))
(assert
 (= z$704 (and z$694 z$703)))
(assert
 (= z$706 (and a_measure_in_progress_Measuring_1 a_new_range)))
(assert
 (= z$708 (and z$706 z$483)))
(assert
 (= z$710 (not z$708)))
(assert
 (= z$711 (and f29 z$710)))
(assert
 (= z$713 (not z$711)))
(assert
 (= z$714 (and z$704 z$713)))
(assert
 (= z$716 (and a_S1 z$15)))
(assert
 (= z$718 (not z$716)))
(assert
 (= z$719 (and f30 z$718)))
(assert
 (= z$721 (not z$719)))
(assert
 (= z$722 (and z$714 z$721)))
(assert
 (= z$724 (and a_S2 a_state1)))
(assert
 (= z$726 (not z$724)))
(assert
 (= z$727 (and f31 z$726)))
(assert
 (= z$729 (not z$727)))
(assert
 (= z$730 (and z$722 z$729)))
(assert
 (= z$732 (and a_S2 a_err7)))
(assert
 (= z$734 (not z$732)))
(assert
 (= z$735 (and f32 z$734)))
(assert
 (= z$737 (not z$735)))
(assert
 (= z$738 (and z$730 z$737)))
(assert
 (let (($x781 (not f07)))
 (= z$740 $x781)))
(assert
 (let (($x444 (not f01)))
 (= z$741 $x444)))
(assert
 (= z$742 (and z$167 z$741)))
(assert
 (= z$744 (not z$742)))
(assert
 (let (($x2713 (not z$744)))
 (= z$745 $x2713)))
(assert
 (= z$746 (and z$172 z$745)))
(assert
 (= z$748 (not z$746)))
(assert
 (let (($x2723 (not z$748)))
 (= z$749 $x2723)))
(assert
 (= z$750 (and z$176 z$749)))
(assert
 (= z$752 (not z$750)))
(assert
 (let (($x2733 (not z$752)))
 (= z$753 $x2733)))
(assert
 (= z$754 (and z$193 z$753)))
(assert
 (= z$756 (not z$754)))
(assert
 (let (($x1993 (not z$756)))
 (= z$757 $x1993)))
(assert
 (= z$758 (and z$180 z$757)))
(assert
 (= z$760 (not z$758)))
(assert
 (let (($x1221 (not z$760)))
 (= z$761 $x1221)))
(assert
 (= z$762 (and z$220 z$761)))
(assert
 (= z$764 (not z$762)))
(assert
 (let (($x2679 (not z$764)))
 (= z$765 $x2679)))
(assert
 (= z$766 (and z$740 z$765)))
(assert
 (= z$768 (not z$766)))
(assert
 (let (($x2689 (not z$768)))
 (= z$769 $x2689)))
(assert
 (= z$770 (and z$225 z$769)))
(assert
 (= z$772 (not z$770)))
(assert
 (let (($x2699 (not z$772)))
 (= z$773 $x2699)))
(assert
 (= z$774 (and z$229 z$773)))
(assert
 (= z$776 (not z$774)))
(assert
 (let (($x704 (not z$776)))
 (= z$777 $x704)))
(assert
 (= z$778 (and z$246 z$777)))
(assert
 (= z$780 (not z$778)))
(assert
 (let (($x1137 (not z$780)))
 (= z$781 $x1137)))
(assert
 (= z$782 (and z$233 z$781)))
(assert
 (= z$784 (not z$782)))
(assert
 (let (($x2650 (not z$784)))
 (= z$785 $x2650)))
(assert
 (= z$786 (and z$272 z$785)))
(assert
 (= z$788 (not z$786)))
(assert
 (let (($x2660 (not z$788)))
 (= z$789 $x2660)))
(assert
 (= z$790 (and z$275 z$789)))
(assert
 (= z$792 (not z$790)))
(assert
 (let (($x2670 (not z$792)))
 (= z$793 $x2670)))
(assert
 (= z$794 (and z$278 z$793)))
(assert
 (= z$796 (not z$794)))
(assert
 (let (($x718 (not z$796)))
 (= z$797 $x718)))
(assert
 (= z$798 (and z$289 z$797)))
(assert
 (= z$800 (not z$798)))
(assert
 (let (($x2614 (not z$800)))
 (= z$801 $x2614)))
(assert
 (= z$802 (and z$294 z$801)))
(assert
 (= z$804 (not z$802)))
(assert
 (let (($x2624 (not z$804)))
 (= z$805 $x2624)))
(assert
 (= z$806 (and z$299 z$805)))
(assert
 (= z$808 (not z$806)))
(assert
 (let (($x2634 (not z$808)))
 (= z$809 $x2634)))
(assert
 (= z$810 (and z$315 z$809)))
(assert
 (= z$812 (not z$810)))
(assert
 (let (($x724 (not z$812)))
 (= z$813 $x724)))
(assert
 (= z$814 (and z$335 z$813)))
(assert
 (= z$816 (not z$814)))
(assert
 (let (($x2437 (not z$816)))
 (= z$817 $x2437)))
(assert
 (= z$818 (and z$350 z$817)))
(assert
 (= z$820 (not z$818)))
(assert
 (let (($x2584 (not z$820)))
 (= z$821 $x2584)))
(assert
 (= z$822 (and z$359 z$821)))
(assert
 (= z$824 (not z$822)))
(assert
 (let (($x2594 (not z$824)))
 (= z$825 $x2594)))
(assert
 (= z$826 (and z$324 z$825)))
(assert
 (= z$828 (not z$826)))
(assert
 (let (($x2604 (not z$828)))
 (= z$829 $x2604)))
(assert
 (= z$830 (and z$368 z$829)))
(assert
 (= z$832 (not z$830)))
(assert
 (let (($x271 (not z$832)))
 (= z$833 $x271)))
(assert
 (= z$834 (and z$413 z$833)))
(assert
 (= z$836 (not z$834)))
(assert
 (let (($x2546 (not z$836)))
 (= z$837 $x2546)))
(assert
 (= z$838 (and z$417 z$837)))
(assert
 (= z$840 (not z$838)))
(assert
 (let (($x2556 (not z$840)))
 (= z$841 $x2556)))
(assert
 (= z$842 (and z$429 z$841)))
(assert
 (= z$844 (not z$842)))
(assert
 (let (($x2566 (not z$844)))
 (= z$845 $x2566)))
(assert
 (= z$846 (and z$433 z$845)))
(assert
 (= z$848 (not z$846)))
(assert
 (let (($x1037 (not z$848)))
 (= z$849 $x1037)))
(assert
 (= z$850 (and z$185 z$849)))
(assert
 (= z$852 (not z$850)))
(assert
 (let (($x579 (not z$852)))
 (= z$853 $x579)))
(assert
 (= z$854 (and z$238 z$853)))
(assert
 (= z$856 (not z$854)))
(assert
 (let (($x2509 (not z$856)))
 (= z$857 $x2509)))
(assert
 (= z$858 (and z$398 z$857)))
(assert
 (= z$860 (not z$858)))
(assert
 (let (($x2514 (not z$860)))
 (= z$861 $x2514)))
(assert
 (= z$862 (and z$283 z$861)))
(assert
 (= z$864 (not z$862)))
(assert
 (let (($x2519 (not z$864)))
 (= z$865 $x2519)))
(assert
 (= z$866 (and z$340 z$865)))
(assert
 (= z$868 (not z$866)))
(assert
 (= z$869 (and z$738 z$868)))
(assert
 (= z$871 (and f00 f01)))
(assert
 (= z$873 (not z$871)))
(assert
 (= z$874 (and f02 z$744)))
(assert
 (= z$876 (not z$874)))
(assert
 (= z$877 (and z$873 z$876)))
(assert
 (= z$879 (not z$877)))
(assert
 (= z$880 (not z$879)))
(assert
 (= z$881 (and f03 z$748)))
(assert
 (= z$883 (not z$881)))
(assert
 (= z$884 (and z$880 z$883)))
(assert
 (= z$886 (not z$884)))
(assert
 (= z$887 (not z$886)))
(assert
 (= z$888 (and f04 z$752)))
(assert
 (= z$890 (not z$888)))
(assert
 (= z$891 (and z$887 z$890)))
(assert
 (= z$893 (not z$891)))
(assert
 (= z$894 (not z$893)))
(assert
 (= z$895 (and f05 z$756)))
(assert
 (= z$897 (not z$895)))
(assert
 (= z$898 (and z$894 z$897)))
(assert
 (= z$900 (not z$898)))
(assert
 (= z$901 (not z$900)))
(assert
 (= z$902 (and f06 z$760)))
(assert
 (= z$904 (not z$902)))
(assert
 (= z$905 (and z$901 z$904)))
(assert
 (= z$907 (not z$905)))
(assert
 (= z$908 (not z$907)))
(assert
 (= z$909 (and f07 z$764)))
(assert
 (= z$911 (not z$909)))
(assert
 (= z$912 (and z$908 z$911)))
(assert
 (= z$914 (not z$912)))
(assert
 (= z$915 (not z$914)))
(assert
 (= z$916 (and f08 z$768)))
(assert
 (= z$918 (not z$916)))
(assert
 (= z$919 (and z$915 z$918)))
(assert
 (= z$921 (not z$919)))
(assert
 (= z$922 (not z$921)))
(assert
 (= z$923 (and f09 z$772)))
(assert
 (= z$925 (not z$923)))
(assert
 (= z$926 (and z$922 z$925)))
(assert
 (= z$928 (not z$926)))
(assert
 (= z$929 (not z$928)))
(assert
 (= z$930 (and f10 z$776)))
(assert
 (= z$932 (not z$930)))
(assert
 (= z$933 (and z$929 z$932)))
(assert
 (= z$935 (not z$933)))
(assert
 (= z$936 (not z$935)))
(assert
 (= z$937 (and f11 z$780)))
(assert
 (= z$939 (not z$937)))
(assert
 (= z$940 (and z$936 z$939)))
(assert
 (= z$942 (not z$940)))
(assert
 (= z$943 (not z$942)))
(assert
 (= z$944 (and f12 z$784)))
(assert
 (= z$946 (not z$944)))
(assert
 (= z$947 (and z$943 z$946)))
(assert
 (= z$949 (not z$947)))
(assert
 (= z$950 (not z$949)))
(assert
 (= z$951 (and f13 z$788)))
(assert
 (= z$953 (not z$951)))
(assert
 (= z$954 (and z$950 z$953)))
(assert
 (= z$956 (not z$954)))
(assert
 (= z$957 (not z$956)))
(assert
 (= z$958 (and f14 z$792)))
(assert
 (= z$960 (not z$958)))
(assert
 (= z$961 (and z$957 z$960)))
(assert
 (= z$963 (not z$961)))
(assert
 (= z$964 (not z$963)))
(assert
 (= z$965 (and f15 z$796)))
(assert
 (= z$967 (not z$965)))
(assert
 (= z$968 (and z$964 z$967)))
(assert
 (= z$970 (not z$968)))
(assert
 (= z$971 (not z$970)))
(assert
 (= z$972 (and f16 z$800)))
(assert
 (= z$974 (not z$972)))
(assert
 (= z$975 (and z$971 z$974)))
(assert
 (= z$977 (not z$975)))
(assert
 (= z$978 (not z$977)))
(assert
 (= z$979 (and f17 z$804)))
(assert
 (= z$981 (not z$979)))
(assert
 (= z$982 (and z$978 z$981)))
(assert
 (= z$984 (not z$982)))
(assert
 (= z$985 (not z$984)))
(assert
 (= z$986 (and f18 z$808)))
(assert
 (= z$988 (not z$986)))
(assert
 (= z$989 (and z$985 z$988)))
(assert
 (= z$991 (not z$989)))
(assert
 (= z$992 (not z$991)))
(assert
 (= z$993 (and f19 z$812)))
(assert
 (= z$995 (not z$993)))
(assert
 (= z$996 (and z$992 z$995)))
(assert
 (= z$998 (not z$996)))
(assert
 (= z$999 (not z$998)))
(assert
 (= z$1000 (and f20 z$816)))
(assert
 (= z$1002 (not z$1000)))
(assert
 (= z$1003 (and z$999 z$1002)))
(assert
 (= z$1005 (not z$1003)))
(assert
 (= z$1006 (not z$1005)))
(assert
 (= z$1007 (and f21 z$820)))
(assert
 (= z$1009 (not z$1007)))
(assert
 (= z$1010 (and z$1006 z$1009)))
(assert
 (= z$1012 (not z$1010)))
(assert
 (= z$1013 (not z$1012)))
(assert
 (= z$1014 (and f22 z$824)))
(assert
 (= z$1016 (not z$1014)))
(assert
 (= z$1017 (and z$1013 z$1016)))
(assert
 (= z$1019 (not z$1017)))
(assert
 (= z$1020 (not z$1019)))
(assert
 (= z$1021 (and f23 z$828)))
(assert
 (= z$1023 (not z$1021)))
(assert
 (= z$1024 (and z$1020 z$1023)))
(assert
 (= z$1026 (not z$1024)))
(assert
 (= z$1027 (not z$1026)))
(assert
 (= z$1028 (and f24 z$832)))
(assert
 (= z$1030 (not z$1028)))
(assert
 (= z$1031 (and z$1027 z$1030)))
(assert
 (= z$1033 (not z$1031)))
(assert
 (= z$1034 (not z$1033)))
(assert
 (= z$1035 (and f25 z$836)))
(assert
 (= z$1037 (not z$1035)))
(assert
 (= z$1038 (and z$1034 z$1037)))
(assert
 (= z$1040 (not z$1038)))
(assert
 (= z$1041 (not z$1040)))
(assert
 (= z$1042 (and f26 z$840)))
(assert
 (= z$1044 (not z$1042)))
(assert
 (= z$1045 (and z$1041 z$1044)))
(assert
 (= z$1047 (not z$1045)))
(assert
 (= z$1048 (not z$1047)))
(assert
 (= z$1049 (and f27 z$844)))
(assert
 (= z$1051 (not z$1049)))
(assert
 (= z$1052 (and z$1048 z$1051)))
(assert
 (= z$1054 (not z$1052)))
(assert
 (= z$1055 (not z$1054)))
(assert
 (= z$1056 (and f28 z$848)))
(assert
 (= z$1058 (not z$1056)))
(assert
 (= z$1059 (and z$1055 z$1058)))
(assert
 (= z$1061 (not z$1059)))
(assert
 (= z$1062 (not z$1061)))
(assert
 (= z$1063 (and f29 z$852)))
(assert
 (= z$1065 (not z$1063)))
(assert
 (= z$1066 (and z$1062 z$1065)))
(assert
 (= z$1068 (not z$1066)))
(assert
 (= z$1069 (not z$1068)))
(assert
 (= z$1070 (and f30 z$856)))
(assert
 (= z$1072 (not z$1070)))
(assert
 (= z$1073 (and z$1069 z$1072)))
(assert
 (= z$1075 (not z$1073)))
(assert
 (= z$1076 (not z$1075)))
(assert
 (= z$1077 (and f31 z$860)))
(assert
 (= z$1079 (not z$1077)))
(assert
 (= z$1080 (and z$1076 z$1079)))
(assert
 (= z$1082 (not z$1080)))
(assert
 (= z$1083 (not z$1082)))
(assert
 (= z$1084 (and f32 z$864)))
(assert
 (= z$1086 (not z$1084)))
(assert
 (= z$1087 (and z$1083 z$1086)))
(assert
 (= z$1089 (not z$1087)))
(assert
 (= z$1090 (not z$1089)))
(assert
 (= z$1091 (and z$869 z$1090)))
(assert
 (= z$1093 (and a_measure_in_progress_Measuring_0 a_measure_done_Measuring_0)))
(assert
 (= z$1095 (not z$1093)))
(assert
 (= z$1096 (and z$27 z$23)))
(assert
 (= z$1098 (not z$1096)))
(assert
 (= z$1099 (and a_cage_opened_Measuring_0 z$1098)))
(assert
 (= z$1101 (not z$1099)))
(assert
 (= z$1102 (and z$1095 z$1101)))
(assert
 (= z$1104 (not z$1102)))
(assert
 (= z$1105 (not z$1104)))
(assert
 (= z$1106 (not z$1098)))
(assert
 (= z$1107 (and z$5 z$1106)))
(assert
 (= z$1109 (not z$1107)))
(assert
 (= z$1110 (and z$17 z$1109)))
(assert
 (= z$1112 (not z$1110)))
(assert
 (= z$1113 (and z$1105 z$1112)))
(assert
 (= z$1115 (not z$1113)))
(assert
 (= z$1116 (not z$1115)))
(assert
 (= z$1117 (not z$1109)))
(assert
 (= z$1118 (and a_initial_Measuring_0 z$1117)))
(assert
 (= z$1120 (not z$1118)))
(assert
 (= z$1121 (and z$1116 z$1120)))
(assert
 (= z$1123 (and a_measure_in_progress_Measuring_1 a_measure_done_Measuring_1)))
(assert
 (= z$1125 (not z$1123)))
(assert
 (= z$1126 (and z$29 z$25)))
(assert
 (= z$1128 (not z$1126)))
(assert
 (= z$1129 (and a_cage_opened_Measuring_1 z$1128)))
(assert
 (= z$1131 (not z$1129)))
(assert
 (= z$1132 (and z$1125 z$1131)))
(assert
 (= z$1134 (not z$1132)))
(assert
 (= z$1135 (not z$1134)))
(assert
 (= z$1136 (not z$1128)))
(assert
 (= z$1137 (and z$7 z$1136)))
(assert
 (= z$1139 (not z$1137)))
(assert
 (= z$1140 (and z$19 z$1139)))
(assert
 (= z$1142 (not z$1140)))
(assert
 (= z$1143 (and z$1135 z$1142)))
(assert
 (= z$1145 (not z$1143)))
(assert
 (= z$1146 (not z$1145)))
(assert
 (= z$1147 (and z$1121 z$1146)))
(assert
 (= z$1149 (not z$1139)))
(assert
 (= z$1150 (and a_initial_Measuring_1 z$1149)))
(assert
 (= z$1152 (not z$1150)))
(assert
 (= z$1153 (and z$1147 z$1152)))
(assert
 (= z$1155 (and a_measured a_new_range)))
(assert
 (= z$1157 (not z$1155)))
(assert
 (= z$1158 (and z$31 z$33)))
(assert
 (= z$1160 (not z$1158)))
(assert
 (= z$1161 (and a_small_resistance z$1160)))
(assert
 (= z$1163 (not z$1161)))
(assert
 (= z$1164 (and z$1157 z$1163)))
(assert
 (= z$1166 (not z$1164)))
(assert
 (= z$1167 (not z$1166)))
(assert
 (= z$1168 (not z$1160)))
(assert
 (= z$1169 (and z$35 z$1168)))
(assert
 (= z$1171 (not z$1169)))
(assert
 (= z$1172 (and a_correct_value z$1171)))
(assert
 (= z$1174 (not z$1172)))
(assert
 (= z$1175 (and z$1167 z$1174)))
(assert
 (= z$1177 (not z$1175)))
(assert
 (= z$1178 (not z$1177)))
(assert
 (= z$1179 (not z$1171)))
(assert
 (= z$1180 (and z$9 z$1179)))
(assert
 (= z$1182 (not z$1180)))
(assert
 (= z$1183 (and a_large_resistance z$1182)))
(assert
 (= z$1185 (not z$1183)))
(assert
 (= z$1186 (and z$1178 z$1185)))
(assert
 (= z$1188 (not z$1186)))
(assert
 (= z$1189 (not z$1188)))
(assert
 (= z$1190 (not z$1182)))
(assert
 (= z$1191 (and z$21 z$1190)))
(assert
 (= z$1193 (not z$1191)))
(assert
 (= z$1194 (and a_too_small_resistance z$1193)))
(assert
 (= z$1196 (not z$1194)))
(assert
 (= z$1197 (and z$1189 z$1196)))
(assert
 (= z$1199 (not z$1197)))
(assert
 (= z$1200 (not z$1199)))
(assert
 (= z$1201 (not z$1193)))
(assert
 (= z$1202 (and z$47 z$1201)))
(assert
 (= z$1204 (not z$1202)))
(assert
 (= z$1205 (and a_too_large_resistance z$1204)))
(assert
 (= z$1207 (not z$1205)))
(assert
 (= z$1208 (and z$1200 z$1207)))
(assert
 (= z$1210 (not z$1208)))
(assert
 (= z$1211 (not z$1210)))
(assert
 (= z$1212 (not z$1204)))
(assert
 (= z$1213 (and z$45 z$1212)))
(assert
 (= z$1215 (not z$1213)))
(assert
 (= z$1216 (and z$37 z$1215)))
(assert
 (= z$1218 (not z$1216)))
(assert
 (= z$1219 (and z$1211 z$1218)))
(assert
 (= z$1221 (not z$1219)))
(assert
 (= z$1222 (not z$1221)))
(assert
 (= z$1223 (not z$1215)))
(assert
 (= z$1224 (and a_start z$1223)))
(assert
 (= z$1226 (not z$1224)))
(assert
 (= z$1227 (and a_finished_measuring z$1226)))
(assert
 (= z$1229 (not z$1227)))
(assert
 (= z$1230 (and z$1222 z$1229)))
(assert
 (= z$1232 (not z$1230)))
(assert
 (= z$1233 (not z$1232)))
(assert
 (= z$1234 (not z$1226)))
(assert
 (= z$1235 (and z$13 z$1234)))
(assert
 (= z$1237 (not z$1235)))
(assert
 (= z$1238 (and a_S1 z$1237)))
(assert
 (= z$1240 (not z$1238)))
(assert
 (= z$1241 (and z$1233 z$1240)))
(assert
 (= z$1243 (not z$1241)))
(assert
 (= z$1244 (not z$1243)))
(assert
 (= z$1245 (not z$1237)))
(assert
 (= z$1246 (and z$1 z$1245)))
(assert
 (= z$1248 (not z$1246)))
(assert
 (= z$1249 (and a_S2 z$1248)))
(assert
 (= z$1251 (not z$1249)))
(assert
 (= z$1252 (and z$1244 z$1251)))
(assert
 (= z$1254 (not z$1252)))
(assert
 (= z$1255 (not z$1254)))
(assert
 (= z$1256 (and z$1153 z$1255)))
(assert
 (= z$1258 (not z$1248)))
(assert
 (= z$1259 (and z$3 z$1258)))
(assert
 (= z$1261 (not z$1259)))
(assert
 (= z$1262 (and z$1256 z$1261)))
(assert
 (= z$1264 (and a_state_request a_state0)))
(assert
 (= z$1266 (not z$1264)))
(assert
 (= z$1267 (and z$43 z$39)))
(assert
 (= z$1269 (not z$1267)))
(assert
 (= z$1270 (and a_err7 z$1269)))
(assert
 (= z$1272 (not z$1270)))
(assert
 (= z$1273 (and z$1266 z$1272)))
(assert
 (= z$1275 (not z$1273)))
(assert
 (= z$1276 (not z$1275)))
(assert
 (= z$1277 (not z$1269)))
(assert
 (= z$1278 (and z$11 z$1277)))
(assert
 (= z$1280 (not z$1278)))
(assert
 (= z$1281 (and z$15 z$1280)))
(assert
 (= z$1283 (not z$1281)))
(assert
 (= z$1284 (and z$1276 z$1283)))
(assert
 (= z$1286 (not z$1284)))
(assert
 (= z$1287 (not z$1286)))
(assert
 (= z$1288 (not z$1280)))
(assert
 (= z$1289 (and a_initial_Device_state z$1288)))
(assert
 (= z$1291 (not z$1289)))
(assert
 (= z$1292 (and a_state1 z$1291)))
(assert
 (= z$1294 (not z$1292)))
(assert
 (= z$1295 (and z$1287 z$1294)))
(assert
 (= z$1297 (not z$1295)))
(assert
 (= z$1298 (not z$1297)))
(assert
 (= z$1299 (and z$1262 z$1298)))
(assert
 (= z$1301 (not z$1291)))
(assert
 (= z$1302 (and z$41 z$1301)))
(assert
 (= z$1304 (not z$1302)))
(assert
 (= z$1305 (and z$1299 z$1304)))
(assert
 (= z$1307 (and z$1091 z$1305)))
(assert
 (= z$1309 (and z$186 z$199)))
(assert
 (= z$1311 (not z$1309)))
(assert
 (let (($x3219 (not z$186)))
 (= z$1312 $x3219)))
(assert
 (let (($x3222 (not z$199)))
 (= z$1313 $x3222)))
(assert
 (= z$1314 (and z$1312 z$1313)))
(assert
 (= z$1316 (not z$1314)))
(assert
 (= z$1317 (and z$211 z$1316)))
(assert
 (= z$1319 (not z$1317)))
(assert
 (= z$1320 (and z$1311 z$1319)))
(assert
 (= z$1322 (not z$1320)))
(assert
 (= z$1323 (not z$1322)))
(assert
 (let (($x3249 (not z$211)))
 (= z$1324 $x3249)))
(assert
 (let (($x3252 (not z$1316)))
 (= z$1325 $x3252)))
(assert
 (= z$1326 (and z$1324 z$1325)))
(assert
 (= z$1328 (not z$1326)))
(assert
 (= z$1329 (and z$214 z$1328)))
(assert
 (= z$1331 (not z$1329)))
(assert
 (= z$1332 (and z$1323 z$1331)))
(assert
 (= z$1334 (not z$1332)))
(assert
 (= z$1335 (not z$1334)))
(assert
 (let (($x3279 (not z$1328)))
 (= z$1336 $x3279)))
(assert
 (= z$1337 (and z$216 z$1336)))
(assert
 (= z$1339 (not z$1337)))
(assert
 (= z$1340 (and z$1335 z$1339)))
(assert
 (= z$1342 (and z$239 z$252)))
(assert
 (= z$1344 (not z$1342)))
(assert
 (let (($x3300 (not z$239)))
 (= z$1345 $x3300)))
(assert
 (let (($x3303 (not z$252)))
 (= z$1346 $x3303)))
(assert
 (= z$1347 (and z$1345 z$1346)))
(assert
 (= z$1349 (not z$1347)))
(assert
 (= z$1350 (and z$264 z$1349)))
(assert
 (= z$1352 (not z$1350)))
(assert
 (= z$1353 (and z$1344 z$1352)))
(assert
 (= z$1355 (not z$1353)))
(assert
 (= z$1356 (not z$1355)))
(assert
 (let (($x3330 (not z$264)))
 (= z$1357 $x3330)))
(assert
 (let (($x3333 (not z$1349)))
 (= z$1358 $x3333)))
(assert
 (= z$1359 (and z$1357 z$1358)))
(assert
 (= z$1361 (not z$1359)))
(assert
 (= z$1362 (and z$267 z$1361)))
(assert
 (= z$1364 (not z$1362)))
(assert
 (= z$1365 (and z$1356 z$1364)))
(assert
 (= z$1367 (not z$1365)))
(assert
 (= z$1368 (not z$1367)))
(assert
 (= z$1369 (and z$1340 z$1368)))
(assert
 (let (($x3364 (not z$1361)))
 (= z$1371 $x3364)))
(assert
 (= z$1372 (and z$269 z$1371)))
(assert
 (= z$1374 (not z$1372)))
(assert
 (= z$1375 (and z$1369 z$1374)))
(assert
 (= z$1377 (and z$305 z$286)))
(assert
 (= z$1379 (not z$1377)))
(assert
 (let (($x3385 (not z$305)))
 (= z$1380 $x3385)))
(assert
 (let (($x3388 (not z$286)))
 (= z$1381 $x3388)))
(assert
 (= z$1382 (and z$1380 z$1381)))
(assert
 (= z$1384 (not z$1382)))
(assert
 (= z$1385 (and z$316 z$1384)))
(assert
 (= z$1387 (not z$1385)))
(assert
 (= z$1388 (and z$1379 z$1387)))
(assert
 (= z$1390 (not z$1388)))
(assert
 (= z$1391 (not z$1390)))
(assert
 (let (($x3415 (not z$316)))
 (= z$1392 $x3415)))
(assert
 (let (($x3418 (not z$1384)))
 (= z$1393 $x3418)))
(assert
 (= z$1394 (and z$1392 z$1393)))
(assert
 (= z$1396 (not z$1394)))
(assert
 (= z$1397 (and z$325 z$1396)))
(assert
 (= z$1399 (not z$1397)))
(assert
 (= z$1400 (and z$1391 z$1399)))
(assert
 (= z$1402 (not z$1400)))
(assert
 (= z$1403 (not z$1402)))
(assert
 (let (($x3445 (not z$325)))
 (= z$1404 $x3445)))
(assert
 (let (($x3448 (not z$1396)))
 (= z$1405 $x3448)))
(assert
 (= z$1406 (and z$1404 z$1405)))
(assert
 (= z$1408 (not z$1406)))
(assert
 (= z$1409 (and z$343 z$1408)))
(assert
 (= z$1411 (not z$1409)))
(assert
 (= z$1412 (and z$1403 z$1411)))
(assert
 (= z$1414 (not z$1412)))
(assert
 (= z$1415 (not z$1414)))
(assert
 (let (($x3475 (not z$343)))
 (= z$1416 $x3475)))
(assert
 (let (($x3478 (not z$1408)))
 (= z$1417 $x3478)))
(assert
 (= z$1418 (and z$1416 z$1417)))
(assert
 (= z$1420 (not z$1418)))
(assert
 (= z$1421 (and z$351 z$1420)))
(assert
 (= z$1423 (not z$1421)))
(assert
 (= z$1424 (and z$1415 z$1423)))
(assert
 (= z$1426 (not z$1424)))
(assert
 (= z$1427 (not z$1426)))
(assert
 (let (($x3505 (not z$351)))
 (= z$1428 $x3505)))
(assert
 (let (($x3508 (not z$1420)))
 (= z$1429 $x3508)))
(assert
 (= z$1430 (and z$1428 z$1429)))
(assert
 (= z$1432 (not z$1430)))
(assert
 (= z$1433 (and z$360 z$1432)))
(assert
 (= z$1435 (not z$1433)))
(assert
 (= z$1436 (and z$1427 z$1435)))
(assert
 (= z$1438 (not z$1436)))
(assert
 (= z$1439 (not z$1438)))
(assert
 (let (($x3535 (not z$360)))
 (= z$1440 $x3535)))
(assert
 (let (($x3538 (not z$1432)))
 (= z$1441 $x3538)))
(assert
 (= z$1442 (and z$1440 z$1441)))
(assert
 (= z$1444 (not z$1442)))
(assert
 (= z$1445 (and z$371 z$1444)))
(assert
 (= z$1447 (not z$1445)))
(assert
 (= z$1448 (and z$1439 z$1447)))
(assert
 (= z$1450 (not z$1448)))
(assert
 (= z$1451 (not z$1450)))
(assert
 (let (($x3565 (not z$1444)))
 (= z$1452 $x3565)))
(assert
 (= z$1453 (and z$372 z$1452)))
(assert
 (= z$1455 (not z$1453)))
(assert
 (= z$1456 (and z$386 z$1455)))
(assert
 (= z$1458 (not z$1456)))
(assert
 (= z$1459 (and z$1451 z$1458)))
(assert
 (= z$1461 (not z$1459)))
(assert
 (= z$1462 (not z$1461)))
(assert
 (let (($x3592 (not z$386)))
 (= z$1463 $x3592)))
(assert
 (let (($x3595 (not z$1455)))
 (= z$1464 $x3595)))
(assert
 (= z$1465 (and z$1463 z$1464)))
(assert
 (= z$1467 (not z$1465)))
(assert
 (= z$1468 (and z$399 z$1467)))
(assert
 (= z$1470 (not z$1468)))
(assert
 (= z$1471 (and z$1462 z$1470)))
(assert
 (= z$1473 (not z$1471)))
(assert
 (= z$1474 (not z$1473)))
(assert
 (let (($x3622 (not z$399)))
 (= z$1475 $x3622)))
(assert
 (let (($x3625 (not z$1467)))
 (= z$1476 $x3625)))
(assert
 (= z$1477 (and z$1475 z$1476)))
(assert
 (= z$1479 (not z$1477)))
(assert
 (= z$1480 (and z$408 z$1479)))
(assert
 (= z$1482 (not z$1480)))
(assert
 (= z$1483 (and z$1474 z$1482)))
(assert
 (= z$1485 (not z$1483)))
(assert
 (= z$1486 (not z$1485)))
(assert
 (= z$1487 (and z$1375 z$1486)))
(assert
 (let (($x3656 (not z$408)))
 (= z$1489 $x3656)))
(assert
 (let (($x3659 (not z$1479)))
 (= z$1490 $x3659)))
(assert
 (= z$1491 (and z$1489 z$1490)))
(assert
 (= z$1493 (not z$1491)))
(assert
 (= z$1494 (and z$1487 z$1493)))
(assert
 (= z$1496 (and z$434 z$423)))
(assert
 (= z$1498 (not z$1496)))
(assert
 (let (($x3680 (not z$434)))
 (= z$1499 $x3680)))
(assert
 (let (($x3683 (not z$423)))
 (= z$1500 $x3683)))
(assert
 (= z$1501 (and z$1499 z$1500)))
(assert
 (= z$1503 (not z$1501)))
(assert
 (= z$1504 (and z$445 z$1503)))
(assert
 (= z$1506 (not z$1504)))
(assert
 (= z$1507 (and z$1498 z$1506)))
(assert
 (= z$1509 (not z$1507)))
(assert
 (= z$1510 (not z$1509)))
(assert
 (let (($x3710 (not z$445)))
 (= z$1511 $x3710)))
(assert
 (let (($x3713 (not z$1503)))
 (= z$1512 $x3713)))
(assert
 (= z$1513 (and z$1511 z$1512)))
(assert
 (= z$1515 (not z$1513)))
(assert
 (= z$1516 (and z$458 z$1515)))
(assert
 (= z$1518 (not z$1516)))
(assert
 (= z$1519 (and z$1510 z$1518)))
(assert
 (= z$1521 (not z$1519)))
(assert
 (= z$1522 (not z$1521)))
(assert
 (let (($x3740 (not z$1515)))
 (= z$1523 $x3740)))
(assert
 (= z$1524 (and z$459 z$1523)))
(assert
 (= z$1526 (not z$1524)))
(assert
 (= z$1527 (and z$465 z$1526)))
(assert
 (= z$1529 (not z$1527)))
(assert
 (= z$1530 (and z$1522 z$1529)))
(assert
 (= z$1532 (not z$1530)))
(assert
 (= z$1533 (not z$1532)))
(assert
 (= z$1534 (and z$1494 z$1533)))
(assert
 (let (($x3771 (not z$465)))
 (= z$1536 $x3771)))
(assert
 (let (($x3774 (not z$1526)))
 (= z$1537 $x3774)))
(assert
 (= z$1538 (and z$1536 z$1537)))
(assert
 (= z$1540 (not z$1538)))
(assert
 (= z$1541 (and z$1534 z$1540)))
(assert
 (= z$1543 (and z$1307 z$1541)))
(assert
 (= z$1545 (and z$1543 z$49)))
(assert
 (= z$1547 (not z$1545)))
(assert
 (= z$1548 (= dve_invalid$next z$1547)))
(assert
 z$1548)
(assert
 (=> p$0 a_measure_in_progress_Measuring_0$next))
(assert
 (=> p$1 a_initial_Measuring_0$next))
(assert
 (=> p$2 a_measure_in_progress_Measuring_1$next))
(assert
 (=> p$3 a_initial_Measuring_1$next))
(assert
 (=> p$4 f09$next))
(assert
 (let (($x1040 (= z$1603 (not dve_invalid$next))))
 (=> p$5 $x1040)))
(assert
 (=> p$5 z$1603))
(assert
 (=> p$6 (= z$1633 (not a_cage_opened_Measuring_0$next))))
(assert
 (=> p$6 z$1633))
(assert
 (=> p$7 (= z$1632 (not a_measure_done_Measuring_0$next))))
(assert
 (=> p$7 z$1632))
(assert
 (=> p$8 (= z$1648 (not a_S2$next))))
(assert
 (=> p$8 z$1648))
(assert
 (=> p$9 (= z$1635 (not a_measure_done_Measuring_1$next))))
(assert
 (=> p$9 z$1635))
(assert
 (=> p$10 (= z$1647 (not a_S1$next))))
(assert
 (=> p$10 z$1647))
(assert
 (=> p$11 (= z$1646 (not a_finished_measuring$next))))
(assert
 (=> p$11 z$1646))
(assert
 (=> p$12 (= z$1644 (not a_too_large_resistance$next))))
(assert
 (=> p$12 z$1644))
(assert
 (=> p$13 (= z$1636 (not a_cage_opened_Measuring_1$next))))
(assert
 (=> p$13 z$1636))
(assert
 (=> p$14 (= z$1638 (not a_measured$next))))
(assert
 (=> p$14 z$1638))
(assert
 (=> p$15 (= z$1643 (not a_too_small_resistance$next))))
(assert
 (=> p$15 z$1643))
(assert
 (=> p$16 (= z$1640 (not a_small_resistance$next))))
(assert
 (=> p$16 z$1640))
(assert
 (=> p$17 (= z$1641 (not a_correct_value$next))))
(assert
 (=> p$17 z$1641))
(assert
 (=> p$18 (= z$1649 (not a_state_request$next))))
(assert
 (=> p$18 z$1649))
(assert
 (=> p$19 (= z$1650 (not a_state0$next))))
(assert
 (=> p$19 z$1650))
(assert
 (=> p$20 (= z$1651 (not a_err7$next))))
(assert
 (=> p$20 z$1651))
(assert
 (=> p$21 (= z$1652 (not a_initial_Device_state$next))))
(assert
 (=> p$21 z$1652))
(assert
 (=> p$22 (= z$1653 (not a_state1$next))))
(assert
 (=> p$22 z$1653))
(assert
 (=> p$23 (= z$1639 (not a_new_range$next))))
(assert
 (=> p$23 z$1639))
(assert
 (=> p$24 (= z$1642 (not a_large_resistance$next))))
(assert
 (=> p$24 z$1642))
(assert
 (=> p$25 (= z$1645 (not a_start$next))))
(assert
 (=> p$25 z$1645))
(assert
 (=> p$26 (= z$1712 (not f26$next))))
(assert
 (=> p$26 z$1712))
(assert
 (=> p$27 (= z$1713 (not f11$next))))
(assert
 (=> p$27 z$1713))
(assert
 (=> p$28 (= z$1715 (not f08$next))))
(assert
 (=> p$28 z$1715))
(assert
 (=> p$29 (= z$1716 (not f28$next))))
(assert
 (=> p$29 z$1716))
(assert
 (=> p$30 (= z$1717 (not f00$next))))
(assert
 (=> p$30 z$1717))
(assert
 (=> p$31 (= z$1718 (not f01$next))))
(assert
 (=> p$31 z$1718))
(assert
 (=> p$32 (= z$1719 (not f02$next))))
(assert
 (=> p$32 z$1719))
(assert
 (=> p$33 (= z$1720 (not f03$next))))
(assert
 (=> p$33 z$1720))
(assert
 (=> p$34 (= z$1721 (not f04$next))))
(assert
 (=> p$34 z$1721))
(assert
 (=> p$35 (= z$1723 (not f06$next))))
(assert
 (=> p$35 z$1723))
(assert
 (=> p$36 (= z$1724 (not f07$next))))
(assert
 (=> p$36 z$1724))
(assert
 (=> p$37 (= z$1725 (not f10$next))))
(assert
 (=> p$37 z$1725))
(assert
 (=> p$38 (= z$1726 (not f12$next))))
(assert
 (=> p$38 z$1726))
(assert
 (=> p$39 (= z$1727 (not f13$next))))
(assert
 (=> p$39 z$1727))
(assert
 (=> p$40 (= z$1728 (not f14$next))))
(assert
 (=> p$40 z$1728))
(assert
 (=> p$41 (= z$1729 (not f15$next))))
(assert
 (=> p$41 z$1729))
(assert
 (=> p$42 (= z$1730 (not f16$next))))
(assert
 (=> p$42 z$1730))
(assert
 (=> p$43 (= z$1731 (not f18$next))))
(assert
 (=> p$43 z$1731))
(assert
 (=> p$44 (= z$1732 (not f19$next))))
(assert
 (=> p$44 z$1732))
(assert
 (=> p$45 (= z$1733 (not f20$next))))
(assert
 (=> p$45 z$1733))
(assert
 (=> p$46 (= z$1734 (not f21$next))))
(assert
 (=> p$46 z$1734))
(assert
 (=> p$47 (= z$1735 (not f22$next))))
(assert
 (=> p$47 z$1735))
(assert
 (=> p$48 (= z$1736 (not f23$next))))
(assert
 (=> p$48 z$1736))
(assert
 (=> p$49 (= z$1737 (not f24$next))))
(assert
 (=> p$49 z$1737))
(assert
 (=> p$50 (= z$1738 (not f25$next))))
(assert
 (=> p$50 z$1738))
(assert
 (=> p$51 (= z$1739 (not f27$next))))
(assert
 (=> p$51 z$1739))
(assert
 (=> p$52 (= z$1740 (not f29$next))))
(assert
 (=> p$52 z$1740))
(assert
 (=> p$53 (= z$1741 (not f30$next))))
(assert
 (=> p$53 z$1741))
(assert
 (=> p$54 (= z$1742 (not f31$next))))
(assert
 (=> p$54 z$1742))
(assert
 (=> p$55 (= z$1743 (not f32$next))))
(assert
 (=> p$55 z$1743))
(assert
 (=> p$56 (= z$1744 (not f17$next))))
(assert
 (=> p$56 z$1744))
(assert
 (=> p$57 (= z$1800 (not f05$next))))
(assert
 (=> p$57 z$1800))
(check-sat)
(assert p$0)
(assert p$1)
(assert p$2)
(assert p$3)
(assert p$4)
(assert p$5)
(assert p$6)
(assert p$7)
(assert p$8)
(assert p$9)
(assert p$10)
(assert p$11)
(assert p$12)
(assert p$13)
(assert p$14)
(assert p$15)
(assert p$16)
(assert p$17)
(assert p$18)
(assert p$19)
(assert p$20)
(assert p$21)
(assert p$22)
(assert p$23)
(assert p$24)
(assert p$25)
(assert p$26)
(assert p$27)
(assert p$28)
(assert p$29)
(assert p$30)
(assert p$31)
(assert p$32)
(assert p$33)
(assert p$34)
(assert p$35)
(assert p$36)
(assert p$37)
(assert p$38)
(assert p$39)
(assert p$40)
(assert p$41)
(assert p$42)
(assert p$43)
(assert p$44)
(assert p$45)
(assert p$46)
(assert p$47)
(assert p$48)
(assert p$49)
(assert p$50)
(assert p$51)
(assert p$52)
(assert p$53)
(assert p$54)
(assert p$55)
(assert p$56)
(assert p$57)
(set-info :status unsat)
(check-sat)
(exit)
