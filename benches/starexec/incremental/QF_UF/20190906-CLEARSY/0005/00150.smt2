(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e18 () U)
(declare-fun e0 () U)
(declare-fun e43 () U)
(declare-fun e22 () U)
(declare-fun e276 () U)
(declare-fun e277 () U)
(declare-fun e127 () U)
(declare-fun e125 () U)
(declare-fun e178 () U)
(declare-fun e120 () U)
(declare-fun e274 () U)
(declare-fun e272 () U)
(declare-fun e273 () U)
(declare-fun e20 () U)
(declare-fun e142 () U)
(declare-fun e38 () U)
(declare-fun e275 () U)
(declare-fun e19 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_10 () U)
(declare-fun g_s100_118 () U)
(declare-fun g_s101_119 () U)
(declare-fun g_s102_121 () U)
(declare-fun g_s103_122 () U)
(declare-fun g_s104_123 () U)
(declare-fun g_s105_124 () U)
(declare-fun g_s106_126 () U)
(declare-fun g_s107_128 () U)
(declare-fun g_s108_129 () U)
(declare-fun g_s109_130 () U)
(declare-fun g_s11_13 () U)
(declare-fun g_s110_131 () U)
(declare-fun g_s111_132 () U)
(declare-fun g_s112_133 () U)
(declare-fun g_s113_134 () U)
(declare-fun g_s114_135 () U)
(declare-fun g_s115_136 () U)
(declare-fun g_s116_137 () U)
(declare-fun g_s117_138 () U)
(declare-fun g_s118_139 () U)
(declare-fun g_s119_140 () U)
(declare-fun g_s12_12 () U)
(declare-fun g_s120_141 () U)
(declare-fun g_s121_143 () U)
(declare-fun g_s122_144 () U)
(declare-fun g_s123_145 () U)
(declare-fun g_s124_146 () U)
(declare-fun g_s125_147 () U)
(declare-fun g_s126_148 () U)
(declare-fun g_s127_149 () U)
(declare-fun g_s128_150 () U)
(declare-fun g_s129_151 () U)
(declare-fun g_s13_15 () U)
(declare-fun g_s130_152 () U)
(declare-fun g_s131_153 () U)
(declare-fun g_s132_154 () U)
(declare-fun g_s133_155 () U)
(declare-fun g_s134_156 () U)
(declare-fun g_s135_157 () U)
(declare-fun g_s136_158 () U)
(declare-fun g_s137_159 () U)
(declare-fun g_s138_160 () U)
(declare-fun g_s139_161 () U)
(declare-fun g_s14_14 () U)
(declare-fun g_s140_162 () U)
(declare-fun g_s141_163 () U)
(declare-fun g_s142_164 () U)
(declare-fun g_s143_165 () U)
(declare-fun g_s144_166 () U)
(declare-fun g_s145_167 () U)
(declare-fun g_s146_168 () U)
(declare-fun g_s147_169 () U)
(declare-fun g_s148_170 () U)
(declare-fun g_s149_171 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_172 () U)
(declare-fun g_s151_173 () U)
(declare-fun g_s152_174 () U)
(declare-fun g_s153_175 () U)
(declare-fun g_s154_176 () U)
(declare-fun g_s155_177 () U)
(declare-fun g_s156_179 () U)
(declare-fun g_s157_180 () U)
(declare-fun g_s158_181 () U)
(declare-fun g_s159_182 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_183 () U)
(declare-fun g_s161_184 () U)
(declare-fun g_s162_185 () U)
(declare-fun g_s163_186 () U)
(declare-fun g_s164_187 () U)
(declare-fun g_s165_188 () U)
(declare-fun g_s166_189 () U)
(declare-fun g_s167_190 () U)
(declare-fun g_s168_191 () U)
(declare-fun g_s169_192 () U)
(declare-fun g_s17_21 () U)
(declare-fun g_s170_193 () U)
(declare-fun g_s171_194 () U)
(declare-fun g_s172_195 () U)
(declare-fun g_s173_196 () U)
(declare-fun g_s174_197 () U)
(declare-fun g_s175_198 () U)
(declare-fun g_s176_199 () U)
(declare-fun g_s177_200 () U)
(declare-fun g_s178_201 () U)
(declare-fun g_s179_202 () U)
(declare-fun g_s18_23 () U)
(declare-fun g_s180_203 () U)
(declare-fun g_s181_204 () U)
(declare-fun g_s182_205 () U)
(declare-fun g_s183_206 () U)
(declare-fun g_s183$1_236 () U)
(declare-fun g_s184_207 () U)
(declare-fun g_s185_208 () U)
(declare-fun g_s186_209 () U)
(declare-fun g_s187_210 () U)
(declare-fun g_s188_211 () U)
(declare-fun g_s189_212 () U)
(declare-fun g_s19_24 () U)
(declare-fun g_s190_213 () U)
(declare-fun g_s191_214 () U)
(declare-fun g_s192_215 () U)
(declare-fun g_s192$1_232 () U)
(declare-fun g_s193_216 () U)
(declare-fun g_s193$1_233 () U)
(declare-fun g_s194_217 () U)
(declare-fun g_s194$1_234 () U)
(declare-fun g_s195_218 () U)
(declare-fun g_s195$1_235 () U)
(declare-fun g_s196_219 () U)
(declare-fun g_s197_220 () U)
(declare-fun g_s198_221 () U)
(declare-fun g_s199_222 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_25 () U)
(declare-fun g_s200_223 () U)
(declare-fun g_s201_224 () U)
(declare-fun g_s202_225 () U)
(declare-fun g_s203_226 () U)
(declare-fun g_s204_227 () U)
(declare-fun g_s205_228 () U)
(declare-fun g_s206_229 () U)
(declare-fun g_s207_230 () U)
(declare-fun g_s208_231 () U)
(declare-fun g_s209$1_237 () U)
(declare-fun g_s21_26 () U)
(declare-fun g_s210$1_238 () U)
(declare-fun g_s211$1_239 () U)
(declare-fun g_s212$1_240 () U)
(declare-fun g_s213$1_241 () U)
(declare-fun g_s214$1_242 () U)
(declare-fun g_s215$1_243 () U)
(declare-fun g_s216$1_244 () U)
(declare-fun g_s217$1_245 () U)
(declare-fun g_s218$1_246 () U)
(declare-fun g_s219$1_247 () U)
(declare-fun g_s22_27 () U)
(declare-fun g_s220$1_248 () U)
(declare-fun g_s221$1_249 () U)
(declare-fun g_s222$1_250 () U)
(declare-fun g_s223$1_251 () U)
(declare-fun g_s224$1_252 () U)
(declare-fun g_s225$1_253 () U)
(declare-fun g_s226$1_254 () U)
(declare-fun g_s227$1_255 () U)
(declare-fun g_s23_28 () U)
(declare-fun g_s231_256 () U)
(declare-fun g_s232_257 () U)
(declare-fun g_s234$1_258 () U)
(declare-fun g_s235$1_259 () U)
(declare-fun g_s236$1_260 () U)
(declare-fun g_s238$1_261 () U)
(declare-fun g_s24_29 () U)
(declare-fun g_s240_262 () U)
(declare-fun g_s240$1_263 () U)
(declare-fun g_s241_264 () U)
(declare-fun g_s244$1_265 () U)
(declare-fun g_s245$1_266 () U)
(declare-fun g_s246$1_267 () U)
(declare-fun g_s247$1_268 () U)
(declare-fun g_s248$1_269 () U)
(declare-fun g_s249$1_270 () U)
(declare-fun g_s25_30 () U)
(declare-fun g_s250$1_271 () U)
(declare-fun g_s26_31 () U)
(declare-fun g_s27_32 () U)
(declare-fun g_s28_33 () U)
(declare-fun g_s29_34 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_35 () U)
(declare-fun g_s31_36 () U)
(declare-fun g_s32_37 () U)
(declare-fun g_s33_39 () U)
(declare-fun g_s34_40 () U)
(declare-fun g_s35_41 () U)
(declare-fun g_s36_42 () U)
(declare-fun g_s37_44 () U)
(declare-fun g_s38_45 () U)
(declare-fun g_s39_46 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_47 () U)
(declare-fun g_s41_48 () U)
(declare-fun g_s42_49 () U)
(declare-fun g_s43_50 () U)
(declare-fun g_s44_51 () U)
(declare-fun g_s45_52 () U)
(declare-fun g_s46_53 () U)
(declare-fun g_s47_54 () U)
(declare-fun g_s48_55 () U)
(declare-fun g_s49_56 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_57 () U)
(declare-fun g_s51_58 () U)
(declare-fun g_s52_59 () U)
(declare-fun g_s53_60 () U)
(declare-fun g_s54_61 () U)
(declare-fun g_s55_62 () U)
(declare-fun g_s56_63 () U)
(declare-fun g_s57_64 () U)
(declare-fun g_s58_65 () U)
(declare-fun g_s59_66 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_67 () U)
(declare-fun g_s61_68 () U)
(declare-fun g_s62_70 () U)
(declare-fun g_s63_69 () U)
(declare-fun g_s64_72 () U)
(declare-fun g_s65_71 () U)
(declare-fun g_s66_73 () U)
(declare-fun g_s67_74 () U)
(declare-fun g_s68_75 () U)
(declare-fun g_s69_76 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_77 () U)
(declare-fun g_s71_78 () U)
(declare-fun g_s72_79 () U)
(declare-fun g_s73_80 () U)
(declare-fun g_s74_81 () U)
(declare-fun g_s75_82 () U)
(declare-fun g_s76_83 () U)
(declare-fun g_s77_84 () U)
(declare-fun g_s78_85 () U)
(declare-fun g_s79_86 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_87 () U)
(declare-fun g_s81_88 () U)
(declare-fun g_s82_89 () U)
(declare-fun g_s83_90 () U)
(declare-fun g_s84_91 () U)
(declare-fun g_s85_92 () U)
(declare-fun g_s86_93 () U)
(declare-fun g_s87_94 () U)
(declare-fun g_s88_95 () U)
(declare-fun g_s89_96 () U)
(declare-fun g_s9_11 () U)
(declare-fun g_s90_97 () U)
(declare-fun g_s91_98 () U)
(declare-fun g_s92_99 () U)
(declare-fun g_s97_115 () U)
(declare-fun g_s98_116 () U)
(declare-fun g_s99_117 () U)
(declare-fun e106 () U)
(declare-fun e107 () U)
(declare-fun e108 () U)
(declare-fun e100 () U)
(declare-fun e103 () U)
(declare-fun e101 () U)
(declare-fun e104 () U)
(declare-fun e102 () U)
(declare-fun e105 () U)
(declare-fun e109 () U)
(declare-fun e110 () U)
(declare-fun e111 () U)
(declare-fun e112 () U)
(declare-fun e113 () U)
(declare-fun e114 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 g_s4_5)))))) (mem g_s9_11 g_s10_10) (mem g_s11_13 g_s12_12) (mem g_s13_15 g_s14_14) (mem g_s15_16 g_s14_14) (mem g_s16_17 g_s14_14) (= g_s9_11 e18) (= g_s11_13 e19) (= g_s13_15 e20) (and (|>=i| g_s15_16 e0) (|<=i| g_s15_16 g_s13_15)) (and (|>=i| g_s16_17 e0) (|<=i| g_s16_17 g_s13_15)) (not (= g_s15_16 g_s16_17)) (= g_s17_21 (SET (mapplet g_s16_17 g_s15_16))) (|<=i| g_s15_16 e22) (|<=i| g_s16_17 e22) (= g_s18_23 (SET (mapplet (mapplet FALSE g_s16_17) (mapplet TRUE g_s15_16)))) (mem g_s19_24 g_s10_10) (mem g_s20_25 g_s10_10) (not (= g_s19_24 g_s20_25)) (mem g_s21_26 NAT1) (mem g_s22_27 g_s10_10) (|<i| g_s22_27 (|-i| g_s9_11 g_s11_13)) (mem g_s23_28 g_s10_10) (= g_s23_28 (|+i| g_s22_27 g_s21_26)) (mem g_s24_29 g_s10_10) (mem g_s25_30 g_s10_10) (mem g_s26_31 NAT1) (mem g_s27_32 NAT1) (mem g_s21_26 NAT1) (mem g_s28_33 g_s10_10) (mem g_s29_34 g_s10_10) (mem g_s30_35 g_s10_10) (= g_s29_34 (|+i| g_s28_33 g_s26_31)) (= g_s30_35 (|+i| g_s28_33 g_s27_32)) (mem g_s31_36 g_s12_12) (mem g_s32_37 g_s10_10) (|<=i| g_s32_37 e38) (mem g_s33_39 NAT1) (mem g_s34_40 g_s10_10) (|<i| g_s34_40 (|-i| g_s9_11 g_s11_13)) (mem g_s35_41 g_s10_10) (= g_s35_41 (|+i| g_s34_40 g_s33_39)) (mem g_s36_42 g_s10_10) (|<=i| e43 g_s36_42) (mem g_s37_44 g_s10_10) (mem g_s38_45 g_s10_10) (mem g_s39_46 g_s10_10) (|<i| g_s39_46 (|-i| g_s9_11 g_s11_13)) (mem g_s40_47 g_s10_10) (mem g_s41_48 NAT1) (= g_s40_47 (|+i| g_s39_46 g_s41_48)) (mem g_s42_49 NATURAL1) (mem g_s43_50 g_s10_10) (= g_s43_50 (|+i| g_s39_46 g_s42_49)) (mem g_s44_51 g_s10_10) (mem g_s45_52 g_s10_10) (mem g_s46_53 g_s10_10) (mem g_s47_54 g_s10_10) (mem g_s48_55 g_s12_12) (|<i| (|*i| e22 g_s48_55) g_s11_13) (mem g_s49_56 NAT1) (mem g_s50_57 g_s12_12) (mem g_s51_58 g_s12_12) (= g_s51_58 (|+i| g_s50_57 g_s49_56)) (mem g_s52_59 g_s10_10) (mem g_s53_60 g_s10_10) (mem g_s54_61 g_s10_10) (mem g_s55_62 g_s10_10) (mem g_s56_63 g_s10_10) (mem g_s57_64 g_s10_10) (mem g_s58_65 g_s10_10) (mem g_s59_66 g_s10_10) (mem g_s60_67 g_s10_10) (mem g_s61_68 g_s10_10) (mem g_s62_70 (|-->| (set_prod (set_prod (set_prod g_s10_10 (|-->| (interval e0 g_s63_69) g_s10_10)) g_s14_14) g_s10_10) g_s12_12)) (mem g_s64_72 (|-->| (set_prod (set_prod (set_prod g_s10_10 (|-->| (interval e0 g_s65_71) g_s10_10)) g_s14_14) g_s10_10) g_s12_12)) (= g_s10_10 (interval e0 e18)) (= g_s12_12 (interval e0 e19)) (= g_s14_14 (interval e0 e20)) (mem g_s66_73 (|-->| (set_prod g_s10_10 g_s14_14) g_s10_10)) (mem g_s67_74 (|-->| (set_prod g_s10_10 g_s14_14) g_s10_10)) (mem g_s68_75 (|-->| g_s10_10 g_s10_10)) (mem g_s69_76 (|-->| (set_prod g_s10_10 g_s10_10) g_s10_10)) (mem g_s70_77 (|-->| (set_prod g_s10_10 g_s10_10) g_s10_10)) (mem g_s71_78 (|-->| (set_prod g_s10_10 g_s10_10) g_s10_10)) (mem g_s72_79 (|-->| (set_prod g_s12_12 g_s14_14) g_s12_12)) (mem g_s73_80 (|-->| (set_prod g_s12_12 g_s14_14) g_s12_12)) (mem g_s74_81 (|-->| g_s12_12 g_s12_12)) (mem g_s75_82 (|-->| (set_prod g_s12_12 g_s12_12) g_s12_12)) (mem g_s76_83 (|-->| (set_prod g_s12_12 g_s12_12) g_s12_12)) (mem g_s77_84 (|-->| (set_prod g_s12_12 g_s12_12) g_s12_12)) (mem g_s78_85 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (mem g_s79_86 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (mem g_s80_87 (|-->| g_s14_14 g_s14_14)) (mem g_s81_88 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (mem g_s82_89 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (mem g_s83_90 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (mem g_s84_91 (|-->| (set_prod g_s10_10 g_s10_10) g_s10_10)) (mem g_s85_92 (|-->| (set_prod g_s10_10 g_s10_10) g_s10_10)) (mem g_s86_93 (|-->| (set_prod g_s10_10 g_s10_10) g_s10_10)) (mem g_s87_94 (|-->| (set_prod g_s12_12 g_s12_12) g_s12_12)) (mem g_s88_95 (|-->| (set_prod g_s12_12 g_s12_12) g_s12_12)) (mem g_s89_96 (|-->| (set_prod g_s12_12 g_s12_12) g_s12_12)) (mem g_s90_97 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (mem g_s91_98 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (mem g_s92_99 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (= g_s66_73 e100) (= g_s72_79 e101) (= g_s78_85 e102) (= g_s67_74 e103) (= g_s73_80 e104) (= g_s79_86 e105) (= g_s84_91 e106) (= g_s85_92 e107) (= g_s86_93 e108) (= g_s87_94 e109) (= g_s88_95 e110) (= g_s89_96 e111) (= g_s90_97 e112) (= g_s91_98 e113) (= g_s92_99 e114) (mem g_s97_115 (|-->| (set_prod g_s10_10 g_s10_10) g_s10_10)) (= (apply g_s97_115 (mapplet e0 e0)) e0) (mem g_s98_116 (|-->| (set_prod g_s12_12 g_s12_12) g_s12_12)) (mem g_s99_117 (|-->| (set_prod g_s14_14 g_s14_14) g_s14_14)) (mem g_s100_118 (|-->| (set_prod g_s10_10 g_s10_10) g_s10_10)) (mem g_s101_119 g_s14_14) (|<i| g_s101_119 e20) (|<=i| e120 g_s101_119) (mem g_s102_121 g_s14_14) (|<=i| e43 g_s102_121) (mem g_s103_122 g_s14_14) (|<=i| e43 g_s103_122) (mem g_s104_123 g_s14_14) (|<=i| e43 g_s104_123) (mem g_s105_124 g_s14_14) (|<=i| e125 g_s105_124) (mem g_s106_126 g_s14_14) (= g_s106_126 (|-i| g_s105_124 e43)) (|<=i| g_s106_126 e127) (mem g_s107_128 g_s10_10) (mem g_s108_129 g_s10_10) (mem g_s109_130 g_s10_10) (mem g_s110_131 g_s10_10) (mem g_s111_132 g_s10_10) (mem g_s112_133 g_s10_10) (mem g_s113_134 g_s10_10) (mem g_s114_135 g_s10_10) (mem g_s115_136 g_s10_10) (mem g_s116_137 g_s10_10) (mem g_s117_138 g_s10_10) (mem g_s118_139 g_s10_10) (mem g_s119_140 g_s10_10) (mem g_s120_141 g_s12_12) (|<=i| g_s120_141 e142) (mem g_s121_143 g_s10_10) (mem g_s122_144 NATURAL1) (mem g_s123_145 NATURAL1) (mem g_s124_146 NATURAL1) (mem g_s125_147 NATURAL1) (mem g_s126_148 NATURAL1) (mem g_s127_149 NATURAL1) (mem g_s128_150 NATURAL1) (mem g_s129_151 NATURAL1) (|<i| g_s128_150 g_s129_151) (mem g_s130_152 g_s12_12) (mem g_s131_153 g_s10_10) (mem g_s132_154 g_s10_10) (mem g_s133_155 g_s10_10) (= g_s131_153 (|+i| g_s130_152 g_s122_144)) (= g_s132_154 (|+i| g_s130_152 g_s123_145)) (= g_s133_155 (|+i| g_s130_152 g_s124_146)) (mem g_s134_156 g_s10_10) (mem g_s135_157 g_s10_10) (mem g_s136_158 g_s10_10) (mem g_s137_159 g_s10_10) (mem g_s138_160 g_s10_10) (= g_s134_156 (|+i| g_s130_152 g_s125_147)) (= g_s135_157 (|+i| g_s130_152 g_s126_148)) (= g_s136_158 (|+i| g_s130_152 g_s127_149)) (= g_s137_159 (|+i| g_s130_152 g_s129_151)) (= g_s138_160 (|-i| (|+i| g_s130_152 g_s129_151) g_s128_150)) (mem g_s139_161 g_s14_14) (|<i| g_s139_161 e20) (mem g_s140_162 g_s14_14) (|<i| g_s140_162 e20) (mem g_s141_163 g_s14_14) (mem g_s142_164 g_s14_14) (mem g_s143_165 g_s12_12) (mem g_s144_166 g_s12_12) (mem g_s145_167 g_s12_12) (mem g_s146_168 g_s12_12) (mem g_s147_169 g_s12_12) (mem g_s148_170 g_s12_12) (mem g_s149_171 g_s12_12) (mem g_s150_172 g_s14_14) (|<=i| e43 g_s150_172) (mem g_s151_173 g_s14_14) (mem g_s152_174 g_s14_14) (mem g_s153_175 g_s14_14) (mem g_s154_176 g_s14_14) (mem g_s155_177 g_s14_14) (|<=i| g_s151_173 e178) (|<=i| g_s152_174 e178) (|<=i| g_s153_175 e178) (|<=i| g_s154_176 e178) (|<=i| g_s155_177 e178) (not (= g_s151_173 g_s152_174)) (not (= g_s151_173 g_s153_175)) (not (= g_s151_173 g_s154_176)) (not (= g_s151_173 g_s155_177)) (not (= g_s152_174 g_s153_175)) (not (= g_s152_174 g_s154_176)) (not (= g_s152_174 g_s155_177)) (not (= g_s153_175 g_s154_176)) (not (= g_s153_175 g_s155_177)) (not (= g_s154_176 g_s155_177))))
(define-fun |def_seext| () Bool (and (mem g_s156_179 g_s10_10) (mem g_s157_180 g_s10_10) (mem g_s158_181 g_s14_14) (or (= g_s158_181 e43) (= g_s158_181 e22)) (mem g_s159_182 g_s10_10) (mem g_s160_183 g_s10_10) (mem g_s161_184 g_s10_10) (mem g_s162_185 g_s10_10) (mem g_s163_186 g_s10_10) (mem g_s164_187 g_s10_10) (mem g_s165_188 (|-->| (interval e0 g_s65_71) g_s14_14)) (mem g_s166_189 g_s10_10) (mem g_s167_190 g_s10_10) (mem g_s168_191 g_s10_10) (mem g_s169_192 g_s10_10) (mem g_s170_193 g_s10_10) (mem g_s171_194 (|-->| (interval e0 e22) g_s14_14)) (mem g_s172_195 (|-->| (interval e0 e22) g_s14_14)) (mem g_s173_196 g_s12_12) (mem g_s174_197 g_s12_12) (mem g_s175_198 g_s14_14) (mem g_s176_199 g_s10_10) (mem g_s177_200 g_s10_10) (mem g_s178_201 g_s14_14) (mem g_s179_202 (|-->| (interval e0 g_s102_121) (|-->| (interval e0 e178) g_s14_14))) (mem g_s18_23 (|+->| BOOL g_s14_14)) (mem g_s18_23 (|+->| BOOL g_s12_12)) (mem g_s18_23 (|+->| BOOL g_s10_10))))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s180_203 g_s14_14) (mem g_s181_204 g_s14_14) (mem g_s182_205 g_s14_14) (mem g_s183_206 g_s14_14) (mem g_s184_207 g_s14_14) (mem g_s185_208 g_s14_14) (mem g_s186_209 g_s14_14) (mem g_s187_210 g_s14_14) (mem g_s188_211 g_s14_14) (mem g_s189_212 g_s14_14) (mem g_s190_213 g_s14_14) (mem g_s191_214 g_s14_14) (mem g_s180_203 g_s17_21) (mem g_s192_215 INTEGER) (mem g_s193_216 INTEGER) (mem g_s194_217 INTEGER) (mem g_s195_218 INTEGER) (mem g_s196_219 g_s10_10) (mem g_s197_220 g_s10_10) (mem g_s198_221 g_s10_10) (mem g_s199_222 g_s10_10) (mem g_s200_223 g_s12_12) (mem g_s201_224 g_s14_14) (mem g_s202_225 g_s14_14) (mem g_s203_226 g_s14_14) (|<=i| g_s194_217 g_s127_149) (|<=i| g_s193_216 g_s126_148) (|<=i| g_s192_215 g_s125_147) (|<=i| g_s195_218 g_s129_151) (mem g_s204_227 NATURAL) (mem g_s205_228 NATURAL) (mem g_s206_229 NATURAL) (mem g_s207_230 NATURAL) (mem g_s208_231 NATURAL) (mem g_s201_224 g_s14_14) (mem g_s203_226 g_s14_14) (mem g_s186_209 g_s14_14) (mem g_s188_211 g_s14_14) (mem g_s187_210 g_s14_14) (mem g_s189_212 g_s14_14) (mem g_s182_205 g_s14_14) (mem g_s191_214 g_s14_14)))
(define-fun |def_inv| () Bool (and (= g_s192_215 g_s192$1_232) (= g_s193_216 g_s193$1_233) (= g_s194_217 g_s194$1_234) (= g_s195_218 g_s195$1_235) (= g_s183_206 g_s183$1_236) (mem g_s209$1_237 g_s14_14) (mem g_s210$1_238 g_s14_14) (mem g_s183$1_236 g_s14_14) (mem g_s211$1_239 g_s14_14) (mem g_s212$1_240 g_s14_14) (mem g_s213$1_241 g_s14_14) (mem g_s214$1_242 g_s14_14) (mem g_s215$1_243 g_s14_14) (mem g_s216$1_244 g_s14_14) (mem g_s217$1_245 g_s14_14) (mem g_s218$1_246 g_s14_14) (mem g_s219$1_247 g_s14_14) (mem g_s220$1_248 g_s10_10) (mem g_s221$1_249 g_s10_10) (mem g_s222$1_250 g_s10_10) (mem g_s223$1_251 g_s10_10) (mem g_s224$1_252 g_s12_12) (mem g_s225$1_253 g_s14_14) (mem g_s226$1_254 g_s14_14) (mem g_s227$1_255 g_s14_14) (mem g_s211$1_239 g_s17_21) (= g_s196_219 g_s220$1_248) (= g_s197_220 g_s221$1_249) (= g_s198_221 g_s222$1_250) (= g_s199_222 g_s223$1_251) (= g_s211$1_239 g_s185_208) (= g_s212$1_240 g_s184_207) (= g_s209$1_237 g_s180_203) (= g_s219$1_247 g_s190_213) (= g_s213$1_241 g_s181_204) (= g_s215$1_243 g_s187_210) (= g_s216$1_244 g_s188_211) (= g_s214$1_242 g_s186_209) (= g_s217$1_245 g_s189_212) (= g_s218$1_246 g_s191_214) (= g_s210$1_238 g_s182_205) (= g_s224$1_252 g_s200_223) (= g_s225$1_253 g_s202_225) (= g_s226$1_254 g_s201_224) (= g_s227$1_255 g_s203_226)))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s192$1_232 INTEGER) (mem g_s193$1_233 INTEGER) (mem g_s194$1_234 INTEGER) (mem g_s195$1_235 INTEGER)))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s125_147 INTEGER))
(define-fun lh_2 () Bool (mem e0 INTEGER))
(define-fun lh_3 () Bool (mem g_s129_151 INTEGER))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem e0 g_s10_10))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem e0 g_s14_14))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s16_17 g_s17_21))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s231_256 g_s14_14))
(define-fun lh_2 () Bool (mem g_s231_256 g_s17_21))
(define-fun lh_3 () Bool (= g_s208_231 g_s206_229))
(define-fun lh_4 () Bool (mem g_s232_257 g_s12_12))
(define-fun lh_5 () Bool (|<=i| e43 g_s232_257))
(define-fun lh_6 () Bool (= g_s231_256 g_s16_17))
(define-fun lh_7 () Bool (= g_s231_256 g_s15_16))
(define-fun lh_8 () Bool (= g_s185_208 g_s15_16))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s211$1_239 g_s15_16))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= (|-i| g_s195$1_235 g_s232_257) g_s195$1_235))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s234$1_258 g_s14_14))
(define-fun lh_2 () Bool (mem g_s235$1_259 BOOL))
(define-fun lh_3 () Bool (mem g_s236$1_260 BOOL))
(define-fun lh_4 () Bool (= g_s209$1_237 g_s15_16))
(define-fun lh_5 () Bool (= g_s180_203 g_s16_17))
(define-fun lh_6 () Bool (= g_s181_204 g_s15_16))
(define-fun lh_7 () Bool (|<=i| g_s192$1_232 e0))
; PO 1 in group 2
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s214$1_242 g_s15_16))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s231_256 g_s14_14))
(define-fun lh_2 () Bool (mem g_s238$1_261 g_s14_14))
(define-fun lh_3 () Bool (mem g_s235$1_259 BOOL))
(define-fun lh_4 () Bool (mem g_s236$1_260 BOOL))
(define-fun lh_5 () Bool (= g_s209$1_237 g_s15_16))
(define-fun lh_6 () Bool (= g_s180_203 g_s16_17))
(define-fun lh_7 () Bool (|<=i| g_s194$1_234 e0))
(define-fun lh_8 () Bool (= g_s231_256 g_s15_16))
; PO 1 in group 3
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s215$1_243 g_s15_16))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s240$1_263 g_s240_262))
(define-fun lh_1 () Bool (mem g_s241_264 g_s14_14))
(define-fun lh_2 () Bool (mem g_s240_262 g_s14_14))
(define-fun lh_3 () Bool (|<i| g_s201_224 e22))
(define-fun lh_4 () Bool (mem g_s238$1_261 g_s14_14))
(define-fun lh_5 () Bool (mem g_s235$1_259 BOOL))
(define-fun lh_6 () Bool (= g_s241_264 g_s16_17))
(define-fun lh_7 () Bool (= (apply g_s90_97 (mapplet g_s226$1_254 e43)) e22))
(define-fun lh_8 () Bool (= (|+i| g_s201_224 e43) e22))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem (apply g_s90_97 (mapplet g_s226$1_254 e43)) g_s14_14))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= (apply g_s90_97 (mapplet g_s226$1_254 e43)) (|+i| g_s201_224 e43)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s231_256 g_s14_14))
(define-fun lh_2 () Bool (|<=i| g_s203_226 e43))
(define-fun lh_3 () Bool (mem g_s235$1_259 BOOL))
(define-fun lh_4 () Bool (mem g_s236$1_260 BOOL))
(define-fun lh_5 () Bool (= (bool (and (= (bool (= g_s231_256 g_s16_17)) TRUE) (= (bool (|<=i| g_s192$1_232 e0)) TRUE))) TRUE))
(define-fun lh_6 () Bool (|<=i| e22 (apply g_s90_97 (mapplet g_s227$1_255 e43))))
(define-fun lh_7 () Bool (= g_s231_256 g_s16_17))
(define-fun lh_8 () Bool (|<=i| g_s192$1_232 e0))
(define-fun lh_9 () Bool (|>i| (|+i| g_s203_226 e43) e43))
(define-fun lh_10 () Bool (not (and (= g_s231_256 g_s16_17) (|<=i| g_s192$1_232 e0))))
(define-fun lh_11 () Bool (|>i| e0 e43))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10 lh_11) (mem (apply g_s90_97 (mapplet g_s227$1_255 e43)) g_s14_14))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10 lh_11) (= (apply g_s90_97 (mapplet g_s227$1_255 e43)) e0))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem (apply g_s90_97 (mapplet g_s227$1_255 e43)) g_s14_14))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (= (apply g_s90_97 (mapplet g_s227$1_255 e43)) (|+i| g_s203_226 e43)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s232_257 g_s12_12))
(define-fun lh_2 () Bool (|<=i| e43 g_s207_230))
(define-fun lh_3 () Bool (mem g_s244$1_265 BOOL))
(define-fun lh_4 () Bool (mem g_s245$1_266 BOOL))
(define-fun lh_5 () Bool (mem g_s234$1_258 g_s14_14))
(define-fun lh_6 () Bool (mem g_s246$1_267 g_s10_10))
(define-fun lh_7 () Bool (mem g_s247$1_268 g_s10_10))
(define-fun lh_8 () Bool (mem g_s248$1_269 g_s10_10))
(define-fun lh_9 () Bool (mem g_s249$1_270 g_s10_10))
(define-fun lh_10 () Bool (mem g_s250$1_271 g_s10_10))
(define-fun lh_11 () Bool (= g_s183$1_236 g_s15_16))
(define-fun lh_12 () Bool (mem g_s222$1_250 g_s10_10))
(define-fun lh_13 () Bool (mem g_s220$1_248 g_s10_10))
(define-fun lh_14 () Bool (mem g_s223$1_251 g_s10_10))
(define-fun lh_15 () Bool (mem g_s221$1_249 g_s10_10))
(define-fun lh_16 () Bool (mem (apply g_s97_115 (mapplet g_s222$1_250 g_s220$1_248)) g_s10_10))
(define-fun lh_17 () Bool (mem (apply g_s97_115 (mapplet g_s223$1_251 g_s221$1_249)) g_s10_10))
(define-fun lh_18 () Bool (|<=i| g_s232_257 g_s146_168))
(define-fun lh_19 () Bool (not (and (= g_s183$1_236 g_s15_16) (or (|<=i| g_s232_257 g_s146_168) (not (mem (apply g_s97_115 (mapplet g_s198_221 g_s196_219)) (interval (idiv (|*i| (|+i| (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272) g_s200_223) e274) e272) (idiv (|*i| (|+i| (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272) g_s200_223) e273) e272)))) (not (mem (apply g_s97_115 (mapplet g_s199_222 g_s197_220)) (interval (idiv (|*i| (|+i| (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272) g_s200_223) e274) e272) (idiv (|*i| (|+i| (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272) g_s200_223) e273) e272)))) (|<i| g_s121_143 (apply g_s100_118 (mapplet (apply g_s97_115 (mapplet g_s198_221 g_s196_219)) (apply g_s97_115 (mapplet g_s199_222 g_s197_220)))))))))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (apply g_s97_115 (mapplet g_s222$1_250 g_s220$1_248)) g_s10_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (apply g_s97_115 (mapplet g_s223$1_251 g_s221$1_249)) g_s10_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (= g_s15_16 g_s189_212))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (|<=i| e43 g_s207_230))
(define-fun lh_2 () Bool (mem g_s244$1_265 BOOL))
(define-fun lh_3 () Bool (mem g_s245$1_266 BOOL))
(define-fun lh_4 () Bool (mem g_s234$1_258 g_s14_14))
(define-fun lh_5 () Bool (mem g_s249$1_270 g_s10_10))
(define-fun lh_6 () Bool (mem g_s250$1_271 g_s10_10))
(define-fun lh_7 () Bool (= (bool (= g_s183$1_236 g_s16_17)) TRUE))
(define-fun lh_8 () Bool (= (bool (= (bool (= g_s222$1_250 g_s220$1_248)) FALSE)) TRUE))
(define-fun lh_9 () Bool (mem g_s222$1_250 g_s10_10))
(define-fun lh_10 () Bool (mem e43 g_s10_10))
(define-fun lh_11 () Bool (mem e275 g_s10_10))
(define-fun lh_12 () Bool (mem e0 g_s14_14))
(define-fun lh_13 () Bool (mem g_s220$1_248 g_s10_10))
(define-fun lh_14 () Bool (mem e22 g_s10_10))
(define-fun lh_15 () Bool (= (bool (= (bool (= g_s223$1_251 g_s221$1_249)) FALSE)) TRUE))
(define-fun lh_16 () Bool (mem g_s223$1_251 g_s10_10))
(define-fun lh_17 () Bool (mem e276 g_s10_10))
(define-fun lh_18 () Bool (mem g_s221$1_249 g_s10_10))
(define-fun lh_19 () Bool (mem e277 g_s10_10))
(define-fun lh_20 () Bool (not (and (= g_s183$1_236 g_s16_17) (or (not (= g_s198_221 g_s196_219)) (not (= g_s199_222 g_s197_220))))))
; PO 1 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem e0 g_s14_14))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem e43 g_s10_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem e275 g_s10_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem e22 g_s10_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem e276 g_s10_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem e277 g_s10_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (= g_s15_16 g_s189_212))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s241_264 g_s14_14))
(assert (mem g_s240_262 g_s14_14))
(assert (|<i| g_s201_224 e22))
(define-fun lh_1 () Bool (mem g_s238$1_261 g_s14_14))
(define-fun lh_2 () Bool (mem g_s235$1_259 BOOL))
(define-fun lh_3 () Bool (= g_s241_264 g_s16_17))
; PO 1 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s90_97 (|+->| (dom g_s90_97) (ran g_s90_97))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (mapplet g_s226$1_254 e43) (dom g_s90_97)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s231_256 g_s14_14))
(assert (|<=i| g_s203_226 e43))
(define-fun lh_1 () Bool (mem g_s235$1_259 BOOL))
(define-fun lh_2 () Bool (mem g_s236$1_260 BOOL))
(define-fun lh_3 () Bool (= (bool (and (= (bool (= g_s231_256 g_s16_17)) TRUE) (= (bool (|<=i| g_s192$1_232 e0)) TRUE))) TRUE))
; PO 1 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s90_97 (|+->| (dom g_s90_97) (ran g_s90_97))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (mapplet g_s227$1_255 e43) (dom g_s90_97)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s232_257 g_s12_12))
(assert (|<=i| e43 g_s207_230))
(define-fun lh_1 () Bool (mem g_s244$1_265 BOOL))
(define-fun lh_2 () Bool (mem g_s245$1_266 BOOL))
(define-fun lh_3 () Bool (mem g_s234$1_258 g_s14_14))
(define-fun lh_4 () Bool (mem g_s246$1_267 g_s10_10))
(define-fun lh_5 () Bool (mem g_s247$1_268 g_s10_10))
(define-fun lh_6 () Bool (mem g_s248$1_269 g_s10_10))
(define-fun lh_7 () Bool (mem g_s249$1_270 g_s10_10))
(define-fun lh_8 () Bool (mem g_s250$1_271 g_s10_10))
(define-fun lh_9 () Bool (= g_s183$1_236 g_s15_16))
(define-fun lh_10 () Bool (not (|<=i| g_s232_257 g_s146_168)))
(define-fun lh_11 () Bool (mem (|-i| g_s232_257 g_s146_168) g_s10_10))
(define-fun lh_12 () Bool (mem (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) g_s10_10))
(define-fun lh_13 () Bool (mem (|+i| g_s224$1_252 (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272)) g_s10_10))
(define-fun lh_14 () Bool (mem (|*i| e274 (|+i| g_s224$1_252 (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272))) g_s10_10))
(define-fun lh_15 () Bool (mem (|*i| (|+i| g_s224$1_252 (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272)) e273) g_s10_10))
(define-fun lh_16 () Bool (= (bool (or (= (bool (or (= (bool (or (= (bool (or (= (bool (|<i| (apply g_s97_115 (mapplet g_s222$1_250 g_s220$1_248)) (idiv (|*i| e274 (|+i| g_s224$1_252 (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272))) e272))) TRUE) (= (bool (|<i| (idiv (|*i| (|+i| g_s224$1_252 (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272)) e273) e272) (apply g_s97_115 (mapplet g_s222$1_250 g_s220$1_248)))) TRUE))) TRUE) (= (bool (|<i| (apply g_s97_115 (mapplet g_s223$1_251 g_s221$1_249)) (idiv (|*i| e274 (|+i| g_s224$1_252 (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272))) e272))) TRUE))) TRUE) (= (bool (|<i| (idiv (|*i| (|+i| g_s224$1_252 (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272)) e273) e272) (apply g_s97_115 (mapplet g_s223$1_251 g_s221$1_249)))) TRUE))) TRUE) (= (bool (|<i| g_s121_143 (apply g_s100_118 (mapplet (apply g_s97_115 (mapplet g_s222$1_250 g_s220$1_248)) (apply g_s97_115 (mapplet g_s223$1_251 g_s221$1_249)))))) TRUE))) TRUE))
(define-fun lh_17 () Bool (not (not (mem (apply g_s97_115 (mapplet g_s198_221 g_s196_219)) (interval (idiv (|*i| (|+i| (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272) g_s200_223) e274) e272) (idiv (|*i| (|+i| (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272) g_s200_223) e273) e272))))))
(define-fun lh_18 () Bool (not (not (mem (apply g_s97_115 (mapplet g_s199_222 g_s197_220)) (interval (idiv (|*i| (|+i| (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272) g_s200_223) e274) e272) (idiv (|*i| (|+i| (idiv (|*i| g_s120_141 (|-i| g_s232_257 g_s146_168)) e272) g_s200_223) e273) e272))))))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (not (= e272 e0)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (not (= e272 e0)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (not (= e272 e0)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (not (= e272 e0)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s97_115 (|+->| (dom g_s97_115) (ran g_s97_115))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem (mapplet g_s198_221 g_s196_219) (dom g_s97_115)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (not (= e272 e0)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s97_115 (|+->| (dom g_s97_115) (ran g_s97_115))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem (mapplet g_s199_222 g_s197_220) (dom g_s97_115)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem g_s100_118 (|+->| (dom g_s100_118) (ran g_s100_118))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem g_s97_115 (|+->| (dom g_s97_115) (ran g_s97_115))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem (mapplet g_s198_221 g_s196_219) (dom g_s97_115)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem (mapplet g_s199_222 g_s197_220) (dom g_s97_115)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem (mapplet (apply g_s97_115 (mapplet g_s198_221 g_s196_219)) (apply g_s97_115 (mapplet g_s199_222 g_s197_220))) (dom g_s100_118)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)