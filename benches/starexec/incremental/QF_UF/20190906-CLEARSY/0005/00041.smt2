(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e218 () U)
(declare-fun e143 () U)
(declare-fun e0 () U)
(declare-fun e162 () U)
(declare-fun e155 () U)
(declare-fun e161 () U)
(declare-fun e190 () U)
(declare-fun e164 () U)
(declare-fun e170 () U)
(declare-fun e215 () U)
(declare-fun e165 () U)
(declare-fun e430 () U)
(declare-fun e189 () U)
(declare-fun e279 () U)
(declare-fun e280 () U)
(declare-fun e191 () U)
(declare-fun e207 () U)
(declare-fun e209 () U)
(declare-fun e205 () U)
(declare-fun e277 () U)
(declare-fun e221 () U)
(declare-fun e278 () U)
(declare-fun e240 () U)
(declare-fun e187 () U)
(declare-fun e147 () U)
(declare-fun e342 () U)
(declare-fun e241 () U)
(declare-fun e145 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_144 () U)
(declare-fun g_s143_146 () U)
(declare-fun g_s144_148 () U)
(declare-fun g_s145_149 () U)
(declare-fun g_s146_150 () U)
(declare-fun g_s147_151 () U)
(declare-fun g_s148_152 () U)
(declare-fun g_s149_153 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_154 () U)
(declare-fun g_s151_156 () U)
(declare-fun g_s152_157 () U)
(declare-fun g_s153_158 () U)
(declare-fun g_s154_159 () U)
(declare-fun g_s155_160 () U)
(declare-fun g_s156_163 () U)
(declare-fun g_s157_166 () U)
(declare-fun g_s158_167 () U)
(declare-fun g_s159_168 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_169 () U)
(declare-fun g_s161_171 () U)
(declare-fun g_s162_172 () U)
(declare-fun g_s163_173 () U)
(declare-fun g_s164_174 () U)
(declare-fun g_s165_175 () U)
(declare-fun g_s166_176 () U)
(declare-fun g_s167_177 () U)
(declare-fun g_s168_178 () U)
(declare-fun g_s169_179 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_180 () U)
(declare-fun g_s171_181 () U)
(declare-fun g_s172_182 () U)
(declare-fun g_s173_183 () U)
(declare-fun g_s174_184 () U)
(declare-fun g_s175_185 () U)
(declare-fun g_s176_186 () U)
(declare-fun g_s177_188 () U)
(declare-fun g_s178_192 () U)
(declare-fun g_s179_193 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_194 () U)
(declare-fun g_s181_195 () U)
(declare-fun g_s182_196 () U)
(declare-fun g_s183_197 () U)
(declare-fun g_s184_198 () U)
(declare-fun g_s185_199 () U)
(declare-fun g_s186_200 () U)
(declare-fun g_s187_201 () U)
(declare-fun g_s188_202 () U)
(declare-fun g_s189_203 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_204 () U)
(declare-fun g_s191_206 () U)
(declare-fun g_s192_208 () U)
(declare-fun g_s193_210 () U)
(declare-fun g_s194_211 () U)
(declare-fun g_s195_212 () U)
(declare-fun g_s196_213 () U)
(declare-fun g_s197_214 () U)
(declare-fun g_s198_217 () U)
(declare-fun g_s199_216 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_219 () U)
(declare-fun g_s201_220 () U)
(declare-fun g_s202_222 () U)
(declare-fun g_s203_223 () U)
(declare-fun g_s204_224 () U)
(declare-fun g_s205_225 () U)
(declare-fun g_s206_226 () U)
(declare-fun g_s207_227 () U)
(declare-fun g_s208_228 () U)
(declare-fun g_s209_229 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_230 () U)
(declare-fun g_s211_231 () U)
(declare-fun g_s212_232 () U)
(declare-fun g_s213_233 () U)
(declare-fun g_s214_234 () U)
(declare-fun g_s215_235 () U)
(declare-fun g_s216_236 () U)
(declare-fun g_s217_237 () U)
(declare-fun g_s218_238 () U)
(declare-fun g_s219_239 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_242 () U)
(declare-fun g_s221_243 () U)
(declare-fun g_s222_244 () U)
(declare-fun g_s223_245 () U)
(declare-fun g_s224_246 () U)
(declare-fun g_s225_247 () U)
(declare-fun g_s226_248 () U)
(declare-fun g_s227_249 () U)
(declare-fun g_s228_250 () U)
(declare-fun g_s229_251 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_252 () U)
(declare-fun g_s231_253 () U)
(declare-fun g_s232_254 () U)
(declare-fun g_s233_255 () U)
(declare-fun g_s234_256 () U)
(declare-fun g_s235_257 () U)
(declare-fun g_s236_258 () U)
(declare-fun g_s237_259 () U)
(declare-fun g_s238_260 () U)
(declare-fun g_s239_261 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_262 () U)
(declare-fun g_s241_263 () U)
(declare-fun g_s242_264 () U)
(declare-fun g_s243_265 () U)
(declare-fun g_s244_266 () U)
(declare-fun g_s245_267 () U)
(declare-fun g_s246_268 () U)
(declare-fun g_s247_269 () U)
(declare-fun g_s248_270 () U)
(declare-fun g_s249_271 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_272 () U)
(declare-fun g_s251_273 () U)
(declare-fun g_s252_274 () U)
(declare-fun g_s253_275 () U)
(declare-fun g_s254_276 () U)
(declare-fun g_s255_281 () U)
(declare-fun g_s256_282 () U)
(declare-fun g_s257_283 () U)
(declare-fun g_s258_284 () U)
(declare-fun g_s259_285 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_286 () U)
(declare-fun g_s261_287 () U)
(declare-fun g_s262_288 () U)
(declare-fun g_s263_289 () U)
(declare-fun g_s264_290 () U)
(declare-fun g_s265_291 () U)
(declare-fun g_s266_292 () U)
(declare-fun g_s267_293 () U)
(declare-fun g_s268_294 () U)
(declare-fun g_s269_295 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_296 () U)
(declare-fun g_s271_297 () U)
(declare-fun g_s272_298 () U)
(declare-fun g_s273_299 () U)
(declare-fun g_s274_300 () U)
(declare-fun g_s275_301 () U)
(declare-fun g_s276_302 () U)
(declare-fun g_s277_303 () U)
(declare-fun g_s278_304 () U)
(declare-fun g_s279_305 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_306 () U)
(declare-fun g_s281_307 () U)
(declare-fun g_s282_308 () U)
(declare-fun g_s287_325 () U)
(declare-fun g_s288_324 () U)
(declare-fun g_s289_327 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_326 () U)
(declare-fun g_s291_328 () U)
(declare-fun g_s292_329 () U)
(declare-fun g_s293_330 () U)
(declare-fun g_s294_331 () U)
(declare-fun g_s295_332 () U)
(declare-fun g_s296_333 () U)
(declare-fun g_s297_334 () U)
(declare-fun g_s298_335 () U)
(declare-fun g_s299_336 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_337 () U)
(declare-fun g_s301_338 () U)
(declare-fun g_s302_339 () U)
(declare-fun g_s303_340 () U)
(declare-fun g_s304_341 () U)
(declare-fun g_s305_343 () U)
(declare-fun g_s306_344 () U)
(declare-fun g_s307_345 () U)
(declare-fun g_s308_346 () U)
(declare-fun g_s309_347 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_348 () U)
(declare-fun g_s311_349 () U)
(declare-fun g_s312_350 () U)
(declare-fun g_s313_351 () U)
(declare-fun g_s314_352 () U)
(declare-fun g_s315_353 () U)
(declare-fun g_s316_354 () U)
(declare-fun g_s317_355 () U)
(declare-fun g_s318_356 () U)
(declare-fun g_s319_357 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_358 () U)
(declare-fun g_s321_359 () U)
(declare-fun g_s322_360 () U)
(declare-fun g_s323_361 () U)
(declare-fun g_s324_362 () U)
(declare-fun g_s325_363 () U)
(declare-fun g_s326_364 () U)
(declare-fun g_s327_365 () U)
(declare-fun g_s328_366 () U)
(declare-fun g_s329_367 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_368 () U)
(declare-fun g_s331_369 () U)
(declare-fun g_s332_370 () U)
(declare-fun g_s333_371 () U)
(declare-fun g_s334_372 () U)
(declare-fun g_s335_373 () U)
(declare-fun g_s336_374 () U)
(declare-fun g_s337_375 () U)
(declare-fun g_s338_376 () U)
(declare-fun g_s339_377 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_378 () U)
(declare-fun g_s341_379 () U)
(declare-fun g_s342_380 () U)
(declare-fun g_s343_381 () U)
(declare-fun g_s344_382 () U)
(declare-fun g_s345_383 () U)
(declare-fun g_s346_384 () U)
(declare-fun g_s347_385 () U)
(declare-fun g_s348_386 () U)
(declare-fun g_s349_387 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_388 () U)
(declare-fun g_s351_389 () U)
(declare-fun g_s352_390 () U)
(declare-fun g_s353_391 () U)
(declare-fun g_s354_392 () U)
(declare-fun g_s355_393 () U)
(declare-fun g_s356_394 () U)
(declare-fun g_s357_395 () U)
(declare-fun g_s358_396 () U)
(declare-fun g_s359_397 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_398 () U)
(declare-fun g_s361_399 () U)
(declare-fun g_s362_400 () U)
(declare-fun g_s363_401 () U)
(declare-fun g_s364_402 () U)
(declare-fun g_s365_403 () U)
(declare-fun g_s366_404 () U)
(declare-fun g_s367_405 () U)
(declare-fun g_s368_406 () U)
(declare-fun g_s369_407 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_408 () U)
(declare-fun g_s371_409 () U)
(declare-fun g_s372_410 () U)
(declare-fun g_s373_411 () U)
(declare-fun g_s374_412 () U)
(declare-fun g_s375_413 () U)
(declare-fun g_s376_414 () U)
(declare-fun g_s377_415 () U)
(declare-fun g_s378_416 () U)
(declare-fun g_s379_417 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_418 () U)
(declare-fun g_s381_419 () U)
(declare-fun g_s382_420 () U)
(declare-fun g_s383_421 () U)
(declare-fun g_s384_422 () U)
(declare-fun g_s385_423 () U)
(declare-fun g_s386_424 () U)
(declare-fun g_s387_425 () U)
(declare-fun g_s388_426 () U)
(declare-fun g_s389_427 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_428 () U)
(declare-fun g_s391_429 () U)
(declare-fun g_s392_431 () U)
(declare-fun g_s393_432 () U)
(declare-fun g_s394_433 () U)
(declare-fun g_s395_434 () U)
(declare-fun g_s396_435 () U)
(declare-fun g_s397_436 () U)
(declare-fun g_s398_437 () U)
(declare-fun g_s399_438 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_439 () U)
(declare-fun g_s401_440 () U)
(declare-fun g_s402_441 () U)
(declare-fun g_s403_442 () U)
(declare-fun g_s404_443 () U)
(declare-fun g_s405_444 () U)
(declare-fun g_s406_445 () U)
(declare-fun g_s407_446 () U)
(declare-fun g_s408_447 () U)
(declare-fun g_s409_448 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_449 () U)
(declare-fun g_s411_450 () U)
(declare-fun g_s412_451 () U)
(declare-fun g_s413_452 () U)
(declare-fun g_s414_453 () U)
(declare-fun g_s415_454 () U)
(declare-fun g_s416_455 () U)
(declare-fun g_s417_456 () U)
(declare-fun g_s418_457 () U)
(declare-fun g_s419_458 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_459 () U)
(declare-fun g_s421_460 () U)
(declare-fun g_s422_461 () U)
(declare-fun g_s423_462 () U)
(declare-fun g_s424_463 () U)
(declare-fun g_s425_464 () U)
(declare-fun g_s426_465 () U)
(declare-fun g_s427_466 () U)
(declare-fun g_s428_467 () U)
(declare-fun g_s429_468 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430_469 () U)
(declare-fun g_s431_470 () U)
(declare-fun g_s432_509 () U)
(declare-fun g_s433$1_480 () U)
(declare-fun g_s433$2_483 () U)
(declare-fun g_s434_510 () U)
(declare-fun g_s435_477 () U)
(declare-fun g_s436_475 () U)
(declare-fun g_s437_474 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s440$1_479 () U)
(declare-fun g_s440$2_482 () U)
(declare-fun g_s446_486 () U)
(declare-fun g_s446$1_487 () U)
(declare-fun g_s446$2_508 () U)
(declare-fun g_s447_488 () U)
(declare-fun g_s448_489 () U)
(declare-fun g_s449$1_490 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s450$1_491 () U)
(declare-fun g_s450$2_498 () U)
(declare-fun g_s451$1_492 () U)
(declare-fun g_s451$2_495 () U)
(declare-fun g_s452$1_493 () U)
(declare-fun g_s452$2_496 () U)
(declare-fun g_s453$1_494 () U)
(declare-fun g_s453$2_497 () U)
(declare-fun g_s454_499 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s461_500 () U)
(declare-fun g_s462_501 () U)
(declare-fun g_s464_502 () U)
(declare-fun g_s465$1_503 () U)
(declare-fun g_s465$2_506 () U)
(declare-fun g_s466$1_504 () U)
(declare-fun g_s466$2_505 () U)
(declare-fun g_s468_507 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
(declare-fun e471 () U)
(declare-fun e485 () U)
(declare-fun e473 () U)
(declare-fun e315 () U)
(declare-fun e316 () U)
(declare-fun e317 () U)
(declare-fun e309 () U)
(declare-fun e312 () U)
(declare-fun e310 () U)
(declare-fun e313 () U)
(declare-fun e311 () U)
(declare-fun e314 () U)
(declare-fun e318 () U)
(declare-fun e319 () U)
(declare-fun e320 () U)
(declare-fun e321 () U)
(declare-fun e322 () U)
(declare-fun e323 () U)
(declare-fun e472 () U)
(declare-fun e481 () U)
(declare-fun e484 () U)
(declare-fun e478 () U)
(declare-fun e476 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 (mapplet g_s10_11 (mapplet g_s9_10 (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 g_s4_5))))))))))))))))))))))))))))))))))))))))))))))))) (= g_s52_53 (SET (mapplet g_s60_61 (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 g_s53_54))))))))) (= g_s61_62 (SET (mapplet g_s88_89 (mapplet g_s87_88 (mapplet g_s86_87 (mapplet g_s85_86 (mapplet g_s84_85 (mapplet g_s83_84 (mapplet g_s82_83 (mapplet g_s81_82 (mapplet g_s80_81 (mapplet g_s79_80 (mapplet g_s78_79 (mapplet g_s77_78 (mapplet g_s76_77 (mapplet g_s75_76 (mapplet g_s74_75 (mapplet g_s73_74 (mapplet g_s72_73 (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 (mapplet g_s67_68 (mapplet g_s66_67 (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 g_s62_63)))))))))))))))))))))))))))) (= g_s89_90 (SET (mapplet g_s91_92 g_s90_91))) (= g_s92_93 (SET (mapplet g_s101_102 (mapplet g_s100_101 (mapplet g_s99_100 (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 (mapplet g_s95_96 (mapplet g_s94_95 g_s93_94)))))))))) (= g_s102_103 (SET (mapplet g_s105_106 (mapplet g_s104_105 g_s103_104)))) (= g_s106_107 (SET (mapplet g_s108_109 g_s107_108))) (= g_s109_110 (SET (mapplet g_s116_117 (mapplet g_s115_116 (mapplet g_s114_115 (mapplet g_s113_114 (mapplet g_s112_113 (mapplet g_s111_112 g_s110_111)))))))) (= g_s117_118 (SET (mapplet g_s126_127 (mapplet g_s125_126 (mapplet g_s124_125 (mapplet g_s123_124 (mapplet g_s122_123 (mapplet g_s121_122 (mapplet g_s120_121 (mapplet g_s119_120 g_s118_119)))))))))) (= g_s127_128 (SET (mapplet g_s131_132 (mapplet g_s130_131 (mapplet g_s129_130 g_s128_129))))) (= g_s132_133 (SET (mapplet g_s135_136 (mapplet g_s134_135 g_s133_134)))) (= g_s136_137 (SET (mapplet g_s141_142 (mapplet g_s140_141 (mapplet g_s139_140 (mapplet g_s138_139 g_s137_138)))))) (= g_s142_144 (interval e0 e143)) (= g_s143_146 (interval e0 e145)) (= g_s144_148 (interval e0 e147)) (mem g_s145_149 g_s142_144) (mem g_s146_150 g_s143_146) (mem g_s147_151 g_s144_148) (mem g_s148_152 g_s144_148) (mem g_s149_153 g_s144_148) (= g_s145_149 e143) (= g_s146_150 e145) (= g_s147_151 e147) (and (|>=i| g_s148_152 e0) (|<=i| g_s148_152 g_s147_151)) (and (|>=i| g_s149_153 e0) (|<=i| g_s149_153 g_s147_151)) (not (= g_s148_152 g_s149_153)) (= g_s150_154 (SET (mapplet g_s149_153 g_s148_152))) (|<=i| g_s148_152 e155) (|<=i| g_s149_153 e155) (= g_s151_156 (SET (mapplet (mapplet FALSE g_s149_153) (mapplet TRUE g_s148_152)))) (mem g_s152_157 (|-->| (set_prod g_s142_144 g_s142_144) g_s142_144)) (= (apply g_s152_157 (mapplet e0 e0)) e0) (mem g_s153_158 (|-->| (set_prod g_s143_146 g_s143_146) g_s143_146)) (mem g_s154_159 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (mem g_s155_160 (|-->| (set_prod g_s142_144 g_s142_144) g_s142_144)) (= g_s156_163 (|-->| (interval e162 e161) g_s144_148)) (mem g_s157_166 (|-->| (set_prod (interval e0 e165) (interval e0 e164)) g_s144_148)) (mem g_s158_167 (|-->| (set_prod (interval e0 e165) (interval e0 e155)) g_s144_148)) (mem g_s159_168 (|-->| (set_prod (interval e0 e165) (interval e0 e155)) g_s144_148)) (mem g_s160_169 g_s144_148) (|<=i| e170 g_s160_169) (mem g_s161_171 (|-->| (interval e0 e165) g_s143_146)) (mem g_s162_172 (|-->| (interval e0 e165) g_s143_146)) (mem g_s163_173 g_s142_144) (mem g_s164_174 g_s144_148) (mem g_s165_175 g_s144_148) (mem g_s166_176 g_s144_148) (mem g_s167_177 g_s144_148) (mem g_s168_178 g_s144_148) (mem g_s169_179 g_s144_148) (mem g_s170_180 g_s144_148) (mem g_s171_181 g_s144_148) (mem g_s172_182 g_s144_148) (mem g_s173_183 g_s143_146) (not (= g_s172_182 g_s168_178)) (mem g_s174_184 g_s144_148) (mem g_s175_185 g_s144_148) (mem g_s176_186 g_s144_148) (|<=i| g_s176_186 e187) (mem g_s177_188 g_s144_148) (|<=i| (|+i| g_s176_186 e189) g_s175_185) (|<=i| (|+i| g_s177_188 e190) g_s175_185) (|<=i| e191 g_s175_185) (mem g_s178_192 g_s156_163) (= g_s178_192 (set_prod (interval e162 e161) (SET e147))) (mem g_s179_193 g_s144_148) (mem g_s180_194 g_s144_148) (mem g_s181_195 g_s144_148) (mem g_s182_196 g_s144_148) (mem g_s183_197 g_s144_148) (mem g_s184_198 g_s144_148) (mem g_s185_199 g_s144_148) (mem g_s186_200 g_s144_148) (mem g_s187_201 g_s144_148) (mem g_s188_202 g_s142_144) (mem g_s189_203 (|-->| (interval e0 e147) g_s143_146)) (mem g_s190_204 g_s144_148) (|<=i| g_s190_204 e205) (mem g_s191_206 g_s144_148) (|<i| g_s191_206 e207) (mem g_s192_208 g_s144_148) (|<i| g_s192_208 e207) (|<i| (|+i| g_s191_206 g_s192_208) e209) (mem g_s193_210 g_s143_146) (mem g_s194_211 g_s144_148) (mem g_s195_212 g_s144_148) (mem g_s196_213 g_s144_148) (mem g_s197_214 g_s144_148) (|<=i| e215 g_s195_212) (|<=i| g_s195_212 e205) (|<=i| (|+i| g_s198_217 g_s199_216) (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| e209 g_s192_208)) e209)) (|<=i| e0 (|-i| (|+i| e145 g_s199_216) (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| e209 g_s192_208)) e209))) (|<=i| (|+i| g_s198_217 g_s199_216) (|*i| g_s190_204 g_s160_169)) (|<=i| (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| e209 g_s191_206)) e209) (|+i| (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|+i| e209 g_s192_208)) e209) e162)) (|<=i| (|*i| g_s160_169 (|-i| e209 g_s192_208)) g_s145_149) (|<=i| (idiv (|*i| g_s190_204 (|*i| g_s160_169 (|-i| e209 g_s192_208))) e209) e145) (|<=i| g_s198_217 (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| e209 g_s192_208)) e209)) (|<=i| (|*i| g_s190_204 g_s160_169) e145) (|<=i| e0 (|-i| (|+i| e162 (|*i| g_s190_204 g_s160_169)) (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| (|-i| e209 g_s192_208) g_s191_206)) e209))) (|<=i| (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| e209 g_s192_208)) e209) (|*i| g_s190_204 g_s160_169)) (|<=i| e0 (|-i| (|+i| e162 (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| e209 g_s192_208)) e209)) (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| (|-i| e209 g_s192_208) g_s191_206)) e209))) (|<=i| (|*i| g_s190_204 g_s160_169) (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|+i| e209 g_s192_208)) e209)) (|<=i| e0 (|-i| (|+i| e162 (|*i| g_s190_204 g_s160_169)) (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| e209 g_s191_206)) e209))) (|<=i| e0 (|+i| e162 (|*i| g_s190_204 g_s160_169))) (|<=i| e0 (|-i| (|+i| (|+i| e145 g_s198_217) g_s199_216) (|*i| g_s190_204 g_s160_169))) (|<=i| e0 (|-i| (|-i| e218 g_s187_201) (|*i| g_s190_204 g_s160_169))) (|<=i| e0 (|-i| (|-i| e218 g_s187_201) (idiv (|*i| (|*i| g_s190_204 g_s160_169) (|-i| e209 g_s192_208)) e209))) (|<=i| (|*i| (|*i| e155 g_s190_204) g_s160_169) e143) (|<=i| (|*i| (|*i| e155 g_s190_204) g_s160_169) e218) (|<=i| e0 (|-i| (|-i| e218 g_s187_201) (|*i| (|*i| e155 g_s190_204) g_s160_169))) (mem g_s200_219 g_s144_148) (|<i| g_s200_219 g_s147_151) (mem g_s201_220 g_s144_148) (|<=i| e221 g_s200_219) (= g_s201_220 (|-i| g_s200_219 e162)) (mem g_s202_222 g_s144_148) (mem g_s203_223 g_s144_148) (= g_s202_222 e155) (= g_s203_223 e162) (mem g_s204_224 g_s143_146) (mem g_s205_225 g_s143_146) (mem g_s206_226 g_s143_146) (mem g_s207_227 g_s144_148) (mem g_s208_228 g_s144_148) (mem g_s209_229 g_s144_148) (mem g_s210_230 g_s144_148) (mem g_s211_231 g_s144_148) (mem g_s212_232 g_s144_148) (not (= g_s211_231 g_s212_232)) (mem g_s213_233 g_s144_148) (mem g_s214_234 g_s144_148) (mem g_s215_235 g_s144_148) (not (= g_s213_233 g_s214_234)) (not (= g_s213_233 g_s215_235)) (not (= g_s214_234 g_s215_235)) (mem g_s216_236 g_s142_144) (mem g_s217_237 g_s144_148) (mem g_s218_238 g_s144_148) (mem g_s219_239 g_s143_146) (|<=i| e240 g_s219_239) (|<=i| g_s219_239 e241) (|<=i| g_s175_185 g_s219_239) (mem g_s220_242 (|-->| (interval e0 e147) g_s143_146)) (mem g_s221_243 g_s142_144) (mem g_s222_244 g_s142_144) (mem g_s223_245 g_s143_146) (mem g_s224_246 g_s143_146) (mem g_s225_247 g_s142_144) (mem g_s226_248 g_s142_144) (mem g_s227_249 g_s142_144) (mem g_s228_250 g_s142_144) (mem g_s229_251 g_s142_144) (mem g_s230_252 g_s142_144) (mem g_s231_253 g_s142_144) (mem g_s232_254 g_s142_144) (mem g_s233_255 g_s142_144) (mem g_s234_256 g_s142_144) (mem g_s235_257 g_s142_144) (mem g_s236_258 g_s142_144) (mem g_s237_259 g_s142_144) (mem g_s238_260 g_s142_144) (mem g_s239_261 g_s142_144) (mem g_s240_262 g_s142_144) (mem g_s241_263 g_s142_144) (mem g_s242_264 g_s142_144) (mem g_s243_265 g_s142_144) (mem g_s244_266 g_s142_144) (mem g_s245_267 g_s142_144) (mem g_s246_268 g_s143_146) (mem g_s247_269 (|-->| (interval e0 e155) g_s144_148)) (mem g_s248_270 g_s144_148) (|<i| g_s248_270 g_s147_151) (mem g_s249_271 g_s144_148) (= g_s249_271 (|-i| g_s248_270 e162)) (mem g_s250_272 g_s144_148) (|<=i| g_s250_272 g_s248_270) (= g_s250_272 e155) (mem g_s251_273 g_s144_148) (mem g_s252_274 g_s144_148) (= g_s252_274 g_s251_273) (= g_s252_274 e155) (mem g_s253_275 (|-->| (interval e0 e161) g_s144_148)) (mem g_s254_276 (|-->| (interval e0 e161) g_s144_148)) (|<=i| (|+i| e277 (|*i| e215 g_s248_270)) g_s219_239) (|<=i| (|+i| e278 (|*i| e161 g_s195_212)) g_s219_239) (|<=i| (|*i| e215 g_s248_270) e279) (|<=i| (|*i| e161 g_s195_212) e280) (mem g_s255_281 (|-->| (interval e0 e155) g_s144_148)) (mem g_s256_282 (|-->| (set_prod g_s142_144 g_s144_148) g_s142_144)) (mem g_s257_283 (|-->| (set_prod g_s142_144 g_s144_148) g_s142_144)) (mem g_s258_284 (|-->| g_s142_144 g_s142_144)) (mem g_s259_285 (|-->| (set_prod g_s142_144 g_s142_144) g_s142_144)) (mem g_s260_286 (|-->| (set_prod g_s142_144 g_s142_144) g_s142_144)) (mem g_s261_287 (|-->| (set_prod g_s142_144 g_s142_144) g_s142_144)) (mem g_s262_288 (|-->| (set_prod g_s143_146 g_s144_148) g_s143_146)) (mem g_s263_289 (|-->| (set_prod g_s143_146 g_s144_148) g_s143_146)) (mem g_s264_290 (|-->| g_s143_146 g_s143_146)) (mem g_s265_291 (|-->| (set_prod g_s143_146 g_s143_146) g_s143_146)) (mem g_s266_292 (|-->| (set_prod g_s143_146 g_s143_146) g_s143_146)) (mem g_s267_293 (|-->| (set_prod g_s143_146 g_s143_146) g_s143_146)) (mem g_s268_294 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (mem g_s269_295 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (mem g_s270_296 (|-->| g_s144_148 g_s144_148)) (mem g_s271_297 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (mem g_s272_298 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (mem g_s273_299 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (mem g_s274_300 (|-->| (set_prod g_s142_144 g_s142_144) g_s142_144)) (mem g_s275_301 (|-->| (set_prod g_s142_144 g_s142_144) g_s142_144)) (mem g_s276_302 (|-->| (set_prod g_s142_144 g_s142_144) g_s142_144)) (mem g_s277_303 (|-->| (set_prod g_s143_146 g_s143_146) g_s143_146)) (mem g_s278_304 (|-->| (set_prod g_s143_146 g_s143_146) g_s143_146)) (mem g_s279_305 (|-->| (set_prod g_s143_146 g_s143_146) g_s143_146)) (mem g_s280_306 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (mem g_s281_307 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (mem g_s282_308 (|-->| (set_prod g_s144_148 g_s144_148) g_s144_148)) (= g_s256_282 e309) (= g_s262_288 e310) (= g_s268_294 e311) (= g_s257_283 e312) (= g_s263_289 e313) (= g_s269_295 e314) (= g_s274_300 e315) (= g_s275_301 e316) (= g_s276_302 e317) (= g_s277_303 e318) (= g_s278_304 e319) (= g_s279_305 e320) (= g_s280_306 e321) (= g_s281_307 e322) (= g_s282_308 e323) (mem g_s287_325 (|-->| (set_prod (set_prod (set_prod g_s142_144 (|-->| (interval e0 g_s288_324) g_s142_144)) g_s144_148) g_s142_144) g_s143_146)) (mem g_s289_327 (|-->| (set_prod (set_prod (set_prod g_s142_144 (|-->| (interval e0 g_s290_326) g_s142_144)) g_s144_148) g_s142_144) g_s143_146)) (mem g_s291_328 g_s142_144) (mem g_s292_329 g_s142_144) (not (= g_s291_328 g_s292_329)) (mem g_s293_330 NAT1) (mem g_s294_331 g_s142_144) (|<i| g_s294_331 (|-i| g_s145_149 g_s146_150)) (mem g_s295_332 g_s142_144) (= g_s295_332 (|+i| g_s294_331 g_s293_330)) (mem g_s296_333 g_s142_144) (mem g_s297_334 g_s142_144) (mem g_s298_335 NAT1) (mem g_s299_336 NAT1) (mem g_s293_330 NAT1) (mem g_s300_337 g_s142_144) (mem g_s301_338 g_s142_144) (mem g_s302_339 g_s142_144) (= g_s301_338 (|+i| g_s300_337 g_s298_335)) (= g_s302_339 (|+i| g_s300_337 g_s299_336)) (mem g_s303_340 g_s143_146) (mem g_s304_341 g_s142_144) (|<=i| g_s304_341 e342) (mem g_s305_343 NAT1) (mem g_s306_344 g_s142_144) (|<i| g_s306_344 (|-i| g_s145_149 g_s146_150)) (mem g_s307_345 g_s142_144) (= g_s307_345 (|+i| g_s306_344 g_s305_343)) (mem g_s308_346 g_s142_144) (|<=i| e162 g_s308_346) (mem g_s309_347 g_s142_144) (mem g_s310_348 g_s142_144) (mem g_s311_349 g_s142_144) (|<i| g_s311_349 (|-i| g_s145_149 g_s146_150)) (mem g_s312_350 g_s142_144) (mem g_s313_351 NAT1) (= g_s312_350 (|+i| g_s311_349 g_s313_351)) (mem g_s314_352 NATURAL1) (mem g_s315_353 g_s142_144) (= g_s315_353 (|+i| g_s311_349 g_s314_352)) (mem g_s316_354 g_s142_144) (mem g_s317_355 g_s142_144) (mem g_s318_356 g_s142_144) (mem g_s319_357 g_s142_144) (mem g_s320_358 g_s143_146) (|<i| (|*i| e155 g_s320_358) g_s146_150) (mem g_s321_359 NAT1) (mem g_s322_360 g_s143_146) (mem g_s323_361 g_s143_146) (= g_s323_361 (|+i| g_s322_360 g_s321_359)) (mem g_s324_362 g_s142_144) (mem g_s325_363 g_s142_144) (mem g_s326_364 g_s142_144) (mem g_s327_365 g_s142_144) (mem g_s328_366 g_s142_144) (mem g_s329_367 g_s142_144) (mem g_s330_368 g_s142_144) (mem g_s331_369 g_s142_144) (mem g_s332_370 g_s142_144) (mem g_s333_371 g_s142_144)))
(define-fun |def_seext| () Bool (and (mem g_s334_372 g_s144_148) (mem g_s335_373 g_s144_148) (mem g_s336_374 g_s144_148) (mem g_s337_375 g_s144_148) (mem g_s338_376 g_s144_148) (mem g_s339_377 (|-->| (interval e0 g_s219_239) g_s144_148)) (mem g_s340_378 g_s144_148) (mem g_s341_379 g_s144_148) (mem g_s342_380 g_s143_146) (mem g_s343_381 (|-->| (interval e0 e155) g_s144_148)) (mem g_s344_382 (|-->| (interval e0 e155) g_s144_148)) (mem g_s345_383 g_s144_148) (mem g_s346_384 g_s144_148) (mem g_s347_385 g_s144_148) (mem g_s348_386 g_s144_148) (mem g_s349_387 (|-->| (interval e0 (|-i| g_s348_386 e162)) g_s144_148)) (mem g_s350_388 g_s143_146) (mem g_s351_389 g_s143_146) (mem g_s352_390 g_s144_148) (mem g_s353_391 g_s144_148) (mem g_s354_392 g_s144_148) (mem g_s355_393 g_s144_148) (mem g_s356_394 (|-->| (interval e0 (|-i| g_s355_393 e162)) g_s144_148)) (mem g_s357_395 (|-->| (interval e0 e155) g_s144_148)) (mem g_s358_396 g_s144_148) (mem g_s359_397 (|-->| (interval e0 e164) g_s144_148)) (mem g_s360_398 (|-->| (interval e0 e155) g_s144_148)) (mem g_s361_399 g_s143_146) (mem g_s362_400 g_s143_146) (mem g_s363_401 g_s144_148) (mem g_s364_402 g_s144_148) (mem g_s365_403 g_s144_148) (mem g_s366_404 g_s144_148) (mem g_s367_405 g_s144_148) (mem g_s368_406 g_s144_148) (mem g_s369_407 g_s144_148) (mem g_s370_408 g_s144_148) (mem g_s371_409 g_s144_148) (mem g_s372_410 g_s144_148) (mem g_s373_411 g_s144_148) (mem g_s374_412 g_s144_148) (mem g_s375_413 g_s142_144) (mem g_s376_414 g_s142_144) (mem g_s377_415 g_s142_144) (mem g_s378_416 g_s142_144) (mem g_s379_417 (|-->| (interval e0 g_s219_239) g_s144_148)) (mem g_s380_418 (|-->| (interval e0 g_s219_239) g_s144_148)) (mem g_s381_419 (|-->| (interval e0 g_s219_239) g_s144_148)) (mem g_s382_420 (|-->| (interval e0 g_s219_239) g_s144_148)) (mem g_s383_421 (|-->| (interval e0 g_s219_239) g_s144_148)) (mem g_s384_422 (|-->| (interval e0 g_s219_239) g_s144_148)) (mem g_s385_423 g_s143_146) (|<=i| g_s385_423 g_s219_239) (mem g_s386_424 g_s143_146) (|<=i| g_s386_424 g_s219_239) (mem g_s387_425 g_s143_146) (|<=i| g_s387_425 g_s219_239) (mem g_s388_426 g_s143_146) (|<=i| g_s388_426 g_s219_239) (mem g_s389_427 g_s143_146) (|<=i| g_s389_427 g_s219_239) (mem g_s390_428 g_s143_146) (|<=i| g_s390_428 g_s219_239) (mem g_s391_429 g_s144_148) (mem g_s392_431 (|-->| (interval e0 e430) g_s144_148)) (mem g_s393_432 g_s144_148) (mem g_s394_433 g_s142_144) (mem g_s395_434 g_s142_144) (mem g_s396_435 g_s142_144) (mem g_s397_436 g_s142_144) (mem g_s398_437 (seq g_s143_146)) (= (size g_s398_437) g_s388_426) (mem g_s399_438 (seq g_s144_148)) (= (size g_s399_438) g_s388_426) (mem g_s400_439 (seq g_s144_148)) (= (size g_s400_439) g_s388_426) (mem g_s401_440 (|-->| (interval e0 e164) g_s144_148)) (mem g_s402_441 g_s143_146) (mem g_s403_442 (|-->| (interval e0 e161) g_s144_148)) (mem g_s404_443 g_s143_146) (mem g_s405_444 g_s143_146) (mem g_s406_445 g_s142_144) (mem g_s407_446 g_s143_146) (mem g_s408_447 g_s144_148) (mem g_s409_448 (|-->| (interval e0 e161) g_s144_148)) (mem g_s410_449 (|-->| g_s144_148 g_s142_144)) (mem g_s411_450 g_s142_144) (mem g_s412_451 g_s142_144) (mem g_s413_452 g_s144_148) (or (= g_s413_452 e162) (= g_s413_452 e155)) (mem g_s414_453 g_s142_144) (mem g_s415_454 g_s142_144) (mem g_s416_455 g_s142_144) (mem g_s417_456 g_s142_144) (mem g_s418_457 g_s142_144) (mem g_s419_458 g_s142_144) (mem g_s420_459 (|-->| (interval e0 g_s290_326) g_s144_148)) (mem g_s421_460 g_s142_144) (mem g_s422_461 g_s142_144) (mem g_s423_462 g_s142_144) (mem g_s424_463 g_s142_144) (mem g_s425_464 g_s142_144) (mem g_s426_465 (|-->| (interval e0 e155) g_s144_148)) (mem g_s427_466 (|-->| (interval e0 e155) g_s144_148)) (mem g_s428_467 g_s143_146) (mem g_s151_156 (|+->| BOOL g_s144_148)) (mem g_s151_156 (|+->| BOOL g_s143_146)) (mem g_s151_156 (|+->| BOOL g_s142_144))))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool  (mem g_s429_468 (|-->| (seq1 g_s144_148) g_s143_146)))
(define-fun |def_abs| () Bool (and (mem g_s430_469 (|-->| (seq1 g_s144_148) g_s142_144)) (mem g_s431_470 (|-->| (set_prod (seq1 g_s144_148) g_s143_146) g_s143_146))))
(define-fun |def_inv| () Bool (and (= g_s430_469 e471) (= g_s431_470 e472)))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool  (= g_s429_468 e473))
(define-fun |def_imprp| () Bool (and (mem g_s437_474 (|-->| (set_prod g_s144_148 g_s143_146) g_s143_146)) (mem g_s436_475 (|+->| (set_prod (set_prod (seq g_s144_148) NATURAL) g_s143_146) (set_prod (set_prod (seq g_s144_148) NATURAL) g_s143_146))) (= g_s436_475 e476) (mem g_s435_477 (|+->| (set_prod (set_prod (seq g_s144_148) NATURAL) g_s143_146) (set_prod (set_prod (seq g_s144_148) NATURAL) g_s143_146))) (= g_s435_477 e478)))
(define-fun |def_imext| () Bool (and (mem g_s440$1_479 (|-->| (set_prod g_s144_148 g_s142_144) g_s142_144)) (mem g_s433$1_480 (|+->| (set_prod (set_prod (seq g_s144_148) NATURAL) g_s142_144) (set_prod (set_prod (seq g_s144_148) NATURAL) g_s142_144))) (= g_s433$1_480 e481)))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_imprp|)
; PO 1 in group 0
(assert (not (mem e473 (|-->| (seq1 g_s144_148) g_s143_146))))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s440$2_482 (|-->| (set_prod g_s144_148 g_s142_144) g_s142_144)))
(define-fun lh_2 () Bool (mem g_s433$2_483 (|+->| (set_prod (set_prod (seq g_s144_148) NATURAL) g_s142_144) (set_prod (set_prod (seq g_s144_148) NATURAL) g_s142_144))))
(define-fun lh_3 () Bool (= g_s433$2_483 e484))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem e485 (|-->| (seq1 g_s144_148) g_s142_144)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem e472 (|-->| (set_prod (seq1 g_s144_148) g_s143_146) g_s143_146)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s446$1_487 g_s446_486))
(define-fun lh_1 () Bool (mem g_s447_488 (|-->| (interval e0 g_s219_239) g_s144_148)))
(define-fun lh_2 () Bool (mem g_s448_489 g_s143_146))
(define-fun lh_3 () Bool (|<=i| g_s448_489 (|+i| g_s219_239 e162)))
(define-fun lh_4 () Bool (|<=i| e162 g_s448_489))
(define-fun lh_5 () Bool (mem g_s446_486 g_s143_146))
(define-fun lh_6 () Bool (mem g_s449$1_490 g_s143_146))
(define-fun lh_7 () Bool (mem g_s450$1_491 g_s143_146))
(define-fun lh_8 () Bool (mem g_s451$1_492 g_s143_146))
(define-fun lh_9 () Bool (mem g_s452$1_493 g_s143_146))
(define-fun lh_10 () Bool (mem g_s453$1_494 g_s144_148))
(define-fun lh_11 () Bool (mem e162 g_s143_146))
(define-fun lh_12 () Bool (mem (|-i| g_s448_489 e162) g_s143_146))
(define-fun lh_13 () Bool (mem g_s451$2_495 g_s143_146))
(define-fun lh_14 () Bool (and (|>=i| g_s452$2_496 e0) (|<=i| g_s452$2_496 g_s448_489)))
(define-fun lh_15 () Bool (mem g_s453$2_497 g_s144_148))
(define-fun lh_16 () Bool (mem g_s450$2_498 g_s143_146))
(define-fun lh_17 () Bool (mem g_s452$2_496 g_s143_146))
(define-fun lh_18 () Bool (= (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) (|+i| g_s452$2_496 e162)) g_s451$2_495) (apply (iterate g_s436_475 g_s452$2_496) (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) e162) e0))))
(define-fun lh_19 () Bool (|<=i| g_s452$2_496 (|-i| g_s448_489 e162)))
(define-fun lh_20 () Bool (mem (apply g_s447_488 g_s452$2_496) g_s144_148))
(define-fun lh_21 () Bool (|<=i| (|+i| g_s452$2_496 e162) g_s146_150))
(define-fun lh_22 () Bool (mem (|+i| g_s452$2_496 e162) g_s143_146))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem e162 g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem e0 g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (and (|>=i| e0 e0) (|<=i| e0 g_s448_489)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) (|+i| e0 e162)) e0) (apply (iterate g_s436_475 e0) (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) e162) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (|<=i| e0 (|-i| (|+i| g_s448_489 e161) g_s452$2_496)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (mem (apply g_s447_488 g_s452$2_496) g_s144_148))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (|<=i| (|+i| g_s452$2_496 e162) g_s146_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (mem (apply g_s437_474 (mapplet (apply g_s447_488 g_s452$2_496) g_s451$2_495)) g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (and (|>=i| (|+i| g_s452$2_496 e162) e0) (|<=i| (|+i| g_s452$2_496 e162) g_s448_489)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (= (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) (|+i| (|+i| g_s452$2_496 e162) e162)) (apply g_s437_474 (mapplet (apply g_s447_488 g_s452$2_496) g_s451$2_495))) (apply (iterate g_s436_475 (|+i| g_s452$2_496 e162)) (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) e162) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (|<i| (|-i| (|+i| g_s448_489 e161) (|+i| g_s452$2_496 e162)) (|-i| (|+i| g_s448_489 e161) g_s452$2_496)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s446$1_487 g_s446_486))
(define-fun lh_1 () Bool (mem g_s447_488 (|-->| (interval e0 g_s201_220) g_s144_148)))
(define-fun lh_2 () Bool (mem g_s461_500 g_s144_148))
(define-fun lh_3 () Bool (mem g_s462_501 g_s144_148))
(define-fun lh_4 () Bool (|<=i| g_s462_501 g_s200_219))
(define-fun lh_5 () Bool (|<i| g_s461_500 g_s462_501))
(define-fun lh_6 () Bool (|<=i| e162 g_s462_501))
(define-fun lh_7 () Bool (mem g_s446_486 g_s143_146))
(define-fun lh_8 () Bool (mem g_s449$1_490 g_s144_148))
(define-fun lh_9 () Bool (mem g_s450$1_491 g_s143_146))
(define-fun lh_10 () Bool (mem g_s451$1_492 g_s143_146))
(define-fun lh_11 () Bool (mem g_s452$1_493 g_s144_148))
(define-fun lh_12 () Bool (mem g_s453$1_494 g_s144_148))
(define-fun lh_13 () Bool (mem e162 g_s144_148))
(define-fun lh_14 () Bool (mem (|-i| g_s462_501 e162) g_s144_148))
(define-fun lh_15 () Bool (mem g_s451$2_495 g_s143_146))
(define-fun lh_16 () Bool (and (|>=i| g_s452$2_496 g_s461_500) (|<=i| g_s452$2_496 g_s462_501)))
(define-fun lh_17 () Bool (mem g_s453$2_497 g_s144_148))
(define-fun lh_18 () Bool (mem g_s450$2_498 g_s143_146))
(define-fun lh_19 () Bool (mem g_s452$2_496 g_s144_148))
(define-fun lh_20 () Bool (= (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) (|+i| (|-i| g_s452$2_496 g_s461_500) e162)) g_s451$2_495) (apply (iterate g_s436_475 (|-i| g_s452$2_496 g_s461_500)) (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) e162) e0))))
(define-fun lh_21 () Bool (|<=i| g_s452$2_496 (|-i| g_s462_501 e162)))
(define-fun lh_22 () Bool (mem (apply g_s447_488 g_s452$2_496) g_s144_148))
(define-fun lh_23 () Bool (|<=i| (|+i| g_s452$2_496 e162) g_s147_151))
(define-fun lh_24 () Bool (mem (|+i| g_s452$2_496 e162) g_s144_148))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem e162 g_s144_148))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (mem e0 g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (and (|>=i| g_s461_500 g_s461_500) (|<=i| g_s461_500 g_s462_501)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (= (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) (|+i| (|-i| g_s461_500 g_s461_500) e162)) e0) (apply (iterate g_s436_475 (|-i| g_s461_500 g_s461_500)) (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) e162) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (|<=i| e0 (|-i| (|+i| g_s462_501 e161) g_s452$2_496)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21) (mem (apply g_s447_488 g_s452$2_496) g_s144_148))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (|<=i| (|+i| g_s452$2_496 e162) g_s147_151))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24) (mem (apply g_s437_474 (mapplet (apply g_s447_488 g_s452$2_496) g_s451$2_495)) g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24) (and (|>=i| (|+i| g_s452$2_496 e162) g_s461_500) (|<=i| (|+i| g_s452$2_496 e162) g_s462_501)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24) (= (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) (|+i| (|-i| (|+i| g_s452$2_496 e162) g_s461_500) e162)) (apply g_s437_474 (mapplet (apply g_s447_488 g_s452$2_496) g_s451$2_495))) (apply (iterate g_s436_475 (|-i| (|+i| g_s452$2_496 e162) g_s461_500)) (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) e162) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24) (|<i| (|-i| (|+i| g_s462_501 e161) (|+i| g_s452$2_496 e162)) (|-i| (|+i| g_s462_501 e161) g_s452$2_496)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s446$1_487 g_s446_486))
(define-fun lh_1 () Bool (mem g_s446_486 g_s142_144))
(define-fun lh_2 () Bool (mem g_s464_502 (|-->| (interval e0 g_s219_239) g_s144_148)))
(define-fun lh_3 () Bool (mem g_s461_500 g_s143_146))
(define-fun lh_4 () Bool (mem g_s448_489 g_s143_146))
(define-fun lh_5 () Bool (|<i| g_s448_489 g_s146_150))
(define-fun lh_6 () Bool (|<=i| (|+i| g_s461_500 g_s448_489) (|+i| g_s219_239 e162)))
(define-fun lh_7 () Bool (|<=i| e162 g_s448_489))
(define-fun lh_8 () Bool (mem g_s465$1_503 g_s143_146))
(define-fun lh_9 () Bool (mem g_s449$1_490 g_s143_146))
(define-fun lh_10 () Bool (mem g_s451$1_492 g_s142_144))
(define-fun lh_11 () Bool (mem g_s452$1_493 g_s143_146))
(define-fun lh_12 () Bool (mem g_s466$1_504 g_s142_144))
(define-fun lh_13 () Bool (mem g_s453$1_494 g_s144_148))
(define-fun lh_14 () Bool (mem e162 g_s143_146))
(define-fun lh_15 () Bool (mem (|-i| g_s448_489 e162) g_s143_146))
(define-fun lh_16 () Bool (mem g_s451$2_495 g_s142_144))
(define-fun lh_17 () Bool (and (|>=i| g_s452$2_496 e0) (|<=i| g_s452$2_496 g_s448_489)))
(define-fun lh_18 () Bool (mem g_s453$2_497 g_s144_148))
(define-fun lh_19 () Bool (mem g_s466$2_505 g_s142_144))
(define-fun lh_20 () Bool (mem g_s452$2_496 g_s143_146))
(define-fun lh_21 () Bool (mem g_s465$2_506 g_s143_146))
(define-fun lh_22 () Bool (= (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) (|+i| g_s452$2_496 e162)) g_s451$2_495) (apply (iterate g_s433$1_480 g_s452$2_496) (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) e162) e0))))
(define-fun lh_23 () Bool (|<=i| g_s452$2_496 (|-i| g_s448_489 e162)))
(define-fun lh_24 () Bool (|<=i| (|+i| g_s461_500 g_s452$2_496) g_s146_150))
(define-fun lh_25 () Bool (mem (|+i| g_s461_500 g_s452$2_496) g_s143_146))
(define-fun lh_26 () Bool (mem (apply g_s464_502 (|+i| g_s461_500 g_s452$2_496)) g_s144_148))
(define-fun lh_27 () Bool (|<=i| (|+i| g_s452$2_496 e162) g_s146_150))
(define-fun lh_28 () Bool (mem (|+i| g_s452$2_496 e162) g_s143_146))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem e162 g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem e0 g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem e0 g_s142_144))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (and (|>=i| e0 e0) (|<=i| e0 g_s448_489)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (= (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) (|+i| e0 e162)) e0) (apply (iterate g_s433$1_480 e0) (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) e162) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (|<=i| e0 (|-i| (|+i| g_s448_489 e161) g_s452$2_496)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23) (|<=i| (|+i| g_s461_500 g_s452$2_496) g_s146_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25) (mem (apply g_s464_502 (|+i| g_s461_500 g_s452$2_496)) g_s144_148))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26) (|<=i| (|+i| g_s452$2_496 e162) g_s146_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28) (mem (apply g_s440$1_479 (mapplet (apply g_s464_502 (|+i| g_s461_500 g_s452$2_496)) g_s451$2_495)) g_s142_144))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28) (and (|>=i| (|+i| g_s452$2_496 e162) e0) (|<=i| (|+i| g_s452$2_496 e162) g_s448_489)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28) (= (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) (|+i| (|+i| g_s452$2_496 e162) e162)) (apply g_s440$1_479 (mapplet (apply g_s464_502 (|+i| g_s461_500 g_s452$2_496)) g_s451$2_495))) (apply (iterate g_s433$1_480 (|+i| g_s452$2_496 e162)) (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) e162) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28) (|<i| (|-i| (|+i| g_s448_489 e161) (|+i| g_s452$2_496 e162)) (|-i| (|+i| g_s448_489 e161) g_s452$2_496)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s446$1_487 g_s446_486))
(define-fun lh_1 () Bool (mem g_s446_486 g_s143_146))
(define-fun lh_2 () Bool (mem g_s464_502 (|-->| (interval e0 g_s219_239) g_s144_148)))
(define-fun lh_3 () Bool (mem g_s448_489 g_s143_146))
(define-fun lh_4 () Bool (|<=i| g_s448_489 (|+i| g_s219_239 e162)))
(define-fun lh_5 () Bool (mem g_s468_507 g_s143_146))
(define-fun lh_6 () Bool (|<=i| e162 g_s448_489))
(define-fun lh_7 () Bool (mem g_s449$1_490 g_s143_146))
(define-fun lh_8 () Bool (mem g_s452$1_493 g_s143_146))
(define-fun lh_9 () Bool (mem g_s453$1_494 g_s144_148))
(define-fun lh_10 () Bool (mem e162 g_s143_146))
(define-fun lh_11 () Bool (mem (|-i| g_s448_489 e162) g_s143_146))
(define-fun lh_12 () Bool (mem g_s453$2_497 g_s144_148))
(define-fun lh_13 () Bool (and (|>=i| g_s452$2_496 e0) (|<=i| g_s452$2_496 g_s448_489)))
(define-fun lh_14 () Bool (mem g_s446$2_508 g_s143_146))
(define-fun lh_15 () Bool (= (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) (|+i| g_s452$2_496 e162)) g_s446$2_508) (apply (iterate g_s435_477 g_s452$2_496) (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) e162) e0))))
(define-fun lh_16 () Bool (|<=i| g_s452$2_496 (|-i| g_s448_489 e162)))
(define-fun lh_17 () Bool (mem g_s452$2_496 g_s143_146))
(define-fun lh_18 () Bool (|<=i| (|+i| g_s452$2_496 e162) g_s146_150))
(define-fun lh_19 () Bool (mem (|+i| g_s452$2_496 e162) g_s143_146))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem e162 g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem e0 g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (and (|>=i| e0 e0) (|<=i| e0 g_s448_489)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (= (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) (|+i| e0 e162)) e0) (apply (iterate g_s435_477 e0) (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) e162) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (|<=i| e0 (|-i| (|+i| g_s448_489 e161) g_s452$2_496)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s452$2_496 g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (|<=i| (|+i| g_s452$2_496 e162) g_s146_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (mem (apply g_s277_303 (mapplet (apply g_s464_502 g_s452$2_496) g_s446$2_508)) g_s143_146))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (mem (apply g_s464_502 g_s452$2_496) g_s144_148))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (and (|>=i| (|+i| g_s452$2_496 e162) e0) (|<=i| (|+i| g_s452$2_496 e162) g_s448_489)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (= (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) (|+i| (|+i| g_s452$2_496 e162) e162)) (apply g_s277_303 (mapplet (apply g_s464_502 g_s452$2_496) g_s446$2_508))) (apply (iterate g_s435_477 (|+i| g_s452$2_496 e162)) (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) e162) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (|<i| (|-i| (|+i| g_s448_489 e161) (|+i| g_s452$2_496 e162)) (|-i| (|+i| g_s448_489 e161) g_s452$2_496)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imprp|)
(assert |def_sets|)
(define-fun lh_1 () Bool (mem g_s432_509 (seq1 g_s144_148)))
; PO 1 in group 6
(push 1)
(assert (not (=> lh_1 (mem g_s432_509 (seq (ran g_s432_509))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> lh_1 (mem (size g_s432_509) NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> lh_1 (mem (mapplet (mapplet g_s432_509 e162) e0) (dom (iterate g_s436_475 (size g_s432_509)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 6
(push 1)
(assert (not (=> lh_1 (mem (apply (iterate g_s436_475 (size g_s432_509)) (mapplet (mapplet g_s432_509 e162) e0)) (dom (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 6
(push 1)
(assert (not (=> lh_1 (mem (iterate g_s436_475 (size g_s432_509)) (|+->| (dom (iterate g_s436_475 (size g_s432_509))) (ran (iterate g_s436_475 (size g_s432_509))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 6
(push 1)
(assert (not (=> lh_1 (mem (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146) (|+->| (dom (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146)) (ran (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(define-fun lh_1 () Bool (mem g_s432_509 (seq1 g_s144_148)))
(define-fun lh_2 () Bool (= g_s430_469 e471))
(define-fun lh_3 () Bool (mem g_s434_510 g_s143_146))
; PO 1 in group 7
(push 1)
(assert (not (=> lh_1 (mem g_s432_509 (seq (ran g_s432_509))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> lh_1 (mem (size g_s432_509) NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 7
(push 1)
(assert (not (=> lh_1 (mem (mapplet (mapplet g_s432_509 e162) e0) (dom (iterate g_s433$1_480 (size g_s432_509)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 7
(push 1)
(assert (not (=> lh_1 (mem (apply (iterate g_s433$1_480 (size g_s432_509)) (mapplet (mapplet g_s432_509 e162) e0)) (dom (prj2 (set_prod (seq g_s144_148) NATURAL) g_s142_144))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 7
(push 1)
(assert (not (=> lh_1 (mem (iterate g_s433$1_480 (size g_s432_509)) (|+->| (dom (iterate g_s433$1_480 (size g_s432_509))) (ran (iterate g_s433$1_480 (size g_s432_509))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 7
(push 1)
(assert (not (=> lh_1 (mem (prj2 (set_prod (seq g_s144_148) NATURAL) g_s142_144) (|+->| (dom (prj2 (set_prod (seq g_s144_148) NATURAL) g_s142_144)) (ran (prj2 (set_prod (seq g_s144_148) NATURAL) g_s142_144)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s266_292 (|+->| (dom g_s266_292) (ran g_s266_292))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s432_509 (seq (ran g_s432_509))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (size g_s432_509) NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (mapplet (mapplet g_s432_509 e162) e0) (dom (iterate g_s435_477 (size g_s432_509)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (mapplet (apply (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146) (apply (iterate g_s435_477 (size g_s432_509)) (mapplet (mapplet g_s432_509 e162) e0))) g_s434_510) (dom g_s266_292)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (apply (iterate g_s435_477 (size g_s432_509)) (mapplet (mapplet g_s432_509 e162) e0)) (dom (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (iterate g_s435_477 (size g_s432_509)) (|+->| (dom (iterate g_s435_477 (size g_s432_509))) (ran (iterate g_s435_477 (size g_s432_509))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146) (|+->| (dom (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146)) (ran (prj2 (set_prod (seq g_s144_148) NATURAL) g_s143_146)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s447_488 (|-->| (interval e0 g_s219_239) g_s144_148)))
(assert (mem g_s448_489 g_s143_146))
(assert (|<=i| g_s448_489 (|+i| g_s219_239 e162)))
(assert (|<=i| e162 g_s448_489))
(assert (mem g_s446_486 g_s143_146))
(define-fun lh_1 () Bool (mem g_s449$1_490 g_s143_146))
(define-fun lh_2 () Bool (mem g_s450$1_491 g_s143_146))
(define-fun lh_3 () Bool (mem g_s451$1_492 g_s143_146))
(define-fun lh_4 () Bool (mem g_s452$1_493 g_s143_146))
(define-fun lh_5 () Bool (mem g_s453$1_494 g_s144_148))
(define-fun lh_6 () Bool (mem (|-i| g_s448_489 e162) g_s143_146))
(define-fun lh_7 () Bool (mem g_s451$2_495 g_s143_146))
(define-fun lh_8 () Bool (and (|>=i| g_s452$2_496 e0) (|<=i| g_s452$2_496 g_s448_489)))
(define-fun lh_9 () Bool (mem g_s453$2_497 g_s144_148))
(define-fun lh_10 () Bool (mem g_s450$2_498 g_s143_146))
(define-fun lh_11 () Bool (mem g_s452$2_496 g_s143_146))
(define-fun lh_12 () Bool (= (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) (|+i| g_s452$2_496 e162)) g_s451$2_495) (apply (iterate g_s436_475 g_s452$2_496) (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) e162) e0))))
(define-fun lh_13 () Bool (|<=i| g_s452$2_496 (|-i| g_s448_489 e162)))
; PO 1 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s452$2_496 NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (and (|>=i| g_s448_489 e0) (|<=i| g_s448_489 (size (composition g_s454_499 g_s447_488)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem (mapplet (mapplet (restriction_head (composition g_s454_499 g_s447_488) g_s448_489) e162) e0) (dom (iterate g_s436_475 g_s452$2_496))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem (iterate g_s436_475 g_s452$2_496) (|+->| (dom (iterate g_s436_475 g_s452$2_496)) (ran (iterate g_s436_475 g_s452$2_496)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s452$2_496 (dom g_s447_488)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s447_488 (|+->| (dom g_s447_488) (ran g_s447_488))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s447_488 (|-->| (interval e0 g_s201_220) g_s144_148)))
(assert (mem g_s461_500 g_s144_148))
(assert (mem g_s462_501 g_s144_148))
(assert (|<=i| g_s462_501 g_s200_219))
(assert (|<i| g_s461_500 g_s462_501))
(assert (|<=i| e162 g_s462_501))
(assert (mem g_s446_486 g_s143_146))
(define-fun lh_1 () Bool (mem g_s449$1_490 g_s144_148))
(define-fun lh_2 () Bool (mem g_s450$1_491 g_s143_146))
(define-fun lh_3 () Bool (mem g_s451$1_492 g_s143_146))
(define-fun lh_4 () Bool (mem g_s452$1_493 g_s144_148))
(define-fun lh_5 () Bool (mem g_s453$1_494 g_s144_148))
(define-fun lh_6 () Bool (mem (|-i| g_s462_501 e162) g_s144_148))
(define-fun lh_7 () Bool (mem g_s451$2_495 g_s143_146))
(define-fun lh_8 () Bool (and (|>=i| g_s452$2_496 g_s461_500) (|<=i| g_s452$2_496 g_s462_501)))
(define-fun lh_9 () Bool (mem g_s453$2_497 g_s144_148))
(define-fun lh_10 () Bool (mem g_s450$2_498 g_s143_146))
(define-fun lh_11 () Bool (mem g_s452$2_496 g_s144_148))
(define-fun lh_12 () Bool (= (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) (|+i| (|-i| g_s452$2_496 g_s461_500) e162)) g_s451$2_495) (apply (iterate g_s436_475 (|-i| g_s452$2_496 g_s461_500)) (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) e162) e0))))
(define-fun lh_13 () Bool (|<=i| g_s452$2_496 (|-i| g_s462_501 e162)))
; PO 1 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (and (|>=i| g_s462_501 e0) (|<=i| g_s462_501 (size (composition g_s454_499 g_s447_488)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (and (|>=i| g_s461_500 e0) (|<=i| g_s461_500 (size (restriction_head (composition g_s454_499 g_s447_488) g_s462_501)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem (mapplet (mapplet (restriction_tail (restriction_head (composition g_s454_499 g_s447_488) g_s462_501) g_s461_500) e162) e0) (dom (iterate g_s436_475 (|-i| g_s452$2_496 g_s461_500)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem (|-i| g_s452$2_496 g_s461_500) NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem (iterate g_s436_475 (|-i| g_s452$2_496 g_s461_500)) (|+->| (dom (iterate g_s436_475 (|-i| g_s452$2_496 g_s461_500))) (ran (iterate g_s436_475 (|-i| g_s452$2_496 g_s461_500))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s452$2_496 (dom g_s447_488)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s447_488 (|+->| (dom g_s447_488) (ran g_s447_488))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s446_486 g_s142_144))
(assert (mem g_s464_502 (|-->| (interval e0 g_s219_239) g_s144_148)))
(assert (mem g_s461_500 g_s143_146))
(assert (mem g_s448_489 g_s143_146))
(assert (|<i| g_s448_489 g_s146_150))
(assert (|<=i| (|+i| g_s461_500 g_s448_489) (|+i| g_s219_239 e162)))
(assert (|<=i| e162 g_s448_489))
(define-fun lh_1 () Bool (mem g_s465$1_503 g_s143_146))
(define-fun lh_2 () Bool (mem g_s449$1_490 g_s143_146))
(define-fun lh_3 () Bool (mem g_s451$1_492 g_s142_144))
(define-fun lh_4 () Bool (mem g_s452$1_493 g_s143_146))
(define-fun lh_5 () Bool (mem g_s466$1_504 g_s142_144))
(define-fun lh_6 () Bool (mem g_s453$1_494 g_s144_148))
(define-fun lh_7 () Bool (mem (|-i| g_s448_489 e162) g_s143_146))
(define-fun lh_8 () Bool (mem g_s451$2_495 g_s142_144))
(define-fun lh_9 () Bool (and (|>=i| g_s452$2_496 e0) (|<=i| g_s452$2_496 g_s448_489)))
(define-fun lh_10 () Bool (mem g_s453$2_497 g_s144_148))
(define-fun lh_11 () Bool (mem g_s466$2_505 g_s142_144))
(define-fun lh_12 () Bool (mem g_s452$2_496 g_s143_146))
(define-fun lh_13 () Bool (mem g_s465$2_506 g_s143_146))
(define-fun lh_14 () Bool (= (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) (|+i| g_s452$2_496 e162)) g_s451$2_495) (apply (iterate g_s433$1_480 g_s452$2_496) (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) e162) e0))))
(define-fun lh_15 () Bool (|<=i| g_s452$2_496 (|-i| g_s448_489 e162)))
(define-fun lh_16 () Bool (mem (|+i| g_s461_500 g_s452$2_496) g_s143_146))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s452$2_496 NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (and (|>=i| g_s461_500 e0) (|<=i| g_s461_500 (size (composition g_s454_499 g_s464_502)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (and (|>=i| g_s448_489 e0) (|<=i| g_s448_489 (size (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem (mapplet (mapplet (restriction_head (restriction_tail (composition g_s454_499 g_s464_502) g_s461_500) g_s448_489) e162) e0) (dom (iterate g_s433$1_480 g_s452$2_496))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem (iterate g_s433$1_480 g_s452$2_496) (|+->| (dom (iterate g_s433$1_480 g_s452$2_496)) (ran (iterate g_s433$1_480 g_s452$2_496)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s464_502 (|+->| (dom g_s464_502) (ran g_s464_502))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem (|+i| g_s461_500 g_s452$2_496) (dom g_s464_502)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s446_486 g_s143_146))
(assert (mem g_s464_502 (|-->| (interval e0 g_s219_239) g_s144_148)))
(assert (mem g_s448_489 g_s143_146))
(assert (|<=i| g_s448_489 (|+i| g_s219_239 e162)))
(assert (mem g_s468_507 g_s143_146))
(assert (|<=i| e162 g_s448_489))
(define-fun lh_1 () Bool (mem g_s449$1_490 g_s143_146))
(define-fun lh_2 () Bool (mem g_s452$1_493 g_s143_146))
(define-fun lh_3 () Bool (mem g_s453$1_494 g_s144_148))
(define-fun lh_4 () Bool (mem (|-i| g_s448_489 e162) g_s143_146))
(define-fun lh_5 () Bool (mem g_s453$2_497 g_s144_148))
(define-fun lh_6 () Bool (and (|>=i| g_s452$2_496 e0) (|<=i| g_s452$2_496 g_s448_489)))
(define-fun lh_7 () Bool (mem g_s446$1_487 g_s143_146))
(define-fun lh_8 () Bool (= (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) (|+i| g_s452$2_496 e162)) g_s446$1_487) (apply (iterate g_s435_477 g_s452$2_496) (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) e162) e0))))
(define-fun lh_9 () Bool (|<=i| g_s452$2_496 (|-i| g_s448_489 e162)))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s452$2_496 NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (and (|>=i| g_s448_489 e0) (|<=i| g_s448_489 (size (composition g_s454_499 g_s464_502)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (mapplet (mapplet (restriction_head (composition g_s454_499 g_s464_502) g_s448_489) e162) e0) (dom (iterate g_s435_477 g_s452$2_496))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (iterate g_s435_477 g_s452$2_496) (|+->| (dom (iterate g_s435_477 g_s452$2_496)) (ran (iterate g_s435_477 g_s452$2_496)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem g_s277_303 (|+->| (dom g_s277_303) (ran g_s277_303))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem g_s452$2_496 (dom g_s464_502)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem g_s464_502 (|+->| (dom g_s464_502) (ran g_s464_502))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem (mapplet (apply g_s464_502 g_s452$2_496) g_s446$1_487) (dom g_s277_303)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)