(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e200 () U)
(declare-fun e134 () U)
(declare-fun e0 () U)
(declare-fun e142 () U)
(declare-fun e147 () U)
(declare-fun e141 () U)
(declare-fun e171 () U)
(declare-fun e144 () U)
(declare-fun e280 () U)
(declare-fun e281 () U)
(declare-fun e151 () U)
(declare-fun e196 () U)
(declare-fun e145 () U)
(declare-fun e282 () U)
(declare-fun e283 () U)
(declare-fun e284 () U)
(declare-fun e285 () U)
(declare-fun e286 () U)
(declare-fun e287 () U)
(declare-fun e288 () U)
(declare-fun e170 () U)
(declare-fun e289 () U)
(declare-fun e262 () U)
(declare-fun e290 () U)
(declare-fun e291 () U)
(declare-fun e292 () U)
(declare-fun e293 () U)
(declare-fun e295 () U)
(declare-fun e263 () U)
(declare-fun e172 () U)
(declare-fun e188 () U)
(declare-fun e190 () U)
(declare-fun e186 () U)
(declare-fun e260 () U)
(declare-fun e204 () U)
(declare-fun e261 () U)
(declare-fun e223 () U)
(declare-fun e168 () U)
(declare-fun e138 () U)
(declare-fun e224 () U)
(declare-fun e136 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_135 () U)
(declare-fun g_s134_137 () U)
(declare-fun g_s135_139 () U)
(declare-fun g_s136_140 () U)
(declare-fun g_s137_143 () U)
(declare-fun g_s138_146 () U)
(declare-fun g_s139_148 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_149 () U)
(declare-fun g_s141_150 () U)
(declare-fun g_s142_152 () U)
(declare-fun g_s143_153 () U)
(declare-fun g_s144_154 () U)
(declare-fun g_s145_155 () U)
(declare-fun g_s146_156 () U)
(declare-fun g_s147_157 () U)
(declare-fun g_s148_158 () U)
(declare-fun g_s149_159 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_160 () U)
(declare-fun g_s151_161 () U)
(declare-fun g_s152_162 () U)
(declare-fun g_s153_163 () U)
(declare-fun g_s154_164 () U)
(declare-fun g_s155_165 () U)
(declare-fun g_s156_166 () U)
(declare-fun g_s157_167 () U)
(declare-fun g_s158_169 () U)
(declare-fun g_s159_173 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_174 () U)
(declare-fun g_s161_175 () U)
(declare-fun g_s162_176 () U)
(declare-fun g_s163_177 () U)
(declare-fun g_s164_178 () U)
(declare-fun g_s165_179 () U)
(declare-fun g_s166_180 () U)
(declare-fun g_s167_181 () U)
(declare-fun g_s168_182 () U)
(declare-fun g_s169_183 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_184 () U)
(declare-fun g_s171_185 () U)
(declare-fun g_s172_187 () U)
(declare-fun g_s173_189 () U)
(declare-fun g_s174_191 () U)
(declare-fun g_s175_192 () U)
(declare-fun g_s176_193 () U)
(declare-fun g_s177_194 () U)
(declare-fun g_s178_195 () U)
(declare-fun g_s179_198 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_197 () U)
(declare-fun g_s181_199 () U)
(declare-fun g_s182_201 () U)
(declare-fun g_s183_202 () U)
(declare-fun g_s184_203 () U)
(declare-fun g_s185_205 () U)
(declare-fun g_s186_206 () U)
(declare-fun g_s187_207 () U)
(declare-fun g_s188_208 () U)
(declare-fun g_s189_209 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_210 () U)
(declare-fun g_s191_211 () U)
(declare-fun g_s192_212 () U)
(declare-fun g_s193_213 () U)
(declare-fun g_s194_214 () U)
(declare-fun g_s195_215 () U)
(declare-fun g_s196_216 () U)
(declare-fun g_s197_217 () U)
(declare-fun g_s198_218 () U)
(declare-fun g_s199_219 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_220 () U)
(declare-fun g_s201_221 () U)
(declare-fun g_s202_222 () U)
(declare-fun g_s203_225 () U)
(declare-fun g_s204_226 () U)
(declare-fun g_s205_227 () U)
(declare-fun g_s206_228 () U)
(declare-fun g_s207_229 () U)
(declare-fun g_s208_230 () U)
(declare-fun g_s209_231 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_232 () U)
(declare-fun g_s211_233 () U)
(declare-fun g_s212_234 () U)
(declare-fun g_s213_235 () U)
(declare-fun g_s214_236 () U)
(declare-fun g_s215_237 () U)
(declare-fun g_s216_238 () U)
(declare-fun g_s217_239 () U)
(declare-fun g_s218_240 () U)
(declare-fun g_s219_241 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_242 () U)
(declare-fun g_s221_243 () U)
(declare-fun g_s222_244 () U)
(declare-fun g_s223_245 () U)
(declare-fun g_s224_246 () U)
(declare-fun g_s225_247 () U)
(declare-fun g_s226_248 () U)
(declare-fun g_s227_249 () U)
(declare-fun g_s228_250 () U)
(declare-fun g_s229_251 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_252 () U)
(declare-fun g_s231_253 () U)
(declare-fun g_s232_254 () U)
(declare-fun g_s233_255 () U)
(declare-fun g_s234_256 () U)
(declare-fun g_s235_257 () U)
(declare-fun g_s236_258 () U)
(declare-fun g_s237_259 () U)
(declare-fun g_s238_264 () U)
(declare-fun g_s239_265 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_266 () U)
(declare-fun g_s241_267 () U)
(declare-fun g_s242_268 () U)
(declare-fun g_s243_269 () U)
(declare-fun g_s244_270 () U)
(declare-fun g_s245_271 () U)
(declare-fun g_s246_272 () U)
(declare-fun g_s247_273 () U)
(declare-fun g_s248_274 () U)
(declare-fun g_s249_275 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_276 () U)
(declare-fun g_s251_277 () U)
(declare-fun g_s255_278 () U)
(declare-fun g_s257_279 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s319_294 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 (mapplet g_s10_11 (mapplet g_s9_10 (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 (mapplet g_s4_5 (mapplet g_s3_4 (mapplet g_s2_3 g_s1_2))))))))))))))))))))))))))))))))))))))))))))))))) (= g_s49_50 (SET (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 (mapplet g_s53_54 (mapplet g_s52_53 (mapplet g_s51_52 g_s50_51))))))))) (= g_s58_59 (SET (mapplet g_s85_86 (mapplet g_s84_85 (mapplet g_s83_84 (mapplet g_s82_83 (mapplet g_s81_82 (mapplet g_s80_81 (mapplet g_s79_80 (mapplet g_s78_79 (mapplet g_s77_78 (mapplet g_s76_77 (mapplet g_s75_76 (mapplet g_s74_75 (mapplet g_s73_74 (mapplet g_s72_73 (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 (mapplet g_s67_68 (mapplet g_s66_67 (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 (mapplet g_s62_63 (mapplet g_s61_62 (mapplet g_s60_61 g_s59_60)))))))))))))))))))))))))))) (= g_s86_87 (SET (mapplet g_s88_89 g_s87_88))) (= g_s89_90 (SET (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 (mapplet g_s95_96 (mapplet g_s94_95 (mapplet g_s93_94 (mapplet g_s92_93 (mapplet g_s91_92 g_s90_91)))))))))) (= g_s99_100 (SET (mapplet g_s102_103 (mapplet g_s101_102 g_s100_101)))) (= g_s103_104 (SET (mapplet g_s105_106 g_s104_105))) (= g_s106_107 (SET (mapplet g_s113_114 (mapplet g_s112_113 (mapplet g_s111_112 (mapplet g_s110_111 (mapplet g_s109_110 (mapplet g_s108_109 g_s107_108)))))))) (= g_s114_115 (SET (mapplet g_s123_124 (mapplet g_s122_123 (mapplet g_s121_122 (mapplet g_s120_121 (mapplet g_s119_120 (mapplet g_s118_119 (mapplet g_s117_118 (mapplet g_s116_117 g_s115_116)))))))))) (= g_s124_125 (SET (mapplet g_s128_129 (mapplet g_s127_128 (mapplet g_s126_127 g_s125_126))))) (= g_s129_130 (SET (mapplet g_s132_133 (mapplet g_s131_132 g_s130_131)))) (= g_s133_135 (interval e0 e134)) (= g_s134_137 (interval e0 e136)) (= g_s135_139 (interval e0 e138)) (mem g_s136_140 (|-->| (seq1 g_s135_139) g_s134_137)) (= g_s137_143 (|-->| (interval e142 e141) g_s135_139)) (mem g_s138_146 (|-->| (set_prod (interval e0 e145) (interval e0 e144)) g_s135_139)) (mem g_s139_148 (|-->| (set_prod (interval e0 e145) (interval e0 e147)) g_s135_139)) (mem g_s140_149 (|-->| (set_prod (interval e0 e145) (interval e0 e147)) g_s135_139)) (mem g_s141_150 g_s135_139) (|<=i| e151 g_s141_150) (mem g_s142_152 (|-->| (interval e0 e145) g_s134_137)) (mem g_s143_153 (|-->| (interval e0 e145) g_s134_137)) (mem g_s144_154 g_s133_135) (mem g_s145_155 g_s135_139) (mem g_s146_156 g_s135_139) (mem g_s147_157 g_s135_139) (mem g_s148_158 g_s135_139) (mem g_s149_159 g_s135_139) (mem g_s150_160 g_s135_139) (mem g_s151_161 g_s135_139) (mem g_s152_162 g_s135_139) (mem g_s153_163 g_s135_139) (mem g_s154_164 g_s134_137) (not (= g_s153_163 g_s149_159)) (mem g_s155_165 g_s135_139) (mem g_s156_166 g_s135_139) (mem g_s157_167 g_s135_139) (|<=i| g_s157_167 e168) (mem g_s158_169 g_s135_139) (|<=i| (|+i| g_s157_167 e170) g_s156_166) (|<=i| (|+i| g_s158_169 e171) g_s156_166) (|<=i| e172 g_s156_166) (mem g_s159_173 g_s137_143) (= g_s159_173 (set_prod (interval e142 e141) (SET e138))) (mem g_s160_174 g_s135_139) (mem g_s161_175 g_s135_139) (mem g_s162_176 g_s135_139) (mem g_s163_177 g_s135_139) (mem g_s164_178 g_s135_139) (mem g_s165_179 g_s135_139) (mem g_s166_180 g_s135_139) (mem g_s167_181 g_s135_139) (mem g_s168_182 g_s135_139) (mem g_s169_183 g_s133_135) (mem g_s170_184 (|-->| (interval e0 e138) g_s134_137)) (mem g_s171_185 g_s135_139) (|<=i| g_s171_185 e186) (mem g_s172_187 g_s135_139) (|<i| g_s172_187 e188) (mem g_s173_189 g_s135_139) (|<i| g_s173_189 e188) (|<i| (|+i| g_s172_187 g_s173_189) e190) (mem g_s174_191 g_s134_137) (mem g_s175_192 g_s135_139) (mem g_s176_193 g_s135_139) (mem g_s177_194 g_s135_139) (mem g_s178_195 g_s135_139) (|<=i| e196 g_s176_193) (|<=i| g_s176_193 e186) (|<=i| (|+i| g_s179_198 g_s180_197) (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| e190 g_s173_189)) e190)) (|<=i| e0 (|-i| (|+i| e136 g_s180_197) (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| e190 g_s173_189)) e190))) (|<=i| (|+i| g_s179_198 g_s180_197) (|*i| g_s171_185 g_s141_150)) (|<=i| (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| e190 g_s172_187)) e190) (|+i| (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|+i| e190 g_s173_189)) e190) e142)) (|<=i| (|*i| g_s141_150 (|-i| e190 g_s173_189)) g_s181_199) (|<=i| (idiv (|*i| g_s171_185 (|*i| g_s141_150 (|-i| e190 g_s173_189))) e190) e136) (|<=i| g_s179_198 (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| e190 g_s173_189)) e190)) (|<=i| (|*i| g_s171_185 g_s141_150) e136) (|<=i| e0 (|-i| (|+i| e142 (|*i| g_s171_185 g_s141_150)) (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| (|-i| e190 g_s173_189) g_s172_187)) e190))) (|<=i| (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| e190 g_s173_189)) e190) (|*i| g_s171_185 g_s141_150)) (|<=i| e0 (|-i| (|+i| e142 (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| e190 g_s173_189)) e190)) (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| (|-i| e190 g_s173_189) g_s172_187)) e190))) (|<=i| (|*i| g_s171_185 g_s141_150) (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|+i| e190 g_s173_189)) e190)) (|<=i| e0 (|-i| (|+i| e142 (|*i| g_s171_185 g_s141_150)) (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| e190 g_s172_187)) e190))) (|<=i| e0 (|+i| e142 (|*i| g_s171_185 g_s141_150))) (|<=i| e0 (|-i| (|+i| (|+i| e136 g_s179_198) g_s180_197) (|*i| g_s171_185 g_s141_150))) (|<=i| e0 (|-i| (|-i| e200 g_s168_182) (|*i| g_s171_185 g_s141_150))) (|<=i| e0 (|-i| (|-i| e200 g_s168_182) (idiv (|*i| (|*i| g_s171_185 g_s141_150) (|-i| e190 g_s173_189)) e190))) (|<=i| (|*i| (|*i| e147 g_s171_185) g_s141_150) e134) (|<=i| (|*i| (|*i| e147 g_s171_185) g_s141_150) e200) (|<=i| e0 (|-i| (|-i| e200 g_s168_182) (|*i| (|*i| e147 g_s171_185) g_s141_150))) (mem g_s182_201 g_s135_139) (|<i| g_s182_201 g_s183_202) (mem g_s184_203 g_s135_139) (|<=i| e204 g_s182_201) (= g_s184_203 (|-i| g_s182_201 e142)) (mem g_s185_205 g_s135_139) (mem g_s186_206 g_s135_139) (= g_s185_205 e147) (= g_s186_206 e142) (mem g_s187_207 g_s134_137) (mem g_s188_208 g_s134_137) (mem g_s189_209 g_s134_137) (mem g_s190_210 g_s135_139) (mem g_s191_211 g_s135_139) (mem g_s192_212 g_s135_139) (mem g_s193_213 g_s135_139) (mem g_s194_214 g_s135_139) (mem g_s195_215 g_s135_139) (not (= g_s194_214 g_s195_215)) (mem g_s196_216 g_s135_139) (mem g_s197_217 g_s135_139) (mem g_s198_218 g_s135_139) (not (= g_s196_216 g_s197_217)) (not (= g_s196_216 g_s198_218)) (not (= g_s197_217 g_s198_218)) (mem g_s199_219 g_s133_135) (mem g_s200_220 g_s135_139) (mem g_s201_221 g_s135_139) (mem g_s202_222 g_s134_137) (|<=i| e223 g_s202_222) (|<=i| g_s202_222 e224) (|<=i| g_s156_166 g_s202_222) (mem g_s203_225 (|-->| (interval e0 e138) g_s134_137)) (mem g_s204_226 g_s133_135) (mem g_s205_227 g_s133_135) (mem g_s206_228 g_s134_137) (mem g_s207_229 g_s134_137) (mem g_s208_230 g_s133_135) (mem g_s209_231 g_s133_135) (mem g_s210_232 g_s133_135) (mem g_s211_233 g_s133_135) (mem g_s212_234 g_s133_135) (mem g_s213_235 g_s133_135) (mem g_s214_236 g_s133_135) (mem g_s215_237 g_s133_135) (mem g_s216_238 g_s133_135) (mem g_s217_239 g_s133_135) (mem g_s218_240 g_s133_135) (mem g_s219_241 g_s133_135) (mem g_s220_242 g_s133_135) (mem g_s221_243 g_s133_135) (mem g_s222_244 g_s133_135) (mem g_s223_245 g_s133_135) (mem g_s224_246 g_s133_135) (mem g_s225_247 g_s133_135) (mem g_s226_248 g_s133_135) (mem g_s227_249 g_s133_135) (mem g_s228_250 g_s133_135) (mem g_s229_251 g_s134_137) (mem g_s230_252 (|-->| (interval e0 e147) g_s135_139)) (mem g_s231_253 g_s135_139) (|<i| g_s231_253 g_s183_202) (mem g_s232_254 g_s135_139) (= g_s232_254 (|-i| g_s231_253 e142)) (mem g_s233_255 g_s135_139) (|<=i| g_s233_255 g_s231_253) (= g_s233_255 e147) (mem g_s234_256 g_s135_139) (mem g_s235_257 g_s135_139) (= g_s235_257 g_s234_256) (= g_s235_257 e147) (mem g_s236_258 (|-->| (interval e0 e141) g_s135_139)) (mem g_s237_259 (|-->| (interval e0 e141) g_s135_139)) (|<=i| (|+i| e260 (|*i| e196 g_s231_253)) g_s202_222) (|<=i| (|+i| e261 (|*i| e141 g_s176_193)) g_s202_222) (|<=i| (|*i| e196 g_s231_253) e262) (|<=i| (|*i| e141 g_s176_193) e263) (mem g_s238_264 (|-->| (interval e0 e147) g_s135_139))))
(define-fun |def_seext| () Bool (and (mem g_s239_265 (|-->| (seq1 g_s135_139) g_s133_135)) (mem g_s240_266 (|-->| (set_prod (seq1 g_s135_139) g_s134_137) g_s134_137)) (mem g_s241_267 (|-->| (interval e0 e144) g_s135_139)) (mem g_s242_268 g_s134_137) (mem g_s243_269 (|-->| (interval e0 e141) g_s135_139)) (mem g_s244_270 g_s134_137) (mem g_s245_271 g_s134_137) (mem g_s246_272 g_s133_135) (mem g_s247_273 g_s134_137) (mem g_s248_274 g_s135_139) (mem g_s249_275 (|-->| (interval e0 e141) g_s135_139)) (mem g_s250_276 (|-->| g_s135_139 g_s133_135))))
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s251_277 (seq g_s135_139)) (|<=i| (size g_s251_277) g_s182_201)))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
; PO 1 in group 0
(push 1)
(assert (not (mem empty (seq g_s135_139))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (|<=i| (size empty) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 1
(push 1)
(assert (not (mem (composition g_s255_278 g_s241_267) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (|<=i| (size (composition g_s255_278 g_s241_267)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e280))
; PO 1 in group 2
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e281))
; PO 1 in group 3
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e151))
; PO 1 in group 4
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e196))
; PO 1 in group 5
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e145))
; PO 1 in group 6
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e282))
; PO 1 in group 7
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e283))
; PO 1 in group 8
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e284))
; PO 1 in group 9
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e285))
; PO 1 in group 10
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e286))
; PO 1 in group 11
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e287))
; PO 1 in group 12
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e288))
; PO 1 in group 13
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e170))
; PO 1 in group 14
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e289))
; PO 1 in group 15
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= (size g_s251_277) e262))
; PO 1 in group 16
(push 1)
(assert (not (mem (concatenate g_s251_277 (SEQ g_s248_274)) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (|<=i| (size (concatenate g_s251_277 (SEQ g_s248_274))) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e290))
; PO 1 in group 17
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 17
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e291))
; PO 1 in group 18
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 18
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e292))
; PO 1 in group 19
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 19
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e293))
; PO 1 in group 20
(push 1)
(assert (not (mem (|<-| g_s251_277 g_s257_279) (seq g_s135_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 20
(push 1)
(assert (not (|<=i| (size (|<-| g_s251_277 g_s257_279)) g_s182_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s251_277 (seq g_s135_139)))
; PO 1 in group 21
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 22
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e280))
; PO 1 in group 23
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 24 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 24
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 25 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e281))
; PO 1 in group 25
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 26 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 26
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 27 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e151))
; PO 1 in group 27
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 28 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 28
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 29 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e196))
; PO 1 in group 29
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 30 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 30
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 31 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e145))
; PO 1 in group 31
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 32 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 32
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 33 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e282))
; PO 1 in group 33
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 34 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 34
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 35 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e283))
; PO 1 in group 35
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 36 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 36
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 37 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e284))
; PO 1 in group 37
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 38 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 38
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 39 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e285))
; PO 1 in group 39
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 40 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 40
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 41 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e286))
; PO 1 in group 41
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 42 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 42
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 43 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e287))
; PO 1 in group 43
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 44 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 44
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 45 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e288))
; PO 1 in group 45
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 46 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 46
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 47 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e170))
; PO 1 in group 47
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 48 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 48
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 49 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e289))
; PO 1 in group 49
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 50 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 50
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 51 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= (size g_s251_277) e262))
; PO 1 in group 51
(push 1)
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 51
(push 1)
(assert (not (mem (SEQ g_s248_274) (seq (ran (SEQ g_s248_274))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 52 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 52
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 53 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e290))
; PO 1 in group 53
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 54 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 54
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 55 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e291))
; PO 1 in group 55
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 56 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 56
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 57 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e292))
; PO 1 in group 57
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 58 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s257_279 g_s135_139))
; PO 1 in group 58
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 59 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s257_279 g_s135_139))
(assert (= (size g_s251_277) e293))
; PO 1 in group 59
(assert (not (mem g_s251_277 (seq (ran g_s251_277)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 60 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s319_294 g_s134_137))
; PO 1 in group 60
(assert (not (=> lh_1 (mem g_s251_277 (seq (ran g_s251_277))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 61 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s319_294 g_s134_137))
(assert (= (size g_s251_277) e295))
; PO 1 in group 61
(push 1)
(assert (not (mem g_s136_140 (|+->| (dom g_s136_140) (ran g_s136_140)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 61
(push 1)
(assert (not (mem g_s251_277 (dom g_s136_140))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)