(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e258 () U)
(declare-fun e144 () U)
(declare-fun e0 () U)
(declare-fun e202 () U)
(declare-fun e153 () U)
(declare-fun e201 () U)
(declare-fun e230 () U)
(declare-fun e590 () U)
(declare-fun e582 () U)
(declare-fun e204 () U)
(declare-fun e328 () U)
(declare-fun e587 () U)
(declare-fun e210 () U)
(declare-fun e255 () U)
(declare-fun e205 () U)
(declare-fun e491 () U)
(declare-fun e380 () U)
(declare-fun e571 () U)
(declare-fun e229 () U)
(declare-fun e319 () U)
(declare-fun e591 () U)
(declare-fun e411 () U)
(declare-fun e320 () U)
(declare-fun e231 () U)
(declare-fun e599 () U)
(declare-fun e600 () U)
(declare-fun e247 () U)
(declare-fun e249 () U)
(declare-fun e245 () U)
(declare-fun e317 () U)
(declare-fun e261 () U)
(declare-fun e318 () U)
(declare-fun e280 () U)
(declare-fun e227 () U)
(declare-fun e146 () U)
(declare-fun e564 () U)
(declare-fun e344 () U)
(declare-fun e596 () U)
(declare-fun e581 () U)
(declare-fun e281 () U)
(declare-fun e145 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_141 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_140 () U)
(declare-fun g_s139_139 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_137 () U)
(declare-fun g_s141_143 () U)
(declare-fun g_s142_142 () U)
(declare-fun g_s143_147 () U)
(declare-fun g_s144_148 () U)
(declare-fun g_s145_149 () U)
(declare-fun g_s146_150 () U)
(declare-fun g_s147_151 () U)
(declare-fun g_s148_152 () U)
(declare-fun g_s149_154 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_155 () U)
(declare-fun g_s151_156 () U)
(declare-fun g_s152_157 () U)
(declare-fun g_s153_158 () U)
(declare-fun g_s154_159 () U)
(declare-fun g_s155_160 () U)
(declare-fun g_s156_161 () U)
(declare-fun g_s157_162 () U)
(declare-fun g_s158_163 () U)
(declare-fun g_s159_164 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_165 () U)
(declare-fun g_s161_166 () U)
(declare-fun g_s162_167 () U)
(declare-fun g_s163_168 () U)
(declare-fun g_s164_169 () U)
(declare-fun g_s165_170 () U)
(declare-fun g_s166_171 () U)
(declare-fun g_s167_172 () U)
(declare-fun g_s168_173 () U)
(declare-fun g_s169_174 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_175 () U)
(declare-fun g_s171_176 () U)
(declare-fun g_s172_177 () U)
(declare-fun g_s173_178 () U)
(declare-fun g_s174_179 () U)
(declare-fun g_s175_180 () U)
(declare-fun g_s176_181 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s181_197 () U)
(declare-fun g_s182_198 () U)
(declare-fun g_s183_199 () U)
(declare-fun g_s184_200 () U)
(declare-fun g_s185_203 () U)
(declare-fun g_s186_206 () U)
(declare-fun g_s187_207 () U)
(declare-fun g_s188_208 () U)
(declare-fun g_s189_209 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_211 () U)
(declare-fun g_s191_212 () U)
(declare-fun g_s192_213 () U)
(declare-fun g_s193_214 () U)
(declare-fun g_s194_215 () U)
(declare-fun g_s195_216 () U)
(declare-fun g_s196_217 () U)
(declare-fun g_s197_218 () U)
(declare-fun g_s198_219 () U)
(declare-fun g_s199_220 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_221 () U)
(declare-fun g_s201_222 () U)
(declare-fun g_s202_223 () U)
(declare-fun g_s203_224 () U)
(declare-fun g_s204_225 () U)
(declare-fun g_s205_226 () U)
(declare-fun g_s206_228 () U)
(declare-fun g_s207_232 () U)
(declare-fun g_s208_233 () U)
(declare-fun g_s209_234 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_235 () U)
(declare-fun g_s211_236 () U)
(declare-fun g_s212_237 () U)
(declare-fun g_s213_238 () U)
(declare-fun g_s214_239 () U)
(declare-fun g_s215_240 () U)
(declare-fun g_s216_241 () U)
(declare-fun g_s217_242 () U)
(declare-fun g_s218_243 () U)
(declare-fun g_s219_244 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_246 () U)
(declare-fun g_s221_248 () U)
(declare-fun g_s222_250 () U)
(declare-fun g_s223_251 () U)
(declare-fun g_s224_252 () U)
(declare-fun g_s225_253 () U)
(declare-fun g_s226_254 () U)
(declare-fun g_s227_257 () U)
(declare-fun g_s228_256 () U)
(declare-fun g_s229_259 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_260 () U)
(declare-fun g_s231_262 () U)
(declare-fun g_s232_263 () U)
(declare-fun g_s233_264 () U)
(declare-fun g_s234_265 () U)
(declare-fun g_s235_266 () U)
(declare-fun g_s236_267 () U)
(declare-fun g_s237_268 () U)
(declare-fun g_s238_269 () U)
(declare-fun g_s239_270 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_271 () U)
(declare-fun g_s241_272 () U)
(declare-fun g_s242_273 () U)
(declare-fun g_s243_274 () U)
(declare-fun g_s244_275 () U)
(declare-fun g_s245_276 () U)
(declare-fun g_s246_277 () U)
(declare-fun g_s247_278 () U)
(declare-fun g_s248_279 () U)
(declare-fun g_s249_282 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_283 () U)
(declare-fun g_s251_284 () U)
(declare-fun g_s252_285 () U)
(declare-fun g_s253_286 () U)
(declare-fun g_s254_287 () U)
(declare-fun g_s255_288 () U)
(declare-fun g_s256_289 () U)
(declare-fun g_s257_290 () U)
(declare-fun g_s258_291 () U)
(declare-fun g_s259_292 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_293 () U)
(declare-fun g_s261_294 () U)
(declare-fun g_s262_295 () U)
(declare-fun g_s263_296 () U)
(declare-fun g_s264_297 () U)
(declare-fun g_s265_298 () U)
(declare-fun g_s266_299 () U)
(declare-fun g_s267_300 () U)
(declare-fun g_s268_301 () U)
(declare-fun g_s269_302 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_303 () U)
(declare-fun g_s271_304 () U)
(declare-fun g_s272_305 () U)
(declare-fun g_s273_306 () U)
(declare-fun g_s274_307 () U)
(declare-fun g_s275_308 () U)
(declare-fun g_s276_309 () U)
(declare-fun g_s277_310 () U)
(declare-fun g_s278_311 () U)
(declare-fun g_s279_312 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_313 () U)
(declare-fun g_s281_314 () U)
(declare-fun g_s282_315 () U)
(declare-fun g_s283_316 () U)
(declare-fun g_s284_321 () U)
(declare-fun g_s285_322 () U)
(declare-fun g_s286_323 () U)
(declare-fun g_s287_324 () U)
(declare-fun g_s288_325 () U)
(declare-fun g_s289_326 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_327 () U)
(declare-fun g_s291_329 () U)
(declare-fun g_s292_330 () U)
(declare-fun g_s293_331 () U)
(declare-fun g_s294_332 () U)
(declare-fun g_s295_333 () U)
(declare-fun g_s296_334 () U)
(declare-fun g_s297_335 () U)
(declare-fun g_s298_336 () U)
(declare-fun g_s299_337 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_338 () U)
(declare-fun g_s301_339 () U)
(declare-fun g_s302_340 () U)
(declare-fun g_s303_341 () U)
(declare-fun g_s304_342 () U)
(declare-fun g_s305_343 () U)
(declare-fun g_s306_345 () U)
(declare-fun g_s307_346 () U)
(declare-fun g_s308_347 () U)
(declare-fun g_s309_348 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_349 () U)
(declare-fun g_s311_350 () U)
(declare-fun g_s312_351 () U)
(declare-fun g_s313_352 () U)
(declare-fun g_s314_353 () U)
(declare-fun g_s315_354 () U)
(declare-fun g_s316_355 () U)
(declare-fun g_s317_356 () U)
(declare-fun g_s318_357 () U)
(declare-fun g_s319_358 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_359 () U)
(declare-fun g_s321_360 () U)
(declare-fun g_s322_361 () U)
(declare-fun g_s323_362 () U)
(declare-fun g_s324_363 () U)
(declare-fun g_s325_364 () U)
(declare-fun g_s326_365 () U)
(declare-fun g_s327_366 () U)
(declare-fun g_s328_367 () U)
(declare-fun g_s329_368 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_369 () U)
(declare-fun g_s331_370 () U)
(declare-fun g_s332_371 () U)
(declare-fun g_s333_372 () U)
(declare-fun g_s334_373 () U)
(declare-fun g_s335_374 () U)
(declare-fun g_s336_375 () U)
(declare-fun g_s337_376 () U)
(declare-fun g_s338_377 () U)
(declare-fun g_s339_378 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_379 () U)
(declare-fun g_s341_381 () U)
(declare-fun g_s342_382 () U)
(declare-fun g_s343_383 () U)
(declare-fun g_s344_384 () U)
(declare-fun g_s345_385 () U)
(declare-fun g_s346_386 () U)
(declare-fun g_s347_387 () U)
(declare-fun g_s348_388 () U)
(declare-fun g_s349_389 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_390 () U)
(declare-fun g_s351_391 () U)
(declare-fun g_s352_392 () U)
(declare-fun g_s353_393 () U)
(declare-fun g_s354_394 () U)
(declare-fun g_s355_395 () U)
(declare-fun g_s356_396 () U)
(declare-fun g_s357_397 () U)
(declare-fun g_s358_398 () U)
(declare-fun g_s359_399 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_400 () U)
(declare-fun g_s361_401 () U)
(declare-fun g_s362_402 () U)
(declare-fun g_s363_403 () U)
(declare-fun g_s364_404 () U)
(declare-fun g_s365_405 () U)
(declare-fun g_s366_406 () U)
(declare-fun g_s367_407 () U)
(declare-fun g_s368_408 () U)
(declare-fun g_s369_409 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_410 () U)
(declare-fun g_s371_412 () U)
(declare-fun g_s372_413 () U)
(declare-fun g_s373_414 () U)
(declare-fun g_s374_415 () U)
(declare-fun g_s375_416 () U)
(declare-fun g_s376_417 () U)
(declare-fun g_s377_418 () U)
(declare-fun g_s378_419 () U)
(declare-fun g_s379_420 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_421 () U)
(declare-fun g_s381_422 () U)
(declare-fun g_s382_423 () U)
(declare-fun g_s383_424 () U)
(declare-fun g_s384_425 () U)
(declare-fun g_s385_426 () U)
(declare-fun g_s386_427 () U)
(declare-fun g_s387_428 () U)
(declare-fun g_s388_429 () U)
(declare-fun g_s389_430 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_431 () U)
(declare-fun g_s391_432 () U)
(declare-fun g_s392_433 () U)
(declare-fun g_s393_434 () U)
(declare-fun g_s394_435 () U)
(declare-fun g_s395_436 () U)
(declare-fun g_s396_437 () U)
(declare-fun g_s397_438 () U)
(declare-fun g_s398_439 () U)
(declare-fun g_s399_440 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_441 () U)
(declare-fun g_s401_442 () U)
(declare-fun g_s402_443 () U)
(declare-fun g_s403_444 () U)
(declare-fun g_s404_445 () U)
(declare-fun g_s405_446 () U)
(declare-fun g_s406_447 () U)
(declare-fun g_s407_448 () U)
(declare-fun g_s408_449 () U)
(declare-fun g_s409_450 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_451 () U)
(declare-fun g_s411_452 () U)
(declare-fun g_s412_453 () U)
(declare-fun g_s413_454 () U)
(declare-fun g_s414_455 () U)
(declare-fun g_s415_456 () U)
(declare-fun g_s416_457 () U)
(declare-fun g_s417_458 () U)
(declare-fun g_s418_459 () U)
(declare-fun g_s419_460 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_461 () U)
(declare-fun g_s421_462 () U)
(declare-fun g_s422_463 () U)
(declare-fun g_s423_464 () U)
(declare-fun g_s424_465 () U)
(declare-fun g_s425_466 () U)
(declare-fun g_s426_467 () U)
(declare-fun g_s427_468 () U)
(declare-fun g_s428_469 () U)
(declare-fun g_s429_470 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430_471 () U)
(declare-fun g_s431_472 () U)
(declare-fun g_s432_473 () U)
(declare-fun g_s433_474 () U)
(declare-fun g_s434_475 () U)
(declare-fun g_s435_476 () U)
(declare-fun g_s436_477 () U)
(declare-fun g_s437_478 () U)
(declare-fun g_s438_479 () U)
(declare-fun g_s439_480 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s440_481 () U)
(declare-fun g_s441_482 () U)
(declare-fun g_s442_483 () U)
(declare-fun g_s443_484 () U)
(declare-fun g_s444_485 () U)
(declare-fun g_s445_486 () U)
(declare-fun g_s446_487 () U)
(declare-fun g_s447_488 () U)
(declare-fun g_s448_489 () U)
(declare-fun g_s449_490 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s450_492 () U)
(declare-fun g_s451_493 () U)
(declare-fun g_s452_494 () U)
(declare-fun g_s453_495 () U)
(declare-fun g_s454_496 () U)
(declare-fun g_s455_497 () U)
(declare-fun g_s456_498 () U)
(declare-fun g_s457_499 () U)
(declare-fun g_s458_500 () U)
(declare-fun g_s459_501 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s460_502 () U)
(declare-fun g_s461_503 () U)
(declare-fun g_s462_504 () U)
(declare-fun g_s463_505 () U)
(declare-fun g_s463$1_548 () U)
(declare-fun g_s464_506 () U)
(declare-fun g_s464$1_549 () U)
(declare-fun g_s465_507 () U)
(declare-fun g_s465$1_538 () U)
(declare-fun g_s466_508 () U)
(declare-fun g_s467_509 () U)
(declare-fun g_s467$1_550 () U)
(declare-fun g_s468_510 () U)
(declare-fun g_s468$1_551 () U)
(declare-fun g_s469_511 () U)
(declare-fun g_s469$1_532 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s470_512 () U)
(declare-fun g_s470$1_533 () U)
(declare-fun g_s471_513 () U)
(declare-fun g_s471$1_534 () U)
(declare-fun g_s472_514 () U)
(declare-fun g_s472$1_535 () U)
(declare-fun g_s472$2_561 () U)
(declare-fun g_s473_515 () U)
(declare-fun g_s473$1_536 () U)
(declare-fun g_s473$2_562 () U)
(declare-fun g_s474_516 () U)
(declare-fun g_s474$1_552 () U)
(declare-fun g_s475_517 () U)
(declare-fun g_s475$1_553 () U)
(declare-fun g_s476_518 () U)
(declare-fun g_s477_519 () U)
(declare-fun g_s477$1_539 () U)
(declare-fun g_s478_520 () U)
(declare-fun g_s478$1_540 () U)
(declare-fun g_s479_521 () U)
(declare-fun g_s479$1_541 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s480_522 () U)
(declare-fun g_s480$1_542 () U)
(declare-fun g_s481_523 () U)
(declare-fun g_s481$1_543 () U)
(declare-fun g_s482_524 () U)
(declare-fun g_s482$1_544 () U)
(declare-fun g_s483_525 () U)
(declare-fun g_s483$1_545 () U)
(declare-fun g_s484_526 () U)
(declare-fun g_s484$1_546 () U)
(declare-fun g_s485_527 () U)
(declare-fun g_s485$1_547 () U)
(declare-fun g_s486_528 () U)
(declare-fun g_s486$1_537 () U)
(declare-fun g_s487_529 () U)
(declare-fun g_s488_530 () U)
(declare-fun g_s489_531 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s490$1_554 () U)
(declare-fun g_s491$1_555 () U)
(declare-fun g_s492$1_556 () U)
(declare-fun g_s493$1_557 () U)
(declare-fun g_s494$1_558 () U)
(declare-fun g_s495$1_559 () U)
(declare-fun g_s496_601 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s504_565 () U)
(declare-fun g_s504_569 () U)
(declare-fun g_s504$1_566 () U)
(declare-fun g_s504$1_570 () U)
(declare-fun g_s507_567 () U)
(declare-fun g_s508$1_568 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s510$1_572 () U)
(declare-fun g_s511$1_573 () U)
(declare-fun g_s512_604 () U)
(declare-fun g_s512$1_574 () U)
(declare-fun g_s513$1_575 () U)
(declare-fun g_s514$1_576 () U)
(declare-fun g_s515$1_577 () U)
(declare-fun g_s516$1_578 () U)
(declare-fun g_s517$1_579 () U)
(declare-fun g_s518$1_580 () U)
(declare-fun g_s519_583 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s523_584 () U)
(declare-fun g_s523$1_585 () U)
(declare-fun g_s524$1_586 () U)
(declare-fun g_s529_592 () U)
(declare-fun g_s529$1_593 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s530$1_594 () U)
(declare-fun g_s531$1_595 () U)
(declare-fun g_s533$1_598 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s549_602 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s557_603 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s562_605 () U)
(declare-fun g_s563_606 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s571_607 () U)
(declare-fun g_s573_608 () U)
(declare-fun g_s577_609 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
(declare-fun e560 () U)
(declare-fun e563 () U)
(declare-fun e588 () U)
(declare-fun e597 () U)
(declare-fun e589 () U)
(declare-fun e188 () U)
(declare-fun e189 () U)
(declare-fun e190 () U)
(declare-fun e182 () U)
(declare-fun e185 () U)
(declare-fun e184 () U)
(declare-fun e187 () U)
(declare-fun e183 () U)
(declare-fun e186 () U)
(declare-fun e194 () U)
(declare-fun e195 () U)
(declare-fun e196 () U)
(declare-fun e191 () U)
(declare-fun e192 () U)
(declare-fun e193 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 (mapplet g_s10_11 (mapplet g_s9_10 (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 g_s4_5))))))))))))))))))))))))))))))))))))))))))))))))) (= g_s52_53 (SET (mapplet g_s60_61 (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 g_s53_54))))))))) (= g_s61_62 (SET (mapplet g_s88_89 (mapplet g_s87_88 (mapplet g_s86_87 (mapplet g_s85_86 (mapplet g_s84_85 (mapplet g_s83_84 (mapplet g_s82_83 (mapplet g_s81_82 (mapplet g_s80_81 (mapplet g_s79_80 (mapplet g_s78_79 (mapplet g_s77_78 (mapplet g_s76_77 (mapplet g_s75_76 (mapplet g_s74_75 (mapplet g_s73_74 (mapplet g_s72_73 (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 (mapplet g_s67_68 (mapplet g_s66_67 (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 g_s62_63)))))))))))))))))))))))))))) (= g_s89_90 (SET (mapplet g_s91_92 g_s90_91))) (= g_s92_93 (SET (mapplet g_s101_102 (mapplet g_s100_101 (mapplet g_s99_100 (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 (mapplet g_s95_96 (mapplet g_s94_95 g_s93_94)))))))))) (= g_s102_103 (SET (mapplet g_s105_106 (mapplet g_s104_105 g_s103_104)))) (= g_s106_107 (SET (mapplet g_s108_109 g_s107_108))) (= g_s109_110 (SET (mapplet g_s116_117 (mapplet g_s115_116 (mapplet g_s114_115 (mapplet g_s113_114 (mapplet g_s112_113 (mapplet g_s111_112 g_s110_111)))))))) (= g_s117_118 (SET (mapplet g_s126_127 (mapplet g_s125_126 (mapplet g_s124_125 (mapplet g_s123_124 (mapplet g_s122_123 (mapplet g_s121_122 (mapplet g_s120_121 (mapplet g_s119_120 g_s118_119)))))))))) (= g_s127_128 (SET (mapplet g_s131_132 (mapplet g_s130_131 (mapplet g_s129_130 g_s128_129))))) (= g_s132_133 (SET (mapplet g_s135_136 (mapplet g_s134_135 g_s133_134)))) (mem g_s136_141 (|-->| (set_prod (set_prod (set_prod g_s137_138 (|-->| (interval e0 g_s138_140) g_s137_138)) g_s139_139) g_s137_138) g_s140_137)) (mem g_s141_143 (|-->| (set_prod (set_prod (set_prod g_s137_138 (|-->| (interval e0 g_s142_142) g_s137_138)) g_s139_139) g_s137_138) g_s140_137)) (= g_s137_138 (interval e0 e144)) (= g_s140_137 (interval e0 e145)) (= g_s139_139 (interval e0 e146)) (mem g_s143_147 g_s137_138) (mem g_s144_148 g_s140_137) (mem g_s145_149 g_s139_139) (mem g_s146_150 g_s139_139) (mem g_s147_151 g_s139_139) (= g_s143_147 e144) (= g_s144_148 e145) (= g_s145_149 e146) (and (|>=i| g_s146_150 e0) (|<=i| g_s146_150 g_s145_149)) (and (|>=i| g_s147_151 e0) (|<=i| g_s147_151 g_s145_149)) (not (= g_s146_150 g_s147_151)) (= g_s148_152 (SET (mapplet g_s147_151 g_s146_150))) (|<=i| g_s146_150 e153) (|<=i| g_s147_151 e153) (= g_s149_154 (SET (mapplet (mapplet FALSE g_s147_151) (mapplet TRUE g_s146_150)))) (mem g_s150_155 (|-->| (set_prod g_s137_138 g_s139_139) g_s137_138)) (mem g_s151_156 (|-->| (set_prod g_s137_138 g_s139_139) g_s137_138)) (mem g_s152_157 (|-->| g_s137_138 g_s137_138)) (mem g_s153_158 (|-->| (set_prod g_s137_138 g_s137_138) g_s137_138)) (mem g_s154_159 (|-->| (set_prod g_s137_138 g_s137_138) g_s137_138)) (mem g_s155_160 (|-->| (set_prod g_s137_138 g_s137_138) g_s137_138)) (mem g_s156_161 (|-->| (set_prod g_s140_137 g_s139_139) g_s140_137)) (mem g_s157_162 (|-->| (set_prod g_s140_137 g_s139_139) g_s140_137)) (mem g_s158_163 (|-->| g_s140_137 g_s140_137)) (mem g_s159_164 (|-->| (set_prod g_s140_137 g_s140_137) g_s140_137)) (mem g_s160_165 (|-->| (set_prod g_s140_137 g_s140_137) g_s140_137)) (mem g_s161_166 (|-->| (set_prod g_s140_137 g_s140_137) g_s140_137)) (mem g_s162_167 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (mem g_s163_168 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (mem g_s164_169 (|-->| g_s139_139 g_s139_139)) (mem g_s165_170 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (mem g_s166_171 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (mem g_s167_172 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (mem g_s168_173 (|-->| (set_prod g_s137_138 g_s137_138) g_s137_138)) (mem g_s169_174 (|-->| (set_prod g_s137_138 g_s137_138) g_s137_138)) (mem g_s170_175 (|-->| (set_prod g_s137_138 g_s137_138) g_s137_138)) (mem g_s171_176 (|-->| (set_prod g_s140_137 g_s140_137) g_s140_137)) (mem g_s172_177 (|-->| (set_prod g_s140_137 g_s140_137) g_s140_137)) (mem g_s173_178 (|-->| (set_prod g_s140_137 g_s140_137) g_s140_137)) (mem g_s174_179 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (mem g_s175_180 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (mem g_s176_181 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (= g_s150_155 e182) (= g_s156_161 e183) (= g_s162_167 e184) (= g_s151_156 e185) (= g_s157_162 e186) (= g_s163_168 e187) (= g_s168_173 e188) (= g_s169_174 e189) (= g_s170_175 e190) (= g_s171_176 e191) (= g_s172_177 e192) (= g_s173_178 e193) (= g_s174_179 e194) (= g_s175_180 e195) (= g_s176_181 e196) (mem g_s181_197 (|-->| (set_prod g_s137_138 g_s137_138) g_s137_138)) (= (apply g_s181_197 (mapplet e0 e0)) e0) (mem g_s182_198 (|-->| (set_prod g_s140_137 g_s140_137) g_s140_137)) (mem g_s183_199 (|-->| (set_prod g_s139_139 g_s139_139) g_s139_139)) (mem g_s184_200 (|-->| (set_prod g_s137_138 g_s137_138) g_s137_138)) (= g_s185_203 (|-->| (interval e202 e201) g_s139_139)) (mem g_s186_206 (|-->| (set_prod (interval e0 e205) (interval e0 e204)) g_s139_139)) (mem g_s187_207 (|-->| (set_prod (interval e0 e205) (interval e0 e153)) g_s139_139)) (mem g_s188_208 (|-->| (set_prod (interval e0 e205) (interval e0 e153)) g_s139_139)) (mem g_s189_209 g_s139_139) (|<=i| e210 g_s189_209) (mem g_s190_211 (|-->| (interval e0 e205) g_s140_137)) (mem g_s191_212 (|-->| (interval e0 e205) g_s140_137)) (mem g_s192_213 g_s137_138) (mem g_s193_214 g_s139_139) (mem g_s194_215 g_s139_139) (mem g_s195_216 g_s139_139) (mem g_s196_217 g_s139_139) (mem g_s197_218 g_s139_139) (mem g_s198_219 g_s139_139) (mem g_s199_220 g_s139_139) (mem g_s200_221 g_s139_139) (mem g_s201_222 g_s139_139) (mem g_s202_223 g_s140_137) (not (= g_s201_222 g_s197_218)) (mem g_s203_224 g_s139_139) (mem g_s204_225 g_s139_139) (mem g_s205_226 g_s139_139) (|<=i| g_s205_226 e227) (mem g_s206_228 g_s139_139) (|<=i| (|+i| g_s205_226 e229) g_s204_225) (|<=i| (|+i| g_s206_228 e230) g_s204_225) (|<=i| e231 g_s204_225) (mem g_s207_232 g_s185_203) (= g_s207_232 (set_prod (interval e202 e201) (SET e146))) (mem g_s208_233 g_s139_139) (mem g_s209_234 g_s139_139) (mem g_s210_235 g_s139_139) (mem g_s211_236 g_s139_139) (mem g_s212_237 g_s139_139) (mem g_s213_238 g_s139_139) (mem g_s214_239 g_s139_139) (mem g_s215_240 g_s139_139) (mem g_s216_241 g_s139_139) (mem g_s217_242 g_s137_138) (mem g_s218_243 (|-->| (interval e0 e146) g_s140_137)) (mem g_s219_244 g_s139_139) (|<=i| g_s219_244 e245) (mem g_s220_246 g_s139_139) (|<i| g_s220_246 e247) (mem g_s221_248 g_s139_139) (|<i| g_s221_248 e247) (|<i| (|+i| g_s220_246 g_s221_248) e249) (mem g_s222_250 g_s140_137) (mem g_s223_251 g_s139_139) (mem g_s224_252 g_s139_139) (mem g_s225_253 g_s139_139) (mem g_s226_254 g_s139_139) (|<=i| e255 g_s224_252) (|<=i| g_s224_252 e245) (|<=i| (|+i| g_s227_257 g_s228_256) (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| e249 g_s221_248)) e249)) (|<=i| e0 (|-i| (|+i| e145 g_s228_256) (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| e249 g_s221_248)) e249))) (|<=i| (|+i| g_s227_257 g_s228_256) (|*i| g_s219_244 g_s189_209)) (|<=i| (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| e249 g_s220_246)) e249) (|+i| (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|+i| e249 g_s221_248)) e249) e202)) (|<=i| (|*i| g_s189_209 (|-i| e249 g_s221_248)) g_s143_147) (|<=i| (idiv (|*i| g_s219_244 (|*i| g_s189_209 (|-i| e249 g_s221_248))) e249) e145) (|<=i| g_s227_257 (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| e249 g_s221_248)) e249)) (|<=i| (|*i| g_s219_244 g_s189_209) e145) (|<=i| e0 (|-i| (|+i| e202 (|*i| g_s219_244 g_s189_209)) (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| (|-i| e249 g_s221_248) g_s220_246)) e249))) (|<=i| (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| e249 g_s221_248)) e249) (|*i| g_s219_244 g_s189_209)) (|<=i| e0 (|-i| (|+i| e202 (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| e249 g_s221_248)) e249)) (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| (|-i| e249 g_s221_248) g_s220_246)) e249))) (|<=i| (|*i| g_s219_244 g_s189_209) (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|+i| e249 g_s221_248)) e249)) (|<=i| e0 (|-i| (|+i| e202 (|*i| g_s219_244 g_s189_209)) (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| e249 g_s220_246)) e249))) (|<=i| e0 (|+i| e202 (|*i| g_s219_244 g_s189_209))) (|<=i| e0 (|-i| (|+i| (|+i| e145 g_s227_257) g_s228_256) (|*i| g_s219_244 g_s189_209))) (|<=i| e0 (|-i| (|-i| e258 g_s216_241) (|*i| g_s219_244 g_s189_209))) (|<=i| e0 (|-i| (|-i| e258 g_s216_241) (idiv (|*i| (|*i| g_s219_244 g_s189_209) (|-i| e249 g_s221_248)) e249))) (|<=i| (|*i| (|*i| e153 g_s219_244) g_s189_209) e144) (|<=i| (|*i| (|*i| e153 g_s219_244) g_s189_209) e258) (|<=i| e0 (|-i| (|-i| e258 g_s216_241) (|*i| (|*i| e153 g_s219_244) g_s189_209))) (mem g_s229_259 g_s139_139) (|<i| g_s229_259 g_s145_149) (mem g_s230_260 g_s139_139) (|<=i| e261 g_s229_259) (= g_s230_260 (|-i| g_s229_259 e202)) (mem g_s231_262 g_s139_139) (mem g_s232_263 g_s139_139) (= g_s231_262 e153) (= g_s232_263 e202) (mem g_s233_264 g_s140_137) (mem g_s234_265 g_s140_137) (mem g_s235_266 g_s140_137) (mem g_s236_267 g_s139_139) (mem g_s237_268 g_s139_139) (mem g_s238_269 g_s139_139) (mem g_s239_270 g_s139_139) (mem g_s240_271 g_s139_139) (mem g_s241_272 g_s139_139) (not (= g_s240_271 g_s241_272)) (mem g_s242_273 g_s139_139) (mem g_s243_274 g_s139_139) (mem g_s244_275 g_s139_139) (not (= g_s242_273 g_s243_274)) (not (= g_s242_273 g_s244_275)) (not (= g_s243_274 g_s244_275)) (mem g_s245_276 g_s137_138) (mem g_s246_277 g_s139_139) (mem g_s247_278 g_s139_139) (mem g_s248_279 g_s140_137) (|<=i| e280 g_s248_279) (|<=i| g_s248_279 e281) (|<=i| g_s204_225 g_s248_279) (mem g_s249_282 (|-->| (interval e0 e146) g_s140_137)) (mem g_s250_283 g_s137_138) (mem g_s251_284 g_s137_138) (mem g_s252_285 g_s140_137) (mem g_s253_286 g_s140_137) (mem g_s254_287 g_s137_138) (mem g_s255_288 g_s137_138) (mem g_s256_289 g_s137_138) (mem g_s257_290 g_s137_138) (mem g_s258_291 g_s137_138) (mem g_s259_292 g_s137_138) (mem g_s260_293 g_s137_138) (mem g_s261_294 g_s137_138) (mem g_s262_295 g_s137_138) (mem g_s263_296 g_s137_138) (mem g_s264_297 g_s137_138) (mem g_s265_298 g_s137_138) (mem g_s266_299 g_s137_138) (mem g_s267_300 g_s137_138) (mem g_s268_301 g_s137_138) (mem g_s269_302 g_s137_138) (mem g_s270_303 g_s137_138) (mem g_s271_304 g_s137_138) (mem g_s272_305 g_s137_138) (mem g_s273_306 g_s137_138) (mem g_s274_307 g_s137_138) (mem g_s275_308 g_s140_137) (mem g_s276_309 (|-->| (interval e0 e153) g_s139_139)) (mem g_s277_310 g_s139_139) (|<i| g_s277_310 g_s145_149) (mem g_s278_311 g_s139_139) (= g_s278_311 (|-i| g_s277_310 e202)) (mem g_s279_312 g_s139_139) (|<=i| g_s279_312 g_s277_310) (= g_s279_312 e153) (mem g_s280_313 g_s139_139) (mem g_s281_314 g_s139_139) (= g_s281_314 g_s280_313) (= g_s281_314 e153) (mem g_s282_315 (|-->| (interval e0 e201) g_s139_139)) (mem g_s283_316 (|-->| (interval e0 e201) g_s139_139)) (|<=i| (|+i| e317 (|*i| e255 g_s277_310)) g_s248_279) (|<=i| (|+i| e318 (|*i| e201 g_s224_252)) g_s248_279) (|<=i| (|*i| e255 g_s277_310) e319) (|<=i| (|*i| e201 g_s224_252) e320) (mem g_s284_321 (|-->| (interval e0 e153) g_s139_139)) (mem g_s285_322 (|-->| (seq1 g_s139_139) g_s140_137)) (mem g_s286_323 g_s139_139) (|<i| g_s286_323 e146) (|<=i| e320 g_s286_323) (mem g_s287_324 g_s139_139) (|<=i| e202 g_s287_324) (mem g_s288_325 g_s139_139) (|<=i| e202 g_s288_325) (mem g_s289_326 g_s139_139) (|<=i| e202 g_s289_326) (mem g_s290_327 g_s139_139) (|<=i| e328 g_s290_327) (mem g_s291_329 g_s139_139) (= g_s291_329 (|-i| g_s290_327 e202)) (|<=i| g_s291_329 e204) (mem g_s292_330 g_s137_138) (mem g_s293_331 g_s137_138) (mem g_s294_332 g_s137_138) (mem g_s295_333 g_s137_138) (mem g_s296_334 g_s137_138) (mem g_s297_335 g_s137_138) (mem g_s298_336 g_s137_138) (mem g_s299_337 g_s137_138) (mem g_s300_338 g_s137_138) (mem g_s301_339 g_s137_138) (mem g_s302_340 g_s137_138) (mem g_s303_341 g_s137_138) (mem g_s304_342 g_s137_138) (mem g_s305_343 g_s140_137) (|<=i| g_s305_343 e344) (mem g_s306_345 g_s137_138) (mem g_s307_346 NATURAL1) (mem g_s308_347 NATURAL1) (mem g_s309_348 NATURAL1) (mem g_s310_349 NATURAL1) (mem g_s311_350 NATURAL1) (mem g_s312_351 NATURAL1) (mem g_s313_352 NATURAL1) (mem g_s314_353 NATURAL1) (|<i| g_s313_352 g_s314_353) (mem g_s315_354 g_s140_137) (mem g_s316_355 g_s137_138) (mem g_s317_356 g_s137_138) (mem g_s318_357 g_s137_138) (= g_s316_355 (|+i| g_s315_354 g_s307_346)) (= g_s317_356 (|+i| g_s315_354 g_s308_347)) (= g_s318_357 (|+i| g_s315_354 g_s309_348)) (mem g_s319_358 g_s137_138) (mem g_s320_359 g_s137_138) (mem g_s321_360 g_s137_138) (mem g_s322_361 g_s137_138) (mem g_s323_362 g_s137_138) (= g_s319_358 (|+i| g_s315_354 g_s310_349)) (= g_s320_359 (|+i| g_s315_354 g_s311_350)) (= g_s321_360 (|+i| g_s315_354 g_s312_351)) (= g_s322_361 (|+i| g_s315_354 g_s314_353)) (= g_s323_362 (|-i| (|+i| g_s315_354 g_s314_353) g_s313_352)) (mem g_s324_363 g_s139_139) (|<i| g_s324_363 e146) (mem g_s325_364 g_s139_139) (|<i| g_s325_364 e146) (mem g_s326_365 g_s139_139) (mem g_s327_366 g_s139_139) (mem g_s328_367 g_s140_137) (mem g_s329_368 g_s140_137) (mem g_s330_369 g_s140_137) (mem g_s331_370 g_s140_137) (mem g_s332_371 g_s140_137) (mem g_s333_372 g_s140_137) (mem g_s334_373 g_s140_137) (mem g_s335_374 g_s139_139) (|<=i| e202 g_s335_374) (mem g_s336_375 g_s139_139) (mem g_s337_376 g_s139_139) (mem g_s338_377 g_s139_139) (mem g_s339_378 g_s139_139) (mem g_s340_379 g_s139_139) (|<=i| g_s336_375 e380) (|<=i| g_s337_376 e380) (|<=i| g_s338_377 e380) (|<=i| g_s339_378 e380) (|<=i| g_s340_379 e380) (not (= g_s336_375 g_s337_376)) (not (= g_s336_375 g_s338_377)) (not (= g_s336_375 g_s339_378)) (not (= g_s336_375 g_s340_379)) (not (= g_s337_376 g_s338_377)) (not (= g_s337_376 g_s339_378)) (not (= g_s337_376 g_s340_379)) (not (= g_s338_377 g_s339_378)) (not (= g_s338_377 g_s340_379)) (not (= g_s339_378 g_s340_379)) (mem g_s341_381 (|-->| (set_prod (interval e0 e255) (interval e0 e380)) g_s139_139)) (mem g_s342_382 (|-->| (set_prod (interval e0 e255) (interval e0 e153)) g_s140_137)) (mem g_s343_383 g_s139_139) (mem g_s344_384 g_s139_139) (|<=i| g_s344_384 e146) (|<=i| e202 g_s344_384) (mem g_s345_385 g_s137_138) (mem g_s346_386 g_s139_139) (|<=i| g_s346_386 e205) (|<=i| e202 g_s346_386) (mem g_s347_387 g_s139_139) (|<=i| g_s347_387 e255) (= g_s347_387 (|-i| g_s346_386 e202)) (mem g_s348_388 g_s139_139) (mem g_s349_389 (|-->| (interval e0 e202) g_s140_137)) (mem g_s349_389 (|>->| (interval e0 e202) g_s140_137)) (mem g_s350_390 (|-->| (set_prod (interval e0 e202) (interval e0 e201)) g_s139_139)) (mem g_s351_391 (|-->| (interval e0 e153) g_s139_139)) (mem g_s352_392 g_s137_138) (mem g_s353_393 (|-->| (interval e0 e255) g_s137_138)) (mem g_s354_394 (|-->| (interval e0 e255) g_s137_138)) (mem g_s355_395 (|-->| (interval e0 e255) g_s137_138)) (mem g_s356_396 (|-->| (interval e0 e255) g_s137_138)) (mem g_s357_397 (|-->| (interval e0 e255) g_s139_139)) (mem g_s358_398 (|-->| (interval e0 e255) g_s139_139)) (mem g_s359_399 (|-->| (interval e0 e255) g_s139_139)) (mem g_s360_400 (|-->| (set_prod (interval e0 e255) (interval e0 e204)) g_s140_137)) (mem g_s361_401 (|-->| (set_prod (interval e0 e255) (interval e0 e204)) g_s140_137)) (mem g_s362_402 (|-->| (set_prod (interval e0 e255) (interval e0 e204)) g_s139_139)) (mem g_s363_403 (|-->| (set_prod (interval e0 e255) (interval e0 e204)) g_s140_137)) (mem g_s364_404 (|-->| (set_prod (interval e0 e255) (interval e0 e204)) g_s137_138)) (mem g_s365_405 (|-->| (interval e0 e255) g_s140_137)) (mem g_s366_406 (|-->| (set_prod (interval e0 e255) (interval e0 e380)) g_s139_139)) (mem g_s367_407 (|-->| (set_prod (interval e0 e255) (interval e0 e380)) g_s139_139)) (mem g_s368_408 (|-->| (set_prod (interval e0 e255) (interval e0 e380)) g_s139_139)) (mem g_s369_409 (|-->| (set_prod (interval e0 e255) (interval e0 e380)) g_s139_139)) (mem g_s370_410 (|-->| (interval e0 e202) g_s139_139)) (mem g_s370_410 (|-->| (interval e0 e202) (interval e202 e411))) (mem g_s371_412 (|-->| (interval e0 e202) g_s139_139)) (mem g_s371_412 (|-->| (interval e0 e202) (interval e202 e411))) (mem g_s372_413 (|-->| (interval e0 e202) g_s139_139)) (mem g_s373_414 (|-->| (interval e0 e202) g_s139_139))))
(define-fun |def_seext| () Bool (and (mem g_s374_415 g_s137_138) (mem g_s375_416 g_s137_138) (mem g_s376_417 g_s139_139) (or (= g_s376_417 e202) (= g_s376_417 e153)) (mem g_s377_418 g_s137_138) (mem g_s378_419 g_s137_138) (mem g_s379_420 g_s137_138) (mem g_s380_421 g_s137_138) (mem g_s381_422 g_s137_138) (mem g_s382_423 g_s137_138) (mem g_s383_424 (|-->| (interval e0 g_s142_142) g_s139_139)) (mem g_s384_425 g_s137_138) (mem g_s385_426 g_s137_138) (mem g_s386_427 g_s137_138) (mem g_s387_428 g_s137_138) (mem g_s388_429 g_s137_138) (mem g_s389_430 (|-->| (interval e0 e153) g_s139_139)) (mem g_s390_431 (|-->| (interval e0 e153) g_s139_139)) (mem g_s391_432 g_s140_137) (mem g_s392_433 g_s139_139) (mem g_s393_434 g_s139_139) (mem g_s394_435 g_s139_139) (mem g_s395_436 g_s139_139) (mem g_s396_437 g_s139_139) (mem g_s397_438 (|-->| (interval e0 g_s248_279) g_s139_139)) (mem g_s398_439 g_s139_139) (mem g_s399_440 g_s139_139) (mem g_s400_441 g_s140_137) (mem g_s401_442 (|-->| (interval e0 e153) g_s139_139)) (mem g_s402_443 (|-->| (interval e0 e153) g_s139_139)) (mem g_s403_444 g_s139_139) (mem g_s404_445 g_s139_139) (mem g_s405_446 g_s139_139) (mem g_s406_447 g_s139_139) (mem g_s407_448 (|-->| (interval e0 (|-i| g_s406_447 e202)) g_s139_139)) (mem g_s408_449 g_s140_137) (mem g_s409_450 g_s140_137) (mem g_s410_451 g_s139_139) (mem g_s411_452 g_s139_139) (mem g_s412_453 g_s139_139) (mem g_s413_454 g_s139_139) (mem g_s414_455 (|-->| (interval e0 (|-i| g_s413_454 e202)) g_s139_139)) (mem g_s415_456 (|-->| (interval e0 e153) g_s139_139)) (mem g_s416_457 g_s139_139) (mem g_s417_458 (|-->| (interval e0 e204) g_s139_139)) (mem g_s418_459 (|-->| (interval e0 e153) g_s139_139)) (mem g_s419_460 g_s140_137) (mem g_s420_461 g_s140_137) (mem g_s421_462 g_s139_139) (mem g_s422_463 g_s139_139) (mem g_s423_464 g_s139_139) (mem g_s424_465 g_s139_139) (mem g_s425_466 g_s139_139) (mem g_s426_467 g_s139_139) (mem g_s427_468 g_s139_139) (mem g_s428_469 g_s139_139) (mem g_s429_470 g_s139_139) (mem g_s430_471 g_s139_139) (mem g_s431_472 g_s139_139) (mem g_s432_473 g_s139_139) (mem g_s433_474 g_s137_138) (mem g_s434_475 g_s137_138) (mem g_s435_476 g_s137_138) (mem g_s436_477 g_s137_138) (mem g_s437_478 (|-->| (interval e0 g_s248_279) g_s139_139)) (mem g_s438_479 (|-->| (interval e0 g_s248_279) g_s139_139)) (mem g_s439_480 (|-->| (interval e0 g_s248_279) g_s139_139)) (mem g_s440_481 (|-->| (interval e0 g_s248_279) g_s139_139)) (mem g_s441_482 (|-->| (interval e0 g_s248_279) g_s139_139)) (mem g_s442_483 (|-->| (interval e0 g_s248_279) g_s139_139)) (mem g_s443_484 g_s140_137) (|<=i| g_s443_484 g_s248_279) (mem g_s444_485 g_s140_137) (|<=i| g_s444_485 g_s248_279) (mem g_s445_486 g_s140_137) (|<=i| g_s445_486 g_s248_279) (mem g_s446_487 g_s140_137) (|<=i| g_s446_487 g_s248_279) (mem g_s447_488 g_s140_137) (|<=i| g_s447_488 g_s248_279) (mem g_s448_489 g_s140_137) (|<=i| g_s448_489 g_s248_279) (mem g_s449_490 g_s139_139) (mem g_s450_492 (|-->| (interval e0 e491) g_s139_139)) (mem g_s451_493 g_s139_139) (mem g_s452_494 g_s137_138) (mem g_s453_495 g_s137_138) (mem g_s454_496 g_s137_138) (mem g_s455_497 g_s137_138) (mem g_s456_498 (seq g_s140_137)) (= (size g_s456_498) g_s446_487) (mem g_s457_499 (seq g_s139_139)) (= (size g_s457_499) g_s446_487) (mem g_s458_500 (seq g_s139_139)) (= (size g_s458_500) g_s446_487) (mem g_s459_501 (|-->| (seq1 g_s139_139) g_s137_138)) (mem g_s460_502 (|-->| (set_prod (seq1 g_s139_139) g_s140_137) g_s140_137)) (mem g_s149_154 (|+->| BOOL g_s139_139)) (mem g_s149_154 (|+->| BOOL g_s140_137)) (mem g_s149_154 (|+->| BOOL g_s137_138)) (not (= (apply g_s349_389 e0) (apply g_s349_389 e202))) (= (ran g_s349_389) (SET (mapplet (apply g_s349_389 e202) (apply g_s349_389 e0))))))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s461_503 g_s139_139) (mem g_s462_504 g_s139_139) (mem g_s463_505 g_s139_139) (mem g_s464_506 g_s139_139) (mem g_s465_507 g_s139_139) (mem g_s466_508 g_s185_203) (mem g_s467_509 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s468_510 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s469_511 (|-->| (interval e0 g_s347_387) (|-->| (interval e202 g_s277_310) g_s139_139))) (mem g_s470_512 (|-->| (interval e0 g_s347_387) g_s140_137)) (mem g_s471_513 (|-->| (interval e0 g_s347_387) g_s139_139)) (mem g_s472_514 (|-->| (interval e0 g_s224_252) (|-->| (interval e0 e204) g_s140_137))) (mem g_s473_515 (|-->| (set_prod (interval e0 g_s347_387) (interval e202 g_s290_327)) g_s139_139)) (mem g_s474_516 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s475_517 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s476_518 (|-->| (interval e0 g_s224_252) INTEGER)) (mem g_s477_519 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s478_520 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s479_521 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s480_522 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s481_523 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s482_524 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s483_525 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s484_526 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s485_527 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s486_528 (|-->| (interval e0 g_s224_252) (|-->| (interval e0 e202) g_s139_139))) (mem g_s487_529 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s488_530 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s489_531 (|-->| (interval e0 g_s224_252) g_s139_139))))
(define-fun |def_inv| () Bool (and (= g_s469_511 g_s469$1_532) (= g_s470_512 g_s470$1_533) (= g_s471_513 g_s471$1_534) (= g_s472_514 g_s472$1_535) (= g_s473_515 g_s473$1_536) (= g_s486_528 g_s486$1_537) (= g_s465_507 g_s465$1_538) (= g_s477_519 g_s477$1_539) (= g_s478_520 g_s478$1_540) (= g_s479_521 g_s479$1_541) (= g_s480_522 g_s480$1_542) (= g_s481_523 g_s481$1_543) (= g_s482_524 g_s482$1_544) (= g_s483_525 g_s483$1_545) (= g_s484_526 g_s484$1_546) (= g_s485_527 g_s485$1_547) (= g_s463_505 g_s463$1_548) (= g_s464_506 g_s464$1_549) (= g_s467_509 g_s467$1_550) (= g_s468_510 g_s468$1_551) (= g_s474_516 g_s474$1_552) (= g_s475_517 g_s475$1_553) (mem g_s490$1_554 g_s139_139) (mem g_s491$1_555 g_s139_139) (mem g_s463$1_548 g_s139_139) (mem g_s464$1_549 g_s139_139) (= g_s461_503 g_s490$1_554) (mem g_s492$1_556 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s493$1_557 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s494$1_558 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s495$1_559 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s495$1_559 (|-->| (interval e0 g_s224_252) (interval e0 g_s344_384))) (= g_s488_530 g_s492$1_556) (= g_s489_531 g_s493$1_557) (= g_s487_529 g_s494$1_558) (= g_s495$1_559 e560) (= g_s462_504 g_s491$1_555)))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s465$1_538 g_s139_139) (mem g_s469$1_532 (|-->| (interval e0 g_s347_387) (|-->| (interval e202 g_s277_310) g_s139_139))) (mem g_s470$1_533 (|-->| (interval e0 g_s347_387) g_s140_137)) (mem g_s471$1_534 (|-->| (interval e0 g_s347_387) g_s139_139)) (mem g_s472$1_535 (|-->| (interval e0 g_s224_252) (|-->| (interval e0 e204) g_s140_137))) (mem g_s473$1_536 (|-->| (set_prod (interval e0 g_s347_387) (interval e202 g_s290_327)) g_s139_139)) (mem g_s477$1_539 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s478$1_540 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s479$1_541 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s480$1_542 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s481$1_543 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s482$1_544 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s483$1_545 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s484$1_546 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s485$1_547 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s486$1_537 (|-->| (interval e0 g_s224_252) (|-->| (interval e0 e202) g_s139_139)))))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s472$2_561 (|-->| (interval e0 g_s224_252) (|-->| (interval e0 e204) g_s140_137))))
(define-fun lh_2 () Bool (mem g_s473$2_562 (|-->| (set_prod (interval e0 g_s347_387) (interval e202 g_s290_327)) g_s139_139)))
(define-fun lh_3 () Bool (mem e0 g_s139_139))
(define-fun lh_4 () Bool (mem (set_prod (interval e0 g_s347_387) (SET (set_prod (interval e202 g_s277_310) (SET e0)))) (|-->| (interval e0 g_s347_387) (|-->| (interval e202 g_s277_310) g_s139_139))))
(define-fun lh_5 () Bool (mem (set_prod (interval e0 g_s347_387) (SET e0)) (|-->| (interval e0 g_s347_387) g_s140_137)))
(define-fun lh_6 () Bool (mem (set_prod (interval e0 g_s347_387) (SET e0)) (|-->| (interval e0 g_s347_387) g_s139_139)))
(define-fun lh_7 () Bool (mem (set_prod (interval e0 g_s224_252) (SET e0)) (|-->| (interval e0 g_s224_252) g_s139_139)))
(define-fun lh_8 () Bool (mem (set_prod (interval e0 g_s224_252) (SET (set_prod (interval e0 e202) (SET e0)))) (|-->| (interval e0 g_s224_252) (|-->| (interval e0 e202) g_s139_139))))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem e317 g_s139_139))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem e146 g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem (set_prod (interval e0 g_s224_252) (SET e0)) (|-->| (interval e0 g_s224_252) (interval e0 g_s344_384))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem (set_prod (interval e0 g_s224_252) (SET g_s147_151)) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= (set_prod (interval e0 g_s224_252) (SET e0)) e563))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 1
(push 1)
(assert (not (mem e0 g_s139_139)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (mem e317 g_s139_139)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (mem e146 g_s139_139)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 2
(assert (not (mem (apply g_s167_172 (mapplet g_s464$1_549 g_s208_233)) g_s139_139)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 3
(assert (not (mem (apply g_s167_172 (mapplet g_s464$1_549 g_s210_235)) g_s139_139)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 4
(push 1)
(assert (not (mem (apply g_s174_179 (mapplet g_s490$1_554 e202)) g_s139_139)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (mem (apply g_s166_171 (mapplet e146 (apply g_s174_179 (mapplet g_s490$1_554 e202)))) g_s139_139)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (= (modulo (|+i| g_s461_503 e202) e564) (apply g_s174_179 (mapplet g_s490$1_554 e202)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 4
(push 1)
(assert (not (= (apply g_s166_171 (mapplet e146 (modulo (|+i| g_s461_503 e202) e564))) (apply g_s166_171 (mapplet e146 (apply g_s174_179 (mapplet g_s490$1_554 e202)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s504$1_566 g_s504_565))
(define-fun lh_1 () Bool (mem g_s504_565 g_s139_139))
; PO 1 in group 5
(assert (not (=> lh_1 (= g_s490$1_554 g_s461_503))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s504$1_566 g_s504_565))
(define-fun lh_1 () Bool (mem g_s504_565 g_s139_139))
; PO 1 in group 6
(assert (not (=> lh_1 (= g_s491$1_555 g_s462_504))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_2 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(define-fun lh_3 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_4 () Bool (|<i| (apply g_s468$1_551 g_s507_567) e146))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (|<+| g_s468$1_551 (SET (mapplet g_s507_567 (modulo (|+i| (apply g_s468$1_551 g_s507_567) e202) e564)))) (|<+| g_s468$1_551 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s468$1_551 g_s507_567) e202)))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s504$1_570 g_s504_569))
(define-fun lh_1 () Bool (mem g_s504_569 BOOL))
(define-fun lh_2 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_3 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(define-fun lh_4 () Bool (|<=i| e571 g_s398_439))
(define-fun lh_5 () Bool (= g_s398_439 (|+i| e571 g_s406_447)))
(define-fun lh_6 () Bool (|<=i| g_s398_439 (|+i| e202 g_s204_225)))
(define-fun lh_7 () Bool (= g_s399_440 g_s197_218))
(define-fun lh_8 () Bool (mem g_s510$1_572 BOOL))
(define-fun lh_9 () Bool (mem g_s511$1_573 BOOL))
(define-fun lh_10 () Bool (mem g_s512$1_574 g_s139_139))
(define-fun lh_11 () Bool (mem g_s513$1_575 g_s140_137))
(define-fun lh_12 () Bool (mem g_s514$1_576 g_s140_137))
(define-fun lh_13 () Bool (mem g_s515$1_577 g_s140_137))
(define-fun lh_14 () Bool (mem g_s516$1_578 BOOL))
(define-fun lh_15 () Bool (mem g_s517$1_579 BOOL))
(define-fun lh_16 () Bool (mem g_s518$1_580 g_s139_139))
(define-fun lh_17 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_18 () Bool (= (apply g_s175_180 (mapplet g_s398_439 e153)) (|-i| g_s398_439 e153)))
(define-fun lh_19 () Bool (= (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (|*i| (apply g_s397_438 (|-i| g_s398_439 e153)) e564)))
(define-fun lh_20 () Bool (= (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))) (apply g_s397_438 (|-i| g_s398_439 e202))))
(define-fun lh_21 () Bool (= (apply g_s171_176 (mapplet (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))))) (|+i| (apply g_s397_438 (|-i| g_s398_439 e202)) (|*i| (apply g_s397_438 (|-i| g_s398_439 e153)) e564))))
(define-fun lh_22 () Bool (= (bool (= (apply g_s171_176 (mapplet (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))))) g_s400_441)) FALSE))
(define-fun lh_23 () Bool (mem e0 g_s137_138))
(define-fun lh_24 () Bool (mem e202 g_s137_138))
(define-fun lh_25 () Bool (mem e581 g_s137_138))
(define-fun lh_26 () Bool (mem e0 g_s139_139))
(define-fun lh_27 () Bool (mem e0 (dom g_s401_442)))
(define-fun lh_28 () Bool (mem (apply g_s401_442 e0) g_s139_139))
(define-fun lh_29 () Bool (mem e202 g_s139_139))
(define-fun lh_30 () Bool (mem e202 (dom g_s401_442)))
(define-fun lh_31 () Bool (mem (apply g_s401_442 e202) g_s139_139))
(define-fun lh_32 () Bool (mem e153 g_s139_139))
(define-fun lh_33 () Bool (mem e153 (dom g_s401_442)))
(define-fun lh_34 () Bool (mem (apply g_s401_442 e153) g_s139_139))
(define-fun lh_35 () Bool (mem g_s397_438 (|-->| (interval e0 g_s248_279) g_s139_139)))
(define-fun lh_36 () Bool (mem (apply g_s175_180 (mapplet g_s398_439 e582)) g_s140_137))
(define-fun lh_37 () Bool (|<=i| (apply g_s175_180 (mapplet g_s398_439 e582)) (|+i| g_s248_279 e202)))
(define-fun lh_38 () Bool (|<=i| e202 (apply g_s175_180 (mapplet g_s398_439 e582))))
(define-fun lh_39 () Bool (mem (apply g_s190_211 g_s507_567) g_s140_137))
(define-fun lh_40 () Bool (|<=i| g_s406_447 (|-i| g_s204_225 e380)))
(define-fun lh_41 () Bool (= (bool (= (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s190_211 g_s507_567))) g_s408_449)) FALSE))
(define-fun lh_42 () Bool (mem (apply g_s175_180 (mapplet g_s398_439 e582)) g_s139_139))
(define-fun lh_43 () Bool (mem g_s405_446 g_s137_138))
(define-fun lh_44 () Bool (mem e153 g_s137_138))
(define-fun lh_45 () Bool (mem (apply g_s191_212 g_s507_567) g_s140_137))
(define-fun lh_46 () Bool (= (bool (= (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s191_212 g_s507_567))) g_s409_450)) FALSE))
(define-fun lh_47 () Bool (mem g_s405_446 g_s139_139))
(define-fun lh_48 () Bool (mem e201 g_s137_138))
(define-fun lh_49 () Bool (= (|+i| (apply g_s397_438 (|-i| g_s398_439 e202)) (|*i| (apply g_s397_438 (|-i| g_s398_439 e153)) e564)) g_s400_441))
(define-fun lh_50 () Bool (or (= g_s401_442 (SET (mapplet (mapplet e153 (apply g_s187_207 (mapplet e0 e153))) (mapplet (mapplet e202 (apply g_s187_207 (mapplet e0 e202))) (mapplet e0 (apply g_s187_207 (mapplet e0 e0))))))) (= g_s401_442 (SET (mapplet (mapplet e153 (apply g_s188_208 (mapplet e0 e153))) (mapplet (mapplet e202 (apply g_s188_208 (mapplet e0 e202))) (mapplet e0 (apply g_s188_208 (mapplet e0 e0)))))))))
(define-fun lh_51 () Bool (= g_s408_449 (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (|-i| g_s398_439 e582))) (apply g_s190_211 g_s507_567)))))
(define-fun lh_52 () Bool (= g_s409_450 (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (|-i| g_s398_439 e582))) (apply g_s191_212 g_s507_567)))))
(define-fun lh_53 () Bool (not (and (= (|+i| (apply g_s397_438 (|-i| g_s398_439 e202)) (|*i| (apply g_s397_438 (|-i| g_s398_439 e153)) e564)) g_s400_441) (or (= g_s401_442 (SET (mapplet (mapplet e153 (apply g_s187_207 (mapplet e0 e153))) (mapplet (mapplet e202 (apply g_s187_207 (mapplet e0 e202))) (mapplet e0 (apply g_s187_207 (mapplet e0 e0))))))) (= g_s401_442 (SET (mapplet (mapplet e153 (apply g_s188_208 (mapplet e0 e153))) (mapplet (mapplet e202 (apply g_s188_208 (mapplet e0 e202))) (mapplet e0 (apply g_s188_208 (mapplet e0 e0)))))))) (= g_s408_449 (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (|-i| g_s398_439 e582))) (apply g_s190_211 g_s507_567)))) (= g_s409_450 (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (|-i| g_s398_439 e582))) (apply g_s191_212 g_s507_567)))))))
; PO 1 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= (apply g_s175_180 (mapplet g_s398_439 e153)) (|-i| g_s398_439 e153)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (= (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (|*i| (apply g_s397_438 (|-i| g_s398_439 e153)) e564)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (= (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))) (apply g_s397_438 (|-i| g_s398_439 e202))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (= (apply g_s171_176 (mapplet (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))))) (|+i| (apply g_s397_438 (|-i| g_s398_439 e202)) (|*i| (apply g_s397_438 (|-i| g_s398_439 e153)) e564))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (mem e0 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (mem e0 g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (mem e202 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (mem e581 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26) (mem e0 (dom g_s401_442)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27) (mem e202 g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27) (mem e202 (dom g_s401_442)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27) (mem (apply g_s401_442 e0) g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30) (mem e153 g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30) (mem e153 (dom g_s401_442)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30) (mem (apply g_s401_442 e202) g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33) (mem (apply g_s401_442 e153) g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34) (mem (apply g_s175_180 (mapplet g_s398_439 e582)) g_s140_137))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34) (|<=i| e202 (apply g_s175_180 (mapplet g_s398_439 e582))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34) (|<=i| (apply g_s175_180 (mapplet g_s398_439 e582)) (|+i| g_s248_279 e202)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38) (mem (apply g_s190_211 g_s507_567) g_s140_137))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 21 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38) (|<=i| g_s406_447 (|-i| g_s204_225 e380)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 22 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41) (mem (apply g_s175_180 (mapplet g_s398_439 e582)) g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 23 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42) (mem e153 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 24 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42) (mem g_s405_446 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 25 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44) (mem (apply g_s191_212 g_s507_567) g_s140_137))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 26 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem e201 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 27 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_53) (= (bool (and (= (bool (and (= (bool (and (= (bool (= (apply g_s171_176 (mapplet (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))))) g_s400_441)) TRUE) (= (bool (or (= (bool (and (= (bool (= (apply g_s401_442 e153) (apply g_s187_207 (mapplet e0 e153)))) TRUE) (= (bool (and (= (bool (= (apply g_s401_442 e202) (apply g_s187_207 (mapplet e0 e202)))) TRUE) (= (bool (= (apply g_s401_442 e0) (apply g_s187_207 (mapplet e0 e0)))) TRUE))) TRUE))) TRUE) (= (bool (and (= (bool (and (= (bool (= (apply g_s401_442 e0) (apply g_s188_208 (mapplet e0 e0)))) TRUE) (= (bool (= (apply g_s401_442 e202) (apply g_s188_208 (mapplet e0 e202)))) TRUE))) TRUE) (= (bool (= (apply g_s401_442 e153) (apply g_s188_208 (mapplet e0 e153)))) TRUE))) TRUE))) TRUE))) TRUE) (= (bool (= (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s190_211 g_s507_567))) g_s408_449)) TRUE))) TRUE) (= (bool (= (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s191_212 g_s507_567))) g_s409_450)) TRUE))) FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 28 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52) (= (bool (and (= (bool (and (= (bool (and (= (bool (= (apply g_s171_176 (mapplet (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))))) g_s400_441)) TRUE) (= (bool (or (= (bool (and (= (bool (= (apply g_s401_442 e153) (apply g_s187_207 (mapplet e0 e153)))) TRUE) (= (bool (and (= (bool (= (apply g_s401_442 e202) (apply g_s187_207 (mapplet e0 e202)))) TRUE) (= (bool (= (apply g_s401_442 e0) (apply g_s187_207 (mapplet e0 e0)))) TRUE))) TRUE))) TRUE) (= (bool (and (= (bool (and (= (bool (= (apply g_s401_442 e0) (apply g_s188_208 (mapplet e0 e0)))) TRUE) (= (bool (= (apply g_s401_442 e202) (apply g_s188_208 (mapplet e0 e202)))) TRUE))) TRUE) (= (bool (= (apply g_s401_442 e153) (apply g_s188_208 (mapplet e0 e153)))) TRUE))) TRUE))) TRUE))) TRUE) (= (bool (= (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s190_211 g_s507_567))) g_s408_449)) TRUE))) TRUE) (= (bool (= (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s191_212 g_s507_567))) g_s409_450)) TRUE))) TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s523$1_585 g_s523_584))
(define-fun lh_1 () Bool (mem g_s523_584 BOOL))
(define-fun lh_2 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_3 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(define-fun lh_4 () Bool (= g_s399_440 g_s197_218))
(define-fun lh_5 () Bool (mem g_s518$1_580 g_s139_139))
(define-fun lh_6 () Bool (mem g_s524$1_586 g_s139_139))
(define-fun lh_7 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_8 () Bool (mem g_s510$1_572 BOOL))
; PO 1 in group 9
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= (bool (and (= (bool (= g_s490$1_554 g_s403_444)) TRUE) (= (bool (= (apply g_s467$1_550 g_s507_567) g_s404_445)) TRUE))) (bool (and (= g_s461_503 g_s403_444) (= (apply g_s467$1_550 g_s507_567) g_s404_445)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_2 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(define-fun lh_3 () Bool (|<=i| (|-i| g_s406_447 e202) g_s205_226))
(define-fun lh_4 () Bool (= g_s399_440 g_s197_218))
(define-fun lh_5 () Bool (mem g_s518$1_580 g_s139_139))
(define-fun lh_6 () Bool (mem g_s511$1_573 BOOL))
(define-fun lh_7 () Bool (mem g_s516$1_578 BOOL))
(define-fun lh_8 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_9 () Bool (= (bool (= g_s406_447 e587)) TRUE))
(define-fun lh_10 () Bool (|<=i| e587 g_s406_447))
(define-fun lh_11 () Bool (|<=i| g_s406_447 (|-i| g_s204_225 e380)))
(define-fun lh_12 () Bool (= (apply g_s165_170 (mapplet g_s410_451 e317)) e0))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (|<=i| e587 g_s406_447))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (|<=i| g_s406_447 (|-i| g_s204_225 e380)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (or (and (= g_s406_447 e587) (and (=> (= (apply g_s165_170 (mapplet g_s410_451 e317)) e0) (and (mem g_s490$1_554 g_s139_139) (mem g_s491$1_555 g_s139_139) (mem g_s463$1_548 g_s139_139) (mem g_s464$1_549 g_s139_139) (= g_s461_503 g_s490$1_554) (mem g_s492$1_556 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s493$1_557 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s494$1_558 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) (|-->| (interval e0 g_s224_252) g_s139_139)) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) (|-->| (interval e0 g_s224_252) (interval e0 g_s344_384))) (= g_s488_530 g_s492$1_556) (= g_s489_531 g_s493$1_557) (= g_s487_529 g_s494$1_558) (= (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) e588) (= g_s462_504 g_s491$1_555))) (=> (not (= (apply g_s165_170 (mapplet g_s410_451 e317)) e0)) (and (= g_s475$1_553 (|<+| g_s475$1_553 (SET (mapplet g_s507_567 g_s146_150)))) (mem g_s490$1_554 g_s139_139) (mem g_s491$1_555 g_s139_139) (mem g_s463$1_548 g_s139_139) (mem g_s464$1_549 g_s139_139) (= g_s461_503 g_s490$1_554) (mem g_s492$1_556 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s493$1_557 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s494$1_558 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) (|-->| (interval e0 g_s224_252) g_s139_139)) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) (|-->| (interval e0 g_s224_252) (interval e0 g_s344_384))) (= g_s488_530 g_s492$1_556) (= g_s489_531 g_s493$1_557) (= g_s487_529 g_s494$1_558) (= (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) e560) (= g_s462_504 g_s491$1_555))))) (and (not (= g_s406_447 e587)) (and (= g_s469$1_532 (|<+| g_s469$1_532 (SET (mapplet g_s507_567 (|<+| (apply g_s469$1_532 g_s507_567) e589))))) (= g_s470$1_533 (|<+| g_s470$1_533 (SET (mapplet g_s507_567 (|+i| (|*i| (apply g_s407_448 g_s279_312) e564) (apply g_s407_448 (|+i| g_s279_312 e202))))))) (= g_s471$1_534 (|<+| g_s471$1_534 (SET (mapplet g_s507_567 (apply g_s407_448 (|+i| g_s279_312 g_s281_314)))))) (= g_s473$1_536 (|<+| (|<+| (|<+| (|<+| (|<+| (|<+| (|<+| (|<+| g_s473$1_536 (SET (mapplet (mapplet g_s507_567 e328) (apply g_s165_170 (mapplet (apply g_s407_448 e590) e380))))) (SET (mapplet (mapplet g_s507_567 e204) (apply g_s163_168 (mapplet (apply g_s407_448 e590) e230))))) (SET (mapplet (mapplet g_s507_567 e582) (apply g_s165_170 (mapplet (apply g_s407_448 e582) e380))))) (SET (mapplet (mapplet g_s507_567 e590) (apply g_s163_168 (mapplet (apply g_s407_448 e582) e230))))) (SET (mapplet (mapplet g_s507_567 e230) (apply g_s165_170 (mapplet (apply g_s407_448 e204) e380))))) (SET (mapplet (mapplet g_s507_567 e201) (apply g_s163_168 (mapplet (apply g_s407_448 e204) e230))))) (SET (mapplet (mapplet g_s507_567 e153) (apply g_s165_170 (mapplet (apply g_s407_448 e328) e380))))) (SET (mapplet (mapplet g_s507_567 e202) (apply g_s163_168 (mapplet (apply g_s407_448 e328) e230)))))) (= (imin (SET (mapplet (|+i| g_s465$1_538 e202) e146))) g_s465$1_538) (= (apply g_s167_172 (mapplet g_s464$1_549 g_s208_233)) g_s464$1_549) (= g_s474$1_552 (|<+| g_s474$1_552 (SET (mapplet g_s507_567 g_s410_451)))) (= g_s475$1_553 (|<+| g_s475$1_553 (SET (mapplet g_s507_567 g_s146_150)))) (mem g_s490$1_554 g_s139_139) (mem g_s491$1_555 g_s139_139) (mem g_s463$1_548 g_s139_139) (mem g_s464$1_549 g_s139_139) (= g_s461_503 g_s490$1_554) (mem g_s492$1_556 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s493$1_557 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem g_s494$1_558 (|-->| (interval e0 g_s224_252) g_s139_139)) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) (|-->| (interval e0 g_s224_252) g_s139_139)) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) (|-->| (interval e0 g_s224_252) (interval e0 g_s344_384))) (= g_s488_530 g_s492$1_556) (= g_s489_531 g_s493$1_557) (= g_s487_529 g_s494$1_558) (= (|<+| g_s495$1_559 (SET (mapplet g_s507_567 e0))) e560) (= g_s462_504 g_s491$1_555)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_2 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(define-fun lh_3 () Bool (= g_s399_440 g_s198_219))
(define-fun lh_4 () Bool (|>=i| g_s398_439 (|+i| e230 g_s413_454)))
(define-fun lh_5 () Bool (|<i| g_s413_454 g_s206_228))
(define-fun lh_6 () Bool (mem g_s518$1_580 g_s139_139))
(define-fun lh_7 () Bool (mem g_s523$1_585 BOOL))
(define-fun lh_8 () Bool (= (bool (= g_s413_454 e591)) TRUE))
; PO 1 in group 11
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s413_454 e591))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s529$1_593 g_s529_592))
(define-fun lh_1 () Bool (mem g_s529_592 BOOL))
(define-fun lh_2 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_3 () Bool (and (|>=i| g_s507_567 e202) (|<=i| g_s507_567 g_s224_252)))
(define-fun lh_4 () Bool (mem g_s530$1_594 g_s139_139))
(define-fun lh_5 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_6 () Bool (mem g_s531$1_595 g_s139_139))
(define-fun lh_7 () Bool (= (apply g_s475$1_553 g_s507_567) g_s147_151))
(define-fun lh_8 () Bool (|<i| (apply g_s495$1_559 g_s507_567) g_s344_384))
(define-fun lh_9 () Bool (mem g_s490$1_554 g_s137_138))
(define-fun lh_10 () Bool (mem g_s507_567 g_s137_138))
(define-fun lh_11 () Bool (mem e596 g_s137_138))
(define-fun lh_12 () Bool (mem e0 g_s139_139))
(define-fun lh_13 () Bool (|<=i| g_s344_384 (apply (|<+| g_s495$1_559 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s495$1_559 g_s507_567) e202))))) g_s507_567)))
(define-fun lh_14 () Bool (|<=i| g_s344_384 (|+i| (apply g_s476_518 g_s507_567) e202)))
; PO 1 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem e0 g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem e596 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s490$1_554 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s507_567 g_s137_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s495$1_559 g_s507_567) e202))))) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s495$1_559 g_s507_567) e202))))) (|-->| (interval e0 g_s224_252) (interval e0 g_s344_384))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (= (|<+| g_s495$1_559 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s495$1_559 g_s507_567) e202))))) e597))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s533$1_598 g_s139_139))
; PO 1 in group 13
(assert (not (=> lh_1 (= (set_prod (interval e0 g_s224_252) (SET (apply g_s166_171 (mapplet e146 g_s461_503)))) (set_prod (interval e0 g_s224_252) (SET (apply g_s166_171 (mapplet e146 g_s490$1_554))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_2 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (|<+| g_s492$1_556 (SET (mapplet g_s507_567 g_s147_151))) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (|<+| g_s488_530 (SET (mapplet g_s507_567 g_s147_151))) (|<+| g_s492$1_556 (SET (mapplet g_s507_567 g_s147_151)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_2 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (|<+| g_s493$1_557 (SET (mapplet g_s507_567 g_s147_151))) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (|<+| g_s489_531 (SET (mapplet g_s507_567 g_s147_151))) (|<+| g_s493$1_557 (SET (mapplet g_s507_567 g_s147_151)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_2 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (|<+| g_s494$1_558 (SET (mapplet g_s507_567 g_s147_151))) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (|<+| g_s487_529 (SET (mapplet g_s507_567 g_s147_151))) (|<+| g_s494$1_558 (SET (mapplet g_s507_567 g_s147_151)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s504$1_566 g_s504_565))
(define-fun lh_1 () Bool (mem g_s504_565 g_s139_139))
(define-fun lh_2 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_3 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 17
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s492$1_556 g_s507_567) (apply g_s488_530 g_s507_567)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s504$1_566 g_s504_565))
(define-fun lh_1 () Bool (mem g_s504_565 g_s139_139))
(define-fun lh_2 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_3 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 18
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s493$1_557 g_s507_567) (apply g_s489_531 g_s507_567)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s504$1_566 g_s504_565))
(define-fun lh_1 () Bool (mem g_s504_565 g_s139_139))
(define-fun lh_2 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_3 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 19
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s494$1_558 g_s507_567) (apply g_s487_529 g_s507_567)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s507_567 g_s139_139))
(define-fun lh_2 () Bool (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(define-fun lh_3 () Bool (= g_s399_440 g_s197_218))
(define-fun lh_4 () Bool (mem g_s512$1_574 g_s139_139))
(define-fun lh_5 () Bool (= g_s406_447 e202))
(define-fun lh_6 () Bool (mem g_s406_447 g_s139_139))
(define-fun lh_7 () Bool (= g_s405_446 e231))
(define-fun lh_8 () Bool (mem g_s405_446 g_s139_139))
(define-fun lh_9 () Bool (mem e0 g_s139_139))
(define-fun lh_10 () Bool (mem e0 (dom g_s407_448)))
(define-fun lh_11 () Bool (|<=i| g_s406_447 (|-i| g_s204_225 e380)))
(define-fun lh_12 () Bool (= (apply g_s407_448 e0) g_s146_150))
(define-fun lh_13 () Bool (mem g_s67_68 g_s61_62))
(define-fun lh_14 () Bool (mem (apply g_s407_448 e0) g_s139_139))
(define-fun lh_15 () Bool (mem (apply g_s407_448 e0) g_s148_152))
(define-fun lh_16 () Bool (not (and (= g_s406_447 e202) (= g_s405_446 e231))))
(define-fun lh_17 () Bool (= g_s405_446 e599))
(define-fun lh_18 () Bool (not (and (= g_s406_447 e202) (= g_s405_446 e599))))
(define-fun lh_19 () Bool (= g_s405_446 e600))
(define-fun lh_20 () Bool (not (and (= g_s406_447 e202) (= g_s405_446 e600))))
; PO 1 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem e0 g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem e0 (dom g_s407_448)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (|<=i| g_s406_447 (|-i| g_s204_225 e380)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem (apply g_s407_448 e0) g_s139_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (|<+| g_s492$1_556 (SET (mapplet g_s507_567 (apply g_s407_448 e0)))) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (= (|<+| g_s488_530 (SET (mapplet g_s507_567 (apply g_s407_448 e0)))) (|<+| g_s492$1_556 (SET (mapplet g_s507_567 (apply g_s407_448 e0))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem (|<+| g_s492$1_556 (SET (mapplet g_s507_567 (apply g_s407_448 e0)))) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_16 lh_18 lh_20) (mem (|<+| g_s492$1_556 (SET (mapplet g_s507_567 (apply g_s407_448 e0)))) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s488_530 (|<+| g_s492$1_556 (SET (mapplet g_s507_567 (apply g_s407_448 e0))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_16 lh_18 lh_20) (= g_s488_530 (|<+| g_s492$1_556 (SET (mapplet g_s507_567 (apply g_s407_448 e0))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= (|<+| g_s489_531 (SET (mapplet g_s507_567 (apply g_s407_448 e0)))) g_s493$1_557))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_18 lh_19) (mem (|<+| g_s492$1_556 (SET (mapplet g_s507_567 (apply g_s407_448 e0)))) (|-->| (interval e0 g_s224_252) g_s139_139)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_18 lh_19) (= g_s488_530 (|<+| g_s492$1_556 (SET (mapplet g_s507_567 (apply g_s407_448 e0))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 20
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_18 lh_19) (= (|<+| g_s487_529 (SET (mapplet g_s507_567 (apply g_s407_448 e0)))) g_s494$1_558))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(define-fun lh_1 () Bool (= g_s469_511 g_s469$1_532))
(define-fun lh_2 () Bool (= g_s470_512 g_s470$1_533))
(define-fun lh_3 () Bool (= g_s471_513 g_s471$1_534))
(define-fun lh_4 () Bool (= g_s472_514 g_s472$1_535))
(define-fun lh_5 () Bool (= g_s473_515 g_s473$1_536))
(define-fun lh_6 () Bool (= g_s486_528 g_s486$1_537))
(define-fun lh_7 () Bool (= g_s465_507 g_s465$1_538))
(define-fun lh_8 () Bool (= g_s477_519 g_s477$1_539))
(define-fun lh_9 () Bool (= g_s478_520 g_s478$1_540))
(define-fun lh_10 () Bool (= g_s479_521 g_s479$1_541))
(define-fun lh_11 () Bool (= g_s480_522 g_s480$1_542))
(define-fun lh_12 () Bool (= g_s481_523 g_s481$1_543))
(define-fun lh_13 () Bool (= g_s482_524 g_s482$1_544))
(define-fun lh_14 () Bool (= g_s483_525 g_s483$1_545))
(define-fun lh_15 () Bool (= g_s484_526 g_s484$1_546))
(define-fun lh_16 () Bool (= g_s485_527 g_s485$1_547))
(define-fun lh_17 () Bool (= g_s463_505 g_s463$1_548))
(define-fun lh_18 () Bool (= g_s464_506 g_s464$1_549))
(define-fun lh_19 () Bool (= g_s467_509 g_s467$1_550))
(define-fun lh_20 () Bool (= g_s468_510 g_s468$1_551))
(define-fun lh_21 () Bool (= g_s474_516 g_s474$1_552))
(define-fun lh_22 () Bool (= g_s475_517 g_s475$1_553))
(define-fun lh_23 () Bool (mem g_s490$1_554 g_s139_139))
(define-fun lh_24 () Bool (mem g_s491$1_555 g_s139_139))
(define-fun lh_25 () Bool (mem g_s463$1_548 g_s139_139))
(define-fun lh_26 () Bool (mem g_s464$1_549 g_s139_139))
(define-fun lh_27 () Bool (= g_s461_503 g_s490$1_554))
(define-fun lh_28 () Bool (mem g_s492$1_556 (|-->| (interval e0 g_s224_252) g_s139_139)))
(define-fun lh_29 () Bool (mem g_s493$1_557 (|-->| (interval e0 g_s224_252) g_s139_139)))
(define-fun lh_30 () Bool (mem g_s494$1_558 (|-->| (interval e0 g_s224_252) g_s139_139)))
(define-fun lh_31 () Bool (mem g_s495$1_559 (|-->| (interval e0 g_s224_252) g_s139_139)))
(define-fun lh_32 () Bool (mem g_s495$1_559 (|-->| (interval e0 g_s224_252) (interval e0 g_s344_384))))
(define-fun lh_33 () Bool (= g_s488_530 g_s492$1_556))
(define-fun lh_34 () Bool (= g_s489_531 g_s493$1_557))
(define-fun lh_35 () Bool (= g_s487_529 g_s494$1_558))
(define-fun lh_36 () Bool (and (|>=i| g_s496_601 e0) (|<=i| g_s496_601 g_s224_252)))
; PO 1 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36) (not (= (SET (mapplet (apply g_s476_518 g_s496_601) g_s344_384)) empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36) (mem g_s476_518 (|+->| (dom g_s476_518) (ran g_s476_518))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36) (mem g_s496_601 (dom g_s476_518)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36) (mem (binary_inter (SET (mapplet (apply g_s476_518 g_s496_601) g_s344_384)) (set_diff INTEGER NATURAL)) (FIN INTEGER)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 22
(push 1)
(assert (not (mem g_s167_172 (|+->| (dom g_s167_172) (ran g_s167_172)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 22
(push 1)
(assert (not (mem (mapplet g_s464$1_549 g_s208_233) (dom g_s167_172))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 23
(push 1)
(assert (not (mem g_s167_172 (|+->| (dom g_s167_172) (ran g_s167_172)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 23
(push 1)
(assert (not (mem (mapplet g_s464$1_549 g_s210_235) (dom g_s167_172))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 24 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 24
(push 1)
(assert (not (mem g_s174_179 (|+->| (dom g_s174_179) (ran g_s174_179)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 24
(push 1)
(assert (not (mem g_s166_171 (|+->| (dom g_s166_171) (ran g_s166_171)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 24
(push 1)
(assert (not (mem (mapplet e146 (apply g_s174_179 (mapplet g_s490$1_554 e202))) (dom g_s166_171))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 24
(push 1)
(assert (not (mem (mapplet g_s490$1_554 e202) (dom g_s174_179))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 25 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(define-fun lh_1 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_2 () Bool (|<i| (apply g_s468$1_551 g_s507_567) e146))
; PO 1 in group 25
(push 1)
(assert (not (=> lh_1 (mem g_s468$1_551 (|+->| (dom g_s468$1_551) (ran g_s468$1_551))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 25
(push 1)
(assert (not (=> lh_1 (mem g_s507_567 (dom g_s468$1_551)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 25
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s174_179 (|+->| (dom g_s174_179) (ran g_s174_179))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 25
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (mapplet (apply g_s468$1_551 g_s507_567) e202) (dom g_s174_179)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 26 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s549_602 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 26
(push 1)
(assert (not (mem g_s468$1_551 (|+->| (dom g_s468$1_551) (ran g_s468$1_551)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 26
(push 1)
(assert (not (mem g_s507_567 (dom g_s468$1_551))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 27 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s504_569 BOOL))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(assert (|<=i| e571 g_s398_439))
(assert (= g_s398_439 (|+i| e571 g_s406_447)))
(assert (|<=i| g_s398_439 (|+i| e202 g_s204_225)))
(assert (= g_s399_440 g_s197_218))
(define-fun lh_1 () Bool (mem g_s510$1_572 BOOL))
(define-fun lh_2 () Bool (mem g_s511$1_573 BOOL))
(define-fun lh_3 () Bool (mem g_s512$1_574 g_s139_139))
(define-fun lh_4 () Bool (mem g_s513$1_575 g_s140_137))
(define-fun lh_5 () Bool (mem g_s514$1_576 g_s140_137))
(define-fun lh_6 () Bool (mem g_s515$1_577 g_s140_137))
(define-fun lh_7 () Bool (mem g_s516$1_578 BOOL))
(define-fun lh_8 () Bool (mem g_s517$1_579 BOOL))
(define-fun lh_9 () Bool (mem g_s518$1_580 g_s139_139))
(define-fun lh_10 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_11 () Bool (= (apply g_s175_180 (mapplet g_s398_439 e153)) (|-i| g_s398_439 e153)))
(define-fun lh_12 () Bool (= (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (|*i| (apply g_s397_438 (|-i| g_s398_439 e153)) e564)))
(define-fun lh_13 () Bool (= (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))) (apply g_s397_438 (|-i| g_s398_439 e202))))
(define-fun lh_14 () Bool (= (apply g_s171_176 (mapplet (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))))) (|+i| (apply g_s397_438 (|-i| g_s398_439 e202)) (|*i| (apply g_s397_438 (|-i| g_s398_439 e153)) e564))))
(define-fun lh_15 () Bool (= (bool (= (apply g_s171_176 (mapplet (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202))))) g_s400_441)) FALSE))
(define-fun lh_16 () Bool (= (bool (= (apply g_s160_165 (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s190_211 g_s507_567))) g_s408_449)) FALSE))
; PO 1 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem g_s175_180 (|+->| (dom g_s175_180) (ran g_s175_180))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem (mapplet g_s398_439 e153) (dom g_s175_180)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s156_161 (|+->| (dom g_s156_161) (ran g_s156_161))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s397_438 (|+->| (dom g_s397_438) (ran g_s397_438))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328) (dom g_s156_161)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem (apply g_s175_180 (mapplet g_s398_439 e153)) (dom g_s397_438)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem (|-i| g_s398_439 e153) (dom g_s397_438)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s174_179 (|+->| (dom g_s174_179) (ran g_s174_179))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s397_438 (|+->| (dom g_s397_438) (ran g_s397_438))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202) (dom g_s174_179)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202)) (dom g_s397_438)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem (|-i| g_s398_439 e202) (dom g_s397_438)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s171_176 (|+->| (dom g_s171_176) (ran g_s171_176))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s397_438 (|+->| (dom g_s397_438) (ran g_s397_438))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem (mapplet (apply g_s156_161 (mapplet (apply g_s397_438 (apply g_s175_180 (mapplet g_s398_439 e153))) e328)) (apply g_s397_438 (apply g_s174_179 (mapplet (apply g_s175_180 (mapplet g_s398_439 e153)) e202)))) (dom g_s171_176)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem (|-i| g_s398_439 e202) (dom g_s397_438)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem (|-i| g_s398_439 e153) (dom g_s397_438)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem g_s160_165 (|+->| (dom g_s160_165) (ran g_s160_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem g_s190_211 (|+->| (dom g_s190_211) (ran g_s190_211))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem g_s187_207 (|+->| (dom g_s187_207) (ran g_s187_207))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 21 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem g_s188_208 (|+->| (dom g_s188_208) (ran g_s188_208))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 22 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem g_s507_567 (dom g_s190_211)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 23 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem g_s175_180 (|+->| (dom g_s175_180) (ran g_s175_180))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 24 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (mapplet e0 e0) (dom g_s187_207)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 25 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (mapplet e0 e0) (dom g_s188_208)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 26 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (mapplet e0 e202) (dom g_s187_207)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 27 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (mapplet e0 e202) (dom g_s188_208)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 28 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (mapplet e0 e153) (dom g_s187_207)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 29 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (mapplet e0 e153) (dom g_s188_208)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 30 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (mapplet g_s398_439 e582) (dom g_s175_180)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 31 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s190_211 g_s507_567)) (dom g_s160_165)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 32 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s160_165 (|+->| (dom g_s160_165) (ran g_s160_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 33 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s191_212 (|+->| (dom g_s191_212) (ran g_s191_212))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 34 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s507_567 (dom g_s191_212)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 35 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem (mapplet (apply g_s285_322 (restriction_head (composition g_s519_583 g_s397_438) (apply g_s175_180 (mapplet g_s398_439 e582)))) (apply g_s191_212 g_s507_567)) (dom g_s160_165)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 28 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s523_584 BOOL))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (= g_s399_440 g_s197_218))
(define-fun lh_1 () Bool (mem g_s518$1_580 g_s139_139))
(define-fun lh_2 () Bool (mem g_s524$1_586 g_s139_139))
(define-fun lh_3 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_4 () Bool (mem g_s510$1_572 BOOL))
; PO 1 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s467$1_550 (|+->| (dom g_s467$1_550) (ran g_s467$1_550))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s507_567 (dom g_s467$1_550)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 29 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(assert (|<=i| (|-i| g_s406_447 e202) g_s205_226))
(assert (= g_s399_440 g_s197_218))
(define-fun lh_1 () Bool (mem g_s518$1_580 g_s139_139))
(define-fun lh_2 () Bool (mem g_s511$1_573 BOOL))
(define-fun lh_3 () Bool (mem g_s516$1_578 BOOL))
(define-fun lh_4 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_5 () Bool (= (bool (= g_s406_447 e587)) TRUE))
; PO 1 in group 29
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s165_170 (|+->| (dom g_s165_170) (ran g_s165_170))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 29
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (mapplet g_s410_451 e317) (dom g_s165_170)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 30 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(assert (= g_s399_440 g_s198_219))
(assert (|>=i| g_s398_439 (|+i| e230 g_s413_454)))
(assert (|<i| g_s413_454 g_s206_228))
(define-fun lh_1 () Bool (mem g_s518$1_580 g_s139_139))
(define-fun lh_2 () Bool (mem g_s523$1_585 BOOL))
(define-fun lh_3 () Bool (not (= (bool (= g_s413_454 e591)) TRUE)))
; PO 1 in group 30
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s167_172 (|+->| (dom g_s167_172) (ran g_s167_172))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 30
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (mapplet g_s464$1_549 g_s208_233) (dom g_s167_172)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 31 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s529_592 BOOL))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e202) (|<=i| g_s507_567 g_s224_252)))
(define-fun lh_1 () Bool (mem g_s530$1_594 g_s139_139))
(define-fun lh_2 () Bool (mem g_s508$1_568 g_s139_139))
(define-fun lh_3 () Bool (mem g_s531$1_595 g_s139_139))
(define-fun lh_4 () Bool (= (apply g_s475$1_553 g_s507_567) g_s147_151))
(define-fun lh_5 () Bool (|<i| (apply g_s495$1_559 g_s507_567) g_s344_384))
; PO 1 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s475$1_553 (|+->| (dom g_s475$1_553) (ran g_s475$1_553))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s507_567 (dom g_s475$1_553)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s495$1_559 (|+->| (dom g_s495$1_559) (ran g_s495$1_559))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s507_567 (dom g_s495$1_559)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s174_179 (|+->| (dom g_s174_179) (ran g_s174_179))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s495$1_559 (|+->| (dom g_s495$1_559) (ran g_s495$1_559))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s507_567 (dom g_s495$1_559)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s507_567 (dom (|<+| g_s495$1_559 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s495$1_559 g_s507_567) e202))))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (mapplet (apply g_s495$1_559 g_s507_567) e202) (dom g_s174_179)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (|<+| g_s495$1_559 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s495$1_559 g_s507_567) e202))))) (|+->| (dom (|<+| g_s495$1_559 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s495$1_559 g_s507_567) e202)))))) (ran (|<+| g_s495$1_559 (SET (mapplet g_s507_567 (apply g_s174_179 (mapplet (apply g_s495$1_559 g_s507_567) e202)))))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 32 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s533$1_598 g_s139_139))
; PO 1 in group 32
(push 1)
(assert (not (=> lh_1 (mem g_s166_171 (|+->| (dom g_s166_171) (ran g_s166_171))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 32
(push 1)
(assert (not (=> lh_1 (mem (mapplet e146 g_s490$1_554) (dom g_s166_171)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 33 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s557_603 g_s139_139))
(assert (and (|>=i| g_s557_603 e0) (|<=i| g_s557_603 g_s224_252)))
(assert (mem g_s512_604 g_s139_139))
; PO 1 in group 33
(push 1)
(assert (not (mem g_s474$1_552 (|+->| (dom g_s474$1_552) (ran g_s474$1_552)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 33
(push 1)
(assert (not (mem g_s557_603 (dom g_s474$1_552))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 34 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 34
(push 1)
(assert (not (mem g_s492$1_556 (|+->| (dom g_s492$1_556) (ran g_s492$1_556)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 34
(push 1)
(assert (not (mem g_s507_567 (dom g_s492$1_556))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 35 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 35
(push 1)
(assert (not (mem g_s493$1_557 (|+->| (dom g_s493$1_557) (ran g_s493$1_557)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 35
(push 1)
(assert (not (mem g_s507_567 (dom g_s493$1_557))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 36 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
; PO 1 in group 36
(push 1)
(assert (not (mem g_s494$1_558 (|+->| (dom g_s494$1_558) (ran g_s494$1_558)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 36
(push 1)
(assert (not (mem g_s507_567 (dom g_s494$1_558))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 37 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s562_605 g_s139_139))
(assert (mem g_s563_606 g_s139_139))
(assert (and (|>=i| g_s562_605 e202) (|<=i| g_s562_605 g_s347_387)))
(assert (and (|>=i| g_s563_606 e0) (|<=i| g_s563_606 (|-i| g_s290_327 e202))))
(assert (mem g_s504$1_566 g_s139_139))
(assert (mem g_s562_605 g_s139_139))
(assert (mem g_s563_606 g_s139_139))
(assert (and (|>=i| g_s562_605 e202) (|<=i| g_s562_605 g_s347_387)))
(assert (and (|>=i| g_s563_606 e0) (|<=i| g_s563_606 (|-i| g_s290_327 e202))))
; PO 1 in group 37
(push 1)
(assert (not (mem g_s473$1_536 (|+->| (dom g_s473$1_536) (ran g_s473$1_536)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 37
(push 1)
(assert (not (mem (mapplet g_s562_605 (|+i| g_s563_606 e202)) (dom g_s473$1_536))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 38 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s562_605 g_s139_139))
(assert (and (|>=i| g_s562_605 e202) (|<=i| g_s562_605 g_s347_387)))
(assert (mem g_s504$1_566 g_s139_139))
(assert (mem g_s562_605 g_s139_139))
(assert (and (|>=i| g_s562_605 e202) (|<=i| g_s562_605 g_s347_387)))
; PO 1 in group 38
(push 1)
(assert (not (mem g_s562_605 (dom g_s471$1_534))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 38
(push 1)
(assert (not (mem g_s471$1_534 (|+->| (dom g_s471$1_534) (ran g_s471$1_534)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 39 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 39
(push 1)
(assert (not (not (= (SET (mapplet (|+i| g_s465$1_538 e202) e146)) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 39
(push 1)
(assert (not (mem (binary_inter (SET (mapplet (|+i| g_s465$1_538 e202) e146)) (set_diff INTEGER NATURAL)) (FIN INTEGER))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 40 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s504$1_566 g_s139_139))
; PO 1 in group 40
(push 1)
(assert (not (mem g_s481$1_543 (|+->| (dom g_s481$1_543) (ran g_s481$1_543)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 40
(push 1)
(assert (not (mem g_s507_567 (dom g_s481$1_543))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 41 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s504$1_566 g_s139_139))
; PO 1 in group 41
(push 1)
(assert (not (mem g_s482$1_544 (|+->| (dom g_s482$1_544) (ran g_s482$1_544)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 41
(push 1)
(assert (not (mem g_s507_567 (dom g_s482$1_544))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 42 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s504$1_566 g_s139_139))
; PO 1 in group 42
(push 1)
(assert (not (mem g_s478$1_540 (|+->| (dom g_s478$1_540) (ran g_s478$1_540)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 42
(push 1)
(assert (not (mem g_s507_567 (dom g_s478$1_540))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 43 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s504$1_566 g_s139_139))
; PO 1 in group 43
(push 1)
(assert (not (mem g_s479$1_541 (|+->| (dom g_s479$1_541) (ran g_s479$1_541)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 43
(push 1)
(assert (not (mem g_s507_567 (dom g_s479$1_541))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 44 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s571_607 g_s139_139))
(assert (and (|>=i| g_s571_607 e0) (|<=i| g_s571_607 e202)))
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s571_607 g_s139_139))
(assert (and (|>=i| g_s571_607 e0) (|<=i| g_s571_607 e202)))
(assert (mem g_s504$1_566 g_s139_139))
; PO 1 in group 44
(push 1)
(assert (not (mem g_s486$1_537 (|+->| (dom g_s486$1_537) (ran g_s486$1_537)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 44
(push 1)
(assert (not (mem g_s507_567 (dom g_s486$1_537))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 44
(push 1)
(assert (not (mem g_s571_607 (dom (apply g_s486$1_537 g_s507_567)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 44
(push 1)
(assert (not (mem (apply g_s486$1_537 g_s507_567) (|+->| (dom (apply g_s486$1_537 g_s507_567)) (ran (apply g_s486$1_537 g_s507_567))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 45 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s504_565 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(assert (mem g_s573_608 g_s139_139))
(assert (and (|>=i| g_s573_608 e0) (|<=i| g_s573_608 (|-i| g_s277_310 e202))))
(assert (mem g_s504$1_566 g_s139_139))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(assert (mem g_s573_608 g_s139_139))
(assert (and (|>=i| g_s573_608 e0) (|<=i| g_s573_608 (|-i| g_s277_310 e202))))
; PO 1 in group 45
(push 1)
(assert (not (mem g_s507_567 (dom g_s469$1_532))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 45
(push 1)
(assert (not (mem g_s469$1_532 (|+->| (dom g_s469$1_532) (ran g_s469$1_532)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 45
(push 1)
(assert (not (mem (apply g_s469$1_532 g_s507_567) (|+->| (dom (apply g_s469$1_532 g_s507_567)) (ran (apply g_s469$1_532 g_s507_567))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 45
(push 1)
(assert (not (mem (|+i| g_s573_608 e202) (dom (apply g_s469$1_532 g_s507_567)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 46 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s571_607 g_s139_139))
(assert (and (|>=i| g_s571_607 e0) (|<=i| g_s571_607 e204)))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s224_252)))
(assert (mem g_s571_607 g_s139_139))
(assert (and (|>=i| g_s571_607 e0) (|<=i| g_s571_607 e204)))
; PO 1 in group 46
(push 1)
(assert (not (mem g_s507_567 (dom g_s472$1_535))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 46
(push 1)
(assert (not (mem g_s571_607 (dom (apply g_s472$1_535 g_s507_567)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 46
(push 1)
(assert (not (mem g_s472$1_535 (|+->| (dom g_s472$1_535) (ran g_s472$1_535)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 46
(push 1)
(assert (not (mem (apply g_s472$1_535 g_s507_567) (|+->| (dom (apply g_s472$1_535 g_s507_567)) (ran (apply g_s472$1_535 g_s507_567))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 47 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(assert (mem g_s504_565 g_s140_137))
(assert (mem g_s507_567 g_s139_139))
(assert (and (|>=i| g_s507_567 e0) (|<=i| g_s507_567 g_s347_387)))
(assert (mem g_s504$1_566 g_s140_137))
; PO 1 in group 47
(push 1)
(assert (not (mem g_s507_567 (dom g_s470$1_533))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 47
(push 1)
(assert (not (mem g_s470$1_533 (|+->| (dom g_s470$1_533) (ran g_s470$1_533)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 48 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s577_609 g_s140_137))
(assert (mem g_s577_609 g_s140_137))
; PO 1 in group 48
(push 1)
(assert (not (not (= e564 e0))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 48
(push 1)
(assert (not (|<=i| e0 g_s577_609)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 48
(push 1)
(assert (not (|<=i| e202 e564)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)