(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e208 () U)
(declare-fun e137 () U)
(declare-fun e0 () U)
(declare-fun e152 () U)
(declare-fun e149 () U)
(declare-fun e151 () U)
(declare-fun e180 () U)
(declare-fun e154 () U)
(declare-fun e160 () U)
(declare-fun e205 () U)
(declare-fun e155 () U)
(declare-fun e330 () U)
(declare-fun e179 () U)
(declare-fun e269 () U)
(declare-fun e270 () U)
(declare-fun e181 () U)
(declare-fun e197 () U)
(declare-fun e199 () U)
(declare-fun e195 () U)
(declare-fun e267 () U)
(declare-fun e211 () U)
(declare-fun e268 () U)
(declare-fun e230 () U)
(declare-fun e177 () U)
(declare-fun e141 () U)
(declare-fun e231 () U)
(declare-fun e139 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_138 () U)
(declare-fun g_s137_140 () U)
(declare-fun g_s138_142 () U)
(declare-fun g_s139_143 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_144 () U)
(declare-fun g_s141_145 () U)
(declare-fun g_s142_146 () U)
(declare-fun g_s143_147 () U)
(declare-fun g_s144_148 () U)
(declare-fun g_s145_150 () U)
(declare-fun g_s146_153 () U)
(declare-fun g_s147_156 () U)
(declare-fun g_s148_157 () U)
(declare-fun g_s149_158 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_159 () U)
(declare-fun g_s151_161 () U)
(declare-fun g_s152_162 () U)
(declare-fun g_s153_163 () U)
(declare-fun g_s154_164 () U)
(declare-fun g_s155_165 () U)
(declare-fun g_s156_166 () U)
(declare-fun g_s157_167 () U)
(declare-fun g_s158_168 () U)
(declare-fun g_s159_169 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_170 () U)
(declare-fun g_s161_171 () U)
(declare-fun g_s162_172 () U)
(declare-fun g_s163_173 () U)
(declare-fun g_s164_174 () U)
(declare-fun g_s165_175 () U)
(declare-fun g_s166_176 () U)
(declare-fun g_s167_178 () U)
(declare-fun g_s168_182 () U)
(declare-fun g_s169_183 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_184 () U)
(declare-fun g_s171_185 () U)
(declare-fun g_s172_186 () U)
(declare-fun g_s173_187 () U)
(declare-fun g_s174_188 () U)
(declare-fun g_s175_189 () U)
(declare-fun g_s176_190 () U)
(declare-fun g_s177_191 () U)
(declare-fun g_s178_192 () U)
(declare-fun g_s179_193 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_194 () U)
(declare-fun g_s181_196 () U)
(declare-fun g_s182_198 () U)
(declare-fun g_s183_200 () U)
(declare-fun g_s184_201 () U)
(declare-fun g_s185_202 () U)
(declare-fun g_s186_203 () U)
(declare-fun g_s187_204 () U)
(declare-fun g_s188_207 () U)
(declare-fun g_s189_206 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_209 () U)
(declare-fun g_s191_210 () U)
(declare-fun g_s192_212 () U)
(declare-fun g_s193_213 () U)
(declare-fun g_s194_214 () U)
(declare-fun g_s195_215 () U)
(declare-fun g_s196_216 () U)
(declare-fun g_s197_217 () U)
(declare-fun g_s198_218 () U)
(declare-fun g_s199_219 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_220 () U)
(declare-fun g_s201_221 () U)
(declare-fun g_s202_222 () U)
(declare-fun g_s203_223 () U)
(declare-fun g_s204_224 () U)
(declare-fun g_s205_225 () U)
(declare-fun g_s206_226 () U)
(declare-fun g_s207_227 () U)
(declare-fun g_s208_228 () U)
(declare-fun g_s209_229 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_232 () U)
(declare-fun g_s211_233 () U)
(declare-fun g_s212_234 () U)
(declare-fun g_s213_235 () U)
(declare-fun g_s214_236 () U)
(declare-fun g_s215_237 () U)
(declare-fun g_s216_238 () U)
(declare-fun g_s217_239 () U)
(declare-fun g_s218_240 () U)
(declare-fun g_s219_241 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_242 () U)
(declare-fun g_s221_243 () U)
(declare-fun g_s222_244 () U)
(declare-fun g_s223_245 () U)
(declare-fun g_s224_246 () U)
(declare-fun g_s225_247 () U)
(declare-fun g_s226_248 () U)
(declare-fun g_s227_249 () U)
(declare-fun g_s228_250 () U)
(declare-fun g_s229_251 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_252 () U)
(declare-fun g_s231_253 () U)
(declare-fun g_s232_254 () U)
(declare-fun g_s233_255 () U)
(declare-fun g_s234_256 () U)
(declare-fun g_s235_257 () U)
(declare-fun g_s236_258 () U)
(declare-fun g_s237_259 () U)
(declare-fun g_s238_260 () U)
(declare-fun g_s239_261 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_262 () U)
(declare-fun g_s241_263 () U)
(declare-fun g_s242_264 () U)
(declare-fun g_s243_265 () U)
(declare-fun g_s244_266 () U)
(declare-fun g_s245_271 () U)
(declare-fun g_s246_272 () U)
(declare-fun g_s247_273 () U)
(declare-fun g_s248_274 () U)
(declare-fun g_s249_275 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_276 () U)
(declare-fun g_s251_277 () U)
(declare-fun g_s252_278 () U)
(declare-fun g_s253_279 () U)
(declare-fun g_s254_280 () U)
(declare-fun g_s255_281 () U)
(declare-fun g_s256_282 () U)
(declare-fun g_s257_283 () U)
(declare-fun g_s258_284 () U)
(declare-fun g_s259_285 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_286 () U)
(declare-fun g_s261_287 () U)
(declare-fun g_s262_288 () U)
(declare-fun g_s263_289 () U)
(declare-fun g_s264_290 () U)
(declare-fun g_s265_291 () U)
(declare-fun g_s266_292 () U)
(declare-fun g_s267_293 () U)
(declare-fun g_s268_294 () U)
(declare-fun g_s269_295 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_296 () U)
(declare-fun g_s271_297 () U)
(declare-fun g_s272_298 () U)
(declare-fun g_s273_299 () U)
(declare-fun g_s274_300 () U)
(declare-fun g_s275_301 () U)
(declare-fun g_s276_302 () U)
(declare-fun g_s277_303 () U)
(declare-fun g_s278_304 () U)
(declare-fun g_s279_305 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_306 () U)
(declare-fun g_s281_307 () U)
(declare-fun g_s282_308 () U)
(declare-fun g_s283_309 () U)
(declare-fun g_s284_310 () U)
(declare-fun g_s285_311 () U)
(declare-fun g_s286_312 () U)
(declare-fun g_s287_313 () U)
(declare-fun g_s288_314 () U)
(declare-fun g_s289_315 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_316 () U)
(declare-fun g_s291_317 () U)
(declare-fun g_s292_318 () U)
(declare-fun g_s293_319 () U)
(declare-fun g_s294_320 () U)
(declare-fun g_s295_321 () U)
(declare-fun g_s296_322 () U)
(declare-fun g_s297_323 () U)
(declare-fun g_s298_324 () U)
(declare-fun g_s299_325 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_326 () U)
(declare-fun g_s301_327 () U)
(declare-fun g_s302_328 () U)
(declare-fun g_s303_329 () U)
(declare-fun g_s304_331 () U)
(declare-fun g_s305_332 () U)
(declare-fun g_s306_333 () U)
(declare-fun g_s307_334 () U)
(declare-fun g_s308_335 () U)
(declare-fun g_s309_336 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_337 () U)
(declare-fun g_s311_338 () U)
(declare-fun g_s312_339 () U)
(declare-fun g_s313_340 () U)
(declare-fun g_s314_341 () U)
(declare-fun g_s315_342 () U)
(declare-fun g_s317_343 () U)
(declare-fun g_s318_344 () U)
(declare-fun g_s319_345 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s321_346 () U)
(declare-fun g_s323_347 () U)
(declare-fun g_s324_348 () U)
(declare-fun g_s326_349 () U)
(declare-fun g_s328_350 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 (mapplet g_s10_11 (mapplet g_s9_10 (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 g_s4_5))))))))))))))))))))))))))))))))))))))))))))))))) (= g_s52_53 (SET (mapplet g_s60_61 (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 g_s53_54))))))))) (= g_s61_62 (SET (mapplet g_s88_89 (mapplet g_s87_88 (mapplet g_s86_87 (mapplet g_s85_86 (mapplet g_s84_85 (mapplet g_s83_84 (mapplet g_s82_83 (mapplet g_s81_82 (mapplet g_s80_81 (mapplet g_s79_80 (mapplet g_s78_79 (mapplet g_s77_78 (mapplet g_s76_77 (mapplet g_s75_76 (mapplet g_s74_75 (mapplet g_s73_74 (mapplet g_s72_73 (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 (mapplet g_s67_68 (mapplet g_s66_67 (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 g_s62_63)))))))))))))))))))))))))))) (= g_s89_90 (SET (mapplet g_s91_92 g_s90_91))) (= g_s92_93 (SET (mapplet g_s101_102 (mapplet g_s100_101 (mapplet g_s99_100 (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 (mapplet g_s95_96 (mapplet g_s94_95 g_s93_94)))))))))) (= g_s102_103 (SET (mapplet g_s105_106 (mapplet g_s104_105 g_s103_104)))) (= g_s106_107 (SET (mapplet g_s108_109 g_s107_108))) (= g_s109_110 (SET (mapplet g_s116_117 (mapplet g_s115_116 (mapplet g_s114_115 (mapplet g_s113_114 (mapplet g_s112_113 (mapplet g_s111_112 g_s110_111)))))))) (= g_s117_118 (SET (mapplet g_s126_127 (mapplet g_s125_126 (mapplet g_s124_125 (mapplet g_s123_124 (mapplet g_s122_123 (mapplet g_s121_122 (mapplet g_s120_121 (mapplet g_s119_120 g_s118_119)))))))))) (= g_s127_128 (SET (mapplet g_s131_132 (mapplet g_s130_131 (mapplet g_s129_130 g_s128_129))))) (= g_s132_133 (SET (mapplet g_s135_136 (mapplet g_s134_135 g_s133_134)))) (= g_s136_138 (interval e0 e137)) (= g_s137_140 (interval e0 e139)) (= g_s138_142 (interval e0 e141)) (mem g_s139_143 g_s136_138) (mem g_s140_144 g_s137_140) (mem g_s141_145 g_s138_142) (mem g_s142_146 g_s138_142) (mem g_s143_147 g_s138_142) (= g_s139_143 e137) (= g_s140_144 e139) (= g_s141_145 e141) (and (|>=i| g_s142_146 e0) (|<=i| g_s142_146 g_s141_145)) (and (|>=i| g_s143_147 e0) (|<=i| g_s143_147 g_s141_145)) (not (= g_s142_146 g_s143_147)) (= g_s144_148 (SET (mapplet g_s143_147 g_s142_146))) (|<=i| g_s142_146 e149) (|<=i| g_s143_147 e149) (= g_s145_150 (SET (mapplet (mapplet FALSE g_s143_147) (mapplet TRUE g_s142_146)))) (= g_s146_153 (|-->| (interval e152 e151) g_s138_142)) (mem g_s147_156 (|-->| (set_prod (interval e0 e155) (interval e0 e154)) g_s138_142)) (mem g_s148_157 (|-->| (set_prod (interval e0 e155) (interval e0 e149)) g_s138_142)) (mem g_s149_158 (|-->| (set_prod (interval e0 e155) (interval e0 e149)) g_s138_142)) (mem g_s150_159 g_s138_142) (|<=i| e160 g_s150_159) (mem g_s151_161 (|-->| (interval e0 e155) g_s137_140)) (mem g_s152_162 (|-->| (interval e0 e155) g_s137_140)) (mem g_s153_163 g_s136_138) (mem g_s154_164 g_s138_142) (mem g_s155_165 g_s138_142) (mem g_s156_166 g_s138_142) (mem g_s157_167 g_s138_142) (mem g_s158_168 g_s138_142) (mem g_s159_169 g_s138_142) (mem g_s160_170 g_s138_142) (mem g_s161_171 g_s138_142) (mem g_s162_172 g_s138_142) (mem g_s163_173 g_s137_140) (not (= g_s162_172 g_s158_168)) (mem g_s164_174 g_s138_142) (mem g_s165_175 g_s138_142) (mem g_s166_176 g_s138_142) (|<=i| g_s166_176 e177) (mem g_s167_178 g_s138_142) (|<=i| (|+i| g_s166_176 e179) g_s165_175) (|<=i| (|+i| g_s167_178 e180) g_s165_175) (|<=i| e181 g_s165_175) (mem g_s168_182 g_s146_153) (= g_s168_182 (set_prod (interval e152 e151) (SET e141))) (mem g_s169_183 g_s138_142) (mem g_s170_184 g_s138_142) (mem g_s171_185 g_s138_142) (mem g_s172_186 g_s138_142) (mem g_s173_187 g_s138_142) (mem g_s174_188 g_s138_142) (mem g_s175_189 g_s138_142) (mem g_s176_190 g_s138_142) (mem g_s177_191 g_s138_142) (mem g_s178_192 g_s136_138) (mem g_s179_193 (|-->| (interval e0 e141) g_s137_140)) (mem g_s180_194 g_s138_142) (|<=i| g_s180_194 e195) (mem g_s181_196 g_s138_142) (|<i| g_s181_196 e197) (mem g_s182_198 g_s138_142) (|<i| g_s182_198 e197) (|<i| (|+i| g_s181_196 g_s182_198) e199) (mem g_s183_200 g_s137_140) (mem g_s184_201 g_s138_142) (mem g_s185_202 g_s138_142) (mem g_s186_203 g_s138_142) (mem g_s187_204 g_s138_142) (|<=i| e205 g_s185_202) (|<=i| g_s185_202 e195) (|<=i| (|+i| g_s188_207 g_s189_206) (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| e199 g_s182_198)) e199)) (|<=i| e0 (|-i| (|+i| e139 g_s189_206) (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| e199 g_s182_198)) e199))) (|<=i| (|+i| g_s188_207 g_s189_206) (|*i| g_s180_194 g_s150_159)) (|<=i| (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| e199 g_s181_196)) e199) (|+i| (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|+i| e199 g_s182_198)) e199) e152)) (|<=i| (|*i| g_s150_159 (|-i| e199 g_s182_198)) g_s139_143) (|<=i| (idiv (|*i| g_s180_194 (|*i| g_s150_159 (|-i| e199 g_s182_198))) e199) e139) (|<=i| g_s188_207 (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| e199 g_s182_198)) e199)) (|<=i| (|*i| g_s180_194 g_s150_159) e139) (|<=i| e0 (|-i| (|+i| e152 (|*i| g_s180_194 g_s150_159)) (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| (|-i| e199 g_s182_198) g_s181_196)) e199))) (|<=i| (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| e199 g_s182_198)) e199) (|*i| g_s180_194 g_s150_159)) (|<=i| e0 (|-i| (|+i| e152 (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| e199 g_s182_198)) e199)) (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| (|-i| e199 g_s182_198) g_s181_196)) e199))) (|<=i| (|*i| g_s180_194 g_s150_159) (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|+i| e199 g_s182_198)) e199)) (|<=i| e0 (|-i| (|+i| e152 (|*i| g_s180_194 g_s150_159)) (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| e199 g_s181_196)) e199))) (|<=i| e0 (|+i| e152 (|*i| g_s180_194 g_s150_159))) (|<=i| e0 (|-i| (|+i| (|+i| e139 g_s188_207) g_s189_206) (|*i| g_s180_194 g_s150_159))) (|<=i| e0 (|-i| (|-i| e208 g_s177_191) (|*i| g_s180_194 g_s150_159))) (|<=i| e0 (|-i| (|-i| e208 g_s177_191) (idiv (|*i| (|*i| g_s180_194 g_s150_159) (|-i| e199 g_s182_198)) e199))) (|<=i| (|*i| (|*i| e149 g_s180_194) g_s150_159) e137) (|<=i| (|*i| (|*i| e149 g_s180_194) g_s150_159) e208) (|<=i| e0 (|-i| (|-i| e208 g_s177_191) (|*i| (|*i| e149 g_s180_194) g_s150_159))) (mem g_s190_209 g_s138_142) (|<i| g_s190_209 g_s141_145) (mem g_s191_210 g_s138_142) (|<=i| e211 g_s190_209) (= g_s191_210 (|-i| g_s190_209 e152)) (mem g_s192_212 g_s138_142) (mem g_s193_213 g_s138_142) (= g_s192_212 e149) (= g_s193_213 e152) (mem g_s194_214 g_s137_140) (mem g_s195_215 g_s137_140) (mem g_s196_216 g_s137_140) (mem g_s197_217 g_s138_142) (mem g_s198_218 g_s138_142) (mem g_s199_219 g_s138_142) (mem g_s200_220 g_s138_142) (mem g_s201_221 g_s138_142) (mem g_s202_222 g_s138_142) (not (= g_s201_221 g_s202_222)) (mem g_s203_223 g_s138_142) (mem g_s204_224 g_s138_142) (mem g_s205_225 g_s138_142) (not (= g_s203_223 g_s204_224)) (not (= g_s203_223 g_s205_225)) (not (= g_s204_224 g_s205_225)) (mem g_s206_226 g_s136_138) (mem g_s207_227 g_s138_142) (mem g_s208_228 g_s138_142) (mem g_s209_229 g_s137_140) (|<=i| e230 g_s209_229) (|<=i| g_s209_229 e231) (|<=i| g_s165_175 g_s209_229) (mem g_s210_232 (|-->| (interval e0 e141) g_s137_140)) (mem g_s211_233 g_s136_138) (mem g_s212_234 g_s136_138) (mem g_s213_235 g_s137_140) (mem g_s214_236 g_s137_140) (mem g_s215_237 g_s136_138) (mem g_s216_238 g_s136_138) (mem g_s217_239 g_s136_138) (mem g_s218_240 g_s136_138) (mem g_s219_241 g_s136_138) (mem g_s220_242 g_s136_138) (mem g_s221_243 g_s136_138) (mem g_s222_244 g_s136_138) (mem g_s223_245 g_s136_138) (mem g_s224_246 g_s136_138) (mem g_s225_247 g_s136_138) (mem g_s226_248 g_s136_138) (mem g_s227_249 g_s136_138) (mem g_s228_250 g_s136_138) (mem g_s229_251 g_s136_138) (mem g_s230_252 g_s136_138) (mem g_s231_253 g_s136_138) (mem g_s232_254 g_s136_138) (mem g_s233_255 g_s136_138) (mem g_s234_256 g_s136_138) (mem g_s235_257 g_s136_138) (mem g_s236_258 g_s137_140) (mem g_s237_259 (|-->| (interval e0 e149) g_s138_142)) (mem g_s238_260 g_s138_142) (|<i| g_s238_260 g_s141_145) (mem g_s239_261 g_s138_142) (= g_s239_261 (|-i| g_s238_260 e152)) (mem g_s240_262 g_s138_142) (|<=i| g_s240_262 g_s238_260) (= g_s240_262 e149) (mem g_s241_263 g_s138_142) (mem g_s242_264 g_s138_142) (= g_s242_264 g_s241_263) (= g_s242_264 e149) (mem g_s243_265 (|-->| (interval e0 e151) g_s138_142)) (mem g_s244_266 (|-->| (interval e0 e151) g_s138_142)) (|<=i| (|+i| e267 (|*i| e205 g_s238_260)) g_s209_229) (|<=i| (|+i| e268 (|*i| e151 g_s185_202)) g_s209_229) (|<=i| (|*i| e205 g_s238_260) e269) (|<=i| (|*i| e151 g_s185_202) e270) (mem g_s245_271 (|-->| (interval e0 e149) g_s138_142))))
(define-fun |def_seext| () Bool (and (mem g_s246_272 g_s138_142) (mem g_s247_273 g_s138_142) (mem g_s248_274 g_s138_142) (mem g_s249_275 g_s138_142) (mem g_s250_276 g_s138_142) (mem g_s251_277 (|-->| (interval e0 g_s209_229) g_s138_142)) (mem g_s252_278 g_s138_142) (mem g_s253_279 g_s138_142) (mem g_s254_280 g_s137_140) (mem g_s255_281 (|-->| (interval e0 e149) g_s138_142)) (mem g_s256_282 (|-->| (interval e0 e149) g_s138_142)) (mem g_s257_283 g_s138_142) (mem g_s258_284 g_s138_142) (mem g_s259_285 g_s138_142) (mem g_s260_286 g_s138_142) (mem g_s261_287 (|-->| (interval e0 (|-i| g_s260_286 e152)) g_s138_142)) (mem g_s262_288 g_s137_140) (mem g_s263_289 g_s137_140) (mem g_s264_290 g_s138_142) (mem g_s265_291 g_s138_142) (mem g_s266_292 g_s138_142) (mem g_s267_293 g_s138_142) (mem g_s268_294 (|-->| (interval e0 (|-i| g_s267_293 e152)) g_s138_142)) (mem g_s269_295 (|-->| (interval e0 e149) g_s138_142)) (mem g_s270_296 g_s138_142) (mem g_s271_297 (|-->| (interval e0 e154) g_s138_142)) (mem g_s272_298 (|-->| (interval e0 e149) g_s138_142)) (mem g_s273_299 g_s137_140) (mem g_s274_300 g_s137_140) (mem g_s275_301 g_s138_142) (mem g_s276_302 g_s138_142) (mem g_s277_303 g_s138_142) (mem g_s278_304 g_s138_142) (mem g_s279_305 g_s138_142) (mem g_s280_306 g_s138_142) (mem g_s281_307 g_s138_142) (mem g_s282_308 g_s138_142) (mem g_s283_309 g_s138_142) (mem g_s284_310 g_s138_142) (mem g_s285_311 g_s138_142) (mem g_s286_312 g_s138_142) (mem g_s287_313 g_s136_138) (mem g_s288_314 g_s136_138) (mem g_s289_315 g_s136_138) (mem g_s290_316 g_s136_138) (mem g_s291_317 (|-->| (interval e0 g_s209_229) g_s138_142)) (mem g_s292_318 (|-->| (interval e0 g_s209_229) g_s138_142)) (mem g_s293_319 (|-->| (interval e0 g_s209_229) g_s138_142)) (mem g_s294_320 (|-->| (interval e0 g_s209_229) g_s138_142)) (mem g_s295_321 (|-->| (interval e0 g_s209_229) g_s138_142)) (mem g_s296_322 (|-->| (interval e0 g_s209_229) g_s138_142)) (mem g_s297_323 g_s137_140) (|<=i| g_s297_323 g_s209_229) (mem g_s298_324 g_s137_140) (|<=i| g_s298_324 g_s209_229) (mem g_s299_325 g_s137_140) (|<=i| g_s299_325 g_s209_229) (mem g_s300_326 g_s137_140) (|<=i| g_s300_326 g_s209_229) (mem g_s301_327 g_s137_140) (|<=i| g_s301_327 g_s209_229) (mem g_s302_328 g_s137_140) (|<=i| g_s302_328 g_s209_229) (mem g_s303_329 g_s138_142) (mem g_s304_331 (|-->| (interval e0 e330) g_s138_142)) (mem g_s305_332 g_s138_142) (mem g_s306_333 g_s136_138) (mem g_s307_334 g_s136_138) (mem g_s308_335 g_s136_138) (mem g_s309_336 g_s136_138) (mem g_s310_337 (seq g_s137_140)) (= (size g_s310_337) g_s300_326) (mem g_s311_338 (seq g_s138_142)) (= (size g_s311_338) g_s300_326) (mem g_s312_339 (seq g_s138_142)) (= (size g_s312_339) g_s300_326) (mem g_s145_150 (|+->| BOOL g_s138_142)) (mem g_s145_150 (|+->| BOOL g_s137_140)) (mem g_s145_150 (|+->| BOOL g_s136_138))))
(define-fun |def_lprp| () Bool  (mem g_s313_340 (|-->| (seq1 g_s138_142) g_s137_140)))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s314_341 (|-->| (seq1 g_s138_142) g_s136_138)) (mem g_s315_342 (|-->| (set_prod (seq1 g_s138_142) g_s137_140) g_s137_140))))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s317_343 (|-->| (interval e0 g_s209_229) g_s138_142)))
(assert (mem g_s318_344 g_s137_140))
(assert (|<=i| g_s318_344 (|+i| g_s209_229 e152)))
(assert (|<=i| e152 g_s318_344))
(assert (mem g_s319_345 g_s137_140))
; PO 1 in group 0
(push 1)
(assert (not (mem g_s313_340 (|+->| (dom g_s313_340) (ran g_s313_340)))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (and (|>=i| g_s318_344 e0) (|<=i| g_s318_344 (size (composition g_s321_346 g_s317_343))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (mem (restriction_head (composition g_s321_346 g_s317_343) g_s318_344) (dom g_s313_340))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s317_343 (|-->| (interval e0 g_s191_210) g_s138_142)))
(assert (mem g_s323_347 g_s138_142))
(assert (mem g_s324_348 g_s138_142))
(assert (|<=i| g_s324_348 g_s190_209))
(assert (|<i| g_s323_347 g_s324_348))
(assert (|<=i| e152 g_s324_348))
(assert (mem g_s319_345 g_s137_140))
; PO 1 in group 1
(push 1)
(assert (not (mem g_s313_340 (|+->| (dom g_s313_340) (ran g_s313_340)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (and (|>=i| g_s324_348 e0) (|<=i| g_s324_348 (size (composition g_s321_346 g_s317_343))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (and (|>=i| g_s323_347 e0) (|<=i| g_s323_347 (size (restriction_head (composition g_s321_346 g_s317_343) g_s324_348))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (mem (restriction_tail (restriction_head (composition g_s321_346 g_s317_343) g_s324_348) g_s323_347) (dom g_s313_340))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s319_345 g_s136_138))
(assert (mem g_s326_349 (|-->| (interval e0 g_s209_229) g_s138_142)))
(assert (mem g_s323_347 g_s137_140))
(assert (mem g_s318_344 g_s137_140))
(assert (|<i| g_s318_344 g_s140_144))
(assert (|<=i| (|+i| g_s323_347 g_s318_344) (|+i| g_s209_229 e152)))
(assert (|<=i| e152 g_s318_344))
; PO 1 in group 2
(push 1)
(assert (not (mem g_s314_341 (|+->| (dom g_s314_341) (ran g_s314_341)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (and (|>=i| g_s323_347 e0) (|<=i| g_s323_347 (size (composition g_s321_346 g_s326_349))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (and (|>=i| g_s318_344 e0) (|<=i| g_s318_344 (size (restriction_tail (composition g_s321_346 g_s326_349) g_s323_347))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (mem (restriction_head (restriction_tail (composition g_s321_346 g_s326_349) g_s323_347) g_s318_344) (dom g_s314_341))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s319_345 g_s137_140))
(assert (mem g_s326_349 (|-->| (interval e0 g_s209_229) g_s138_142)))
(assert (mem g_s318_344 g_s137_140))
(assert (|<=i| g_s318_344 (|+i| g_s209_229 e152)))
(assert (mem g_s328_350 g_s137_140))
(assert (|<=i| e152 g_s318_344))
; PO 1 in group 3
(push 1)
(assert (not (mem g_s315_342 (|+->| (dom g_s315_342) (ran g_s315_342)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (and (|>=i| g_s318_344 e0) (|<=i| g_s318_344 (size (composition g_s321_346 g_s326_349))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (mem (mapplet (restriction_head (composition g_s321_346 g_s326_349) g_s318_344) g_s328_350) (dom g_s315_342))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)