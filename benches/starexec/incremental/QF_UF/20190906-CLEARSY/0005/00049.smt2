(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e304 () U)
(declare-fun e151 () U)
(declare-fun e0 () U)
(declare-fun e180 () U)
(declare-fun e155 () U)
(declare-fun e248 () U)
(declare-fun e276 () U)
(declare-fun e250 () U)
(declare-fun e256 () U)
(declare-fun e301 () U)
(declare-fun e251 () U)
(declare-fun e496 () U)
(declare-fun e445 () U)
(declare-fun e275 () U)
(declare-fun e365 () U)
(declare-fun e366 () U)
(declare-fun e277 () U)
(declare-fun e293 () U)
(declare-fun e295 () U)
(declare-fun e291 () U)
(declare-fun e363 () U)
(declare-fun e307 () U)
(declare-fun e364 () U)
(declare-fun e326 () U)
(declare-fun e273 () U)
(declare-fun e153 () U)
(declare-fun e175 () U)
(declare-fun e327 () U)
(declare-fun e152 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_144 () U)
(declare-fun g_s143_143 () U)
(declare-fun g_s144_146 () U)
(declare-fun g_s145_145 () U)
(declare-fun g_s146_148 () U)
(declare-fun g_s147_147 () U)
(declare-fun g_s148_149 () U)
(declare-fun g_s149_150 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_154 () U)
(declare-fun g_s151_156 () U)
(declare-fun g_s152_158 () U)
(declare-fun g_s153_157 () U)
(declare-fun g_s154_160 () U)
(declare-fun g_s155_159 () U)
(declare-fun g_s156_161 () U)
(declare-fun g_s157_162 () U)
(declare-fun g_s158_163 () U)
(declare-fun g_s159_164 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_165 () U)
(declare-fun g_s161_166 () U)
(declare-fun g_s162_167 () U)
(declare-fun g_s163_168 () U)
(declare-fun g_s164_169 () U)
(declare-fun g_s165_170 () U)
(declare-fun g_s166_171 () U)
(declare-fun g_s167_172 () U)
(declare-fun g_s168_173 () U)
(declare-fun g_s169_174 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_176 () U)
(declare-fun g_s171_177 () U)
(declare-fun g_s172_178 () U)
(declare-fun g_s173_179 () U)
(declare-fun g_s174_181 () U)
(declare-fun g_s175_182 () U)
(declare-fun g_s176_183 () U)
(declare-fun g_s177_184 () U)
(declare-fun g_s178_185 () U)
(declare-fun g_s179_186 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_187 () U)
(declare-fun g_s181_188 () U)
(declare-fun g_s182_189 () U)
(declare-fun g_s183_190 () U)
(declare-fun g_s184_191 () U)
(declare-fun g_s185_192 () U)
(declare-fun g_s186_193 () U)
(declare-fun g_s187_194 () U)
(declare-fun g_s188_195 () U)
(declare-fun g_s189_196 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_197 () U)
(declare-fun g_s191_198 () U)
(declare-fun g_s192_199 () U)
(declare-fun g_s193_200 () U)
(declare-fun g_s194_201 () U)
(declare-fun g_s195_202 () U)
(declare-fun g_s196_203 () U)
(declare-fun g_s197_204 () U)
(declare-fun g_s198_205 () U)
(declare-fun g_s199_206 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_207 () U)
(declare-fun g_s201_208 () U)
(declare-fun g_s202_209 () U)
(declare-fun g_s203_210 () U)
(declare-fun g_s204_211 () U)
(declare-fun g_s205_212 () U)
(declare-fun g_s206_213 () U)
(declare-fun g_s207_214 () U)
(declare-fun g_s208_215 () U)
(declare-fun g_s209_216 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_217 () U)
(declare-fun g_s211_218 () U)
(declare-fun g_s212_219 () U)
(declare-fun g_s213_220 () U)
(declare-fun g_s214_221 () U)
(declare-fun g_s215_222 () U)
(declare-fun g_s216_223 () U)
(declare-fun g_s217_224 () U)
(declare-fun g_s218_225 () U)
(declare-fun g_s219_226 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_227 () U)
(declare-fun g_s221_228 () U)
(declare-fun g_s222_229 () U)
(declare-fun g_s223_230 () U)
(declare-fun g_s224_231 () U)
(declare-fun g_s225_232 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_249 () U)
(declare-fun g_s231_252 () U)
(declare-fun g_s232_253 () U)
(declare-fun g_s233_254 () U)
(declare-fun g_s234_255 () U)
(declare-fun g_s235_257 () U)
(declare-fun g_s236_258 () U)
(declare-fun g_s237_259 () U)
(declare-fun g_s238_260 () U)
(declare-fun g_s239_261 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_262 () U)
(declare-fun g_s241_263 () U)
(declare-fun g_s242_264 () U)
(declare-fun g_s243_265 () U)
(declare-fun g_s244_266 () U)
(declare-fun g_s245_267 () U)
(declare-fun g_s246_268 () U)
(declare-fun g_s247_269 () U)
(declare-fun g_s248_270 () U)
(declare-fun g_s249_271 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_272 () U)
(declare-fun g_s251_274 () U)
(declare-fun g_s252_278 () U)
(declare-fun g_s253_279 () U)
(declare-fun g_s254_280 () U)
(declare-fun g_s255_281 () U)
(declare-fun g_s256_282 () U)
(declare-fun g_s257_283 () U)
(declare-fun g_s258_284 () U)
(declare-fun g_s259_285 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_286 () U)
(declare-fun g_s261_287 () U)
(declare-fun g_s262_288 () U)
(declare-fun g_s263_289 () U)
(declare-fun g_s264_290 () U)
(declare-fun g_s265_292 () U)
(declare-fun g_s266_294 () U)
(declare-fun g_s267_296 () U)
(declare-fun g_s268_297 () U)
(declare-fun g_s269_298 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_299 () U)
(declare-fun g_s271_300 () U)
(declare-fun g_s272_303 () U)
(declare-fun g_s273_302 () U)
(declare-fun g_s274_305 () U)
(declare-fun g_s275_306 () U)
(declare-fun g_s276_308 () U)
(declare-fun g_s277_309 () U)
(declare-fun g_s278_310 () U)
(declare-fun g_s279_311 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_312 () U)
(declare-fun g_s281_313 () U)
(declare-fun g_s282_314 () U)
(declare-fun g_s283_315 () U)
(declare-fun g_s284_316 () U)
(declare-fun g_s285_317 () U)
(declare-fun g_s286_318 () U)
(declare-fun g_s287_319 () U)
(declare-fun g_s288_320 () U)
(declare-fun g_s289_321 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_322 () U)
(declare-fun g_s291_323 () U)
(declare-fun g_s292_324 () U)
(declare-fun g_s293_325 () U)
(declare-fun g_s294_328 () U)
(declare-fun g_s295_329 () U)
(declare-fun g_s296_330 () U)
(declare-fun g_s297_331 () U)
(declare-fun g_s298_332 () U)
(declare-fun g_s299_333 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_334 () U)
(declare-fun g_s301_335 () U)
(declare-fun g_s302_336 () U)
(declare-fun g_s303_337 () U)
(declare-fun g_s304_338 () U)
(declare-fun g_s305_339 () U)
(declare-fun g_s306_340 () U)
(declare-fun g_s307_341 () U)
(declare-fun g_s308_342 () U)
(declare-fun g_s309_343 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_344 () U)
(declare-fun g_s311_345 () U)
(declare-fun g_s312_346 () U)
(declare-fun g_s313_347 () U)
(declare-fun g_s314_348 () U)
(declare-fun g_s315_349 () U)
(declare-fun g_s316_350 () U)
(declare-fun g_s317_351 () U)
(declare-fun g_s318_352 () U)
(declare-fun g_s319_353 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_354 () U)
(declare-fun g_s321_355 () U)
(declare-fun g_s322_356 () U)
(declare-fun g_s323_357 () U)
(declare-fun g_s324_358 () U)
(declare-fun g_s325_359 () U)
(declare-fun g_s326_360 () U)
(declare-fun g_s327_361 () U)
(declare-fun g_s328_362 () U)
(declare-fun g_s329_367 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_368 () U)
(declare-fun g_s331_369 () U)
(declare-fun g_s332_370 () U)
(declare-fun g_s333_371 () U)
(declare-fun g_s334_372 () U)
(declare-fun g_s335_373 () U)
(declare-fun g_s336_374 () U)
(declare-fun g_s337_375 () U)
(declare-fun g_s338_376 () U)
(declare-fun g_s339_377 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_378 () U)
(declare-fun g_s341_379 () U)
(declare-fun g_s342_380 () U)
(declare-fun g_s343_381 () U)
(declare-fun g_s344_382 () U)
(declare-fun g_s345_383 () U)
(declare-fun g_s346_384 () U)
(declare-fun g_s347_385 () U)
(declare-fun g_s348_386 () U)
(declare-fun g_s349_387 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_388 () U)
(declare-fun g_s351_389 () U)
(declare-fun g_s352_390 () U)
(declare-fun g_s353_391 () U)
(declare-fun g_s354_392 () U)
(declare-fun g_s355_393 () U)
(declare-fun g_s356_394 () U)
(declare-fun g_s357_395 () U)
(declare-fun g_s358_396 () U)
(declare-fun g_s359_397 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_398 () U)
(declare-fun g_s361_399 () U)
(declare-fun g_s362_400 () U)
(declare-fun g_s363_401 () U)
(declare-fun g_s364_402 () U)
(declare-fun g_s365_403 () U)
(declare-fun g_s366_404 () U)
(declare-fun g_s367_405 () U)
(declare-fun g_s368_406 () U)
(declare-fun g_s369_407 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_408 () U)
(declare-fun g_s371_409 () U)
(declare-fun g_s372_410 () U)
(declare-fun g_s373_411 () U)
(declare-fun g_s374_412 () U)
(declare-fun g_s375_413 () U)
(declare-fun g_s376_414 () U)
(declare-fun g_s377_415 () U)
(declare-fun g_s378_416 () U)
(declare-fun g_s379_417 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_418 () U)
(declare-fun g_s381_419 () U)
(declare-fun g_s382_420 () U)
(declare-fun g_s383_421 () U)
(declare-fun g_s384_422 () U)
(declare-fun g_s385_423 () U)
(declare-fun g_s386_424 () U)
(declare-fun g_s387_425 () U)
(declare-fun g_s388_426 () U)
(declare-fun g_s389_427 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_428 () U)
(declare-fun g_s391_429 () U)
(declare-fun g_s392_430 () U)
(declare-fun g_s393_431 () U)
(declare-fun g_s394_432 () U)
(declare-fun g_s395_433 () U)
(declare-fun g_s396_434 () U)
(declare-fun g_s397_435 () U)
(declare-fun g_s398_436 () U)
(declare-fun g_s399_437 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_438 () U)
(declare-fun g_s401_439 () U)
(declare-fun g_s402_440 () U)
(declare-fun g_s403_441 () U)
(declare-fun g_s404_442 () U)
(declare-fun g_s405_443 () U)
(declare-fun g_s406_444 () U)
(declare-fun g_s407_446 () U)
(declare-fun g_s408_447 () U)
(declare-fun g_s409_448 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_449 () U)
(declare-fun g_s411_450 () U)
(declare-fun g_s412_451 () U)
(declare-fun g_s413_452 () U)
(declare-fun g_s414_453 () U)
(declare-fun g_s415_454 () U)
(declare-fun g_s416_455 () U)
(declare-fun g_s417_456 () U)
(declare-fun g_s418_457 () U)
(declare-fun g_s419_458 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_459 () U)
(declare-fun g_s421_460 () U)
(declare-fun g_s422_461 () U)
(declare-fun g_s423_463 () U)
(declare-fun g_s424_462 () U)
(declare-fun g_s425_464 () U)
(declare-fun g_s426_465 () U)
(declare-fun g_s427_467 () U)
(declare-fun g_s428_466 () U)
(declare-fun g_s429_468 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430_469 () U)
(declare-fun g_s431_470 () U)
(declare-fun g_s432_471 () U)
(declare-fun g_s433_472 () U)
(declare-fun g_s434_473 () U)
(declare-fun g_s435_474 () U)
(declare-fun g_s436_475 () U)
(declare-fun g_s437_476 () U)
(declare-fun g_s438_477 () U)
(declare-fun g_s439_478 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s440_479 () U)
(declare-fun g_s441_480 () U)
(declare-fun g_s442_481 () U)
(declare-fun g_s443_482 () U)
(declare-fun g_s444_483 () U)
(declare-fun g_s445_484 () U)
(declare-fun g_s446_485 () U)
(declare-fun g_s447_486 () U)
(declare-fun g_s448_487 () U)
(declare-fun g_s448$1_488 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s452_489 () U)
(declare-fun g_s454_490 () U)
(declare-fun g_s456_491 () U)
(declare-fun g_s456$1_492 () U)
(declare-fun g_s457_493 () U)
(declare-fun g_s458$1_494 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s460_495 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
(declare-fun e239 () U)
(declare-fun e240 () U)
(declare-fun e241 () U)
(declare-fun e233 () U)
(declare-fun e236 () U)
(declare-fun e234 () U)
(declare-fun e237 () U)
(declare-fun e235 () U)
(declare-fun e238 () U)
(declare-fun e242 () U)
(declare-fun e243 () U)
(declare-fun e244 () U)
(declare-fun e245 () U)
(declare-fun e246 () U)
(declare-fun e247 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 g_s4_5)))))) (= g_s9_10 (SET (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 (mapplet g_s53_54 (mapplet g_s52_53 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 g_s10_11))))))))))))))))))))))))))))))))))))))))))))))))) (= g_s58_59 (SET (mapplet g_s66_67 (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 (mapplet g_s62_63 (mapplet g_s61_62 (mapplet g_s60_61 g_s59_60))))))))) (= g_s67_68 (SET (mapplet g_s94_95 (mapplet g_s93_94 (mapplet g_s92_93 (mapplet g_s91_92 (mapplet g_s90_91 (mapplet g_s89_90 (mapplet g_s88_89 (mapplet g_s87_88 (mapplet g_s86_87 (mapplet g_s85_86 (mapplet g_s84_85 (mapplet g_s83_84 (mapplet g_s82_83 (mapplet g_s81_82 (mapplet g_s80_81 (mapplet g_s79_80 (mapplet g_s78_79 (mapplet g_s77_78 (mapplet g_s76_77 (mapplet g_s75_76 (mapplet g_s74_75 (mapplet g_s73_74 (mapplet g_s72_73 (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 g_s68_69)))))))))))))))))))))))))))) (= g_s95_96 (SET (mapplet g_s97_98 g_s96_97))) (= g_s98_99 (SET (mapplet g_s107_108 (mapplet g_s106_107 (mapplet g_s105_106 (mapplet g_s104_105 (mapplet g_s103_104 (mapplet g_s102_103 (mapplet g_s101_102 (mapplet g_s100_101 g_s99_100)))))))))) (= g_s108_109 (SET (mapplet g_s111_112 (mapplet g_s110_111 g_s109_110)))) (= g_s112_113 (SET (mapplet g_s114_115 g_s113_114))) (= g_s115_116 (SET (mapplet g_s122_123 (mapplet g_s121_122 (mapplet g_s120_121 (mapplet g_s119_120 (mapplet g_s118_119 (mapplet g_s117_118 g_s116_117)))))))) (= g_s123_124 (SET (mapplet g_s132_133 (mapplet g_s131_132 (mapplet g_s130_131 (mapplet g_s129_130 (mapplet g_s128_129 (mapplet g_s127_128 (mapplet g_s126_127 (mapplet g_s125_126 g_s124_125)))))))))) (= g_s133_134 (SET (mapplet g_s137_138 (mapplet g_s136_137 (mapplet g_s135_136 g_s134_135))))) (= g_s138_139 (SET (mapplet g_s141_142 (mapplet g_s140_141 g_s139_140)))) (mem g_s142_144 g_s143_143) (mem g_s144_146 g_s145_145) (mem g_s146_148 g_s147_147) (mem g_s148_149 g_s147_147) (mem g_s149_150 g_s147_147) (= g_s142_144 e151) (= g_s144_146 e152) (= g_s146_148 e153) (and (|>=i| g_s148_149 e0) (|<=i| g_s148_149 g_s146_148)) (and (|>=i| g_s149_150 e0) (|<=i| g_s149_150 g_s146_148)) (not (= g_s148_149 g_s149_150)) (= g_s150_154 (SET (mapplet g_s149_150 g_s148_149))) (|<=i| g_s148_149 e155) (|<=i| g_s149_150 e155) (= g_s151_156 (SET (mapplet (mapplet FALSE g_s149_150) (mapplet TRUE g_s148_149)))) (mem g_s152_158 (|-->| (set_prod (set_prod (set_prod g_s143_143 (|-->| (interval e0 g_s153_157) g_s143_143)) g_s147_147) g_s143_143) g_s145_145)) (mem g_s154_160 (|-->| (set_prod (set_prod (set_prod g_s143_143 (|-->| (interval e0 g_s155_159) g_s143_143)) g_s147_147) g_s143_143) g_s145_145)) (mem g_s156_161 g_s143_143) (mem g_s157_162 g_s143_143) (not (= g_s156_161 g_s157_162)) (mem g_s158_163 NAT1) (mem g_s159_164 g_s143_143) (|<i| g_s159_164 (|-i| g_s142_144 g_s144_146)) (mem g_s160_165 g_s143_143) (= g_s160_165 (|+i| g_s159_164 g_s158_163)) (mem g_s161_166 g_s143_143) (mem g_s162_167 g_s143_143) (mem g_s163_168 NAT1) (mem g_s164_169 NAT1) (mem g_s158_163 NAT1) (mem g_s165_170 g_s143_143) (mem g_s166_171 g_s143_143) (mem g_s167_172 g_s143_143) (= g_s166_171 (|+i| g_s165_170 g_s163_168)) (= g_s167_172 (|+i| g_s165_170 g_s164_169)) (mem g_s168_173 g_s145_145) (mem g_s169_174 g_s143_143) (|<=i| g_s169_174 e175) (mem g_s170_176 NAT1) (mem g_s171_177 g_s143_143) (|<i| g_s171_177 (|-i| g_s142_144 g_s144_146)) (mem g_s172_178 g_s143_143) (= g_s172_178 (|+i| g_s171_177 g_s170_176)) (mem g_s173_179 g_s143_143) (|<=i| e180 g_s173_179) (mem g_s174_181 g_s143_143) (mem g_s175_182 g_s143_143) (mem g_s176_183 g_s143_143) (|<i| g_s176_183 (|-i| g_s142_144 g_s144_146)) (mem g_s177_184 g_s143_143) (mem g_s178_185 NAT1) (= g_s177_184 (|+i| g_s176_183 g_s178_185)) (mem g_s179_186 NATURAL1) (mem g_s180_187 g_s143_143) (= g_s180_187 (|+i| g_s176_183 g_s179_186)) (mem g_s181_188 g_s143_143) (mem g_s182_189 g_s143_143) (mem g_s183_190 g_s143_143) (mem g_s184_191 g_s143_143) (mem g_s185_192 g_s145_145) (|<i| (|*i| e155 g_s185_192) g_s144_146) (mem g_s186_193 NAT1) (mem g_s187_194 g_s145_145) (mem g_s188_195 g_s145_145) (= g_s188_195 (|+i| g_s187_194 g_s186_193)) (mem g_s189_196 g_s143_143) (mem g_s190_197 g_s143_143) (mem g_s191_198 g_s143_143) (mem g_s192_199 g_s143_143) (mem g_s193_200 g_s143_143) (mem g_s194_201 g_s143_143) (mem g_s195_202 g_s143_143) (mem g_s196_203 g_s143_143) (mem g_s197_204 g_s143_143) (mem g_s198_205 g_s143_143) (= g_s143_143 (interval e0 e151)) (= g_s145_145 (interval e0 e152)) (= g_s147_147 (interval e0 e153)) (mem g_s199_206 (|-->| (set_prod g_s143_143 g_s147_147) g_s143_143)) (mem g_s200_207 (|-->| (set_prod g_s143_143 g_s147_147) g_s143_143)) (mem g_s201_208 (|-->| g_s143_143 g_s143_143)) (mem g_s202_209 (|-->| (set_prod g_s143_143 g_s143_143) g_s143_143)) (mem g_s203_210 (|-->| (set_prod g_s143_143 g_s143_143) g_s143_143)) (mem g_s204_211 (|-->| (set_prod g_s143_143 g_s143_143) g_s143_143)) (mem g_s205_212 (|-->| (set_prod g_s145_145 g_s147_147) g_s145_145)) (mem g_s206_213 (|-->| (set_prod g_s145_145 g_s147_147) g_s145_145)) (mem g_s207_214 (|-->| g_s145_145 g_s145_145)) (mem g_s208_215 (|-->| (set_prod g_s145_145 g_s145_145) g_s145_145)) (mem g_s209_216 (|-->| (set_prod g_s145_145 g_s145_145) g_s145_145)) (mem g_s210_217 (|-->| (set_prod g_s145_145 g_s145_145) g_s145_145)) (mem g_s211_218 (|-->| (set_prod g_s147_147 g_s147_147) g_s147_147)) (mem g_s212_219 (|-->| (set_prod g_s147_147 g_s147_147) g_s147_147)) (mem g_s213_220 (|-->| g_s147_147 g_s147_147)) (mem g_s214_221 (|-->| (set_prod g_s147_147 g_s147_147) g_s147_147)) (mem g_s215_222 (|-->| (set_prod g_s147_147 g_s147_147) g_s147_147)) (mem g_s216_223 (|-->| (set_prod g_s147_147 g_s147_147) g_s147_147)) (mem g_s217_224 (|-->| (set_prod g_s143_143 g_s143_143) g_s143_143)) (mem g_s218_225 (|-->| (set_prod g_s143_143 g_s143_143) g_s143_143)) (mem g_s219_226 (|-->| (set_prod g_s143_143 g_s143_143) g_s143_143)) (mem g_s220_227 (|-->| (set_prod g_s145_145 g_s145_145) g_s145_145)) (mem g_s221_228 (|-->| (set_prod g_s145_145 g_s145_145) g_s145_145)) (mem g_s222_229 (|-->| (set_prod g_s145_145 g_s145_145) g_s145_145)) (mem g_s223_230 (|-->| (set_prod g_s147_147 g_s147_147) g_s147_147)) (mem g_s224_231 (|-->| (set_prod g_s147_147 g_s147_147) g_s147_147)) (mem g_s225_232 (|-->| (set_prod g_s147_147 g_s147_147) g_s147_147)) (= g_s199_206 e233) (= g_s205_212 e234) (= g_s211_218 e235) (= g_s200_207 e236) (= g_s206_213 e237) (= g_s212_219 e238) (= g_s217_224 e239) (= g_s218_225 e240) (= g_s219_226 e241) (= g_s220_227 e242) (= g_s221_228 e243) (= g_s222_229 e244) (= g_s223_230 e245) (= g_s224_231 e246) (= g_s225_232 e247) (= g_s230_249 (|-->| (interval e180 e248) g_s147_147)) (mem g_s231_252 (|-->| (set_prod (interval e0 e251) (interval e0 e250)) g_s147_147)) (mem g_s232_253 (|-->| (set_prod (interval e0 e251) (interval e0 e155)) g_s147_147)) (mem g_s233_254 (|-->| (set_prod (interval e0 e251) (interval e0 e155)) g_s147_147)) (mem g_s234_255 g_s147_147) (|<=i| e256 g_s234_255) (mem g_s235_257 (|-->| (interval e0 e251) g_s145_145)) (mem g_s236_258 (|-->| (interval e0 e251) g_s145_145)) (mem g_s237_259 g_s143_143) (mem g_s238_260 g_s147_147) (mem g_s239_261 g_s147_147) (mem g_s240_262 g_s147_147) (mem g_s241_263 g_s147_147) (mem g_s242_264 g_s147_147) (mem g_s243_265 g_s147_147) (mem g_s244_266 g_s147_147) (mem g_s245_267 g_s147_147) (mem g_s246_268 g_s147_147) (mem g_s247_269 g_s145_145) (not (= g_s246_268 g_s242_264)) (mem g_s248_270 g_s147_147) (mem g_s249_271 g_s147_147) (mem g_s250_272 g_s147_147) (|<=i| g_s250_272 e273) (mem g_s251_274 g_s147_147) (|<=i| (|+i| g_s250_272 e275) g_s249_271) (|<=i| (|+i| g_s251_274 e276) g_s249_271) (|<=i| e277 g_s249_271) (mem g_s252_278 g_s230_249) (= g_s252_278 (set_prod (interval e180 e248) (SET e153))) (mem g_s253_279 g_s147_147) (mem g_s254_280 g_s147_147) (mem g_s255_281 g_s147_147) (mem g_s256_282 g_s147_147) (mem g_s257_283 g_s147_147) (mem g_s258_284 g_s147_147) (mem g_s259_285 g_s147_147) (mem g_s260_286 g_s147_147) (mem g_s261_287 g_s147_147) (mem g_s262_288 g_s143_143) (mem g_s263_289 (|-->| (interval e0 e153) g_s145_145)) (mem g_s264_290 g_s147_147) (|<=i| g_s264_290 e291) (mem g_s265_292 g_s147_147) (|<i| g_s265_292 e293) (mem g_s266_294 g_s147_147) (|<i| g_s266_294 e293) (|<i| (|+i| g_s265_292 g_s266_294) e295) (mem g_s267_296 g_s145_145) (mem g_s268_297 g_s147_147) (mem g_s269_298 g_s147_147) (mem g_s270_299 g_s147_147) (mem g_s271_300 g_s147_147) (|<=i| e301 g_s269_298) (|<=i| g_s269_298 e291) (|<=i| (|+i| g_s272_303 g_s273_302) (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| e295 g_s266_294)) e295)) (|<=i| e0 (|-i| (|+i| e152 g_s273_302) (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| e295 g_s266_294)) e295))) (|<=i| (|+i| g_s272_303 g_s273_302) (|*i| g_s264_290 g_s234_255)) (|<=i| (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| e295 g_s265_292)) e295) (|+i| (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|+i| e295 g_s266_294)) e295) e180)) (|<=i| (|*i| g_s234_255 (|-i| e295 g_s266_294)) g_s142_144) (|<=i| (idiv (|*i| g_s264_290 (|*i| g_s234_255 (|-i| e295 g_s266_294))) e295) e152) (|<=i| g_s272_303 (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| e295 g_s266_294)) e295)) (|<=i| (|*i| g_s264_290 g_s234_255) e152) (|<=i| e0 (|-i| (|+i| e180 (|*i| g_s264_290 g_s234_255)) (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| (|-i| e295 g_s266_294) g_s265_292)) e295))) (|<=i| (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| e295 g_s266_294)) e295) (|*i| g_s264_290 g_s234_255)) (|<=i| e0 (|-i| (|+i| e180 (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| e295 g_s266_294)) e295)) (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| (|-i| e295 g_s266_294) g_s265_292)) e295))) (|<=i| (|*i| g_s264_290 g_s234_255) (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|+i| e295 g_s266_294)) e295)) (|<=i| e0 (|-i| (|+i| e180 (|*i| g_s264_290 g_s234_255)) (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| e295 g_s265_292)) e295))) (|<=i| e0 (|+i| e180 (|*i| g_s264_290 g_s234_255))) (|<=i| e0 (|-i| (|+i| (|+i| e152 g_s272_303) g_s273_302) (|*i| g_s264_290 g_s234_255))) (|<=i| e0 (|-i| (|-i| e304 g_s261_287) (|*i| g_s264_290 g_s234_255))) (|<=i| e0 (|-i| (|-i| e304 g_s261_287) (idiv (|*i| (|*i| g_s264_290 g_s234_255) (|-i| e295 g_s266_294)) e295))) (|<=i| (|*i| (|*i| e155 g_s264_290) g_s234_255) e151) (|<=i| (|*i| (|*i| e155 g_s264_290) g_s234_255) e304) (|<=i| e0 (|-i| (|-i| e304 g_s261_287) (|*i| (|*i| e155 g_s264_290) g_s234_255))) (mem g_s274_305 g_s147_147) (|<i| g_s274_305 g_s146_148) (mem g_s275_306 g_s147_147) (|<=i| e307 g_s274_305) (= g_s275_306 (|-i| g_s274_305 e180)) (mem g_s276_308 g_s147_147) (mem g_s277_309 g_s147_147) (= g_s276_308 e155) (= g_s277_309 e180) (mem g_s278_310 g_s145_145) (mem g_s279_311 g_s145_145) (mem g_s280_312 g_s145_145) (mem g_s281_313 g_s147_147) (mem g_s282_314 g_s147_147) (mem g_s283_315 g_s147_147) (mem g_s284_316 g_s147_147) (mem g_s285_317 g_s147_147) (mem g_s286_318 g_s147_147) (not (= g_s285_317 g_s286_318)) (mem g_s287_319 g_s147_147) (mem g_s288_320 g_s147_147) (mem g_s289_321 g_s147_147) (not (= g_s287_319 g_s288_320)) (not (= g_s287_319 g_s289_321)) (not (= g_s288_320 g_s289_321)) (mem g_s290_322 g_s143_143) (mem g_s291_323 g_s147_147) (mem g_s292_324 g_s147_147) (mem g_s293_325 g_s145_145) (|<=i| e326 g_s293_325) (|<=i| g_s293_325 e327) (|<=i| g_s249_271 g_s293_325) (mem g_s294_328 (|-->| (interval e0 e153) g_s145_145)) (mem g_s295_329 g_s143_143) (mem g_s296_330 g_s143_143) (mem g_s297_331 g_s145_145) (mem g_s298_332 g_s145_145) (mem g_s299_333 g_s143_143) (mem g_s300_334 g_s143_143) (mem g_s301_335 g_s143_143) (mem g_s302_336 g_s143_143) (mem g_s303_337 g_s143_143) (mem g_s304_338 g_s143_143) (mem g_s305_339 g_s143_143) (mem g_s306_340 g_s143_143) (mem g_s307_341 g_s143_143) (mem g_s308_342 g_s143_143) (mem g_s309_343 g_s143_143) (mem g_s310_344 g_s143_143) (mem g_s311_345 g_s143_143) (mem g_s312_346 g_s143_143) (mem g_s313_347 g_s143_143) (mem g_s314_348 g_s143_143) (mem g_s315_349 g_s143_143) (mem g_s316_350 g_s143_143) (mem g_s317_351 g_s143_143) (mem g_s318_352 g_s143_143) (mem g_s319_353 g_s143_143) (mem g_s320_354 g_s145_145) (mem g_s321_355 (|-->| (interval e0 e155) g_s147_147)) (mem g_s322_356 g_s147_147) (|<i| g_s322_356 g_s146_148) (mem g_s323_357 g_s147_147) (= g_s323_357 (|-i| g_s322_356 e180)) (mem g_s324_358 g_s147_147) (|<=i| g_s324_358 g_s322_356) (= g_s324_358 e155) (mem g_s325_359 g_s147_147) (mem g_s326_360 g_s147_147) (= g_s326_360 g_s325_359) (= g_s326_360 e155) (mem g_s327_361 (|-->| (interval e0 e248) g_s147_147)) (mem g_s328_362 (|-->| (interval e0 e248) g_s147_147)) (|<=i| (|+i| e363 (|*i| e301 g_s322_356)) g_s293_325) (|<=i| (|+i| e364 (|*i| e248 g_s269_298)) g_s293_325) (|<=i| (|*i| e301 g_s322_356) e365) (|<=i| (|*i| e248 g_s269_298) e366) (mem g_s329_367 (|-->| (interval e0 e155) g_s147_147)) (mem g_s330_368 (|-->| (seq1 g_s147_147) g_s145_145))))
(define-fun |def_seext| () Bool (and (mem g_s331_369 g_s143_143) (mem g_s332_370 g_s143_143) (mem g_s333_371 g_s147_147) (or (= g_s333_371 e180) (= g_s333_371 e155)) (mem g_s334_372 g_s143_143) (mem g_s335_373 g_s143_143) (mem g_s336_374 g_s143_143) (mem g_s337_375 g_s143_143) (mem g_s338_376 g_s143_143) (mem g_s339_377 g_s143_143) (mem g_s340_378 (|-->| (interval e0 g_s155_159) g_s147_147)) (mem g_s341_379 g_s143_143) (mem g_s342_380 g_s143_143) (mem g_s343_381 g_s143_143) (mem g_s344_382 g_s143_143) (mem g_s345_383 g_s143_143) (mem g_s346_384 (|-->| (interval e0 e155) g_s147_147)) (mem g_s347_385 (|-->| (interval e0 e155) g_s147_147)) (mem g_s348_386 g_s145_145) (mem g_s349_387 g_s147_147) (mem g_s350_388 g_s147_147) (mem g_s351_389 g_s147_147) (mem g_s352_390 g_s147_147) (mem g_s353_391 g_s147_147) (mem g_s354_392 (|-->| (interval e0 g_s293_325) g_s147_147)) (mem g_s355_393 g_s147_147) (mem g_s356_394 g_s147_147) (mem g_s357_395 g_s145_145) (mem g_s358_396 (|-->| (interval e0 e155) g_s147_147)) (mem g_s359_397 (|-->| (interval e0 e155) g_s147_147)) (mem g_s360_398 g_s147_147) (mem g_s361_399 g_s147_147) (mem g_s362_400 g_s147_147) (mem g_s363_401 g_s147_147) (mem g_s364_402 (|-->| (interval e0 (|-i| g_s363_401 e180)) g_s147_147)) (mem g_s365_403 g_s145_145) (mem g_s366_404 g_s145_145) (mem g_s367_405 g_s147_147) (mem g_s368_406 g_s147_147) (mem g_s369_407 g_s147_147) (mem g_s370_408 g_s147_147) (mem g_s371_409 (|-->| (interval e0 (|-i| g_s370_408 e180)) g_s147_147)) (mem g_s372_410 (|-->| (interval e0 e155) g_s147_147)) (mem g_s373_411 g_s147_147) (mem g_s374_412 (|-->| (interval e0 e250) g_s147_147)) (mem g_s375_413 (|-->| (interval e0 e155) g_s147_147)) (mem g_s376_414 g_s145_145) (mem g_s377_415 g_s145_145) (mem g_s378_416 g_s147_147) (mem g_s379_417 g_s147_147) (mem g_s380_418 g_s147_147) (mem g_s381_419 g_s147_147) (mem g_s382_420 g_s147_147) (mem g_s383_421 g_s147_147) (mem g_s384_422 g_s147_147) (mem g_s385_423 g_s147_147) (mem g_s386_424 g_s147_147) (mem g_s387_425 g_s147_147) (mem g_s388_426 g_s147_147) (mem g_s389_427 g_s147_147) (mem g_s390_428 g_s143_143) (mem g_s391_429 g_s143_143) (mem g_s392_430 g_s143_143) (mem g_s393_431 g_s143_143) (mem g_s394_432 (|-->| (interval e0 g_s293_325) g_s147_147)) (mem g_s395_433 (|-->| (interval e0 g_s293_325) g_s147_147)) (mem g_s396_434 (|-->| (interval e0 g_s293_325) g_s147_147)) (mem g_s397_435 (|-->| (interval e0 g_s293_325) g_s147_147)) (mem g_s398_436 (|-->| (interval e0 g_s293_325) g_s147_147)) (mem g_s399_437 (|-->| (interval e0 g_s293_325) g_s147_147)) (mem g_s400_438 g_s145_145) (|<=i| g_s400_438 g_s293_325) (mem g_s401_439 g_s145_145) (|<=i| g_s401_439 g_s293_325) (mem g_s402_440 g_s145_145) (|<=i| g_s402_440 g_s293_325) (mem g_s403_441 g_s145_145) (|<=i| g_s403_441 g_s293_325) (mem g_s404_442 g_s145_145) (|<=i| g_s404_442 g_s293_325) (mem g_s405_443 g_s145_145) (|<=i| g_s405_443 g_s293_325) (mem g_s406_444 g_s147_147) (mem g_s407_446 (|-->| (interval e0 e445) g_s147_147)) (mem g_s408_447 g_s147_147) (mem g_s409_448 g_s143_143) (mem g_s410_449 g_s143_143) (mem g_s411_450 g_s143_143) (mem g_s412_451 g_s143_143) (mem g_s413_452 (seq g_s145_145)) (= (size g_s413_452) g_s403_441) (mem g_s414_453 (seq g_s147_147)) (= (size g_s414_453) g_s403_441) (mem g_s415_454 (seq g_s147_147)) (= (size g_s415_454) g_s403_441) (mem g_s416_455 NATURAL) (mem g_s417_456 g_s147_147) (mem g_s418_457 g_s147_147) (mem g_s419_458 NATURAL) (mem g_s420_459 BOOL) (subset g_s421_460 NATURAL1) (mem g_s422_461 (FIN NATURAL1)) (=> (not (= g_s421_460 empty)) (not (= g_s422_461 empty))) (mem g_s423_463 (|-->| (interval e0 g_s424_462) (|-->| (interval e180 g_s322_356) g_s147_147))) (mem g_s425_464 (|-->| (interval e0 g_s424_462) g_s145_145)) (mem g_s426_465 (|-->| (interval e0 g_s424_462) g_s147_147)) (mem g_s427_467 (|-->| (set_prod (interval e0 g_s424_462) (interval e180 g_s428_466)) g_s147_147)) (mem g_s429_468 (|-->| (interval e0 g_s269_298) g_s147_147)) (mem g_s430_469 g_s147_147) (|<=i| e180 g_s430_469) (mem g_s431_470 g_s147_147) (|<=i| e180 g_s431_470) (mem g_s432_471 g_s147_147) (mem g_s433_472 g_s147_147) (mem g_s434_473 g_s147_147) (mem g_s435_474 g_s147_147) (mem g_s436_475 g_s147_147) (mem g_s437_476 (|-->| (interval e0 g_s269_298) g_s150_154)) (mem g_s438_477 g_s143_143) (mem g_s439_478 g_s147_147) (mem g_s440_479 (|-->| (interval e0 e250) g_s147_147)) (mem g_s441_480 g_s145_145) (mem g_s442_481 (|-->| (interval e0 e248) g_s147_147)) (mem g_s443_482 g_s145_145) (mem g_s444_483 g_s145_145) (mem g_s445_484 g_s147_147) (mem g_s446_485 (|-->| (seq1 g_s147_147) g_s143_143)) (mem g_s447_486 (|-->| (set_prod (seq1 g_s147_147) g_s145_145) g_s145_145)) (mem g_s151_156 (|+->| BOOL g_s147_147)) (mem g_s151_156 (|+->| BOOL g_s145_145)) (mem g_s151_156 (|+->| BOOL g_s143_143))))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool  (mem g_s448_487 (|-->| (interval e0 g_s275_306) g_s147_147)))
(define-fun |def_inv| () Bool (and (= g_s448_487 g_s448$1_488) (mem g_s448$1_488 (|-->| (interval e0 g_s275_306) g_s147_147))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
; PO 1 in group 0
(assert (not (mem (set_prod (interval e0 g_s275_306) (SET e153)) (|-->| (interval e0 g_s275_306) g_s147_147))))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s452_489 g_s147_147))
; PO 1 in group 1
(assert (not (=> lh_1 (mem (|<+| g_s448$1_488 (SET (mapplet e0 g_s452_489))) (|-->| (interval e0 g_s275_306) g_s147_147)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s454_490 g_s147_147))
(define-fun lh_2 () Bool (and (|>=i| g_s454_490 e0) (|<=i| g_s454_490 g_s275_306)))
(define-fun lh_3 () Bool (mem g_s452_489 g_s147_147))
; PO 1 in group 2
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (|<+| g_s448$1_488 (SET (mapplet g_s454_490 g_s452_489))) (|-->| (interval e0 g_s275_306) g_s147_147)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s456$1_492 g_s456_491))
(define-fun lh_1 () Bool (mem g_s457_493 g_s147_147))
(define-fun lh_2 () Bool (mem g_s456_491 g_s145_145))
(define-fun lh_3 () Bool (= g_s439_478 g_s148_149))
(define-fun lh_4 () Bool (|<=i| (|+i| g_s457_493 e180) g_s146_148))
(define-fun lh_5 () Bool (|<=i| g_s457_493 g_s274_305))
(define-fun lh_6 () Bool (|<i| e155 g_s457_493))
(define-fun lh_7 () Bool (mem g_s458$1_494 g_s145_145))
(define-fun lh_8 () Bool (mem g_s448$1_488 (|-->| (interval e0 g_s275_306) g_s147_147)))
(define-fun lh_9 () Bool (mem e155 g_s147_147))
(define-fun lh_10 () Bool (|<=i| e180 g_s457_493))
(define-fun lh_11 () Bool (mem g_s456$1_492 g_s145_145))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem e155 g_s147_147))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s456$1_492 g_s145_145))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (|<=i| e180 g_s457_493))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (= (apply g_s209_216 (mapplet (apply g_s330_368 (restriction_tail (restriction_head (composition g_s460_495 g_s448$1_488) g_s457_493) e155)) g_s441_480)) (apply g_s209_216 (mapplet (apply g_s330_368 (restriction_tail (domain_restriction (interval e180 g_s457_493) (composition g_s460_495 g_s448$1_488)) e155)) g_s441_480))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s456$1_492 g_s456_491))
(define-fun lh_1 () Bool (mem g_s457_493 g_s147_147))
(define-fun lh_2 () Bool (mem g_s456_491 g_s145_145))
(define-fun lh_3 () Bool (|<=i| (|+i| g_s457_493 e180) g_s146_148))
(define-fun lh_4 () Bool (|<=i| g_s457_493 g_s274_305))
(define-fun lh_5 () Bool (|<=i| e445 g_s457_493))
(define-fun lh_6 () Bool (mem g_s448$1_488 (|-->| (interval e0 g_s275_306) g_s147_147)))
(define-fun lh_7 () Bool (mem e496 g_s147_147))
(define-fun lh_8 () Bool (|<i| e496 g_s457_493))
(define-fun lh_9 () Bool (|<=i| e180 g_s457_493))
(define-fun lh_10 () Bool (mem g_s456$1_492 g_s145_145))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem e496 g_s147_147))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s456$1_492 g_s145_145))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (|<i| e496 g_s457_493))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (|<=i| e180 g_s457_493))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= (apply g_s330_368 (restriction_tail (restriction_head (composition g_s460_495 g_s448$1_488) g_s457_493) e496)) (apply g_s330_368 (restriction_tail (domain_restriction (interval e180 g_s457_493) (composition g_s460_495 g_s448$1_488)) e496))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s457_493 g_s147_147))
(assert (mem g_s456_491 g_s145_145))
(assert (= g_s439_478 g_s148_149))
(assert (|<=i| (|+i| g_s457_493 e180) g_s146_148))
(assert (|<=i| g_s457_493 g_s274_305))
(assert (|<i| e155 g_s457_493))
(define-fun lh_1 () Bool (mem g_s458$1_494 g_s145_145))
; PO 1 in group 5
(push 1)
(assert (not (=> lh_1 (mem g_s209_216 (|+->| (dom g_s209_216) (ran g_s209_216))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> lh_1 (mem (mapplet (apply g_s330_368 (restriction_tail (restriction_head (composition g_s460_495 g_s448$1_488) g_s457_493) e155)) g_s441_480) (dom g_s209_216)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s452_489 g_s147_147))
(assert (and (|>=i| g_s452_489 e0) (|<=i| g_s452_489 g_s275_306)))
(assert (mem g_s456_491 g_s147_147))
; PO 1 in group 6
(push 1)
(assert (not (mem g_s448$1_488 (|+->| (dom g_s448$1_488) (ran g_s448$1_488)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (mem g_s452_489 (dom g_s448$1_488))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)