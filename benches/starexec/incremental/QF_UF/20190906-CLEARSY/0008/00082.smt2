(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e49 () U)
(declare-fun e0 () U)
(declare-fun e73 () U)
(declare-fun e61 () U)
(declare-fun e67 () U)
(declare-fun e121 () U)
(declare-fun e93 () U)
(declare-fun e126 () U)
(declare-fun e124 () U)
(declare-fun e111 () U)
(declare-fun e91 () U)
(declare-fun e197 () U)
(declare-fun e304 () U)
(declare-fun e118 () U)
(declare-fun e109 () U)
(declare-fun e86 () U)
(declare-fun e89 () U)
(declare-fun e171 () U)
(declare-fun e53 () U)
(declare-fun e202 () U)
(declare-fun e256 () U)
(declare-fun e180 () U)
(declare-fun e51 () U)
(declare-fun e238 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_113 () U)
(declare-fun g_s101_114 () U)
(declare-fun g_s102_115 () U)
(declare-fun g_s103_116 () U)
(declare-fun g_s104_117 () U)
(declare-fun g_s105_119 () U)
(declare-fun g_s106_120 () U)
(declare-fun g_s107_122 () U)
(declare-fun g_s108_123 () U)
(declare-fun g_s109_125 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s112_128 () U)
(declare-fun g_s113_129 () U)
(declare-fun g_s114_130 () U)
(declare-fun g_s115_131 () U)
(declare-fun g_s116_132 () U)
(declare-fun g_s117_133 () U)
(declare-fun g_s118_134 () U)
(declare-fun g_s119_135 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_136 () U)
(declare-fun g_s121_137 () U)
(declare-fun g_s122_138 () U)
(declare-fun g_s123_139 () U)
(declare-fun g_s124_140 () U)
(declare-fun g_s125_141 () U)
(declare-fun g_s126_142 () U)
(declare-fun g_s127_143 () U)
(declare-fun g_s128_144 () U)
(declare-fun g_s129_145 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_146 () U)
(declare-fun g_s131_147 () U)
(declare-fun g_s132_148 () U)
(declare-fun g_s133_149 () U)
(declare-fun g_s134_150 () U)
(declare-fun g_s135_151 () U)
(declare-fun g_s136_152 () U)
(declare-fun g_s137_153 () U)
(declare-fun g_s138_154 () U)
(declare-fun g_s139_155 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_156 () U)
(declare-fun g_s141_157 () U)
(declare-fun g_s142_158 () U)
(declare-fun g_s143_159 () U)
(declare-fun g_s144_160 () U)
(declare-fun g_s145_161 () U)
(declare-fun g_s146_162 () U)
(declare-fun g_s147_163 () U)
(declare-fun g_s148_164 () U)
(declare-fun g_s149_165 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_166 () U)
(declare-fun g_s151_167 () U)
(declare-fun g_s152_168 () U)
(declare-fun g_s153_169 () U)
(declare-fun g_s154_170 () U)
(declare-fun g_s155_172 () U)
(declare-fun g_s156_173 () U)
(declare-fun g_s157_174 () U)
(declare-fun g_s158_175 () U)
(declare-fun g_s159_176 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_177 () U)
(declare-fun g_s161_178 () U)
(declare-fun g_s162_179 () U)
(declare-fun g_s163_181 () U)
(declare-fun g_s164_182 () U)
(declare-fun g_s165_183 () U)
(declare-fun g_s166_184 () U)
(declare-fun g_s167_185 () U)
(declare-fun g_s168_186 () U)
(declare-fun g_s169_187 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_188 () U)
(declare-fun g_s171_189 () U)
(declare-fun g_s172_190 () U)
(declare-fun g_s173_191 () U)
(declare-fun g_s174_192 () U)
(declare-fun g_s175_193 () U)
(declare-fun g_s176_194 () U)
(declare-fun g_s177_195 () U)
(declare-fun g_s178_196 () U)
(declare-fun g_s179_198 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_199 () U)
(declare-fun g_s181_200 () U)
(declare-fun g_s182_201 () U)
(declare-fun g_s183_203 () U)
(declare-fun g_s184_204 () U)
(declare-fun g_s185_205 () U)
(declare-fun g_s186_206 () U)
(declare-fun g_s187_207 () U)
(declare-fun g_s188_208 () U)
(declare-fun g_s189_209 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_210 () U)
(declare-fun g_s191_211 () U)
(declare-fun g_s192_212 () U)
(declare-fun g_s193_213 () U)
(declare-fun g_s194_214 () U)
(declare-fun g_s195_215 () U)
(declare-fun g_s196_216 () U)
(declare-fun g_s197_217 () U)
(declare-fun g_s198_218 () U)
(declare-fun g_s199_219 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_220 () U)
(declare-fun g_s201_221 () U)
(declare-fun g_s202_222 () U)
(declare-fun g_s203_223 () U)
(declare-fun g_s204_224 () U)
(declare-fun g_s205_225 () U)
(declare-fun g_s206_226 () U)
(declare-fun g_s207_227 () U)
(declare-fun g_s208_228 () U)
(declare-fun g_s209_229 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_230 () U)
(declare-fun g_s211_231 () U)
(declare-fun g_s212_232 () U)
(declare-fun g_s213_233 () U)
(declare-fun g_s214_234 () U)
(declare-fun g_s215_235 () U)
(declare-fun g_s216_236 () U)
(declare-fun g_s217_237 () U)
(declare-fun g_s218_239 () U)
(declare-fun g_s219_240 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_241 () U)
(declare-fun g_s221_242 () U)
(declare-fun g_s222_243 () U)
(declare-fun g_s223_244 () U)
(declare-fun g_s224_245 () U)
(declare-fun g_s225_246 () U)
(declare-fun g_s226_247 () U)
(declare-fun g_s227_248 () U)
(declare-fun g_s228_249 () U)
(declare-fun g_s229_250 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_251 () U)
(declare-fun g_s231_252 () U)
(declare-fun g_s232_253 () U)
(declare-fun g_s233_254 () U)
(declare-fun g_s234_255 () U)
(declare-fun g_s235_257 () U)
(declare-fun g_s236_258 () U)
(declare-fun g_s237_259 () U)
(declare-fun g_s238_260 () U)
(declare-fun g_s239_261 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_262 () U)
(declare-fun g_s241_263 () U)
(declare-fun g_s242_264 () U)
(declare-fun g_s243_265 () U)
(declare-fun g_s244_266 () U)
(declare-fun g_s245_267 () U)
(declare-fun g_s246_268 () U)
(declare-fun g_s247_269 () U)
(declare-fun g_s248_270 () U)
(declare-fun g_s249_271 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_272 () U)
(declare-fun g_s251_273 () U)
(declare-fun g_s252_274 () U)
(declare-fun g_s253_275 () U)
(declare-fun g_s254_276 () U)
(declare-fun g_s255_277 () U)
(declare-fun g_s256_278 () U)
(declare-fun g_s257_279 () U)
(declare-fun g_s258_280 () U)
(declare-fun g_s259_281 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_282 () U)
(declare-fun g_s261_283 () U)
(declare-fun g_s262_284 () U)
(declare-fun g_s263_285 () U)
(declare-fun g_s264_286 () U)
(declare-fun g_s265_287 () U)
(declare-fun g_s266_288 () U)
(declare-fun g_s267_289 () U)
(declare-fun g_s268_290 () U)
(declare-fun g_s269_291 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_292 () U)
(declare-fun g_s271_293 () U)
(declare-fun g_s272_294 () U)
(declare-fun g_s273_296 () U)
(declare-fun g_s274_295 () U)
(declare-fun g_s275_297 () U)
(declare-fun g_s276_298 () U)
(declare-fun g_s277_299 () U)
(declare-fun g_s278_300 () U)
(declare-fun g_s279_301 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_302 () U)
(declare-fun g_s281_303 () U)
(declare-fun g_s282_305 () U)
(declare-fun g_s283_306 () U)
(declare-fun g_s284_307 () U)
(declare-fun g_s285_308 () U)
(declare-fun g_s286_309 () U)
(declare-fun g_s287_310 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s291_311 () U)
(declare-fun g_s291$1_313 () U)
(declare-fun g_s292_312 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_50 () U)
(declare-fun g_s49_52 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_54 () U)
(declare-fun g_s51_55 () U)
(declare-fun g_s52_56 () U)
(declare-fun g_s53_57 () U)
(declare-fun g_s54_58 () U)
(declare-fun g_s55_59 () U)
(declare-fun g_s56_60 () U)
(declare-fun g_s57_62 () U)
(declare-fun g_s58_63 () U)
(declare-fun g_s59_64 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_65 () U)
(declare-fun g_s61_66 () U)
(declare-fun g_s62_68 () U)
(declare-fun g_s63_69 () U)
(declare-fun g_s64_70 () U)
(declare-fun g_s65_71 () U)
(declare-fun g_s66_72 () U)
(declare-fun g_s67_74 () U)
(declare-fun g_s68_75 () U)
(declare-fun g_s69_76 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_77 () U)
(declare-fun g_s71_78 () U)
(declare-fun g_s72_79 () U)
(declare-fun g_s73_80 () U)
(declare-fun g_s74_81 () U)
(declare-fun g_s75_82 () U)
(declare-fun g_s76_83 () U)
(declare-fun g_s77_84 () U)
(declare-fun g_s78_85 () U)
(declare-fun g_s79_87 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_88 () U)
(declare-fun g_s81_90 () U)
(declare-fun g_s82_92 () U)
(declare-fun g_s83_94 () U)
(declare-fun g_s84_95 () U)
(declare-fun g_s85_96 () U)
(declare-fun g_s86_97 () U)
(declare-fun g_s87_98 () U)
(declare-fun g_s88_99 () U)
(declare-fun g_s89_100 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_101 () U)
(declare-fun g_s91_102 () U)
(declare-fun g_s92_103 () U)
(declare-fun g_s93_104 () U)
(declare-fun g_s94_105 () U)
(declare-fun g_s95_106 () U)
(declare-fun g_s96_107 () U)
(declare-fun g_s97_108 () U)
(declare-fun g_s98_110 () U)
(declare-fun g_s99_112 () U)
(declare-fun e127 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s10_11 (mapplet g_s9_10 (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 g_s4_5)))))))) (= g_s11_12 (SET (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 g_s12_13))))))))) (= g_s20_21 (SET (mapplet g_s22_23 g_s21_22))) (= g_s23_24 (SET (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 g_s24_25))))))) (= g_s30_31 (SET (mapplet g_s33_34 (mapplet g_s32_33 g_s31_32)))) (= g_s34_35 (SET (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 g_s35_36)))))))) (= g_s42_43 (SET (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 g_s43_44)))))) (= g_s48_50 (interval e0 e49)) (= g_s49_52 (interval e0 e51)) (= g_s50_54 (interval e0 e53)) (mem g_s51_55 g_s48_50) (mem g_s52_56 g_s49_52) (mem g_s53_57 g_s50_54) (mem g_s54_58 g_s50_54) (mem g_s55_59 g_s50_54) (= g_s51_55 e49) (= g_s52_56 e51) (= g_s53_57 e53) (and (|>=i| g_s54_58 e0) (|<=i| g_s54_58 g_s53_57)) (and (|>=i| g_s55_59 e0) (|<=i| g_s55_59 g_s53_57)) (not (= g_s54_58 g_s55_59)) (= g_s56_60 (SET (mapplet g_s55_59 g_s54_58))) (|<=i| g_s54_58 e61) (|<=i| g_s55_59 e61) (= g_s57_62 (SET (mapplet (mapplet FALSE g_s55_59) (mapplet TRUE g_s54_58)))) (mem g_s58_63 g_s50_54) (mem g_s59_64 g_s50_54) (mem g_s60_65 g_s50_54) (mem g_s61_66 g_s50_54) (= (SET (mapplet g_s61_66 (mapplet g_s60_65 (mapplet g_s59_64 g_s58_63)))) (interval e0 e67)) (mem g_s62_68 g_s50_54) (mem g_s63_69 g_s50_54) (mem g_s64_70 g_s50_54) (mem g_s65_71 g_s50_54) (mem g_s66_72 g_s50_54) (= g_s67_74 (|-->| (interval e73 e67) g_s50_54)) (mem g_s68_75 g_s50_54) (mem g_s69_76 g_s50_54) (mem g_s70_77 g_s50_54) (mem g_s71_78 g_s50_54) (mem g_s72_79 g_s50_54) (mem g_s73_80 g_s50_54) (mem g_s74_81 g_s50_54) (mem g_s75_82 g_s50_54) (mem g_s76_83 g_s50_54) (mem g_s70_77 g_s50_54) (not (mem g_s68_75 (SET (mapplet g_s70_77 (mapplet g_s76_83 (mapplet g_s75_82 (mapplet g_s74_81 (mapplet g_s73_80 (mapplet g_s72_79 (mapplet g_s71_78 g_s69_76)))))))))) (not (mem g_s69_76 (SET (mapplet g_s70_77 (mapplet g_s76_83 (mapplet g_s75_82 (mapplet g_s74_81 (mapplet g_s73_80 (mapplet g_s72_79 g_s71_78))))))))) (not (mem g_s71_78 (SET (mapplet g_s70_77 (mapplet g_s76_83 (mapplet g_s75_82 (mapplet g_s74_81 (mapplet g_s73_80 g_s72_79)))))))) (not (mem g_s72_79 (SET (mapplet g_s70_77 (mapplet g_s76_83 (mapplet g_s75_82 (mapplet g_s74_81 g_s73_80))))))) (not (mem g_s73_80 (SET (mapplet g_s70_77 (mapplet g_s76_83 (mapplet g_s75_82 g_s74_81)))))) (not (mem g_s74_81 (SET (mapplet g_s70_77 (mapplet g_s76_83 g_s75_82))))) (not (mem g_s75_82 (SET (mapplet g_s70_77 g_s76_83)))) (not (mem g_s76_83 (SET g_s70_77))) (mem g_s77_84 g_s50_54) (mem g_s78_85 g_s50_54) (|<=i| e86 g_s78_85) (mem g_s79_87 g_s50_54) (mem g_s80_88 g_s50_54) (= g_s80_88 (|-i| g_s79_87 e73)) (|<=i| g_s80_88 e89) (mem g_s81_90 g_s50_54) (|<=i| (|+i| g_s80_88 e91) g_s78_85) (mem g_s82_92 g_s67_74) (= g_s82_92 (set_prod (interval e73 e67) (SET e53))) (mem g_s83_94 (|-->| (interval e0 e93) g_s50_54)) (= g_s83_94 (set_prod (interval e0 e93) (SET e0))) (mem g_s84_95 (|-->| (interval e0 e93) g_s50_54)) (= g_s84_95 (set_prod (interval e0 e93) (SET e53))) (mem g_s85_96 g_s50_54) (mem g_s86_97 g_s50_54) (mem g_s87_98 g_s50_54) (mem g_s88_99 g_s50_54) (mem g_s89_100 g_s50_54) (mem g_s90_101 g_s50_54) (mem g_s91_102 g_s50_54) (mem g_s92_103 g_s50_54) (mem g_s93_104 g_s49_52) (mem g_s94_105 g_s48_50) (mem g_s95_106 (|-->| (interval e0 e53) g_s49_52)) (mem g_s96_107 g_s50_54) (mem g_s97_108 g_s50_54) (|<=i| g_s97_108 e109) (mem g_s98_110 g_s50_54) (|<=i| g_s98_110 e111) (mem g_s99_112 g_s50_54) (|<=i| g_s99_112 e111) (mem g_s100_113 g_s49_52) (mem g_s101_114 g_s49_52) (mem g_s102_115 (|-->| (interval e0 e53) g_s49_52)) (mem g_s103_116 g_s50_54) (mem g_s104_117 g_s50_54) (|<=i| e118 g_s103_116) (= g_s104_117 (|-i| g_s103_116 e73)) (mem g_s105_119 (|-->| (interval e0 e67) g_s50_54)) (mem g_s106_120 (|-->| (interval e0 e67) g_s50_54)) (mem g_s107_122 (|-->| (interval e0 e121) g_s50_54)) (mem g_s108_123 g_s50_54) (|<=i| e73 g_s108_123) (|<=i| g_s108_123 e124) (mem g_s109_125 g_s50_54) (|<=i| g_s109_125 e126) (= e127 e53) (mem g_s112_128 g_s50_54) (mem g_s113_129 g_s48_50) (mem g_s114_130 g_s48_50) (mem g_s115_131 g_s48_50) (mem g_s116_132 g_s48_50) (mem g_s117_133 g_s48_50) (mem g_s118_134 g_s48_50) (mem g_s119_135 g_s48_50) (mem g_s120_136 g_s48_50) (mem g_s121_137 g_s48_50) (mem g_s122_138 g_s48_50) (mem g_s123_139 g_s48_50) (mem g_s124_140 g_s48_50) (mem g_s125_141 g_s48_50) (mem g_s126_142 g_s48_50) (mem g_s127_143 g_s48_50) (mem g_s128_144 g_s48_50) (mem g_s129_145 g_s48_50) (mem g_s130_146 g_s48_50) (mem g_s131_147 g_s48_50) (mem g_s132_148 g_s48_50) (mem g_s133_149 g_s48_50) (mem g_s134_150 g_s48_50) (mem g_s135_151 g_s48_50) (mem g_s136_152 g_s48_50) (mem g_s137_153 g_s48_50) (mem g_s138_154 g_s48_50) (mem g_s139_155 g_s48_50) (mem g_s140_156 g_s48_50) (mem g_s141_157 g_s48_50) (mem g_s142_158 g_s48_50) (mem g_s143_159 g_s48_50) (mem g_s144_160 g_s48_50) (mem g_s145_161 g_s48_50) (mem g_s146_162 g_s48_50) (mem g_s147_163 g_s48_50) (mem g_s148_164 g_s48_50) (mem g_s149_165 g_s49_52) (mem g_s150_166 g_s49_52) (mem g_s151_167 g_s48_50) (mem g_s152_168 g_s48_50) (mem g_s153_169 g_s50_54) (mem g_s154_170 g_s50_54) (|<=i| g_s154_170 e171) (|<=i| e61 g_s154_170) (mem g_s155_172 g_s49_52) (|<=i| e73 g_s155_172) (|<i| g_s155_172 e51) (mem g_s156_173 g_s50_54) (|<=i| e73 g_s156_173) (mem g_s157_174 g_s49_52) (mem g_s158_175 g_s49_52) (mem g_s159_176 g_s49_52) (mem g_s160_177 g_s49_52) (mem g_s161_178 g_s49_52) (mem g_s162_179 g_s49_52) (|<=i| g_s162_179 e180) (mem g_s163_181 g_s49_52) (|<=i| g_s163_181 e180) (mem g_s164_182 g_s49_52) (mem g_s165_183 (|-->| (interval e0 e126) g_s49_52)) (mem g_s166_184 (|-->| (interval e0 e126) g_s49_52)) (mem g_s167_185 g_s49_52) (|<=i| g_s167_185 e180) (mem g_s168_186 g_s49_52) (|<=i| g_s168_186 e180) (mem g_s169_187 g_s48_50) (|<i| g_s169_187 (|-i| g_s51_55 g_s52_56)) (mem g_s170_188 g_s49_52) (mem g_s171_189 g_s49_52) (mem g_s172_190 g_s50_54) (mem g_s173_191 g_s50_54) (mem g_s174_192 g_s50_54) (mem g_s175_193 g_s50_54) (|<=i| e73 g_s175_193) (mem g_s176_194 g_s50_54) (mem g_s177_195 g_s50_54) (mem g_s178_196 g_s50_54) (|<=i| e61 g_s178_196) (|<=i| g_s178_196 e197) (mem g_s179_198 g_s50_54) (|<=i| g_s179_198 e171) (mem g_s180_199 g_s50_54) (mem g_s181_200 g_s50_54) (mem g_s182_201 g_s49_52) (|<=i| g_s182_201 e202) (mem g_s183_203 g_s48_50) (mem g_s184_204 g_s48_50) (mem g_s185_205 g_s48_50) (mem g_s186_206 g_s48_50) (mem g_s187_207 g_s48_50) (mem g_s188_208 g_s48_50) (mem g_s189_209 g_s48_50) (mem g_s190_210 g_s49_52) (mem g_s191_211 g_s49_52) (mem g_s192_212 g_s49_52) (mem g_s193_213 g_s49_52) (mem g_s194_214 g_s48_50) (mem g_s195_215 g_s48_50) (mem g_s196_216 g_s49_52) (mem g_s197_217 g_s49_52) (mem g_s198_218 g_s49_52) (mem g_s199_219 g_s48_50) (mem g_s200_220 g_s48_50) (mem g_s201_221 g_s48_50) (mem g_s202_222 g_s48_50) (mem g_s203_223 g_s48_50) (mem g_s204_224 g_s48_50) (mem g_s205_225 g_s48_50) (mem g_s206_226 g_s48_50) (mem g_s207_227 g_s48_50) (mem g_s208_228 g_s48_50) (mem g_s209_229 g_s48_50) (mem g_s210_230 g_s48_50) (mem g_s211_231 g_s48_50) (mem g_s212_232 g_s48_50) (mem g_s213_233 g_s48_50) (mem g_s214_234 g_s48_50) (mem g_s215_235 g_s48_50) (mem g_s216_236 g_s48_50) (mem g_s217_237 g_s48_50) (|<=i| g_s217_237 e238) (mem g_s218_239 g_s50_54) (|<=i| e73 g_s218_239) (|<=i| g_s218_239 e171) (mem g_s219_240 g_s50_54) (mem g_s220_241 g_s48_50) (mem g_s221_242 g_s48_50) (mem g_s222_243 g_s48_50) (not (= g_s221_242 g_s222_243)) (mem g_s223_244 NAT1) (mem g_s224_245 g_s48_50) (|<i| g_s224_245 (|-i| g_s51_55 g_s52_56)) (mem g_s225_246 g_s48_50) (= g_s225_246 (|+i| g_s224_245 g_s223_244)) (mem g_s226_247 g_s48_50) (mem g_s227_248 g_s48_50) (mem g_s228_249 NAT1) (mem g_s229_250 NAT1) (mem g_s223_244 NAT1) (mem g_s230_251 g_s48_50) (mem g_s231_252 g_s48_50) (mem g_s232_253 g_s48_50) (= g_s231_252 (|+i| g_s230_251 g_s228_249)) (= g_s232_253 (|+i| g_s230_251 g_s229_250)) (mem g_s233_254 g_s49_52) (mem g_s234_255 g_s48_50) (|<=i| g_s234_255 e256) (mem g_s235_257 NAT1) (mem g_s236_258 g_s48_50) (|<i| g_s236_258 (|-i| g_s51_55 g_s52_56)) (mem g_s237_259 g_s48_50) (= g_s237_259 (|+i| g_s236_258 g_s235_257)) (mem g_s238_260 g_s48_50) (|<=i| e73 g_s238_260) (mem g_s239_261 g_s48_50) (mem g_s240_262 g_s48_50) (mem g_s241_263 g_s48_50) (|<i| g_s241_263 (|-i| g_s51_55 g_s52_56)) (mem g_s242_264 g_s48_50) (mem g_s243_265 NAT1) (= g_s242_264 (|+i| g_s241_263 g_s243_265)) (mem g_s244_266 NATURAL1) (mem g_s245_267 g_s48_50) (= g_s245_267 (|+i| g_s241_263 g_s244_266)) (mem g_s246_268 g_s48_50) (mem g_s247_269 g_s48_50) (mem g_s248_270 g_s48_50) (mem g_s249_271 g_s48_50) (mem g_s250_272 g_s49_52) (|<i| (|*i| e61 g_s250_272) g_s52_56) (mem g_s251_273 NAT1) (mem g_s252_274 g_s49_52) (mem g_s253_275 g_s49_52) (= g_s253_275 (|+i| g_s252_274 g_s251_273)) (mem g_s254_276 g_s48_50) (mem g_s255_277 g_s48_50) (mem g_s256_278 g_s48_50) (mem g_s257_279 g_s48_50) (mem g_s258_280 g_s48_50) (mem g_s259_281 g_s48_50) (mem g_s260_282 g_s48_50) (mem g_s261_283 g_s48_50) (mem g_s262_284 g_s48_50) (mem g_s263_285 g_s48_50)))
(define-fun |def_seext| () Bool (and (mem g_s264_286 g_s48_50) (mem g_s265_287 g_s48_50) (mem g_s266_288 g_s50_54) (mem g_s267_289 g_s48_50) (mem g_s268_290 g_s48_50) (mem g_s269_291 g_s48_50) (mem g_s270_292 g_s48_50) (mem g_s271_293 g_s48_50) (mem g_s272_294 g_s48_50) (mem g_s273_296 (|-->| (interval e0 g_s274_295) g_s50_54)) (mem g_s275_297 g_s48_50) (mem g_s276_298 g_s48_50) (mem g_s277_299 g_s48_50) (mem g_s278_300 g_s48_50) (mem g_s279_301 g_s48_50) (mem g_s280_302 (|-->| (interval e0 e121) g_s50_54)) (mem g_s281_303 g_s49_52) (mem g_s57_62 (|+->| BOOL g_s50_54)) (mem g_s57_62 (|+->| BOOL g_s49_52)) (mem g_s57_62 (|+->| BOOL g_s48_50)) (|<i| (|+i| g_s98_110 g_s99_112) e304)))
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s282_305 (|-->| (interval e73 g_s109_125) NATURAL)) (mem g_s283_306 (|-->| (interval e73 g_s109_125) NATURAL)) (mem g_s284_307 g_s50_54) (mem g_s285_308 NATURAL) (mem g_s286_309 g_s50_54) (mem g_s287_310 NATURAL)))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
; PO 1 in group 0
(push 1)
(assert (not (mem e0 NATURAL)))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (mem (set_prod (interval e73 g_s109_125) (SET e0)) (|-->| (interval e73 g_s109_125) NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s291_311 g_s50_54))
(assert (mem g_s292_312 g_s50_54))
(assert (and (|>=i| g_s292_312 e73) (|<=i| g_s292_312 g_s109_125)))
(define-fun lh_1 () Bool (mem g_s291$1_313 g_s50_54))
(define-fun lh_2 () Bool (= g_s291$1_313 g_s55_59))
(define-fun lh_3 () Bool (|<i| (apply g_s282_305 g_s292_312) g_s218_239))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s282_305 (|+->| (dom g_s282_305) (ran g_s282_305))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s292_312 (dom g_s282_305)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s283_306 (|+->| (dom g_s283_306) (ran g_s283_306))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s292_312 (dom g_s283_306)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)