(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e486 () U)
(declare-fun e0 () U)
(declare-fun e146 () U)
(declare-fun e148 () U)
(declare-fun e150 () U)
(declare-fun e152 () U)
(declare-fun e154 () U)
(declare-fun e156 () U)
(declare-fun e158 () U)
(declare-fun e160 () U)
(declare-fun e162 () U)
(declare-fun e164 () U)
(declare-fun e166 () U)
(declare-fun e168 () U)
(declare-fun e170 () U)
(declare-fun e172 () U)
(declare-fun e174 () U)
(declare-fun e176 () U)
(declare-fun e178 () U)
(declare-fun e180 () U)
(declare-fun e182 () U)
(declare-fun e184 () U)
(declare-fun e186 () U)
(declare-fun e188 () U)
(declare-fun e190 () U)
(declare-fun e192 () U)
(declare-fun e194 () U)
(declare-fun e196 () U)
(declare-fun e198 () U)
(declare-fun e200 () U)
(declare-fun e202 () U)
(declare-fun e204 () U)
(declare-fun e206 () U)
(declare-fun e309 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_143 () U)
(declare-fun g_s143_144 () U)
(declare-fun g_s144_145 () U)
(declare-fun g_s145_147 () U)
(declare-fun g_s146_149 () U)
(declare-fun g_s147_151 () U)
(declare-fun g_s148_153 () U)
(declare-fun g_s149_155 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_157 () U)
(declare-fun g_s151_159 () U)
(declare-fun g_s152_161 () U)
(declare-fun g_s153_163 () U)
(declare-fun g_s154_165 () U)
(declare-fun g_s155_167 () U)
(declare-fun g_s156_169 () U)
(declare-fun g_s157_171 () U)
(declare-fun g_s158_173 () U)
(declare-fun g_s159_175 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_177 () U)
(declare-fun g_s161_179 () U)
(declare-fun g_s162_181 () U)
(declare-fun g_s163_183 () U)
(declare-fun g_s164_185 () U)
(declare-fun g_s165_187 () U)
(declare-fun g_s166_189 () U)
(declare-fun g_s167_191 () U)
(declare-fun g_s168_193 () U)
(declare-fun g_s169_195 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_197 () U)
(declare-fun g_s171_199 () U)
(declare-fun g_s172_201 () U)
(declare-fun g_s173_203 () U)
(declare-fun g_s174_205 () U)
(declare-fun g_s175_207 () U)
(declare-fun g_s176_208 () U)
(declare-fun g_s178_210 () U)
(declare-fun g_s179_211 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_213 () U)
(declare-fun g_s181_214 () U)
(declare-fun g_s184_216 () U)
(declare-fun g_s185_217 () U)
(declare-fun g_s186_218 () U)
(declare-fun g_s187_220 () U)
(declare-fun g_s188_221 () U)
(declare-fun g_s189_222 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s192_224 () U)
(declare-fun g_s193_225 () U)
(declare-fun g_s194_226 () U)
(declare-fun g_s195_227 () U)
(declare-fun g_s196_229 () U)
(declare-fun g_s197_230 () U)
(declare-fun g_s198_231 () U)
(declare-fun g_s199_232 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_234 () U)
(declare-fun g_s201_235 () U)
(declare-fun g_s202_236 () U)
(declare-fun g_s203_238 () U)
(declare-fun g_s204_239 () U)
(declare-fun g_s205_240 () U)
(declare-fun g_s206_242 () U)
(declare-fun g_s207_243 () U)
(declare-fun g_s208_244 () U)
(declare-fun g_s209_245 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_246 () U)
(declare-fun g_s213_248 () U)
(declare-fun g_s214_249 () U)
(declare-fun g_s216_251 () U)
(declare-fun g_s217_253 () U)
(declare-fun g_s219_254 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_256 () U)
(declare-fun g_s221_255 () U)
(declare-fun g_s222_258 () U)
(declare-fun g_s223_257 () U)
(declare-fun g_s224_260 () U)
(declare-fun g_s225_259 () U)
(declare-fun g_s226_262 () U)
(declare-fun g_s227_261 () U)
(declare-fun g_s228_263 () U)
(declare-fun g_s229_264 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_266 () U)
(declare-fun g_s231_265 () U)
(declare-fun g_s232_268 () U)
(declare-fun g_s233_267 () U)
(declare-fun g_s234_270 () U)
(declare-fun g_s235_269 () U)
(declare-fun g_s236_272 () U)
(declare-fun g_s237_271 () U)
(declare-fun g_s238_274 () U)
(declare-fun g_s239_273 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_276 () U)
(declare-fun g_s241_275 () U)
(declare-fun g_s242_278 () U)
(declare-fun g_s243_277 () U)
(declare-fun g_s244_280 () U)
(declare-fun g_s245_279 () U)
(declare-fun g_s246_281 () U)
(declare-fun g_s247_282 () U)
(declare-fun g_s248_283 () U)
(declare-fun g_s249_284 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_285 () U)
(declare-fun g_s251_286 () U)
(declare-fun g_s252_287 () U)
(declare-fun g_s253_288 () U)
(declare-fun g_s254_289 () U)
(declare-fun g_s255_290 () U)
(declare-fun g_s256_291 () U)
(declare-fun g_s257_292 () U)
(declare-fun g_s258_293 () U)
(declare-fun g_s259_294 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_295 () U)
(declare-fun g_s261_296 () U)
(declare-fun g_s262_297 () U)
(declare-fun g_s263_298 () U)
(declare-fun g_s264_299 () U)
(declare-fun g_s265_300 () U)
(declare-fun g_s266_301 () U)
(declare-fun g_s267_302 () U)
(declare-fun g_s268_303 () U)
(declare-fun g_s269_304 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_305 () U)
(declare-fun g_s271_306 () U)
(declare-fun g_s272_307 () U)
(declare-fun g_s273_308 () U)
(declare-fun g_s274_310 () U)
(declare-fun g_s275_311 () U)
(declare-fun g_s276_312 () U)
(declare-fun g_s277_313 () U)
(declare-fun g_s278_314 () U)
(declare-fun g_s279_315 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_316 () U)
(declare-fun g_s281_317 () U)
(declare-fun g_s282_318 () U)
(declare-fun g_s283_319 () U)
(declare-fun g_s284_320 () U)
(declare-fun g_s285_321 () U)
(declare-fun g_s286_322 () U)
(declare-fun g_s287_323 () U)
(declare-fun g_s288_324 () U)
(declare-fun g_s289_325 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_326 () U)
(declare-fun g_s291_327 () U)
(declare-fun g_s292_328 () U)
(declare-fun g_s293_329 () U)
(declare-fun g_s294_330 () U)
(declare-fun g_s295_331 () U)
(declare-fun g_s296_332 () U)
(declare-fun g_s297_333 () U)
(declare-fun g_s298_334 () U)
(declare-fun g_s299_335 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_336 () U)
(declare-fun g_s301_337 () U)
(declare-fun g_s302_338 () U)
(declare-fun g_s303_339 () U)
(declare-fun g_s304_340 () U)
(declare-fun g_s305_341 () U)
(declare-fun g_s306_342 () U)
(declare-fun g_s307_343 () U)
(declare-fun g_s308_344 () U)
(declare-fun g_s309_345 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_346 () U)
(declare-fun g_s311_347 () U)
(declare-fun g_s312_348 () U)
(declare-fun g_s313_349 () U)
(declare-fun g_s314_350 () U)
(declare-fun g_s315_351 () U)
(declare-fun g_s316_352 () U)
(declare-fun g_s317_353 () U)
(declare-fun g_s318_354 () U)
(declare-fun g_s319_355 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_356 () U)
(declare-fun g_s321_357 () U)
(declare-fun g_s322_358 () U)
(declare-fun g_s323_359 () U)
(declare-fun g_s324_360 () U)
(declare-fun g_s325_361 () U)
(declare-fun g_s326_362 () U)
(declare-fun g_s327_363 () U)
(declare-fun g_s328_364 () U)
(declare-fun g_s329_365 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_366 () U)
(declare-fun g_s331_367 () U)
(declare-fun g_s332_368 () U)
(declare-fun g_s333_369 () U)
(declare-fun g_s334_370 () U)
(declare-fun g_s335_371 () U)
(declare-fun g_s336_372 () U)
(declare-fun g_s337_373 () U)
(declare-fun g_s338_374 () U)
(declare-fun g_s339_375 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_376 () U)
(declare-fun g_s341_377 () U)
(declare-fun g_s342_378 () U)
(declare-fun g_s343_379 () U)
(declare-fun g_s344_380 () U)
(declare-fun g_s345_381 () U)
(declare-fun g_s346_382 () U)
(declare-fun g_s347_383 () U)
(declare-fun g_s348_384 () U)
(declare-fun g_s349_385 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_386 () U)
(declare-fun g_s351_387 () U)
(declare-fun g_s352_388 () U)
(declare-fun g_s353_389 () U)
(declare-fun g_s354_390 () U)
(declare-fun g_s355_391 () U)
(declare-fun g_s356_392 () U)
(declare-fun g_s357_393 () U)
(declare-fun g_s358_394 () U)
(declare-fun g_s359_395 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_396 () U)
(declare-fun g_s361_397 () U)
(declare-fun g_s362_398 () U)
(declare-fun g_s363_399 () U)
(declare-fun g_s364_400 () U)
(declare-fun g_s365_401 () U)
(declare-fun g_s366_402 () U)
(declare-fun g_s367_403 () U)
(declare-fun g_s368_404 () U)
(declare-fun g_s369_405 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_406 () U)
(declare-fun g_s371_407 () U)
(declare-fun g_s372_408 () U)
(declare-fun g_s373_409 () U)
(declare-fun g_s374_410 () U)
(declare-fun g_s375_411 () U)
(declare-fun g_s376_412 () U)
(declare-fun g_s377_413 () U)
(declare-fun g_s378_414 () U)
(declare-fun g_s379_415 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_416 () U)
(declare-fun g_s381_417 () U)
(declare-fun g_s382_418 () U)
(declare-fun g_s383_419 () U)
(declare-fun g_s384_420 () U)
(declare-fun g_s385_421 () U)
(declare-fun g_s386_422 () U)
(declare-fun g_s387_423 () U)
(declare-fun g_s388_424 () U)
(declare-fun g_s389_425 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_426 () U)
(declare-fun g_s391_427 () U)
(declare-fun g_s392_428 () U)
(declare-fun g_s393_429 () U)
(declare-fun g_s394_430 () U)
(declare-fun g_s395_431 () U)
(declare-fun g_s396_432 () U)
(declare-fun g_s397_433 () U)
(declare-fun g_s398_434 () U)
(declare-fun g_s399_435 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_436 () U)
(declare-fun g_s401_437 () U)
(declare-fun g_s402_438 () U)
(declare-fun g_s403_439 () U)
(declare-fun g_s404_440 () U)
(declare-fun g_s405_441 () U)
(declare-fun g_s406_442 () U)
(declare-fun g_s407_443 () U)
(declare-fun g_s408_444 () U)
(declare-fun g_s409_445 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_446 () U)
(declare-fun g_s411_447 () U)
(declare-fun g_s412_448 () U)
(declare-fun g_s413_449 () U)
(declare-fun g_s414_450 () U)
(declare-fun g_s415_451 () U)
(declare-fun g_s416_452 () U)
(declare-fun g_s417_453 () U)
(declare-fun g_s418_454 () U)
(declare-fun g_s419_455 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_456 () U)
(declare-fun g_s421_457 () U)
(declare-fun g_s422_458 () U)
(declare-fun g_s423_459 () U)
(declare-fun g_s424_460 () U)
(declare-fun g_s425_461 () U)
(declare-fun g_s426_462 () U)
(declare-fun g_s427_463 () U)
(declare-fun g_s428_464 () U)
(declare-fun g_s429_465 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430_466 () U)
(declare-fun g_s431_467 () U)
(declare-fun g_s432_468 () U)
(declare-fun g_s433_469 () U)
(declare-fun g_s434_470 () U)
(declare-fun g_s435_471 () U)
(declare-fun g_s436_472 () U)
(declare-fun g_s437_473 () U)
(declare-fun g_s438_474 () U)
(declare-fun g_s439_475 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s440_476 () U)
(declare-fun g_s441_477 () U)
(declare-fun g_s442_478 () U)
(declare-fun g_s443_479 () U)
(declare-fun g_s444_480 () U)
(declare-fun g_s445_481 () U)
(declare-fun g_s446_482 () U)
(declare-fun g_s447_483 () U)
(declare-fun g_s448_484 () U)
(declare-fun g_s449_485 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s450_487 () U)
(declare-fun g_s450$1_494 () U)
(declare-fun g_s451_488 () U)
(declare-fun g_s451$1_495 () U)
(declare-fun g_s452_489 () U)
(declare-fun g_s452$1_496 () U)
(declare-fun g_s453_490 () U)
(declare-fun g_s453$1_492 () U)
(declare-fun g_s453$2_499 () U)
(declare-fun g_s454_491 () U)
(declare-fun g_s454$1_493 () U)
(declare-fun g_s454$2_500 () U)
(declare-fun g_s455$1_497 () U)
(declare-fun g_s457_498 () U)
(declare-fun g_s458_501 () U)
(declare-fun g_s459_502 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s460_503 () U)
(declare-fun g_s461_504 () U)
(declare-fun g_s464_505 () U)
(declare-fun g_s465_506 () U)
(declare-fun g_s466_507 () U)
(declare-fun g_s467_508 () U)
(declare-fun g_s468_509 () U)
(declare-fun g_s469_510 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s470_511 () U)
(declare-fun g_s471_512 () U)
(declare-fun g_s472_513 () U)
(declare-fun g_s473_514 () U)
(declare-fun g_s474_515 () U)
(declare-fun g_s475_516 () U)
(declare-fun g_s476_517 () U)
(declare-fun g_s477_518 () U)
(declare-fun g_s478_519 () U)
(declare-fun g_s479_520 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s480_521 () U)
(declare-fun g_s481_522 () U)
(declare-fun g_s482_523 () U)
(declare-fun g_s483_524 () U)
(declare-fun g_s484_525 () U)
(declare-fun g_s485_526 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
(declare-fun e241 () U)
(declare-fun e209 () U)
(declare-fun e212 () U)
(declare-fun e250 () U)
(declare-fun e252 () U)
(declare-fun e219 () U)
(declare-fun e215 () U)
(declare-fun e237 () U)
(declare-fun e233 () U)
(declare-fun e223 () U)
(declare-fun e228 () U)
(declare-fun e247 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s3_4 (mapplet g_s2_3 g_s1_2)))) (= g_s4_5 (SET (mapplet g_s7_8 (mapplet g_s6_7 g_s5_6)))) (= g_s8_9 (SET (mapplet g_s11_12 (mapplet g_s10_11 g_s9_10)))) (= g_s12_13 (SET (mapplet g_s15_16 (mapplet g_s14_15 g_s13_14)))) (= g_s16_17 (SET (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 g_s17_18)))))) (= g_s22_23 (SET (mapplet g_s24_25 g_s23_24))) (= g_s25_26 (SET (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 g_s26_27))))) (= g_s30_31 (SET (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 g_s31_32)))))) (= g_s36_37 (SET (mapplet g_s39_40 (mapplet g_s38_39 g_s37_38)))) (= g_s40_41 (SET (mapplet g_s42_43 g_s41_42))) (= g_s43_44 (SET (mapplet g_s46_47 (mapplet g_s45_46 g_s44_45)))) (= g_s47_48 (SET (mapplet g_s50_51 (mapplet g_s49_50 g_s48_49)))) (= g_s51_52 (SET (mapplet g_s54_55 (mapplet g_s53_54 g_s52_53)))) (= g_s55_56 (SET (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 g_s56_57))))) (= g_s60_61 (SET (mapplet g_s75_76 (mapplet g_s74_75 (mapplet g_s73_74 (mapplet g_s72_73 (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 (mapplet g_s67_68 (mapplet g_s66_67 (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 (mapplet g_s62_63 g_s61_62)))))))))))))))) (= g_s76_77 (SET (mapplet g_s108_109 (mapplet g_s107_108 (mapplet g_s106_107 (mapplet g_s105_106 (mapplet g_s104_105 (mapplet g_s103_104 (mapplet g_s102_103 (mapplet g_s101_102 (mapplet g_s100_101 (mapplet g_s99_100 (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 (mapplet g_s95_96 (mapplet g_s94_95 (mapplet g_s93_94 (mapplet g_s92_93 (mapplet g_s91_92 (mapplet g_s90_91 (mapplet g_s89_90 (mapplet g_s88_89 (mapplet g_s87_88 (mapplet g_s86_87 (mapplet g_s85_86 (mapplet g_s84_85 (mapplet g_s83_84 (mapplet g_s82_83 (mapplet g_s81_82 (mapplet g_s80_81 (mapplet g_s79_80 (mapplet g_s78_79 g_s77_78))))))))))))))))))))))))))))))))) (= g_s109_110 (SET (mapplet g_s113_114 (mapplet g_s112_113 (mapplet g_s111_112 g_s110_111))))) (= g_s114_115 (SET (mapplet g_s121_122 (mapplet g_s120_121 (mapplet g_s119_120 (mapplet g_s118_119 (mapplet g_s117_118 (mapplet g_s116_117 g_s115_116)))))))) (= g_s122_123 (SET (mapplet g_s126_127 (mapplet g_s125_126 (mapplet g_s124_125 g_s123_124))))) (= g_s127_128 (SET (mapplet g_s132_133 (mapplet g_s131_132 (mapplet g_s130_131 (mapplet g_s129_130 g_s128_129)))))) (= g_s133_134 BOOL) (= g_s134_135 BOOL) (= g_s135_136 INT) (= g_s136_137 INT) (= g_s137_138 INT) (= g_s138_139 g_s137_138) (= g_s139_140 g_s137_138) (= g_s140_141 g_s135_136) (= g_s141_142 g_s133_134) (= g_s142_143 INT) (= g_s143_144 INT) (= g_s144_145 e0) (= g_s145_147 e146) (= g_s146_149 e148) (= g_s147_151 e150) (= g_s148_153 e152) (= g_s149_155 e154) (= g_s150_157 e156) (= g_s151_159 e158) (= g_s152_161 e160) (= g_s153_163 e162) (= g_s154_165 e164) (= g_s155_167 e166) (= g_s156_169 e168) (= g_s157_171 e170) (= g_s158_173 e172) (= g_s159_175 e174) (= g_s160_177 e176) (= g_s161_179 e178) (= g_s162_181 e180) (= g_s163_183 e182) (= g_s164_185 e184) (= g_s165_187 e186) (= g_s166_189 e188) (= g_s167_191 e190) (= g_s168_193 e192) (= g_s169_195 e194) (= g_s170_197 e196) (= g_s171_199 e198) (= g_s172_201 e200) (= g_s173_203 e202) (= g_s174_205 e204) (= g_s175_207 e206) (mem g_s176_208 (|-->| BOOL BOOL)) (= g_s176_208 e209) (mem g_s178_210 (|-->| BOOL BOOL)) (= g_s178_210 g_s176_208) (mem g_s179_211 (|-->| BOOL BOOL)) (= g_s179_211 e212) (mem g_s180_213 (|-->| BOOL BOOL)) (= g_s180_213 g_s179_211) (mem g_s181_214 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s181_214 e215) (mem g_s184_216 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s184_216 g_s181_214) (mem g_s185_217 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s185_217 g_s181_214) (mem g_s186_218 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s186_218 e219) (mem g_s187_220 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s187_220 g_s186_218) (mem g_s188_221 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s188_221 g_s186_218) (mem g_s189_222 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s189_222 e223) (mem g_s192_224 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s192_224 g_s189_222) (mem g_s193_225 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s193_225 g_s189_222) (mem g_s194_226 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s194_226 g_s189_222) (mem g_s195_227 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s195_227 e228) (mem g_s196_229 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s196_229 g_s195_227) (mem g_s197_230 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s197_230 g_s195_227) (mem g_s198_231 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s198_231 g_s195_227) (mem g_s199_232 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s199_232 e233) (mem g_s200_234 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s200_234 g_s199_232) (mem g_s201_235 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s201_235 g_s199_232) (mem g_s202_236 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s202_236 e237) (mem g_s203_238 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s203_238 g_s202_236) (mem g_s204_239 (|-->| (set_prod g_s135_136 g_s135_136) BOOL)) (= g_s204_239 g_s202_236) (mem g_s205_240 (|-->| BOOL BOOL)) (= g_s205_240 e241) (mem g_s206_242 (|-->| BOOL BOOL)) (= g_s206_242 e241) (mem g_s207_243 (|-->| BOOL BOOL)) (= g_s207_243 e241) (mem g_s208_244 (|-->| BOOL BOOL)) (= g_s208_244 e241) (mem g_s209_245 (|-->| BOOL BOOL)) (= g_s209_245 e241) (mem g_s210_246 (|-->| (set_prod g_s138_139 g_s137_138) BOOL)) (= g_s210_246 e247) (mem g_s213_248 (|-->| (set_prod g_s137_138 g_s137_138) BOOL)) (= g_s213_248 g_s213_248) (mem g_s214_249 (|>->>| g_s137_138 g_s137_138)) (= g_s214_249 e250) (mem g_s216_251 (|>->>| g_s138_139 g_s138_139)) (= g_s216_251 g_s214_249) (= g_s217_253 e252) (= g_s219_254 e241) (mem g_s220_256 (|-->| g_s221_255 g_s135_136)) (mem g_s222_258 (|-->| g_s223_257 g_s135_136)) (mem g_s224_260 (|-->| g_s225_259 g_s135_136)) (mem g_s226_262 (|-->| g_s227_261 g_s138_139)) (mem g_s228_263 (|-->| g_s51_52 g_s138_139)) (mem g_s229_264 (|-->| g_s12_13 g_s138_139)) (mem g_s230_266 (|-->| g_s231_265 g_s135_136)) (mem g_s232_268 (|-->| g_s233_267 g_s138_139)) (mem g_s234_270 (|-->| g_s235_269 g_s138_139)) (mem g_s236_272 (|-->| g_s237_271 g_s138_139)) (mem g_s238_274 (|-->| g_s239_273 g_s138_139)) (mem g_s240_276 (|-->| g_s241_275 g_s138_139)) (mem g_s242_278 (|-->| g_s243_277 g_s138_139)) (mem g_s244_280 (|-->| g_s245_279 g_s138_139)) (subset g_s227_261 g_s4_5) (= g_s227_261 (SET (mapplet g_s7_8 g_s6_7))) (= g_s246_281 INT) (= g_s247_282 INT) (= g_s248_283 INT) (= g_s249_284 INT) (= g_s250_285 INT) (= g_s251_286 INT) (= g_s252_287 NAT) (= g_s253_288 INT) (= g_s254_289 INT) (= g_s255_290 INT) (= g_s256_291 NAT) (= g_s257_292 INT) (= g_s258_293 NAT) (= g_s259_294 NAT) (= g_s260_295 NAT) (subset g_s261_296 g_s227_261) (= g_s261_296 g_s227_261) (subset g_s262_297 g_s12_13) (= g_s262_297 g_s12_13) (subset g_s263_298 g_s60_61) (= g_s263_298 (SET (mapplet g_s75_76 (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 (mapplet g_s67_68 (mapplet g_s66_67 (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 (mapplet g_s62_63 g_s61_62))))))))))))) (= g_s264_299 g_s76_77) (= g_s265_300 g_s263_298) (= g_s266_301 g_s264_299) (= g_s267_302 g_s114_115) (= g_s268_303 g_s60_61) (= g_s269_304 g_s76_77) (= g_s270_305 g_s268_303) (= g_s271_306 g_s269_304) (mem g_s272_307 NAT) (= g_s272_307 e150) (mem g_s273_308 NAT) (= g_s273_308 e309) (subset g_s274_310 INT) (not (= g_s274_310 empty)) (= g_s274_310 (interval e0 g_s272_307)) (subset g_s275_311 INT) (not (= g_s275_311 empty)) (= g_s275_311 (interval e0 g_s273_308)) (mem g_s276_312 NAT) (= g_s276_312 e152) (subset g_s277_313 INT) (not (= g_s277_313 empty)) (= g_s277_313 (interval e146 g_s276_312)) (subset g_s278_314 g_s274_310) (= g_s278_314 g_s274_310) (subset g_s279_315 g_s275_311) (= g_s279_315 g_s275_311) (subset g_s280_316 NAT) (mem g_s281_317 g_s280_316) (subset g_s282_318 NAT) (= g_s282_318 g_s280_316) (subset g_s283_319 NAT) (subset g_s284_320 NAT) (= g_s285_321 BOOL) (= g_s286_322 BOOL) (= g_s287_323 INT) (mem g_s288_324 g_s137_138) (mem g_s289_325 g_s137_138) (mem g_s290_326 g_s137_138) (mem g_s291_327 g_s137_138) (mem g_s292_328 g_s137_138) (mem g_s293_329 g_s137_138) (mem g_s294_330 g_s137_138) (mem g_s295_331 g_s137_138) (mem g_s296_332 g_s137_138) (mem g_s297_333 g_s137_138) (mem g_s298_334 g_s137_138) (mem g_s299_335 g_s137_138) (mem g_s300_336 g_s137_138) (mem g_s301_337 g_s137_138) (mem g_s302_338 g_s137_138) (mem g_s303_339 g_s137_138) (mem g_s304_340 g_s137_138) (mem g_s305_341 g_s137_138) (mem g_s306_342 g_s137_138) (mem g_s307_343 g_s137_138) (mem g_s308_344 g_s137_138) (mem g_s309_345 g_s137_138) (mem g_s310_346 g_s137_138) (mem g_s311_347 g_s137_138) (mem g_s312_348 g_s137_138) (mem g_s313_349 g_s137_138) (mem g_s314_350 g_s137_138) (mem g_s315_351 g_s137_138) (mem g_s316_352 g_s137_138) (mem g_s317_353 g_s137_138) (mem g_s318_354 g_s137_138) (mem g_s319_355 g_s137_138) (mem g_s320_356 g_s137_138) (mem g_s321_357 g_s137_138) (mem g_s322_358 g_s137_138) (mem g_s323_359 g_s137_138) (mem g_s324_360 g_s137_138) (mem g_s325_361 g_s137_138) (= g_s326_362 g_s137_138) (mem g_s327_363 g_s137_138) (mem g_s328_364 g_s137_138) (mem g_s329_365 g_s137_138) (mem g_s330_366 g_s137_138) (mem g_s331_367 g_s137_138) (mem g_s332_368 g_s137_138) (mem g_s333_369 g_s137_138) (= g_s330_366 g_s144_145) (= g_s331_367 g_s146_149) (= g_s332_368 g_s145_147) (= g_s333_369 g_s147_151) (= g_s288_324 g_s144_145) (= g_s289_325 g_s145_147) (= g_s290_326 g_s146_149) (= g_s291_327 g_s144_145) (= g_s292_328 g_s145_147) (= g_s293_329 g_s146_149) (= g_s294_330 g_s144_145) (= g_s295_331 g_s145_147) (= g_s296_332 g_s146_149) (= g_s297_333 g_s144_145) (= g_s298_334 g_s145_147) (= g_s299_335 g_s146_149) (= g_s300_336 g_s147_151) (= g_s301_337 g_s148_153) (= g_s302_338 g_s144_145) (= g_s303_339 g_s145_147) (= g_s304_340 g_s146_149) (= g_s305_341 g_s147_151) (= g_s306_342 g_s144_145) (= g_s307_343 g_s145_147) (= g_s308_344 g_s146_149) (= g_s309_345 g_s147_151) (= g_s310_346 g_s144_145) (= g_s311_347 g_s145_147) (= g_s312_348 g_s146_149) (= g_s313_349 g_s147_151) (= g_s314_350 g_s148_153) (= g_s315_351 g_s144_145) (= g_s316_352 g_s145_147) (= g_s317_353 g_s146_149) (= g_s318_354 g_s144_145) (= g_s319_355 g_s145_147) (= g_s320_356 g_s144_145) (= g_s321_357 g_s145_147) (= g_s322_358 g_s146_149) (= g_s323_359 g_s144_145) (= g_s324_360 g_s145_147) (= g_s325_361 g_s146_149) (= g_s327_363 g_s144_145) (= g_s328_364 g_s145_147) (= g_s329_365 g_s146_149) (mem g_s334_370 g_s137_138) (mem g_s335_371 g_s137_138) (mem g_s336_372 g_s137_138) (mem g_s337_373 g_s137_138) (mem g_s338_374 g_s137_138) (mem g_s339_375 g_s137_138) (mem g_s340_376 g_s137_138) (mem g_s341_377 g_s137_138) (mem g_s342_378 g_s137_138) (mem g_s343_379 g_s137_138) (mem g_s344_380 g_s137_138) (mem g_s345_381 g_s137_138) (mem g_s346_382 g_s137_138) (mem g_s347_383 g_s137_138) (mem g_s348_384 g_s137_138) (mem g_s349_385 g_s137_138) (mem g_s350_386 g_s137_138) (mem g_s351_387 g_s137_138) (mem g_s352_388 g_s137_138) (mem g_s353_389 g_s137_138) (mem g_s354_390 g_s137_138) (mem g_s355_391 g_s137_138) (mem g_s356_392 g_s137_138) (mem g_s357_393 g_s137_138) (mem g_s358_394 g_s137_138) (= g_s334_370 g_s144_145) (= g_s335_371 g_s145_147) (= g_s336_372 g_s146_149) (= g_s337_373 g_s147_151) (= g_s338_374 g_s148_153) (= g_s339_375 g_s149_155) (= g_s340_376 g_s150_157) (= g_s341_377 g_s151_159) (= g_s342_378 g_s152_161) (= g_s343_379 g_s153_163) (= g_s344_380 g_s154_165) (= g_s345_381 g_s155_167) (= g_s346_382 g_s156_169) (= g_s347_383 g_s157_171) (= g_s348_384 g_s158_173) (= g_s349_385 g_s159_175) (= g_s350_386 g_s160_177) (= g_s351_387 g_s161_179) (= g_s352_388 g_s162_181) (= g_s353_389 g_s163_183) (= g_s354_390 g_s164_185) (= g_s355_391 g_s165_187) (= g_s356_392 g_s166_189) (= g_s357_393 g_s167_191) (= g_s358_394 g_s168_193) (mem g_s359_395 g_s137_138) (mem g_s360_396 g_s137_138) (mem g_s361_397 g_s137_138) (mem g_s362_398 g_s137_138) (mem g_s363_399 g_s137_138) (mem g_s364_400 g_s137_138) (mem g_s365_401 g_s137_138) (mem g_s366_402 g_s137_138) (mem g_s367_403 g_s137_138) (mem g_s368_404 g_s137_138) (mem g_s369_405 g_s137_138) (mem g_s370_406 g_s137_138) (mem g_s371_407 g_s137_138) (mem g_s372_408 g_s137_138) (= g_s359_395 g_s144_145) (= g_s360_396 g_s145_147) (= g_s361_397 g_s146_149) (= g_s362_398 g_s147_151) (= g_s363_399 g_s148_153) (= g_s364_400 g_s149_155) (= g_s365_401 g_s150_157) (= g_s366_402 g_s151_159) (= g_s367_403 g_s152_161) (= g_s368_404 g_s153_163) (= g_s369_405 g_s154_165) (= g_s370_406 g_s155_167) (= g_s371_407 g_s156_169) (= g_s373_409 g_s144_145) (= g_s374_410 g_s145_147) (= g_s375_411 g_s146_149) (= g_s376_412 g_s147_151) (= g_s377_413 g_s148_153) (= g_s378_414 g_s149_155) (= g_s379_415 g_s150_157) (= g_s380_416 g_s151_159) (= g_s381_417 g_s152_161) (= g_s382_418 g_s153_163) (= g_s383_419 g_s154_165) (= g_s384_420 g_s155_167) (= g_s385_421 g_s156_169) (= g_s386_422 g_s157_171) (= g_s387_423 g_s158_173) (= g_s388_424 g_s159_175) (= g_s389_425 g_s160_177) (= g_s390_426 g_s161_179) (= g_s391_427 g_s162_181) (= g_s392_428 g_s163_183) (= g_s393_429 g_s164_185) (= g_s394_430 g_s165_187) (= g_s395_431 g_s166_189) (= g_s396_432 g_s167_191) (= g_s397_433 g_s168_193) (= g_s398_434 g_s169_195) (= g_s399_435 g_s170_197) (= g_s400_436 g_s171_199) (= g_s401_437 g_s172_201) (= g_s402_438 g_s173_203) (= g_s403_439 g_s174_205) (= g_s404_440 g_s175_207) (= g_s405_441 g_s144_145) (= g_s406_442 g_s145_147) (= g_s407_443 g_s146_149) (= g_s408_444 g_s147_151) (= g_s409_445 g_s148_153) (= g_s410_446 g_s149_155) (= g_s411_447 g_s150_157) (mem g_s412_448 g_s137_138) (mem g_s413_449 g_s137_138) (mem g_s414_450 g_s137_138) (mem g_s415_451 g_s137_138) (mem g_s416_452 g_s137_138) (mem g_s417_453 g_s137_138) (mem g_s418_454 g_s137_138) (mem g_s419_455 g_s137_138) (mem g_s420_456 g_s137_138) (mem g_s421_457 g_s137_138) (mem g_s422_458 g_s137_138) (mem g_s423_459 g_s137_138) (mem g_s424_460 g_s137_138) (mem g_s425_461 g_s137_138) (mem g_s426_462 g_s137_138) (mem g_s427_463 g_s137_138) (mem g_s428_464 g_s137_138) (mem g_s429_465 g_s137_138) (mem g_s430_466 g_s137_138) (mem g_s431_467 g_s137_138) (mem g_s432_468 g_s137_138) (mem g_s433_469 g_s137_138) (mem g_s434_470 g_s137_138) (mem g_s435_471 g_s137_138) (mem g_s436_472 g_s137_138) (mem g_s437_473 g_s137_138) (mem g_s438_474 g_s137_138) (mem g_s439_475 g_s137_138) (mem g_s440_476 g_s137_138) (mem g_s441_477 g_s137_138) (mem g_s442_478 g_s137_138) (mem g_s443_479 g_s137_138) (= g_s412_448 g_s144_145) (= g_s413_449 g_s145_147) (= g_s414_450 g_s146_149) (= g_s415_451 g_s147_151) (= g_s416_452 g_s148_153) (= g_s417_453 g_s149_155) (= g_s418_454 g_s150_157) (= g_s419_455 g_s151_159) (= g_s420_456 g_s152_161) (= g_s421_457 g_s153_163) (= g_s422_458 g_s154_165) (= g_s423_459 g_s155_167) (= g_s424_460 g_s156_169) (= g_s425_461 g_s157_171) (= g_s426_462 g_s158_173) (= g_s427_463 g_s159_175) (= g_s428_464 g_s160_177) (= g_s429_465 g_s161_179) (= g_s430_466 g_s162_181) (= g_s431_467 g_s163_183) (= g_s432_468 g_s164_185) (= g_s433_469 g_s165_187) (= g_s434_470 g_s166_189) (= g_s435_471 g_s167_191) (= g_s436_472 g_s168_193) (= g_s437_473 g_s169_195) (= g_s438_474 g_s170_197) (= g_s439_475 g_s171_199) (= g_s440_476 g_s172_201) (= g_s441_477 g_s173_203) (= g_s442_478 g_s174_205) (= g_s443_479 g_s175_207) (mem g_s444_480 INT) (mem g_s445_481 INT) (mem g_s446_482 INT) (mem g_s447_483 INT) (mem g_s448_484 INT) (mem g_s449_485 g_s250_285) (= g_s449_485 e486)))
(define-fun |def_seext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s450_487 g_s285_321) (mem g_s451_488 g_s285_321) (mem g_s452_489 g_s285_321) (mem g_s453_490 g_s285_321) (mem g_s454_491 g_s285_321)))
(define-fun |def_inv| () Bool (and (= g_s453_490 g_s453$1_492) (= g_s454_491 g_s454$1_493) (= g_s450_487 g_s450$1_494) (= g_s451_488 g_s451$1_495) (= g_s452_489 g_s452$1_496)))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s453$1_492 g_s285_321) (mem g_s454$1_493 g_s285_321) (mem g_s450$1_494 g_s285_321) (mem g_s451$1_495 g_s285_321) (mem g_s455$1_497 g_s285_321) (mem g_s452$1_496 g_s285_321)))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s457_498 INTEGER))
(define-fun lh_2 () Bool (mem (|+i| g_s457_498 e0) INTEGER))
(define-fun lh_3 () Bool (= g_s450$1_494 TRUE))
(define-fun lh_4 () Bool (mem g_s453$2_499 g_s285_321))
(define-fun lh_5 () Bool (mem g_s454$2_500 g_s285_321))
(define-fun lh_6 () Bool (= g_s453$2_499 (bool (or (and (= g_s458_501 TRUE) (= g_s459_502 g_s13_14)) (= g_s460_503 TRUE)))))
(define-fun lh_7 () Bool (= g_s454$2_500 (bool (or (and (= g_s458_501 TRUE) (= g_s459_502 g_s14_15)) (= g_s461_504 TRUE)))))
; PO 1 in group 0
(push 1)
(assert (not (=> lh_1 (mem (|+i| g_s457_498 e0) INT))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (bool (and (= g_s464_505 TRUE) (= g_s465_506 TRUE) (= g_s466_507 TRUE) (= g_s467_508 TRUE) (= g_s468_509 TRUE) (= g_s469_510 TRUE))) g_s285_321))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (bool (and (= g_s470_511 TRUE) (= g_s471_512 TRUE) (= g_s472_513 TRUE) (= g_s473_514 TRUE) (= g_s474_515 TRUE) (= g_s475_516 TRUE) (= g_s476_517 TRUE) (= g_s477_518 TRUE) (= g_s478_519 TRUE) (= g_s479_520 TRUE) (= g_s480_521 TRUE) (= g_s481_522 TRUE) (= g_s482_523 TRUE) (= g_s483_524 TRUE) (= g_s484_525 TRUE) (= g_s485_526 TRUE))) g_s285_321))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s453$2_499 g_s285_321))
(define-fun lh_2 () Bool (mem g_s454$2_500 g_s285_321))
; PO 1 in group 1
(assert (not (=> (and lh_1 lh_2) (mem FALSE g_s285_321))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)