(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e75 () U)
(declare-fun e77 () U)
(declare-fun e79 () U)
(declare-fun e81 () U)
(declare-fun e83 () U)
(declare-fun e85 () U)
(declare-fun e87 () U)
(declare-fun e89 () U)
(declare-fun e91 () U)
(declare-fun e93 () U)
(declare-fun e95 () U)
(declare-fun e97 () U)
(declare-fun e99 () U)
(declare-fun e101 () U)
(declare-fun e103 () U)
(declare-fun e105 () U)
(declare-fun e107 () U)
(declare-fun e109 () U)
(declare-fun e111 () U)
(declare-fun e113 () U)
(declare-fun e115 () U)
(declare-fun e117 () U)
(declare-fun e119 () U)
(declare-fun e121 () U)
(declare-fun e123 () U)
(declare-fun e125 () U)
(declare-fun e127 () U)
(declare-fun e129 () U)
(declare-fun e131 () U)
(declare-fun e133 () U)
(declare-fun e135 () U)
(declare-fun e297 () U)
(declare-fun e299 () U)
(declare-fun e385 () U)
(declare-fun e387 () U)
(declare-fun e389 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_128 () U)
(declare-fun g_s101_130 () U)
(declare-fun g_s102_132 () U)
(declare-fun g_s103_134 () U)
(declare-fun g_s104_136 () U)
(declare-fun g_s105_137 () U)
(declare-fun g_s107_139 () U)
(declare-fun g_s108_140 () U)
(declare-fun g_s109_142 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_143 () U)
(declare-fun g_s113_145 () U)
(declare-fun g_s114_146 () U)
(declare-fun g_s115_147 () U)
(declare-fun g_s116_149 () U)
(declare-fun g_s117_150 () U)
(declare-fun g_s118_151 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s121_153 () U)
(declare-fun g_s122_154 () U)
(declare-fun g_s123_155 () U)
(declare-fun g_s124_156 () U)
(declare-fun g_s125_158 () U)
(declare-fun g_s126_159 () U)
(declare-fun g_s127_160 () U)
(declare-fun g_s128_161 () U)
(declare-fun g_s129_163 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_164 () U)
(declare-fun g_s131_165 () U)
(declare-fun g_s132_167 () U)
(declare-fun g_s133_168 () U)
(declare-fun g_s134_169 () U)
(declare-fun g_s135_171 () U)
(declare-fun g_s136_172 () U)
(declare-fun g_s137_173 () U)
(declare-fun g_s138_174 () U)
(declare-fun g_s139_175 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s142_177 () U)
(declare-fun g_s143_178 () U)
(declare-fun g_s145_180 () U)
(declare-fun g_s146_182 () U)
(declare-fun g_s148_183 () U)
(declare-fun g_s149_184 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_185 () U)
(declare-fun g_s151_186 () U)
(declare-fun g_s152_187 () U)
(declare-fun g_s153_188 () U)
(declare-fun g_s154_189 () U)
(declare-fun g_s155_190 () U)
(declare-fun g_s156_191 () U)
(declare-fun g_s157_192 () U)
(declare-fun g_s158_193 () U)
(declare-fun g_s159_194 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_195 () U)
(declare-fun g_s161_196 () U)
(declare-fun g_s162_197 () U)
(declare-fun g_s163_198 () U)
(declare-fun g_s164_199 () U)
(declare-fun g_s165_200 () U)
(declare-fun g_s166_201 () U)
(declare-fun g_s167_202 () U)
(declare-fun g_s168_203 () U)
(declare-fun g_s169_204 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_205 () U)
(declare-fun g_s171_206 () U)
(declare-fun g_s172_207 () U)
(declare-fun g_s173_208 () U)
(declare-fun g_s174_209 () U)
(declare-fun g_s175_210 () U)
(declare-fun g_s176_211 () U)
(declare-fun g_s177_212 () U)
(declare-fun g_s178_213 () U)
(declare-fun g_s179_214 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_215 () U)
(declare-fun g_s181_216 () U)
(declare-fun g_s182_217 () U)
(declare-fun g_s183_218 () U)
(declare-fun g_s184_219 () U)
(declare-fun g_s185_220 () U)
(declare-fun g_s186_221 () U)
(declare-fun g_s187_222 () U)
(declare-fun g_s188_223 () U)
(declare-fun g_s189_224 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_225 () U)
(declare-fun g_s191_226 () U)
(declare-fun g_s192_227 () U)
(declare-fun g_s193_228 () U)
(declare-fun g_s194_229 () U)
(declare-fun g_s195_230 () U)
(declare-fun g_s196_231 () U)
(declare-fun g_s197_232 () U)
(declare-fun g_s198_233 () U)
(declare-fun g_s199_234 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_235 () U)
(declare-fun g_s201_236 () U)
(declare-fun g_s202_237 () U)
(declare-fun g_s203_238 () U)
(declare-fun g_s204_239 () U)
(declare-fun g_s205_240 () U)
(declare-fun g_s206_241 () U)
(declare-fun g_s207_242 () U)
(declare-fun g_s208_243 () U)
(declare-fun g_s209_244 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_245 () U)
(declare-fun g_s211_246 () U)
(declare-fun g_s212_247 () U)
(declare-fun g_s213_248 () U)
(declare-fun g_s214_249 () U)
(declare-fun g_s215_250 () U)
(declare-fun g_s216_251 () U)
(declare-fun g_s217_252 () U)
(declare-fun g_s218_253 () U)
(declare-fun g_s219_254 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_255 () U)
(declare-fun g_s221_256 () U)
(declare-fun g_s222_257 () U)
(declare-fun g_s223_258 () U)
(declare-fun g_s224_259 () U)
(declare-fun g_s225_260 () U)
(declare-fun g_s226_261 () U)
(declare-fun g_s227_262 () U)
(declare-fun g_s228_263 () U)
(declare-fun g_s229_264 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_265 () U)
(declare-fun g_s231_266 () U)
(declare-fun g_s232_267 () U)
(declare-fun g_s233_268 () U)
(declare-fun g_s234_269 () U)
(declare-fun g_s235_270 () U)
(declare-fun g_s236_271 () U)
(declare-fun g_s237_272 () U)
(declare-fun g_s238_273 () U)
(declare-fun g_s239_274 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_275 () U)
(declare-fun g_s241_276 () U)
(declare-fun g_s242_277 () U)
(declare-fun g_s243_278 () U)
(declare-fun g_s244_279 () U)
(declare-fun g_s245_280 () U)
(declare-fun g_s246_281 () U)
(declare-fun g_s247_282 () U)
(declare-fun g_s248_283 () U)
(declare-fun g_s249_284 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_285 () U)
(declare-fun g_s251_286 () U)
(declare-fun g_s252_287 () U)
(declare-fun g_s253_288 () U)
(declare-fun g_s254_289 () U)
(declare-fun g_s255_290 () U)
(declare-fun g_s256_291 () U)
(declare-fun g_s257_292 () U)
(declare-fun g_s258_293 () U)
(declare-fun g_s259_294 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_295 () U)
(declare-fun g_s261_296 () U)
(declare-fun g_s262_298 () U)
(declare-fun g_s263_300 () U)
(declare-fun g_s264_301 () U)
(declare-fun g_s265_302 () U)
(declare-fun g_s266_303 () U)
(declare-fun g_s267_304 () U)
(declare-fun g_s268_305 () U)
(declare-fun g_s269_306 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_307 () U)
(declare-fun g_s271_308 () U)
(declare-fun g_s272_309 () U)
(declare-fun g_s273_310 () U)
(declare-fun g_s274_311 () U)
(declare-fun g_s275_312 () U)
(declare-fun g_s276_313 () U)
(declare-fun g_s277_314 () U)
(declare-fun g_s278_315 () U)
(declare-fun g_s279_316 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_317 () U)
(declare-fun g_s281_318 () U)
(declare-fun g_s282_319 () U)
(declare-fun g_s283_320 () U)
(declare-fun g_s284_321 () U)
(declare-fun g_s285_322 () U)
(declare-fun g_s286_323 () U)
(declare-fun g_s287_324 () U)
(declare-fun g_s288_325 () U)
(declare-fun g_s289_326 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_327 () U)
(declare-fun g_s291_329 () U)
(declare-fun g_s292_328 () U)
(declare-fun g_s293_330 () U)
(declare-fun g_s294_331 () U)
(declare-fun g_s295_332 () U)
(declare-fun g_s296_334 () U)
(declare-fun g_s297_333 () U)
(declare-fun g_s298_335 () U)
(declare-fun g_s299_336 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_337 () U)
(declare-fun g_s301_338 () U)
(declare-fun g_s302_339 () U)
(declare-fun g_s303_340 () U)
(declare-fun g_s304_341 () U)
(declare-fun g_s305_342 () U)
(declare-fun g_s306_343 () U)
(declare-fun g_s307_344 () U)
(declare-fun g_s308_345 () U)
(declare-fun g_s309_346 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_347 () U)
(declare-fun g_s311_348 () U)
(declare-fun g_s312_349 () U)
(declare-fun g_s313_350 () U)
(declare-fun g_s314_351 () U)
(declare-fun g_s315_352 () U)
(declare-fun g_s316_353 () U)
(declare-fun g_s317_354 () U)
(declare-fun g_s318_355 () U)
(declare-fun g_s319_356 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_357 () U)
(declare-fun g_s321_358 () U)
(declare-fun g_s322_359 () U)
(declare-fun g_s323_360 () U)
(declare-fun g_s324_361 () U)
(declare-fun g_s325_362 () U)
(declare-fun g_s326_363 () U)
(declare-fun g_s327_364 () U)
(declare-fun g_s328_365 () U)
(declare-fun g_s329_366 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_367 () U)
(declare-fun g_s331_368 () U)
(declare-fun g_s332_369 () U)
(declare-fun g_s333_370 () U)
(declare-fun g_s334_371 () U)
(declare-fun g_s335_372 () U)
(declare-fun g_s336_373 () U)
(declare-fun g_s337_374 () U)
(declare-fun g_s338_375 () U)
(declare-fun g_s339_376 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_377 () U)
(declare-fun g_s341_378 () U)
(declare-fun g_s342_379 () U)
(declare-fun g_s343_380 () U)
(declare-fun g_s344_381 () U)
(declare-fun g_s345_382 () U)
(declare-fun g_s346_383 () U)
(declare-fun g_s347_384 () U)
(declare-fun g_s348_386 () U)
(declare-fun g_s349_388 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_390 () U)
(declare-fun g_s351_391 () U)
(declare-fun g_s351$1_394 () U)
(declare-fun g_s352_392 () U)
(declare-fun g_s352$1_395 () U)
(declare-fun g_s353_393 () U)
(declare-fun g_s353$1_396 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_76 () U)
(declare-fun g_s75_78 () U)
(declare-fun g_s76_80 () U)
(declare-fun g_s77_82 () U)
(declare-fun g_s78_84 () U)
(declare-fun g_s79_86 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_88 () U)
(declare-fun g_s81_90 () U)
(declare-fun g_s82_92 () U)
(declare-fun g_s83_94 () U)
(declare-fun g_s84_96 () U)
(declare-fun g_s85_98 () U)
(declare-fun g_s86_100 () U)
(declare-fun g_s87_102 () U)
(declare-fun g_s88_104 () U)
(declare-fun g_s89_106 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_108 () U)
(declare-fun g_s91_110 () U)
(declare-fun g_s92_112 () U)
(declare-fun g_s93_114 () U)
(declare-fun g_s94_116 () U)
(declare-fun g_s95_118 () U)
(declare-fun g_s96_120 () U)
(declare-fun g_s97_122 () U)
(declare-fun g_s98_124 () U)
(declare-fun g_s99_126 () U)
(declare-fun e170 () U)
(declare-fun e138 () U)
(declare-fun e141 () U)
(declare-fun e179 () U)
(declare-fun e181 () U)
(declare-fun e148 () U)
(declare-fun e144 () U)
(declare-fun e166 () U)
(declare-fun e162 () U)
(declare-fun e152 () U)
(declare-fun e157 () U)
(declare-fun e176 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (= g_s4_5 (SET (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 (mapplet g_s10_11 (mapplet g_s9_10 (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 g_s5_6)))))))))))))))))) (= g_s22_23 (SET (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 g_s23_24)))))))))))))))))) (= g_s40_41 (SET (mapplet g_s43_44 (mapplet g_s42_43 g_s41_42)))) (= g_s44_45 (SET (mapplet g_s46_47 g_s45_46))) (= g_s47_48 (SET (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 (mapplet g_s53_54 (mapplet g_s52_53 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 g_s48_49)))))))))) (= g_s57_58 (SET (mapplet g_s61_62 (mapplet g_s60_61 (mapplet g_s59_60 g_s58_59))))) (= g_s62_63 BOOL) (= g_s63_64 BOOL) (= g_s64_65 INT) (= g_s65_66 INT) (= g_s66_67 INT) (= g_s67_68 g_s66_67) (= g_s68_69 g_s66_67) (= g_s69_70 g_s64_65) (= g_s70_71 g_s62_63) (= g_s71_72 INT) (= g_s72_73 INT) (= g_s73_74 e0) (= g_s74_76 e75) (= g_s75_78 e77) (= g_s76_80 e79) (= g_s77_82 e81) (= g_s78_84 e83) (= g_s79_86 e85) (= g_s80_88 e87) (= g_s81_90 e89) (= g_s82_92 e91) (= g_s83_94 e93) (= g_s84_96 e95) (= g_s85_98 e97) (= g_s86_100 e99) (= g_s87_102 e101) (= g_s88_104 e103) (= g_s89_106 e105) (= g_s90_108 e107) (= g_s91_110 e109) (= g_s92_112 e111) (= g_s93_114 e113) (= g_s94_116 e115) (= g_s95_118 e117) (= g_s96_120 e119) (= g_s97_122 e121) (= g_s98_124 e123) (= g_s99_126 e125) (= g_s100_128 e127) (= g_s101_130 e129) (= g_s102_132 e131) (= g_s103_134 e133) (= g_s104_136 e135) (mem g_s105_137 (|-->| BOOL BOOL)) (= g_s105_137 e138) (mem g_s107_139 (|-->| BOOL BOOL)) (= g_s107_139 g_s105_137) (mem g_s108_140 (|-->| BOOL BOOL)) (= g_s108_140 e141) (mem g_s109_142 (|-->| BOOL BOOL)) (= g_s109_142 g_s108_140) (mem g_s110_143 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s110_143 e144) (mem g_s113_145 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s113_145 g_s110_143) (mem g_s114_146 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s114_146 g_s110_143) (mem g_s115_147 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s115_147 e148) (mem g_s116_149 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s116_149 g_s115_147) (mem g_s117_150 (|-->| (set_prod BOOL BOOL) BOOL)) (= g_s117_150 g_s115_147) (mem g_s118_151 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s118_151 e152) (mem g_s121_153 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s121_153 g_s118_151) (mem g_s122_154 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s122_154 g_s118_151) (mem g_s123_155 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s123_155 g_s118_151) (mem g_s124_156 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s124_156 e157) (mem g_s125_158 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s125_158 g_s124_156) (mem g_s126_159 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s126_159 g_s124_156) (mem g_s127_160 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s127_160 g_s124_156) (mem g_s128_161 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s128_161 e162) (mem g_s129_163 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s129_163 g_s128_161) (mem g_s130_164 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s130_164 g_s128_161) (mem g_s131_165 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s131_165 e166) (mem g_s132_167 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s132_167 g_s131_165) (mem g_s133_168 (|-->| (set_prod g_s64_65 g_s64_65) BOOL)) (= g_s133_168 g_s131_165) (mem g_s134_169 (|-->| BOOL BOOL)) (= g_s134_169 e170) (mem g_s135_171 (|-->| BOOL BOOL)) (= g_s135_171 e170) (mem g_s136_172 (|-->| BOOL BOOL)) (= g_s136_172 e170) (mem g_s137_173 (|-->| BOOL BOOL)) (= g_s137_173 e170) (mem g_s138_174 (|-->| BOOL BOOL)) (= g_s138_174 e170) (mem g_s139_175 (|-->| (set_prod g_s67_68 g_s66_67) BOOL)) (= g_s139_175 e176) (mem g_s142_177 (|-->| (set_prod g_s66_67 g_s66_67) BOOL)) (= g_s142_177 g_s142_177) (mem g_s143_178 (|>->>| g_s66_67 g_s66_67)) (= g_s143_178 e179) (mem g_s145_180 (|>->>| g_s67_68 g_s67_68)) (= g_s145_180 g_s143_178) (= g_s146_182 e181) (= g_s148_183 e170) (subset g_s149_184 NAT) (not (= g_s149_184 empty)) (= g_s149_184 (interval e0 e135)) (= g_s150_185 g_s149_184) (subset g_s151_186 g_s47_48) (= g_s151_186 (SET (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 (mapplet g_s53_54 (mapplet g_s52_53 (mapplet g_s51_52 (mapplet g_s50_51 g_s49_50))))))))) (mem g_s48_49 g_s47_48) (not (mem g_s48_49 g_s151_186)) (= g_s152_187 g_s3_4) (= g_s153_188 g_s4_5) (subset g_s154_189 g_s0_1) (subset g_s155_190 g_s0_1) (subset g_s156_191 g_s155_190) (= g_s156_191 g_s154_189) (subset g_s157_192 NAT) (not (= g_s157_192 empty)) (= g_s157_192 (interval e0 e77)) (mem g_s158_193 g_s157_192) (not (= g_s154_189 empty)) (subset g_s159_194 g_s1_2) (not (= g_s159_194 empty)) (= g_s160_195 g_s1_2) (subset g_s161_196 g_s160_195) (= g_s161_196 g_s159_194) (= g_s162_197 NAT) (subset g_s163_198 g_s2_3) (= g_s164_199 g_s2_3) (subset g_s165_200 g_s2_3) (= g_s165_200 g_s163_198) (subset g_s166_201 g_s3_4) (subset g_s167_202 g_s152_187) (= g_s168_203 NAT) (= g_s169_204 NAT) (= g_s170_205 NAT) (subset g_s171_206 NAT) (not (= g_s171_206 empty)) (= g_s171_206 (interval (imin g_s171_206) (imax g_s171_206))) (subset g_s172_207 NAT) (not (= g_s172_207 empty)) (= g_s172_207 (interval (imin g_s172_207) (imax g_s172_207))) (subset g_s173_208 NAT) (not (= g_s173_208 empty)) (= g_s173_208 (interval (imin g_s173_208) (imax g_s173_208))) (subset g_s174_209 NAT) (not (= g_s174_209 empty)) (= g_s174_209 (interval (imin g_s174_209) (imax g_s174_209))) (subset g_s175_210 NAT) (not (= g_s175_210 empty)) (= g_s175_210 (interval (imin g_s175_210) (imax g_s175_210))) (subset g_s176_211 NAT) (not (= g_s176_211 empty)) (= g_s176_211 (interval (imin g_s176_211) (imax g_s176_211))) (subset g_s177_212 NAT) (not (= g_s177_212 empty)) (= g_s177_212 (interval (imin g_s177_212) (imax g_s177_212))) (subset g_s178_213 NAT) (not (= g_s178_213 empty)) (= g_s178_213 (interval (imin g_s178_213) (imax g_s178_213))) (subset g_s179_214 NAT) (not (= g_s179_214 empty)) (= g_s179_214 (interval (imin g_s179_214) (imax g_s179_214))) (subset g_s180_215 NAT) (not (= g_s180_215 empty)) (= g_s180_215 (interval (imin g_s180_215) (imax g_s180_215))) (subset g_s181_216 NAT) (not (= g_s181_216 empty)) (= g_s181_216 (interval (imin g_s181_216) (imax g_s181_216))) (subset g_s182_217 NAT) (not (= g_s182_217 empty)) (= g_s182_217 (interval (imin g_s182_217) (imax g_s182_217))) (= g_s181_216 g_s182_217) (subset g_s183_218 NAT) (not (= g_s183_218 empty)) (mem e0 g_s183_218) (= g_s183_218 (interval (imin g_s183_218) (imax g_s183_218))) (= g_s184_219 g_s183_218) (subset g_s185_220 NAT) (not (= g_s185_220 empty)) (= g_s185_220 (interval (imin g_s185_220) (imax g_s185_220))) (subset g_s186_221 NAT) (not (= g_s186_221 empty)) (= g_s186_221 (interval (imin g_s186_221) (imax g_s186_221))) (= g_s185_220 g_s186_221) (= g_s179_214 g_s180_215) (subset g_s187_222 NAT) (not (= g_s187_222 empty)) (= g_s187_222 (interval (imin g_s187_222) (imax g_s187_222))) (subset g_s188_223 NAT) (not (= g_s188_223 empty)) (= g_s188_223 (interval (imin g_s187_222) (imax g_s187_222))) (= g_s188_223 g_s187_222) (subset g_s189_224 NAT) (not (= g_s189_224 empty)) (= g_s189_224 (interval (imin g_s189_224) (imax g_s189_224))) (subset g_s190_225 NAT) (not (= g_s190_225 empty)) (= g_s190_225 (interval (imin g_s189_224) (imax g_s189_224))) (= g_s190_225 g_s189_224) (subset g_s191_226 NAT) (not (= g_s191_226 empty)) (= g_s191_226 (interval (imin g_s191_226) (imax g_s191_226))) (subset g_s192_227 NAT) (not (= g_s192_227 empty)) (= g_s192_227 (interval (imin g_s192_227) (imax g_s192_227))) (subset g_s193_228 NAT) (not (= g_s193_228 empty)) (= g_s193_228 (interval (imin g_s193_228) (imax g_s193_228))) (subset g_s194_229 NAT) (not (= g_s194_229 empty)) (= g_s194_229 (interval (imin g_s194_229) (imax g_s194_229))) (subset g_s195_230 NAT) (not (= g_s195_230 empty)) (= g_s195_230 (interval (imin g_s194_229) (imax g_s194_229))) (= g_s195_230 g_s194_229) (subset g_s196_231 NAT) (not (= g_s196_231 empty)) (= g_s196_231 (interval (imin g_s196_231) (imax g_s196_231))) (subset g_s184_219 NAT) (not (= g_s184_219 empty)) (= g_s184_219 (interval (imin g_s184_219) (imax g_s184_219))) (subset g_s197_232 NAT) (not (= g_s197_232 empty)) (= g_s197_232 (interval (imin g_s197_232) (imax g_s197_232))) (subset g_s198_233 NAT) (not (= g_s198_233 empty)) (= g_s198_233 (interval (imin g_s198_233) (imax g_s198_233))) (subset g_s199_234 NAT) (not (= g_s199_234 empty)) (= g_s199_234 (interval (imin g_s199_234) (imax g_s199_234))) (subset g_s200_235 NAT) (not (= g_s200_235 empty)) (= g_s200_235 (interval (imin g_s200_235) (imax g_s200_235))) (= g_s199_234 g_s200_235) (subset g_s201_236 NAT) (not (= g_s201_236 empty)) (= g_s201_236 (interval (imin g_s201_236) (imax g_s201_236))) (subset g_s202_237 NAT) (not (= g_s202_237 empty)) (= g_s202_237 (interval (imin g_s202_237) (imax g_s202_237))) (subset g_s203_238 NAT) (not (= g_s203_238 empty)) (= g_s203_238 (interval (imin g_s203_238) (imax g_s203_238))) (= g_s203_238 g_s202_237) (subset g_s204_239 NAT) (not (= g_s204_239 empty)) (= g_s204_239 (interval (imin g_s204_239) (imax g_s204_239))) (subset g_s205_240 NAT) (not (= g_s205_240 empty)) (= g_s205_240 (interval (imin g_s205_240) (imax g_s205_240))) (= g_s205_240 g_s204_239) (mem g_s206_241 g_s0_1) (not (mem g_s206_241 g_s154_189)) (mem g_s207_242 g_s2_3) (not (mem g_s207_242 g_s163_198)) (mem g_s208_243 g_s164_199) (not (mem g_s208_243 g_s165_200)) (mem g_s209_244 g_s3_4) (not (mem g_s209_244 g_s166_201)) (mem g_s210_245 g_s152_187) (not (mem g_s210_245 g_s167_202)) (= g_s209_244 g_s210_245) (= g_s166_201 g_s167_202) (= g_s3_4 g_s152_187) (mem g_s211_246 g_s0_1) (mem g_s211_246 g_s154_189) (mem g_s212_247 g_s1_2) (mem g_s212_247 g_s159_194) (mem g_s213_248 g_s0_1) (mem g_s213_248 g_s154_189) (mem g_s214_249 g_s155_190) (= g_s214_249 g_s211_246) (mem g_s215_250 g_s160_195) (= g_s215_250 g_s212_247) (mem g_s216_251 g_s197_232) (mem g_s217_252 g_s198_233) (= g_s197_232 g_s198_233) (= g_s217_252 g_s216_251) (mem g_s218_253 g_s199_234) (mem g_s219_254 g_s200_235) (= g_s219_254 g_s218_253) (mem g_s220_255 g_s2_3) (mem g_s220_255 g_s163_198) (mem g_s221_256 g_s164_199) (mem g_s221_256 g_s165_200) (= g_s221_256 g_s220_255) (mem g_s222_257 g_s3_4) (mem g_s222_257 g_s166_201) (mem g_s223_258 g_s171_206) (mem g_s224_259 g_s172_207) (mem g_s225_260 g_s172_207) (= g_s225_260 e75) (mem g_s226_261 g_s173_208) (mem g_s227_262 g_s174_209) (mem g_s228_263 g_s176_211) (mem g_s229_264 g_s177_212) (mem g_s230_265 g_s178_213) (mem g_s231_266 g_s180_215) (mem g_s232_267 g_s179_214) (= g_s231_266 g_s232_267) (mem g_s233_268 g_s186_221) (mem g_s234_269 g_s185_220) (= g_s233_268 g_s234_269) (mem g_s235_270 g_s182_217) (mem g_s236_271 g_s181_216) (= g_s235_270 g_s236_271) (mem g_s237_272 g_s187_222) (mem g_s238_273 g_s188_223) (= g_s238_273 g_s237_272) (mem g_s239_274 g_s189_224) (mem g_s240_275 g_s190_225) (= g_s240_275 g_s239_274) (mem g_s241_276 g_s184_219) (mem g_s242_277 g_s183_218) (= g_s242_277 g_s241_276) (mem g_s243_278 g_s191_226) (mem g_s244_279 g_s196_231) (mem g_s245_280 g_s192_227) (mem g_s246_281 g_s193_228) (mem g_s247_282 g_s194_229) (mem g_s248_283 g_s201_236) (mem g_s249_284 g_s202_237) (mem g_s250_285 g_s203_238) (mem g_s251_286 g_s204_239) (mem g_s252_287 g_s205_240) (subset g_s253_288 NAT) (not (= g_s253_288 empty)) (= g_s253_288 (interval (imin g_s253_288) (imax g_s253_288))) (mem g_s254_289 g_s253_288) (subset g_s255_290 NAT) (not (= g_s255_290 empty)) (= g_s255_290 (interval (imin g_s255_290) (imax g_s255_290))) (mem g_s256_291 g_s255_290) (mem g_s257_292 g_s253_288) (= g_s257_292 e75) (= g_s258_293 NAT) (mem g_s259_294 g_s258_293) (subset g_s260_295 NAT) (= g_s260_295 (interval (imin g_s260_295) (imax g_s260_295))) (not (= g_s260_295 empty)) (mem e0 g_s260_295) (mem e75 g_s260_295) (mem e77 g_s260_295) (mem e79 g_s260_295) (mem e81 g_s260_295) (mem e83 g_s260_295) (mem e85 g_s260_295) (mem e87 g_s260_295) (mem e89 g_s260_295) (mem e91 g_s260_295) (mem e93 g_s260_295) (mem e95 g_s260_295) (mem e97 g_s260_295) (mem e99 g_s260_295) (mem e101 g_s260_295) (mem e103 g_s260_295) (mem e105 g_s260_295) (mem g_s261_296 NAT) (= g_s261_296 e297) (mem g_s262_298 NAT) (= g_s262_298 e299) (mem g_s263_300 NAT) (= g_s263_300 e105) (subset g_s264_301 NAT) (not (= g_s264_301 empty)) (= g_s264_301 (interval e75 g_s261_296)) (subset g_s265_302 NAT) (= g_s265_302 (interval e75 g_s261_296)) (subset g_s266_303 NAT) (= g_s266_303 (interval e75 g_s262_298)) (mem g_s267_304 NAT) (= g_s267_304 e89) (subset g_s268_305 NAT) (= g_s268_305 (interval e0 g_s267_304)) (subset g_s269_306 g_s268_305) (= g_s269_306 (interval e75 g_s267_304)) (mem g_s270_307 g_s268_305) (not (mem g_s270_307 g_s269_306)) (= g_s270_307 e0) (mem g_s271_308 g_s260_295) (subset g_s272_309 NAT) (= g_s272_309 (interval (imin g_s272_309) (imax g_s272_309))) (not (= g_s272_309 empty)) (= g_s273_310 g_s272_309) (mem g_s274_311 g_s272_309) (mem e0 g_s272_309) (mem e75 g_s272_309) (mem e77 g_s272_309) (mem e79 g_s272_309) (mem e81 g_s272_309) (mem e83 g_s272_309) (mem e85 g_s272_309) (mem e87 g_s272_309) (mem e89 g_s272_309) (mem e91 g_s272_309) (mem e93 g_s272_309) (mem e95 g_s272_309) (mem e97 g_s272_309) (mem e99 g_s272_309) (mem e101 g_s272_309) (mem e103 g_s272_309) (mem e105 g_s272_309) (mem g_s275_312 g_s272_309) (= g_s276_313 NAT) (subset g_s277_314 NAT) (not (= g_s277_314 empty)) (= g_s277_314 (interval e75 (idiv g_s263_300 e77))) (subset g_s278_315 NAT) (= g_s278_315 (interval (imin g_s272_309) (imax g_s272_309))) (not (= g_s278_315 empty)) (= g_s279_316 NAT) (subset g_s280_317 NAT) (= g_s280_317 (interval (imin g_s280_317) (imax g_s280_317))) (not (= g_s280_317 empty)) (mem g_s281_318 g_s280_317) (subset g_s282_319 NAT) (subset g_s282_319 (SET (mapplet e77 e75))) (not (= g_s282_319 empty)) (mem g_s283_320 g_s282_319) (subset g_s284_321 NAT) (= g_s284_321 (interval (imin g_s284_321) (imax g_s284_321))) (not (= g_s284_321 empty)) (mem g_s285_322 g_s284_321) (subset g_s286_323 NAT) (= g_s286_323 (interval (imin g_s286_323) (imax g_s286_323))) (not (= g_s286_323 empty)) (mem g_s287_324 g_s286_323) (= g_s288_325 INT) (subset g_s289_326 NAT) (not (= g_s289_326 empty)) (mem e0 g_s289_326) (= g_s289_326 (interval (imin g_s289_326) (imax g_s289_326))) (subset g_s290_327 NAT) (not (= g_s290_327 empty)) (= g_s290_327 (interval (imin g_s290_327) (imax g_s290_327))) (mem g_s291_329 g_s292_328) (= g_s291_329 g_s293_330) (mem g_s294_331 g_s292_328) (= g_s294_331 (imax g_s292_328)) (mem g_s295_332 g_s292_328) (= g_s295_332 (imax g_s292_328)) (mem g_s296_334 g_s297_333) (= g_s296_334 (imax g_s297_333)) (mem g_s212_247 g_s1_2) (mem g_s212_247 g_s159_194) (mem g_s298_335 g_s297_333) (= g_s298_335 (imax g_s297_333)) (mem g_s299_336 g_s297_333) (= g_s299_336 (imax g_s297_333)) (mem g_s300_337 INT) (= g_s300_337 MinInt) (mem g_s301_338 g_s1_2) (mem g_s301_338 g_s159_194) (mem g_s302_339 g_s66_67) (mem g_s303_340 g_s66_67) (mem g_s304_341 g_s66_67) (mem g_s305_342 g_s66_67) (mem g_s306_343 g_s66_67) (mem g_s307_344 g_s66_67) (mem g_s308_345 g_s66_67) (mem g_s309_346 g_s66_67) (mem g_s310_347 g_s66_67) (mem g_s311_348 g_s66_67) (mem g_s312_349 g_s66_67) (mem g_s313_350 g_s66_67) (mem g_s314_351 g_s66_67) (mem g_s315_352 g_s66_67) (mem g_s316_353 g_s66_67) (mem g_s317_354 g_s66_67) (mem g_s318_355 g_s66_67) (= g_s302_339 g_s73_74) (= g_s303_340 g_s74_76) (= g_s304_341 g_s75_78) (= g_s305_342 g_s76_80) (= g_s306_343 g_s77_82) (= g_s307_344 g_s78_84) (= g_s308_345 g_s79_86) (= g_s309_346 g_s80_88) (= g_s310_347 g_s81_90) (= g_s311_348 g_s82_92) (= g_s312_349 g_s83_94) (= g_s313_350 g_s84_96) (= g_s314_351 g_s85_98) (= g_s315_352 g_s86_100) (= g_s316_353 g_s87_102) (= g_s317_354 g_s88_104) (= g_s318_355 g_s89_106) (mem g_s319_356 g_s66_67) (mem g_s320_357 g_s66_67) (mem g_s321_358 g_s66_67) (mem g_s322_359 g_s66_67) (mem g_s323_360 g_s66_67) (mem g_s324_361 g_s66_67) (mem g_s325_362 g_s66_67) (mem g_s326_363 g_s66_67) (mem g_s327_364 g_s66_67) (mem g_s328_365 g_s66_67) (mem g_s329_366 g_s66_67) (mem g_s330_367 g_s66_67) (mem g_s331_368 g_s66_67) (mem g_s332_369 g_s66_67) (mem g_s333_370 g_s66_67) (mem g_s334_371 g_s66_67) (mem g_s335_372 g_s66_67) (= g_s319_356 g_s73_74) (= g_s320_357 g_s74_76) (= g_s321_358 g_s75_78) (= g_s322_359 g_s76_80) (= g_s323_360 g_s77_82) (= g_s324_361 g_s78_84) (= g_s325_362 g_s79_86) (= g_s326_363 g_s80_88) (= g_s327_364 g_s81_90) (= g_s328_365 g_s82_92) (= g_s329_366 g_s83_94) (= g_s330_367 g_s84_96) (= g_s331_368 g_s85_98) (= g_s332_369 g_s86_100) (= g_s333_370 g_s87_102) (= g_s334_371 g_s88_104) (= g_s335_372 g_s89_106) (= g_s336_373 g_s73_74) (= g_s337_374 g_s74_76) (= g_s338_375 g_s75_78) (mem g_s339_376 g_s66_67) (mem g_s340_377 g_s66_67) (mem g_s341_378 g_s66_67) (mem g_s342_379 g_s66_67) (mem g_s343_380 g_s66_67) (mem g_s344_381 g_s66_67) (mem g_s345_382 g_s66_67) (mem g_s346_383 g_s66_67) (mem g_s347_384 g_s66_67) (= g_s339_376 g_s73_74) (= g_s340_377 g_s74_76) (= g_s341_378 g_s75_78) (= g_s342_379 g_s76_80) (= g_s343_380 g_s77_82) (= g_s344_381 g_s78_84) (= g_s345_382 g_s79_86) (= g_s346_383 g_s80_88) (= g_s347_384 g_s81_90)))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool (and (= g_s348_386 e385) (= g_s349_388 e387) (= g_s350_390 e389)))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s351_391 g_s286_323) (mem g_s352_392 g_s284_321) (mem g_s353_393 g_s282_319) (or (= g_s353_393 e75) (= g_s353_393 e77))))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s351$1_394 g_s286_323))
(define-fun lh_2 () Bool (mem g_s352$1_395 g_s284_321))
(define-fun lh_3 () Bool (mem g_s353$1_396 g_s282_319))
; PO 1 in group 0
(assert (not (=> (and lh_1 lh_2 lh_3) (or (= g_s353$1_396 e75) (= g_s353$1_396 e77)))))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s351$1_394 g_s286_323))
(define-fun lh_2 () Bool (mem g_s352$1_395 g_s284_321))
(define-fun lh_3 () Bool (mem g_s353$1_396 g_s282_319))
; PO 1 in group 1
(assert (not (=> (and lh_1 lh_2 lh_3) (or (= g_s353$1_396 e75) (= g_s353$1_396 e77)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s351$1_394 g_s286_323))
(define-fun lh_2 () Bool (mem g_s352$1_395 g_s284_321))
(define-fun lh_3 () Bool (mem g_s353$1_396 g_s282_319))
; PO 1 in group 2
(assert (not (=> (and lh_1 lh_2 lh_3) (or (= g_s353$1_396 e75) (= g_s353$1_396 e77)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)