(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e46 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_105 () U)
(declare-fun g_s101_106 () U)
(declare-fun g_s102_165 () U)
(declare-fun g_s102_164 () U)
(declare-fun g_s103_109 () U)
(declare-fun g_s104_110 () U)
(declare-fun g_s105_111 () U)
(declare-fun g_s106_112 () U)
(declare-fun g_s107_113 () U)
(declare-fun g_s108_114 () U)
(declare-fun g_s109_115 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_116 () U)
(declare-fun g_s111_117 () U)
(declare-fun g_s112_118 () U)
(declare-fun g_s113_119 () U)
(declare-fun g_s114_120 () U)
(declare-fun g_s115_123 () U)
(declare-fun g_s116_124 () U)
(declare-fun g_s117_125 () U)
(declare-fun g_s118_126 () U)
(declare-fun g_s119_127 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_128 () U)
(declare-fun g_s121_129 () U)
(declare-fun g_s122_130 () U)
(declare-fun g_s123_131 () U)
(declare-fun g_s124_132 () U)
(declare-fun g_s125_133 () U)
(declare-fun g_s126_134 () U)
(declare-fun g_s127_135 () U)
(declare-fun g_s128_136 () U)
(declare-fun g_s129_137 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_138 () U)
(declare-fun g_s131_139 () U)
(declare-fun g_s132_140 () U)
(declare-fun g_s133_141 () U)
(declare-fun g_s134_142 () U)
(declare-fun g_s135_143 () U)
(declare-fun g_s136_144 () U)
(declare-fun g_s137_145 () U)
(declare-fun g_s138_146 () U)
(declare-fun g_s139_147 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_148 () U)
(declare-fun g_s141_149 () U)
(declare-fun g_s142_150 () U)
(declare-fun g_s143_151 () U)
(declare-fun g_s144_152 () U)
(declare-fun g_s145_153 () U)
(declare-fun g_s146_154 () U)
(declare-fun g_s147_155 () U)
(declare-fun g_s148_156 () U)
(declare-fun g_s149_157 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_158 () U)
(declare-fun g_s151_159 () U)
(declare-fun g_s152_160 () U)
(declare-fun g_s153_161 () U)
(declare-fun g_s154_162 () U)
(declare-fun g_s155_163 () U)
(declare-fun g_s159_166 () U)
(declare-fun g_s159_181 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160$1_167 () U)
(declare-fun g_s163$1_168 () U)
(declare-fun g_s165$1_169 () U)
(declare-fun g_s166$1_170 () U)
(declare-fun g_s168_171 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_172 () U)
(declare-fun g_s171_173 () U)
(declare-fun g_s172_174 () U)
(declare-fun g_s174_175 () U)
(declare-fun g_s176_176 () U)
(declare-fun g_s177_177 () U)
(declare-fun g_s18_20 () U)
(declare-fun g_s180_182 () U)
(declare-fun g_s180_178 () U)
(declare-fun g_s181_183 () U)
(declare-fun g_s181_179 () U)
(declare-fun g_s184_180 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_25 () U)
(declare-fun g_s25_27 () U)
(declare-fun g_s26_28 () U)
(declare-fun g_s27_29 () U)
(declare-fun g_s28_31 () U)
(declare-fun g_s29_33 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_34 () U)
(declare-fun g_s31_35 () U)
(declare-fun g_s32_36 () U)
(declare-fun g_s33_37 () U)
(declare-fun g_s34_38 () U)
(declare-fun g_s35_39 () U)
(declare-fun g_s36_40 () U)
(declare-fun g_s37_41 () U)
(declare-fun g_s38_42 () U)
(declare-fun g_s39_43 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_44 () U)
(declare-fun g_s41_45 () U)
(declare-fun g_s42_47 () U)
(declare-fun g_s43_48 () U)
(declare-fun g_s44_49 () U)
(declare-fun g_s45_50 () U)
(declare-fun g_s46_51 () U)
(declare-fun g_s47_52 () U)
(declare-fun g_s48_53 () U)
(declare-fun g_s49_54 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_55 () U)
(declare-fun g_s51_56 () U)
(declare-fun g_s52_57 () U)
(declare-fun g_s53_58 () U)
(declare-fun g_s54_59 () U)
(declare-fun g_s55_60 () U)
(declare-fun g_s56_61 () U)
(declare-fun g_s57_62 () U)
(declare-fun g_s58_63 () U)
(declare-fun g_s59_64 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_65 () U)
(declare-fun g_s61_66 () U)
(declare-fun g_s62_67 () U)
(declare-fun g_s63_68 () U)
(declare-fun g_s64_69 () U)
(declare-fun g_s65_70 () U)
(declare-fun g_s66_71 () U)
(declare-fun g_s67_72 () U)
(declare-fun g_s68_73 () U)
(declare-fun g_s69_74 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_75 () U)
(declare-fun g_s71_76 () U)
(declare-fun g_s72_77 () U)
(declare-fun g_s73_78 () U)
(declare-fun g_s74_79 () U)
(declare-fun g_s75_80 () U)
(declare-fun g_s76_81 () U)
(declare-fun g_s77_82 () U)
(declare-fun g_s78_83 () U)
(declare-fun g_s79_84 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_85 () U)
(declare-fun g_s81_86 () U)
(declare-fun g_s82_87 () U)
(declare-fun g_s83_88 () U)
(declare-fun g_s84_89 () U)
(declare-fun g_s85_90 () U)
(declare-fun g_s86_91 () U)
(declare-fun g_s87_92 () U)
(declare-fun g_s88_93 () U)
(declare-fun g_s89_94 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_95 () U)
(declare-fun g_s91_96 () U)
(declare-fun g_s92_97 () U)
(declare-fun g_s93_98 () U)
(declare-fun g_s94_99 () U)
(declare-fun g_s95_100 () U)
(declare-fun g_s96_101 () U)
(declare-fun g_s97_102 () U)
(declare-fun g_s98_103 () U)
(declare-fun g_s99_104 () U)
(declare-fun e122 () U)
(declare-fun e121 () U)
(declare-fun e108 () U)
(declare-fun e107 () U)
(declare-fun e24 () U)
(declare-fun e21 () U)
(declare-fun e19 () U)
(declare-fun e26 () U)
(declare-fun e32 () U)
(declare-fun e30 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool true)
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (not (= g_s12_13 empty)) (not (= g_s13_14 empty)) (not (= g_s14_15 empty)) (not (= g_s15_16 empty)) (not (= g_s16_17 empty)) (= g_s17_18 INTEGER) (= g_s18_20 e19) (= g_s21_22 e21) (= g_s22_23 INTEGER) (= g_s23_25 e24) (= g_s25_27 e26) (= g_s26_28 INTEGER) (= g_s27_29 INTEGER) (= g_s28_31 e30) (= g_s29_33 e32) (mem g_s30_34 (|-->| g_s16_17 g_s27_29)) (mem g_s31_35 (|-->| g_s1_2 g_s22_23)) (mem g_s32_36 (|<->| g_s1_2 g_s1_2)) (mem g_s33_37 (|<->| g_s1_2 g_s1_2)) (mem g_s34_38 (|-->| (set_prod g_s1_2 g_s1_2) g_s1_2)) (mem g_s35_39 (|-->| (POW g_s1_2) g_s1_2)) (mem g_s36_40 (|-->| (set_prod g_s1_2 g_s1_2) g_s1_2)) (mem g_s37_41 (|-->| g_s1_2 g_s1_2)) (mem g_s38_42 (|-->| g_s1_2 g_s1_2)) (mem g_s39_43 (|-->| g_s1_2 g_s1_2)) (mem g_s40_44 g_s1_2) (mem g_s41_45 g_s1_2) (|<=i| e46 (apply g_s31_35 g_s41_45)) (mem g_s42_47 g_s1_2) (mem g_s43_48 g_s1_2) (mem g_s44_49 g_s1_2) (mem g_s45_50 (|-->| g_s2_3 g_s17_18)) (mem g_s46_51 (|-->| g_s17_18 g_s2_3)) (mem g_s47_52 (|-->| g_s22_23 g_s1_2)) (mem g_s48_53 (|-->| g_s26_28 g_s10_11)) (mem g_s49_54 g_s15_16) (mem g_s50_55 g_s10_11) (mem g_s51_56 (|<->| g_s10_11 g_s10_11)) (mem g_s52_57 (|<->| g_s10_11 g_s10_11)) (mem g_s53_58 (|-->| (POW g_s10_11) g_s10_11)) (mem g_s54_59 g_s10_11) (mem g_s55_60 g_s10_11) (mem g_s56_61 (|<->| g_s2_3 g_s2_3)) (mem g_s57_62 (|<->| g_s2_3 g_s2_3)) (subset g_s57_62 g_s56_61) (mem g_s58_63 (|-->| (set_prod g_s2_3 g_s2_3) g_s1_2)) (mem g_s59_64 (|-->| g_s2_3 g_s2_3)) (mem g_s60_65 (|-->| (set_prod g_s2_3 g_s2_3) (POW g_s2_3))) (mem g_s61_66 (|-->| (POW g_s2_3) g_s2_3)) (mem g_s62_67 (|-->| (POW g_s2_3) g_s2_3)) (mem g_s63_68 g_s2_3) (mem g_s64_69 g_s2_3) (mem g_s65_70 g_s2_3) (mem g_s66_71 g_s2_3) (mem g_s67_72 g_s2_3) (mem g_s68_73 g_s2_3) (mem g_s69_74 g_s2_3) (mem g_s70_75 g_s2_3) (mem g_s71_76 (|-->| (set_prod g_s2_3 g_s1_2) g_s2_3)) (mem g_s72_77 (|-->| (set_prod g_s2_3 g_s1_2) g_s2_3)) (mem g_s73_78 (|-->| (set_prod g_s1_2 g_s2_3) g_s2_3)) (mem g_s74_79 (|-->| (set_prod g_s1_2 g_s6_7) g_s1_2)) (mem g_s75_80 (|-->| g_s1_2 g_s1_2)) (mem g_s76_81 (|-->| g_s2_3 g_s2_3)) (mem g_s77_82 (|-->| g_s3_4 g_s3_4)) (mem g_s78_83 (|-->| (set_prod INT INT) BOOL)) (mem g_s79_84 (|-->| (set_prod g_s3_4 g_s3_4) g_s3_4)) (mem g_s80_85 (|-->| g_s3_4 g_s4_5)) (mem g_s81_86 g_s3_4) (mem g_s82_87 (|-->| (set_prod g_s3_4 g_s3_4) g_s9_10)) (mem g_s83_88 (|-->| (set_prod g_s1_2 g_s3_4) g_s9_10)) (mem g_s84_89 (|-->| (set_prod g_s3_4 g_s7_8) g_s1_2)) (mem g_s85_90 (|-->| (set_prod g_s5_6 g_s5_6) g_s5_6)) (mem g_s86_91 (|-->| (set_prod g_s5_6 g_s5_6) g_s5_6)) (mem g_s87_92 (|-->| g_s5_6 g_s5_6)) (mem g_s88_93 (|-->| g_s5_6 g_s5_6)) (mem g_s89_94 (|-->| (POW g_s5_6) g_s5_6)) (mem g_s90_95 (|-->| (|+->| NATURAL g_s5_6) g_s5_6)) (mem g_s91_96 (|-->| (|+->| NATURAL g_s5_6) g_s5_6)) (mem g_s92_97 (|-->| (POW g_s5_6) g_s5_6)) (mem g_s93_98 (|-->| g_s5_6 g_s5_6)) (mem g_s94_99 (|<->| g_s5_6 g_s5_6)) (mem g_s95_100 g_s5_6) (mem g_s96_101 g_s5_6) (mem g_s97_102 (|-->| (set_prod g_s5_6 g_s7_8) g_s3_4)) (mem g_s98_103 (|-->| (set_prod g_s5_6 g_s10_11) g_s5_6)) (mem g_s99_104 (|-->| (set_prod g_s5_6 g_s6_7) g_s5_6)) (mem g_s100_105 (|-->| (set_prod g_s5_6 g_s1_2) g_s4_5)) (mem g_s101_106 g_s5_6) (= g_s90_95 (|<+| (set_prod (|+->| NATURAL g_s5_6) (SET g_s95_100)) e107)) (= g_s91_96 (|<+| (set_prod (|+->| NATURAL g_s5_6) (SET g_s95_100)) e108)) (mem g_s103_109 (|-->| (set_prod g_s4_5 g_s4_5) g_s4_5)) (mem g_s104_110 (|-->| g_s4_5 g_s4_5)) (mem g_s105_111 (|-->| (POW g_s4_5) g_s4_5)) (mem g_s106_112 (|-->| (set_prod g_s4_5 g_s4_5) g_s4_5)) (mem g_s107_113 (|<->| g_s4_5 g_s4_5)) (mem g_s108_114 (|<->| g_s4_5 g_s4_5)) (mem g_s109_115 g_s4_5) (mem g_s110_116 g_s4_5) (mem g_s111_117 g_s4_5) (mem g_s112_118 g_s4_5) (mem g_s113_119 (|-->| (|+->| NATURAL g_s4_5) g_s4_5)) (mem g_s114_120 (|-->| (|+->| NATURAL g_s4_5) g_s4_5)) (= g_s113_119 (|<+| (set_prod (|+->| NATURAL g_s4_5) (SET g_s109_115)) e121)) (= g_s114_120 (|<+| (set_prod (|+->| NATURAL g_s4_5) (SET g_s109_115)) e122)) (mem g_s115_123 g_s6_7) (mem g_s116_124 g_s6_7) (mem g_s117_125 g_s6_7) (mem g_s118_126 g_s6_7) (mem g_s119_127 g_s6_7) (mem g_s120_128 g_s6_7) (mem g_s121_129 (|-->| (set_prod g_s7_8 g_s7_8) g_s7_8)) (mem g_s122_130 (|-->| (set_prod g_s8_9 g_s8_9) g_s8_9)) (mem g_s123_131 (|-->| (set_prod g_s7_8 g_s7_8) g_s8_9)) (mem g_s124_132 (|-->| g_s7_8 g_s8_9)) (mem g_s125_133 (|-->| g_s8_9 g_s8_9)) (mem g_s126_134 (|-->| (set_prod g_s5_6 g_s8_9) g_s1_2)) (mem g_s127_135 g_s7_8) (mem g_s128_136 g_s9_10) (subset g_s129_137 (set_prod (set_prod (set_prod g_s2_3 g_s2_3) g_s2_3) g_s2_3)) (mem g_s130_138 g_s12_13) (mem g_s131_139 g_s12_13) (mem g_s132_140 (|-->| INT (seq g_s0_1))) (mem g_s133_141 (|-->| INT (seq g_s0_1))) (mem g_s134_142 (|-->| INT (seq g_s0_1))) (mem g_s135_143 (|-->| g_s13_14 (seq g_s0_1))) (mem g_s136_144 (|-->| g_s1_2 (seq g_s0_1))) (mem g_s137_145 (|-->| g_s2_3 (seq g_s0_1))) (mem g_s138_146 (|-->| g_s7_8 (seq g_s0_1))) (mem g_s139_147 (|-->| g_s7_8 (seq g_s0_1))) (mem g_s140_148 (|-->| g_s7_8 (seq g_s0_1))) (mem g_s141_149 (|-->| g_s12_13 (seq g_s0_1))) (mem g_s142_150 g_s0_1) (mem g_s143_151 NAT) (mem g_s144_152 NAT) (mem g_s145_153 (|-->| g_s12_13 INT)) (mem g_s146_154 g_s13_14) (mem g_s147_155 g_s7_8) (mem g_s148_156 g_s7_8) (mem g_s149_157 g_s26_28) (mem g_s150_158 g_s26_28) (|<=i| g_s149_157 g_s150_158) (mem g_s151_159 g_s27_29) (mem g_s152_160 g_s17_18) (mem g_s153_161 g_s17_18) (mem g_s154_162 g_s26_28) (= g_s151_159 e0) (= g_s152_160 e0) (= g_s153_161 e46) (= g_s154_162 e0) (mem g_s155_163 (|-->| (set_prod NAT g_s7_8) g_s7_8))))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool true)
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (not (= g_s12_13 empty)) (not (= g_s13_14 empty)) (not (= g_s14_15 empty)) (not (= g_s15_16 empty)) (not (= g_s16_17 empty))))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_sets|)
(define-fun lh_1 () Bool (= g_s17_18 INTEGER))
(define-fun lh_2 () Bool (= g_s18_20 e19))
(define-fun lh_3 () Bool (= g_s21_22 e21))
(define-fun lh_4 () Bool (= g_s22_23 INTEGER))
(define-fun lh_5 () Bool (= g_s23_25 e24))
(define-fun lh_6 () Bool (= g_s25_27 e26))
(define-fun lh_7 () Bool (= g_s26_28 INTEGER))
(define-fun lh_8 () Bool (= g_s27_29 INTEGER))
(define-fun lh_9 () Bool (= g_s28_31 e30))
(define-fun lh_10 () Bool (= g_s29_33 e32))
(define-fun lh_11 () Bool (mem g_s30_34 (|-->| g_s16_17 g_s27_29)))
(define-fun lh_12 () Bool (mem g_s31_35 (|-->| g_s1_2 g_s22_23)))
(define-fun lh_13 () Bool (mem g_s32_36 (|<->| g_s1_2 g_s1_2)))
(define-fun lh_14 () Bool (mem g_s33_37 (|<->| g_s1_2 g_s1_2)))
(define-fun lh_15 () Bool (mem g_s34_38 (|-->| (set_prod g_s1_2 g_s1_2) g_s1_2)))
(define-fun lh_16 () Bool (mem g_s35_39 (|-->| (POW g_s1_2) g_s1_2)))
(define-fun lh_17 () Bool (mem g_s36_40 (|-->| (set_prod g_s1_2 g_s1_2) g_s1_2)))
(define-fun lh_18 () Bool (mem g_s37_41 (|-->| g_s1_2 g_s1_2)))
(define-fun lh_19 () Bool (mem g_s38_42 (|-->| g_s1_2 g_s1_2)))
(define-fun lh_20 () Bool (mem g_s39_43 (|-->| g_s1_2 g_s1_2)))
(define-fun lh_21 () Bool (mem g_s40_44 g_s1_2))
(define-fun lh_22 () Bool (mem g_s41_45 g_s1_2))
(define-fun lh_23 () Bool (|<=i| e46 (apply g_s31_35 g_s41_45)))
(define-fun lh_24 () Bool (mem g_s42_47 g_s1_2))
(define-fun lh_25 () Bool (mem g_s43_48 g_s1_2))
(define-fun lh_26 () Bool (mem g_s44_49 g_s1_2))
(define-fun lh_27 () Bool (mem g_s45_50 (|-->| g_s2_3 g_s17_18)))
(define-fun lh_28 () Bool (mem g_s46_51 (|-->| g_s17_18 g_s2_3)))
(define-fun lh_29 () Bool (mem g_s47_52 (|-->| g_s22_23 g_s1_2)))
(define-fun lh_30 () Bool (mem g_s48_53 (|-->| g_s26_28 g_s10_11)))
(define-fun lh_31 () Bool (mem g_s49_54 g_s15_16))
(define-fun lh_32 () Bool (mem g_s50_55 g_s10_11))
(define-fun lh_33 () Bool (mem g_s51_56 (|<->| g_s10_11 g_s10_11)))
(define-fun lh_34 () Bool (mem g_s52_57 (|<->| g_s10_11 g_s10_11)))
(define-fun lh_35 () Bool (mem g_s53_58 (|-->| (POW g_s10_11) g_s10_11)))
(define-fun lh_36 () Bool (mem g_s54_59 g_s10_11))
(define-fun lh_37 () Bool (mem g_s55_60 g_s10_11))
(define-fun lh_38 () Bool (mem g_s56_61 (|<->| g_s2_3 g_s2_3)))
(define-fun lh_39 () Bool (mem g_s57_62 (|<->| g_s2_3 g_s2_3)))
(define-fun lh_40 () Bool (subset g_s57_62 g_s56_61))
(define-fun lh_41 () Bool (mem g_s58_63 (|-->| (set_prod g_s2_3 g_s2_3) g_s1_2)))
(define-fun lh_42 () Bool (mem g_s59_64 (|-->| g_s2_3 g_s2_3)))
(define-fun lh_43 () Bool (mem g_s60_65 (|-->| (set_prod g_s2_3 g_s2_3) (POW g_s2_3))))
(define-fun lh_44 () Bool (mem g_s61_66 (|-->| (POW g_s2_3) g_s2_3)))
(define-fun lh_45 () Bool (mem g_s62_67 (|-->| (POW g_s2_3) g_s2_3)))
(define-fun lh_46 () Bool (mem g_s63_68 g_s2_3))
(define-fun lh_47 () Bool (mem g_s64_69 g_s2_3))
(define-fun lh_48 () Bool (mem g_s65_70 g_s2_3))
(define-fun lh_49 () Bool (mem g_s66_71 g_s2_3))
(define-fun lh_50 () Bool (mem g_s67_72 g_s2_3))
(define-fun lh_51 () Bool (mem g_s68_73 g_s2_3))
(define-fun lh_52 () Bool (mem g_s69_74 g_s2_3))
(define-fun lh_53 () Bool (mem g_s70_75 g_s2_3))
(define-fun lh_54 () Bool (mem g_s71_76 (|-->| (set_prod g_s2_3 g_s1_2) g_s2_3)))
(define-fun lh_55 () Bool (mem g_s72_77 (|-->| (set_prod g_s2_3 g_s1_2) g_s2_3)))
(define-fun lh_56 () Bool (mem g_s73_78 (|-->| (set_prod g_s1_2 g_s2_3) g_s2_3)))
(define-fun lh_57 () Bool (mem g_s74_79 (|-->| (set_prod g_s1_2 g_s6_7) g_s1_2)))
(define-fun lh_58 () Bool (mem g_s75_80 (|-->| g_s1_2 g_s1_2)))
(define-fun lh_59 () Bool (mem g_s76_81 (|-->| g_s2_3 g_s2_3)))
(define-fun lh_60 () Bool (mem g_s77_82 (|-->| g_s3_4 g_s3_4)))
(define-fun lh_61 () Bool (mem g_s78_83 (|-->| (set_prod INT INT) BOOL)))
(define-fun lh_62 () Bool (mem g_s79_84 (|-->| (set_prod g_s3_4 g_s3_4) g_s3_4)))
(define-fun lh_63 () Bool (mem g_s80_85 (|-->| g_s3_4 g_s4_5)))
(define-fun lh_64 () Bool (mem g_s81_86 g_s3_4))
(define-fun lh_65 () Bool (mem g_s82_87 (|-->| (set_prod g_s3_4 g_s3_4) g_s9_10)))
(define-fun lh_66 () Bool (mem g_s83_88 (|-->| (set_prod g_s1_2 g_s3_4) g_s9_10)))
(define-fun lh_67 () Bool (mem g_s84_89 (|-->| (set_prod g_s3_4 g_s7_8) g_s1_2)))
(define-fun lh_68 () Bool (mem g_s85_90 (|-->| (set_prod g_s5_6 g_s5_6) g_s5_6)))
(define-fun lh_69 () Bool (mem g_s86_91 (|-->| (set_prod g_s5_6 g_s5_6) g_s5_6)))
(define-fun lh_70 () Bool (mem g_s87_92 (|-->| g_s5_6 g_s5_6)))
(define-fun lh_71 () Bool (mem g_s88_93 (|-->| g_s5_6 g_s5_6)))
(define-fun lh_72 () Bool (mem g_s89_94 (|-->| (POW g_s5_6) g_s5_6)))
(define-fun lh_73 () Bool (mem g_s90_95 (|-->| (|+->| NATURAL g_s5_6) g_s5_6)))
(define-fun lh_74 () Bool (mem g_s91_96 (|-->| (|+->| NATURAL g_s5_6) g_s5_6)))
(define-fun lh_75 () Bool (mem g_s92_97 (|-->| (POW g_s5_6) g_s5_6)))
(define-fun lh_76 () Bool (mem g_s93_98 (|-->| g_s5_6 g_s5_6)))
(define-fun lh_77 () Bool (mem g_s94_99 (|<->| g_s5_6 g_s5_6)))
(define-fun lh_78 () Bool (mem g_s95_100 g_s5_6))
(define-fun lh_79 () Bool (mem g_s96_101 g_s5_6))
(define-fun lh_80 () Bool (mem g_s97_102 (|-->| (set_prod g_s5_6 g_s7_8) g_s3_4)))
(define-fun lh_81 () Bool (mem g_s98_103 (|-->| (set_prod g_s5_6 g_s10_11) g_s5_6)))
(define-fun lh_82 () Bool (mem g_s99_104 (|-->| (set_prod g_s5_6 g_s6_7) g_s5_6)))
(define-fun lh_83 () Bool (mem g_s100_105 (|-->| (set_prod g_s5_6 g_s1_2) g_s4_5)))
(define-fun lh_84 () Bool (mem g_s101_106 g_s5_6))
(define-fun lh_85 () Bool (mem g_s102_164 (|+->| NATURAL g_s5_6)))
(define-fun lh_86 () Bool (not (= g_s102_164 empty)))
(define-fun lh_87 () Bool (= g_s90_95 (|<+| (set_prod (|+->| NATURAL g_s5_6) (SET g_s95_100)) e107)))
(define-fun lh_88 () Bool (= g_s91_96 (|<+| (set_prod (|+->| NATURAL g_s5_6) (SET g_s95_100)) e108)))
(define-fun lh_89 () Bool (mem g_s103_109 (|-->| (set_prod g_s4_5 g_s4_5) g_s4_5)))
(define-fun lh_90 () Bool (mem g_s104_110 (|-->| g_s4_5 g_s4_5)))
(define-fun lh_91 () Bool (mem g_s105_111 (|-->| (POW g_s4_5) g_s4_5)))
(define-fun lh_92 () Bool (mem g_s106_112 (|-->| (set_prod g_s4_5 g_s4_5) g_s4_5)))
(define-fun lh_93 () Bool (mem g_s107_113 (|<->| g_s4_5 g_s4_5)))
(define-fun lh_94 () Bool (mem g_s108_114 (|<->| g_s4_5 g_s4_5)))
(define-fun lh_95 () Bool (mem g_s109_115 g_s4_5))
(define-fun lh_96 () Bool (mem g_s110_116 g_s4_5))
(define-fun lh_97 () Bool (mem g_s111_117 g_s4_5))
(define-fun lh_98 () Bool (mem g_s112_118 g_s4_5))
(define-fun lh_99 () Bool (mem g_s113_119 (|-->| (|+->| NATURAL g_s4_5) g_s4_5)))
(define-fun lh_100 () Bool (mem g_s114_120 (|-->| (|+->| NATURAL g_s4_5) g_s4_5)))
(define-fun lh_101 () Bool (mem g_s102_165 (|+->| NATURAL g_s4_5)))
(define-fun lh_102 () Bool (not (= g_s102_165 empty)))
(define-fun lh_103 () Bool (= g_s113_119 (|<+| (set_prod (|+->| NATURAL g_s4_5) (SET g_s109_115)) e121)))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (mem g_s31_35 (|+->| (dom g_s31_35) (ran g_s31_35))))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (mem g_s41_45 (dom g_s31_35)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86) (not (= (dom g_s102_164) empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86) (mem g_s102_164 (|+->| (dom g_s102_164) (ran g_s102_164))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86) (mem (imax (dom g_s102_164)) (dom g_s102_164)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86) (mem (binary_inter (dom g_s102_164) NATURAL) (FIN NATURAL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87) (not (= (dom g_s102_164) empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87) (mem g_s102_164 (|+->| (dom g_s102_164) (ran g_s102_164))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87) (mem (imin (dom g_s102_164)) (dom g_s102_164)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87) (mem (binary_inter (dom g_s102_164) (set_diff INTEGER NATURAL)) (FIN INTEGER)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102) (not (= (dom g_s102_165) empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102) (mem g_s102_165 (|+->| (dom g_s102_165) (ran g_s102_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102) (mem (imax (dom g_s102_165)) (dom g_s102_165)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102) (mem (binary_inter (dom g_s102_165) NATURAL) (FIN NATURAL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103) (not (= (dom g_s102_165) empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103) (mem g_s102_165 (|+->| (dom g_s102_165) (ran g_s102_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103) (mem (imin (dom g_s102_165)) (dom g_s102_165)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103) (mem (binary_inter (dom g_s102_165) (set_diff INTEGER NATURAL)) (FIN INTEGER)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s159_166 INT))
(define-fun lh_1 () Bool (mem g_s160$1_167 g_s0_1))
; PO 1 in group 1
(push 1)
(assert (not (=> lh_1 (mem g_s132_140 (|+->| (dom g_s132_140) (ran g_s132_140))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> lh_1 (mem g_s159_166 (dom g_s132_140)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s159_166 INT))
(define-fun lh_1 () Bool (mem g_s160$1_167 g_s0_1))
(define-fun lh_2 () Bool (mem g_s163$1_168 g_s0_1))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s133_141 (|+->| (dom g_s133_141) (ran g_s133_141))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s159_166 (dom g_s133_141)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s159_166 INT))
(define-fun lh_1 () Bool (mem g_s160$1_167 g_s0_1))
(define-fun lh_2 () Bool (mem g_s163$1_168 g_s0_1))
(define-fun lh_3 () Bool (mem g_s165$1_169 g_s0_1))
(define-fun lh_4 () Bool (mem g_s166$1_170 g_s0_1))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s134_142 (|+->| (dom g_s134_142) (ran g_s134_142))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s159_166 (dom g_s134_142)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s168_171 g_s13_14))
(define-fun lh_1 () Bool (mem g_s160$1_167 g_s0_1))
(define-fun lh_2 () Bool (mem g_s163$1_168 g_s0_1))
(define-fun lh_3 () Bool (mem g_s165$1_169 g_s0_1))
(define-fun lh_4 () Bool (mem g_s166$1_170 g_s0_1))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s135_143 (|+->| (dom g_s135_143) (ran g_s135_143))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s168_171 (dom g_s135_143)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s170_172 g_s2_3))
(assert (mem g_s171_173 g_s2_3))
(assert (mem g_s172_174 g_s2_3))
; PO 1 in group 5
(push 1)
(assert (not (mem g_s60_65 (|+->| (dom g_s60_65) (ran g_s60_65)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (mem (mapplet g_s171_173 g_s172_174) (dom g_s60_65))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s174_175 g_s12_13))
(define-fun lh_1 () Bool (mem g_s160$1_167 g_s0_1))
(define-fun lh_2 () Bool (mem g_s163$1_168 g_s0_1))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s174_175 (dom g_s141_149)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s141_149 (|+->| (dom g_s141_149) (ran g_s141_149))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s176_176 g_s2_3))
(assert (mem g_s177_177 g_s2_3))
; PO 1 in group 7
(push 1)
(assert (not (mem g_s61_66 (|+->| (dom g_s61_66) (ran g_s61_66)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (mem (SET (mapplet g_s177_177 g_s176_176)) (dom g_s61_66))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s176_176 g_s2_3))
(assert (mem g_s177_177 g_s2_3))
; PO 1 in group 8
(push 1)
(assert (not (mem g_s62_67 (|+->| (dom g_s62_67) (ran g_s62_67)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (mem (SET (mapplet g_s177_177 g_s176_176)) (dom g_s62_67))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s180_178 g_s5_6))
(assert (mem g_s181_179 g_s5_6))
; PO 1 in group 9
(push 1)
(assert (not (mem g_s89_94 (|+->| (dom g_s89_94) (ran g_s89_94)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (mem (SET (mapplet g_s181_179 g_s180_178)) (dom g_s89_94))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s180_178 g_s5_6))
(assert (mem g_s181_179 g_s5_6))
; PO 1 in group 10
(push 1)
(assert (not (mem g_s92_97 (|+->| (dom g_s92_97) (ran g_s92_97)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (mem (SET (mapplet g_s181_179 g_s180_178)) (dom g_s92_97))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s184_180 g_s7_8))
(define-fun lh_1 () Bool (mem g_s160$1_167 g_s0_1))
(define-fun lh_2 () Bool (mem g_s163$1_168 g_s0_1))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s184_180 (dom g_s138_146)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s138_146 (|+->| (dom g_s138_146) (ran g_s138_146))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s184_180 g_s7_8))
(define-fun lh_1 () Bool (mem g_s160$1_167 g_s0_1))
; PO 1 in group 12
(push 1)
(assert (not (=> lh_1 (mem g_s139_147 (|+->| (dom g_s139_147) (ran g_s139_147))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> lh_1 (mem g_s184_180 (dom g_s139_147)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s159_181 g_s7_8))
(define-fun lh_1 () Bool (mem g_s160$1_167 g_s0_1))
(define-fun lh_2 () Bool (mem g_s163$1_168 g_s0_1))
(define-fun lh_3 () Bool (mem g_s165$1_169 g_s0_1))
(define-fun lh_4 () Bool (mem g_s166$1_170 g_s0_1))
; PO 1 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s140_148 (|+->| (dom g_s140_148) (ran g_s140_148))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s159_181 (dom g_s140_148)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s180_182 g_s4_5))
(assert (mem g_s181_183 g_s4_5))
; PO 1 in group 14
(push 1)
(assert (not (mem g_s105_111 (|+->| (dom g_s105_111) (ran g_s105_111)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (mem (SET (mapplet g_s181_183 g_s180_182)) (dom g_s105_111))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)