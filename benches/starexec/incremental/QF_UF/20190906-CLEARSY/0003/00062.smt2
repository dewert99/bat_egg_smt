(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e48 () U)
(declare-fun e192 () U)
(declare-fun e250 () U)
(declare-fun e169 () U)
(declare-fun e175 () U)
(declare-fun e273 () U)
(declare-fun e176 () U)
(declare-fun e252 () U)
(declare-fun e246 () U)
(declare-fun e172 () U)
(declare-fun e173 () U)
(declare-fun e254 () U)
(declare-fun e269 () U)
(declare-fun e174 () U)
(declare-fun e177 () U)
(declare-fun e263 () U)
(declare-fun e271 () U)
(declare-fun e168 () U)
(declare-fun e265 () U)
(declare-fun e235 () U)
(declare-fun e258 () U)
(declare-fun e256 () U)
(declare-fun e171 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_105 () U)
(declare-fun g_s101_106 () U)
(declare-fun g_s102_107 () U)
(declare-fun g_s103_108 () U)
(declare-fun g_s105_111 () U)
(declare-fun g_s106_112 () U)
(declare-fun g_s107_113 () U)
(declare-fun g_s108_114 () U)
(declare-fun g_s109_115 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_116 () U)
(declare-fun g_s111_117 () U)
(declare-fun g_s112_118 () U)
(declare-fun g_s113_119 () U)
(declare-fun g_s114_120 () U)
(declare-fun g_s115_121 () U)
(declare-fun g_s116_122 () U)
(declare-fun g_s117_125 () U)
(declare-fun g_s118_126 () U)
(declare-fun g_s119_127 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_128 () U)
(declare-fun g_s121_129 () U)
(declare-fun g_s122_130 () U)
(declare-fun g_s123_131 () U)
(declare-fun g_s124_132 () U)
(declare-fun g_s125_133 () U)
(declare-fun g_s126_134 () U)
(declare-fun g_s127_135 () U)
(declare-fun g_s128_136 () U)
(declare-fun g_s129_137 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_138 () U)
(declare-fun g_s131_139 () U)
(declare-fun g_s132_140 () U)
(declare-fun g_s133_141 () U)
(declare-fun g_s134_142 () U)
(declare-fun g_s135_143 () U)
(declare-fun g_s136_144 () U)
(declare-fun g_s137_145 () U)
(declare-fun g_s138_146 () U)
(declare-fun g_s139_147 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_148 () U)
(declare-fun g_s141_149 () U)
(declare-fun g_s142_150 () U)
(declare-fun g_s143_151 () U)
(declare-fun g_s144_152 () U)
(declare-fun g_s145_153 () U)
(declare-fun g_s146_154 () U)
(declare-fun g_s147_155 () U)
(declare-fun g_s148_156 () U)
(declare-fun g_s149_157 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_158 () U)
(declare-fun g_s151_159 () U)
(declare-fun g_s152_160 () U)
(declare-fun g_s153_161 () U)
(declare-fun g_s154_162 () U)
(declare-fun g_s155_163 () U)
(declare-fun g_s156_164 () U)
(declare-fun g_s157_165 () U)
(declare-fun g_s158_166 () U)
(declare-fun g_s159_167 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_170 () U)
(declare-fun g_s161_178 () U)
(declare-fun g_s162_179 () U)
(declare-fun g_s163_180 () U)
(declare-fun g_s164_181 () U)
(declare-fun g_s165_182 () U)
(declare-fun g_s166_183 () U)
(declare-fun g_s167_184 () U)
(declare-fun g_s168_185 () U)
(declare-fun g_s169_186 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_187 () U)
(declare-fun g_s171_188 () U)
(declare-fun g_s172_189 () U)
(declare-fun g_s173_190 () U)
(declare-fun g_s174_191 () U)
(declare-fun g_s175_193 () U)
(declare-fun g_s176_194 () U)
(declare-fun g_s177_195 () U)
(declare-fun g_s178_196 () U)
(declare-fun g_s179_197 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_198 () U)
(declare-fun g_s181_199 () U)
(declare-fun g_s182_200 () U)
(declare-fun g_s183_201 () U)
(declare-fun g_s184_202 () U)
(declare-fun g_s185_203 () U)
(declare-fun g_s186_204 () U)
(declare-fun g_s187_205 () U)
(declare-fun g_s188_206 () U)
(declare-fun g_s189_207 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_208 () U)
(declare-fun g_s191_209 () U)
(declare-fun g_s192_210 () U)
(declare-fun g_s193_211 () U)
(declare-fun g_s194_212 () U)
(declare-fun g_s195_213 () U)
(declare-fun g_s196_214 () U)
(declare-fun g_s197_215 () U)
(declare-fun g_s198_216 () U)
(declare-fun g_s199_217 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_22 () U)
(declare-fun g_s200_218 () U)
(declare-fun g_s201_219 () U)
(declare-fun g_s202_220 () U)
(declare-fun g_s203_221 () U)
(declare-fun g_s204_222 () U)
(declare-fun g_s205_223 () U)
(declare-fun g_s206_224 () U)
(declare-fun g_s207_225 () U)
(declare-fun g_s208_226 () U)
(declare-fun g_s209_227 () U)
(declare-fun g_s210_228 () U)
(declare-fun g_s211_229 () U)
(declare-fun g_s212_230 () U)
(declare-fun g_s213_231 () U)
(declare-fun g_s214_232 () U)
(declare-fun g_s215_233 () U)
(declare-fun g_s216_234 () U)
(declare-fun g_s217_236 () U)
(declare-fun g_s218_237 () U)
(declare-fun g_s219_238 () U)
(declare-fun g_s220_239 () U)
(declare-fun g_s221_240 () U)
(declare-fun g_s222_241 () U)
(declare-fun g_s223_242 () U)
(declare-fun g_s224_243 () U)
(declare-fun g_s225_244 () U)
(declare-fun g_s226_245 () U)
(declare-fun g_s227_247 () U)
(declare-fun g_s228_248 () U)
(declare-fun g_s229_249 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_251 () U)
(declare-fun g_s231_253 () U)
(declare-fun g_s232_255 () U)
(declare-fun g_s233_257 () U)
(declare-fun g_s234_259 () U)
(declare-fun g_s235_260 () U)
(declare-fun g_s236_261 () U)
(declare-fun g_s237_262 () U)
(declare-fun g_s238_264 () U)
(declare-fun g_s239_266 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_267 () U)
(declare-fun g_s241_268 () U)
(declare-fun g_s242_270 () U)
(declare-fun g_s243_272 () U)
(declare-fun g_s247_274 () U)
(declare-fun g_s247_276 () U)
(declare-fun g_s247_279 () U)
(declare-fun g_s248_275 () U)
(declare-fun g_s25_27 () U)
(declare-fun g_s252_277 () U)
(declare-fun g_s253_278 () U)
(declare-fun g_s27_29 () U)
(declare-fun g_s28_30 () U)
(declare-fun g_s29_31 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_33 () U)
(declare-fun g_s31_35 () U)
(declare-fun g_s32_36 () U)
(declare-fun g_s33_37 () U)
(declare-fun g_s34_38 () U)
(declare-fun g_s35_39 () U)
(declare-fun g_s36_40 () U)
(declare-fun g_s37_41 () U)
(declare-fun g_s38_42 () U)
(declare-fun g_s39_43 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_44 () U)
(declare-fun g_s41_45 () U)
(declare-fun g_s42_46 () U)
(declare-fun g_s43_47 () U)
(declare-fun g_s44_49 () U)
(declare-fun g_s45_50 () U)
(declare-fun g_s46_51 () U)
(declare-fun g_s47_52 () U)
(declare-fun g_s48_53 () U)
(declare-fun g_s49_54 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_55 () U)
(declare-fun g_s51_56 () U)
(declare-fun g_s52_57 () U)
(declare-fun g_s53_58 () U)
(declare-fun g_s54_59 () U)
(declare-fun g_s55_60 () U)
(declare-fun g_s56_61 () U)
(declare-fun g_s57_62 () U)
(declare-fun g_s58_63 () U)
(declare-fun g_s59_64 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_65 () U)
(declare-fun g_s61_66 () U)
(declare-fun g_s62_67 () U)
(declare-fun g_s63_68 () U)
(declare-fun g_s64_69 () U)
(declare-fun g_s65_70 () U)
(declare-fun g_s66_71 () U)
(declare-fun g_s67_72 () U)
(declare-fun g_s68_73 () U)
(declare-fun g_s69_74 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_75 () U)
(declare-fun g_s71_76 () U)
(declare-fun g_s72_77 () U)
(declare-fun g_s73_78 () U)
(declare-fun g_s74_79 () U)
(declare-fun g_s75_80 () U)
(declare-fun g_s76_81 () U)
(declare-fun g_s77_82 () U)
(declare-fun g_s78_83 () U)
(declare-fun g_s79_84 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_85 () U)
(declare-fun g_s81_86 () U)
(declare-fun g_s82_87 () U)
(declare-fun g_s83_88 () U)
(declare-fun g_s84_89 () U)
(declare-fun g_s85_90 () U)
(declare-fun g_s86_91 () U)
(declare-fun g_s87_92 () U)
(declare-fun g_s88_93 () U)
(declare-fun g_s89_94 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_95 () U)
(declare-fun g_s91_96 () U)
(declare-fun g_s92_97 () U)
(declare-fun g_s93_98 () U)
(declare-fun g_s94_99 () U)
(declare-fun g_s95_100 () U)
(declare-fun g_s96_101 () U)
(declare-fun g_s97_102 () U)
(declare-fun g_s98_103 () U)
(declare-fun g_s99_104 () U)
(declare-fun e124 () U)
(declare-fun e123 () U)
(declare-fun e110 () U)
(declare-fun e109 () U)
(declare-fun e26 () U)
(declare-fun e23 () U)
(declare-fun e21 () U)
(declare-fun e28 () U)
(declare-fun e34 () U)
(declare-fun e32 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (not (= g_s12_13 empty)) (not (= g_s13_14 empty)) (not (= g_s14_15 empty)) (not (= g_s15_16 empty)) (not (= g_s16_17 empty)) (not (= g_s17_18 empty)) (not (= g_s18_19 empty)) (= g_s19_20 INTEGER) (= g_s20_22 e21) (= g_s23_24 e23) (= g_s24_25 INTEGER) (= g_s25_27 e26) (= g_s27_29 e28) (= g_s28_30 INTEGER) (= g_s29_31 INTEGER) (= g_s30_33 e32) (= g_s31_35 e34) (mem g_s32_36 (|-->| g_s16_17 g_s29_31)) (mem g_s33_37 (|-->| g_s1_2 g_s24_25)) (mem g_s34_38 (|<->| g_s1_2 g_s1_2)) (mem g_s35_39 (|<->| g_s1_2 g_s1_2)) (mem g_s36_40 (|-->| (set_prod g_s1_2 g_s1_2) g_s1_2)) (mem g_s37_41 (|-->| (POW g_s1_2) g_s1_2)) (mem g_s38_42 (|-->| (set_prod g_s1_2 g_s1_2) g_s1_2)) (mem g_s39_43 (|-->| g_s1_2 g_s1_2)) (mem g_s40_44 (|-->| g_s1_2 g_s1_2)) (mem g_s41_45 (|-->| g_s1_2 g_s1_2)) (mem g_s42_46 g_s1_2) (mem g_s43_47 g_s1_2) (|<=i| e48 (apply g_s33_37 g_s43_47)) (mem g_s44_49 g_s1_2) (mem g_s45_50 g_s1_2) (mem g_s46_51 g_s1_2) (mem g_s47_52 (|-->| g_s2_3 g_s19_20)) (mem g_s48_53 (|-->| g_s19_20 g_s2_3)) (mem g_s49_54 (|-->| g_s24_25 g_s1_2)) (mem g_s50_55 (|-->| g_s28_30 g_s10_11)) (mem g_s51_56 g_s15_16) (mem g_s52_57 g_s10_11) (mem g_s53_58 (|<->| g_s10_11 g_s10_11)) (mem g_s54_59 (|<->| g_s10_11 g_s10_11)) (mem g_s55_60 (|-->| (POW g_s10_11) g_s10_11)) (mem g_s56_61 g_s10_11) (mem g_s57_62 g_s10_11) (mem g_s58_63 (|<->| g_s2_3 g_s2_3)) (mem g_s59_64 (|<->| g_s2_3 g_s2_3)) (subset g_s59_64 g_s58_63) (mem g_s60_65 (|-->| (set_prod g_s2_3 g_s2_3) g_s1_2)) (mem g_s61_66 (|-->| g_s2_3 g_s2_3)) (mem g_s62_67 (|-->| (set_prod g_s2_3 g_s2_3) (POW g_s2_3))) (mem g_s63_68 (|-->| (POW g_s2_3) g_s2_3)) (mem g_s64_69 (|-->| (POW g_s2_3) g_s2_3)) (mem g_s65_70 g_s2_3) (mem g_s66_71 g_s2_3) (mem g_s67_72 g_s2_3) (mem g_s68_73 g_s2_3) (mem g_s69_74 g_s2_3) (mem g_s70_75 g_s2_3) (mem g_s71_76 g_s2_3) (mem g_s72_77 g_s2_3) (mem g_s73_78 (|-->| (set_prod g_s2_3 g_s1_2) g_s2_3)) (mem g_s74_79 (|-->| (set_prod g_s2_3 g_s1_2) g_s2_3)) (mem g_s75_80 (|-->| (set_prod g_s1_2 g_s2_3) g_s2_3)) (mem g_s76_81 (|-->| (set_prod g_s1_2 g_s6_7) g_s1_2)) (mem g_s77_82 (|-->| g_s1_2 g_s1_2)) (mem g_s78_83 (|-->| g_s2_3 g_s2_3)) (mem g_s79_84 (|-->| g_s3_4 g_s3_4)) (mem g_s80_85 (|-->| (set_prod INT INT) BOOL)) (mem g_s81_86 (|-->| (set_prod g_s3_4 g_s3_4) g_s3_4)) (mem g_s82_87 (|-->| g_s3_4 g_s4_5)) (mem g_s83_88 g_s3_4) (mem g_s84_89 (|-->| (set_prod g_s3_4 g_s3_4) g_s9_10)) (mem g_s85_90 (|-->| (set_prod g_s1_2 g_s3_4) g_s9_10)) (mem g_s86_91 (|-->| (set_prod g_s3_4 g_s7_8) g_s1_2)) (mem g_s87_92 (|-->| (set_prod g_s5_6 g_s5_6) g_s5_6)) (mem g_s88_93 (|-->| (set_prod g_s5_6 g_s5_6) g_s5_6)) (mem g_s89_94 (|-->| g_s5_6 g_s5_6)) (mem g_s90_95 (|-->| g_s5_6 g_s5_6)) (mem g_s91_96 (|-->| (POW g_s5_6) g_s5_6)) (mem g_s92_97 (|-->| (|+->| NATURAL g_s5_6) g_s5_6)) (mem g_s93_98 (|-->| (|+->| NATURAL g_s5_6) g_s5_6)) (mem g_s94_99 (|-->| (POW g_s5_6) g_s5_6)) (mem g_s95_100 (|-->| g_s5_6 g_s5_6)) (mem g_s96_101 (|<->| g_s5_6 g_s5_6)) (mem g_s97_102 g_s5_6) (mem g_s98_103 g_s5_6) (mem g_s99_104 (|-->| (set_prod g_s5_6 g_s7_8) g_s3_4)) (mem g_s100_105 (|-->| (set_prod g_s5_6 g_s10_11) g_s5_6)) (mem g_s101_106 (|-->| (set_prod g_s5_6 g_s6_7) g_s5_6)) (mem g_s102_107 (|-->| (set_prod g_s5_6 g_s1_2) g_s4_5)) (mem g_s103_108 g_s5_6) (= g_s92_97 (|<+| (set_prod (|+->| NATURAL g_s5_6) (SET g_s97_102)) e109)) (= g_s93_98 (|<+| (set_prod (|+->| NATURAL g_s5_6) (SET g_s97_102)) e110)) (mem g_s105_111 (|-->| (set_prod g_s4_5 g_s4_5) g_s4_5)) (mem g_s106_112 (|-->| g_s4_5 g_s4_5)) (mem g_s107_113 (|-->| (POW g_s4_5) g_s4_5)) (mem g_s108_114 (|-->| (set_prod g_s4_5 g_s4_5) g_s4_5)) (mem g_s109_115 (|<->| g_s4_5 g_s4_5)) (mem g_s110_116 (|<->| g_s4_5 g_s4_5)) (mem g_s111_117 g_s4_5) (mem g_s112_118 g_s4_5) (mem g_s113_119 g_s4_5) (mem g_s114_120 g_s4_5) (mem g_s115_121 (|-->| (|+->| NATURAL g_s4_5) g_s4_5)) (mem g_s116_122 (|-->| (|+->| NATURAL g_s4_5) g_s4_5)) (= g_s115_121 (|<+| (set_prod (|+->| NATURAL g_s4_5) (SET g_s111_117)) e123)) (= g_s116_122 (|<+| (set_prod (|+->| NATURAL g_s4_5) (SET g_s111_117)) e124)) (mem g_s117_125 g_s6_7) (mem g_s118_126 g_s6_7) (mem g_s119_127 g_s6_7) (mem g_s120_128 g_s6_7) (mem g_s121_129 g_s6_7) (mem g_s122_130 g_s6_7) (mem g_s123_131 (|-->| (set_prod g_s7_8 g_s7_8) g_s7_8)) (mem g_s124_132 (|-->| (set_prod g_s8_9 g_s8_9) g_s8_9)) (mem g_s125_133 (|-->| (set_prod g_s7_8 g_s7_8) g_s8_9)) (mem g_s126_134 (|-->| g_s7_8 g_s8_9)) (mem g_s127_135 (|-->| g_s8_9 g_s8_9)) (mem g_s128_136 (|-->| (set_prod g_s5_6 g_s8_9) g_s1_2)) (mem g_s129_137 g_s7_8) (mem g_s130_138 g_s9_10) (subset g_s131_139 (set_prod (set_prod (set_prod g_s2_3 g_s2_3) g_s2_3) g_s2_3)) (mem g_s132_140 g_s12_13) (mem g_s133_141 g_s12_13) (mem g_s134_142 (|-->| INT (seq g_s0_1))) (mem g_s135_143 (|-->| INT (seq g_s0_1))) (mem g_s136_144 (|-->| INT (seq g_s0_1))) (mem g_s137_145 (|-->| g_s13_14 (seq g_s0_1))) (mem g_s138_146 (|-->| g_s1_2 (seq g_s0_1))) (mem g_s139_147 (|-->| g_s2_3 (seq g_s0_1))) (mem g_s140_148 (|-->| g_s7_8 (seq g_s0_1))) (mem g_s141_149 (|-->| g_s7_8 (seq g_s0_1))) (mem g_s142_150 (|-->| g_s7_8 (seq g_s0_1))) (mem g_s143_151 (|-->| g_s12_13 (seq g_s0_1))) (mem g_s144_152 g_s0_1) (mem g_s145_153 NAT) (mem g_s146_154 NAT) (mem g_s147_155 (|-->| g_s12_13 INT)) (mem g_s148_156 g_s13_14) (mem g_s149_157 g_s7_8) (mem g_s150_158 g_s7_8) (mem g_s151_159 g_s28_30) (mem g_s152_160 g_s28_30) (|<=i| g_s151_159 g_s152_160) (mem g_s153_161 g_s29_31) (mem g_s154_162 g_s19_20) (mem g_s155_163 g_s19_20) (mem g_s156_164 g_s28_30) (= g_s153_161 e0) (= g_s154_162 e0) (= g_s155_163 e48) (= g_s156_164 e0) (mem g_s157_165 (|-->| (set_prod NAT g_s7_8) g_s7_8))))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool (and (mem g_s158_166 NAT) (|<=i| e48 g_s158_166) (mem g_s159_167 NAT) (|<i| g_s159_167 MaxInt) (|<=i| (|*i| e169 g_s159_167) e168) (mem g_s160_170 NAT) (|<i| g_s160_170 MaxInt) (|<=i| (|*i| e169 g_s160_170) e171) (|<=i| e172 g_s159_167) (|<=i| e173 g_s159_167) (|<=i| e174 g_s159_167) (|<=i| e175 g_s160_170) (|<=i| e176 g_s160_170) (|<=i| e177 g_s159_167) (mem g_s161_178 (seq NAT)) (mem g_s162_179 (seq NAT)) (= (size g_s161_178) g_s159_167) (= (size g_s161_178) (size g_s162_179)) (mem g_s163_180 (|-->| g_s17_18 NAT)) (mem g_s164_181 (|-->| g_s17_18 NAT)) (mem g_s165_182 (seq NAT)) (mem g_s166_183 (seq NAT)) (= (size g_s165_182) g_s160_170) (= (size g_s165_182) (size g_s166_183)) (mem g_s167_184 (|-->| g_s18_19 NAT)) (mem g_s168_185 (|-->| g_s18_19 NAT)) (mem g_s169_186 g_s1_2) (mem g_s170_187 g_s1_2) (mem (mapplet g_s42_46 g_s170_187) g_s35_39) (mem g_s171_188 NAT) (mem g_s172_189 NAT) (mem g_s173_190 NAT) (|<i| g_s173_190 MaxInt) (mem g_s174_191 NAT) (|<i| g_s174_191 MaxInt) (|>=i| g_s174_191 e192) (mem g_s175_193 NAT) (mem g_s176_194 NAT) (|<=i| e48 g_s176_194) (mem g_s177_195 NAT) (mem g_s178_196 NAT) (|<i| g_s178_196 MaxInt) (mem g_s179_197 NAT) (|<i| g_s179_197 MaxInt) (mem g_s180_198 NAT) (|<i| g_s180_198 MaxInt) (mem g_s181_199 NAT) (|<=i| (|*i| e192 g_s181_199) MaxInt) (= g_s177_195 (|*i| e192 g_s181_199)) (mem g_s182_200 NAT) (|<=i| e48 g_s182_200) (mem g_s183_201 NAT) (mem g_s184_202 NAT) (|<=i| e48 g_s184_202) (|<=i| (|*i| (|*i| g_s182_200 g_s176_194) g_s184_202) MaxInt) (|<=i| (|+i| (|*i| (|*i| g_s182_200 g_s176_194) g_s184_202) e48) MaxInt) (mem g_s185_203 NAT) (|<=i| e48 g_s185_203) (|<i| g_s185_203 MaxInt) (mem g_s186_204 NAT) (mem g_s187_205 NAT) (mem g_s188_206 NAT) (mem g_s189_207 NAT) (mem g_s190_208 NAT) (mem g_s191_209 NAT) (mem g_s192_210 NAT) (mem g_s193_211 NAT) (mem g_s194_212 NAT) (mem g_s195_213 NAT) (mem g_s196_214 NAT) (mem g_s197_215 NAT) (mem g_s198_216 NAT) (mem g_s199_217 NAT) (mem g_s200_218 NAT) (mem g_s201_219 NAT) (|<i| g_s201_219 MaxInt) (mem g_s202_220 NAT) (|<i| g_s202_220 MaxInt) (mem g_s203_221 NAT) (|<i| g_s203_221 MaxInt) (mem g_s204_222 NAT) (|<i| g_s204_222 MaxInt) (mem g_s205_223 NAT) (|<i| g_s205_223 MaxInt) (mem g_s206_224 NAT) (|<i| g_s206_224 MaxInt) (mem g_s207_225 NAT) (|<i| g_s207_225 MaxInt) (mem g_s208_226 NAT) (|<i| g_s208_226 MaxInt) (mem g_s209_227 NAT) (|<i| g_s209_227 MaxInt) (mem g_s210_228 NAT) (mem g_s211_229 NAT) (mem g_s212_230 NAT) (|<i| g_s212_230 MaxInt) (mem g_s213_231 NAT) (|<i| g_s213_231 MaxInt) (mem g_s214_232 NAT) (mem g_s215_233 NAT) (|<i| g_s215_233 MaxInt) (mem g_s216_234 NAT) (|<i| g_s216_234 (|-i| MaxInt e235)) (|>i| g_s216_234 e0) (mem g_s217_236 NAT) (mem g_s218_237 NAT) (mem g_s219_238 NAT) (mem g_s220_239 NAT) (mem g_s221_240 NAT) (mem g_s222_241 NAT) (mem g_s223_242 NAT) (mem g_s224_243 NAT) (mem g_s225_244 NAT) (mem g_s226_245 NAT) (|<=i| g_s226_245 (|-i| (|**i| e192 e246) e48)) (mem g_s227_247 g_s29_31) (mem g_s228_248 g_s19_20) (|<=i| e48 g_s228_248) (mem g_s229_249 NAT) (|<=i| g_s229_249 e250) (mem g_s230_251 NAT) (|<=i| g_s230_251 (|**i| e192 e252)) (mem g_s231_253 NAT) (|<=i| g_s231_253 (|**i| e192 e254)) (mem g_s232_255 NAT) (|<=i| g_s232_255 e256) (mem g_s233_257 NAT) (|<=i| g_s233_257 e258) (mem g_s234_259 NAT) (|<=i| g_s234_259 e256) (mem g_s235_260 NAT) (= g_s235_260 e246) (mem g_s236_261 NAT) (|<=i| g_s236_261 e176) (|<i| e48 g_s236_261) (mem g_s237_262 NAT) (= g_s237_262 e263) (mem g_s238_264 NAT) (= g_s238_264 e265) (mem g_s239_266 NAT) (|<i| g_s239_266 MaxInt) (= g_s239_266 (|*i| g_s182_200 g_s176_194)) (|<i| g_s176_194 g_s238_264) (mem g_s240_267 NAT) (|>i| g_s240_267 e0) (mem g_s241_268 NAT) (= g_s241_268 e269) (mem g_s242_270 NAT) (= g_s242_270 e271) (mem g_s243_272 NAT) (= g_s243_272 e273)))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool true)
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_sets|)
(define-fun lh_1 () Bool (mem g_s158_166 NAT))
(define-fun lh_2 () Bool (|<=i| e48 g_s158_166))
(define-fun lh_3 () Bool (mem g_s159_167 NAT))
(define-fun lh_4 () Bool (|<i| g_s159_167 MaxInt))
(define-fun lh_5 () Bool (|<=i| (|*i| e169 g_s159_167) e168))
(define-fun lh_6 () Bool (mem g_s160_170 NAT))
(define-fun lh_7 () Bool (|<i| g_s160_170 MaxInt))
(define-fun lh_8 () Bool (|<=i| (|*i| e169 g_s160_170) e171))
(define-fun lh_9 () Bool (|<=i| e172 g_s159_167))
(define-fun lh_10 () Bool (|<=i| e173 g_s159_167))
(define-fun lh_11 () Bool (|<=i| e174 g_s159_167))
(define-fun lh_12 () Bool (|<=i| e175 g_s160_170))
(define-fun lh_13 () Bool (|<=i| e176 g_s160_170))
(define-fun lh_14 () Bool (|<=i| e177 g_s159_167))
(define-fun lh_15 () Bool (mem g_s161_178 (seq NAT)))
(define-fun lh_16 () Bool (mem g_s162_179 (seq NAT)))
(define-fun lh_17 () Bool (= (size g_s161_178) g_s159_167))
(define-fun lh_18 () Bool (= (size g_s161_178) (size g_s162_179)))
(define-fun lh_19 () Bool (mem g_s163_180 (|-->| g_s17_18 NAT)))
(define-fun lh_20 () Bool (mem g_s164_181 (|-->| g_s17_18 NAT)))
(define-fun lh_21 () Bool (mem g_s165_182 (seq NAT)))
(define-fun lh_22 () Bool (mem g_s166_183 (seq NAT)))
(define-fun lh_23 () Bool (= (size g_s165_182) g_s160_170))
(define-fun lh_24 () Bool (= (size g_s165_182) (size g_s166_183)))
(define-fun lh_25 () Bool (mem g_s167_184 (|-->| g_s18_19 NAT)))
(define-fun lh_26 () Bool (mem g_s168_185 (|-->| g_s18_19 NAT)))
(define-fun lh_27 () Bool (mem g_s169_186 g_s1_2))
(define-fun lh_28 () Bool (mem g_s170_187 g_s1_2))
(define-fun lh_29 () Bool (mem (mapplet g_s42_46 g_s170_187) g_s35_39))
(define-fun lh_30 () Bool (mem g_s171_188 NAT))
(define-fun lh_31 () Bool (mem g_s172_189 NAT))
(define-fun lh_32 () Bool (mem g_s173_190 NAT))
(define-fun lh_33 () Bool (|<i| g_s173_190 MaxInt))
(define-fun lh_34 () Bool (mem g_s174_191 NAT))
(define-fun lh_35 () Bool (|<i| g_s174_191 MaxInt))
(define-fun lh_36 () Bool (|>=i| g_s174_191 e192))
(define-fun lh_37 () Bool (mem g_s175_193 NAT))
(define-fun lh_38 () Bool (mem g_s176_194 NAT))
(define-fun lh_39 () Bool (|<=i| e48 g_s176_194))
(define-fun lh_40 () Bool (mem g_s177_195 NAT))
(define-fun lh_41 () Bool (mem g_s178_196 NAT))
(define-fun lh_42 () Bool (|<i| g_s178_196 MaxInt))
(define-fun lh_43 () Bool (mem g_s179_197 NAT))
(define-fun lh_44 () Bool (|<i| g_s179_197 MaxInt))
(define-fun lh_45 () Bool (mem g_s180_198 NAT))
(define-fun lh_46 () Bool (|<i| g_s180_198 MaxInt))
(define-fun lh_47 () Bool (mem g_s181_199 NAT))
(define-fun lh_48 () Bool (|<=i| (|*i| e192 g_s181_199) MaxInt))
(define-fun lh_49 () Bool (= g_s177_195 (|*i| e192 g_s181_199)))
(define-fun lh_50 () Bool (mem g_s182_200 NAT))
(define-fun lh_51 () Bool (|<=i| e48 g_s182_200))
(define-fun lh_52 () Bool (mem g_s183_201 NAT))
(define-fun lh_53 () Bool (mem g_s184_202 NAT))
(define-fun lh_54 () Bool (|<=i| e48 g_s184_202))
(define-fun lh_55 () Bool (|<=i| (|*i| (|*i| g_s182_200 g_s176_194) g_s184_202) MaxInt))
(define-fun lh_56 () Bool (|<=i| (|+i| (|*i| (|*i| g_s182_200 g_s176_194) g_s184_202) e48) MaxInt))
(define-fun lh_57 () Bool (mem g_s185_203 NAT))
(define-fun lh_58 () Bool (|<=i| e48 g_s185_203))
(define-fun lh_59 () Bool (|<i| g_s185_203 MaxInt))
(define-fun lh_60 () Bool (mem g_s186_204 NAT))
(define-fun lh_61 () Bool (mem g_s187_205 NAT))
(define-fun lh_62 () Bool (mem g_s188_206 NAT))
(define-fun lh_63 () Bool (mem g_s189_207 NAT))
(define-fun lh_64 () Bool (mem g_s190_208 NAT))
(define-fun lh_65 () Bool (mem g_s191_209 NAT))
(define-fun lh_66 () Bool (mem g_s192_210 NAT))
(define-fun lh_67 () Bool (mem g_s193_211 NAT))
(define-fun lh_68 () Bool (mem g_s194_212 NAT))
(define-fun lh_69 () Bool (mem g_s195_213 NAT))
(define-fun lh_70 () Bool (mem g_s196_214 NAT))
(define-fun lh_71 () Bool (mem g_s197_215 NAT))
(define-fun lh_72 () Bool (mem g_s198_216 NAT))
(define-fun lh_73 () Bool (mem g_s199_217 NAT))
(define-fun lh_74 () Bool (mem g_s200_218 NAT))
(define-fun lh_75 () Bool (mem g_s201_219 NAT))
(define-fun lh_76 () Bool (|<i| g_s201_219 MaxInt))
(define-fun lh_77 () Bool (mem g_s202_220 NAT))
(define-fun lh_78 () Bool (|<i| g_s202_220 MaxInt))
(define-fun lh_79 () Bool (mem g_s203_221 NAT))
(define-fun lh_80 () Bool (|<i| g_s203_221 MaxInt))
(define-fun lh_81 () Bool (mem g_s204_222 NAT))
(define-fun lh_82 () Bool (|<i| g_s204_222 MaxInt))
(define-fun lh_83 () Bool (mem g_s205_223 NAT))
(define-fun lh_84 () Bool (|<i| g_s205_223 MaxInt))
(define-fun lh_85 () Bool (mem g_s206_224 NAT))
(define-fun lh_86 () Bool (|<i| g_s206_224 MaxInt))
(define-fun lh_87 () Bool (mem g_s207_225 NAT))
(define-fun lh_88 () Bool (|<i| g_s207_225 MaxInt))
(define-fun lh_89 () Bool (mem g_s208_226 NAT))
(define-fun lh_90 () Bool (|<i| g_s208_226 MaxInt))
(define-fun lh_91 () Bool (mem g_s209_227 NAT))
(define-fun lh_92 () Bool (|<i| g_s209_227 MaxInt))
(define-fun lh_93 () Bool (mem g_s210_228 NAT))
(define-fun lh_94 () Bool (mem g_s211_229 NAT))
(define-fun lh_95 () Bool (mem g_s212_230 NAT))
(define-fun lh_96 () Bool (|<i| g_s212_230 MaxInt))
(define-fun lh_97 () Bool (mem g_s213_231 NAT))
(define-fun lh_98 () Bool (|<i| g_s213_231 MaxInt))
(define-fun lh_99 () Bool (mem g_s214_232 NAT))
(define-fun lh_100 () Bool (mem g_s215_233 NAT))
(define-fun lh_101 () Bool (|<i| g_s215_233 MaxInt))
(define-fun lh_102 () Bool (mem g_s216_234 NAT))
(define-fun lh_103 () Bool (|<i| g_s216_234 (|-i| MaxInt e235)))
(define-fun lh_104 () Bool (|>i| g_s216_234 e0))
(define-fun lh_105 () Bool (mem g_s217_236 NAT))
(define-fun lh_106 () Bool (mem g_s218_237 NAT))
(define-fun lh_107 () Bool (mem g_s219_238 NAT))
(define-fun lh_108 () Bool (mem g_s220_239 NAT))
(define-fun lh_109 () Bool (mem g_s221_240 NAT))
(define-fun lh_110 () Bool (mem g_s222_241 NAT))
(define-fun lh_111 () Bool (mem g_s223_242 NAT))
(define-fun lh_112 () Bool (mem g_s224_243 NAT))
(define-fun lh_113 () Bool (mem g_s225_244 NAT))
(define-fun lh_114 () Bool (mem g_s226_245 NAT))
(define-fun lh_115 () Bool (|<=i| g_s226_245 (|-i| (|**i| e192 e246) e48)))
(define-fun lh_116 () Bool (mem g_s227_247 g_s29_31))
(define-fun lh_117 () Bool (mem g_s228_248 g_s19_20))
(define-fun lh_118 () Bool (|<=i| e48 g_s228_248))
(define-fun lh_119 () Bool (mem g_s229_249 NAT))
(define-fun lh_120 () Bool (|<=i| g_s229_249 e250))
(define-fun lh_121 () Bool (mem g_s230_251 NAT))
(define-fun lh_122 () Bool (|<=i| g_s230_251 (|**i| e192 e252)))
(define-fun lh_123 () Bool (mem g_s231_253 NAT))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s161_178 (seq (ran g_s161_178))))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s161_178 (seq (ran g_s161_178))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s162_179 (seq (ran g_s162_179))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (mem g_s165_182 (seq (ran g_s165_182))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23) (mem g_s165_182 (seq (ran g_s165_182))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23) (mem g_s166_183 (seq (ran g_s166_183))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103 lh_104 lh_105 lh_106 lh_107 lh_108 lh_109 lh_110 lh_111 lh_112 lh_113 lh_114) (|<=i| e0 e246))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103 lh_104 lh_105 lh_106 lh_107 lh_108 lh_109 lh_110 lh_111 lh_112 lh_113 lh_114 lh_115 lh_116 lh_117 lh_118 lh_119 lh_120 lh_121) (|<=i| e0 e252))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103 lh_104 lh_105 lh_106 lh_107 lh_108 lh_109 lh_110 lh_111 lh_112 lh_113 lh_114 lh_115 lh_116 lh_117 lh_118 lh_119 lh_120 lh_121 lh_122 lh_123) (|<=i| e0 e254))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s247_274 NAT))
(assert (mem g_s247_274 (dom g_s161_178)))
(assert (mem g_s248_275 NAT))
; PO 1 in group 1
(assert (not (mem g_s161_178 (|+->| (dom g_s161_178) (ran g_s161_178)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s247_274 NAT))
(assert (mem g_s247_274 (dom g_s162_179)))
(assert (mem g_s248_275 NAT))
; PO 1 in group 2
(assert (not (mem g_s162_179 (|+->| (dom g_s162_179) (ran g_s162_179)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s247_276 g_s17_18))
(assert (mem g_s252_277 NAT))
(assert (mem g_s253_278 NAT))
; PO 1 in group 3
(push 1)
(assert (not (mem g_s163_180 (|+->| (dom g_s163_180) (ran g_s163_180)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (mem g_s164_181 (|+->| (dom g_s164_181) (ran g_s164_181)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (mem g_s247_276 (dom g_s163_180))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (mem g_s247_276 (dom g_s164_181))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s247_274 NAT))
(assert (mem g_s247_274 (dom g_s165_182)))
(assert (mem g_s248_275 NAT))
(define-fun lh_1 () Bool (mem (apply g_s165_182 g_s247_274) NAT))
; PO 1 in group 4
(push 1)
(assert (not (mem g_s165_182 (|+->| (dom g_s165_182) (ran g_s165_182)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> lh_1 (mem g_s165_182 (|+->| (dom g_s165_182) (ran g_s165_182))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s247_274 NAT))
(assert (mem g_s247_274 (dom g_s166_183)))
(assert (mem g_s248_275 NAT))
(define-fun lh_1 () Bool (mem (apply g_s166_183 g_s247_274) NAT))
; PO 1 in group 5
(push 1)
(assert (not (mem g_s166_183 (|+->| (dom g_s166_183) (ran g_s166_183)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> lh_1 (mem g_s166_183 (|+->| (dom g_s166_183) (ran g_s166_183))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s247_279 g_s18_19))
(assert (mem g_s252_277 NAT))
(assert (mem g_s253_278 NAT))
; PO 1 in group 6
(push 1)
(assert (not (mem g_s167_184 (|+->| (dom g_s167_184) (ran g_s167_184)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (mem g_s168_185 (|+->| (dom g_s168_185) (ran g_s168_185)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (mem g_s247_279 (dom g_s167_184))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 6
(push 1)
(assert (not (mem g_s247_279 (dom g_s168_185))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)