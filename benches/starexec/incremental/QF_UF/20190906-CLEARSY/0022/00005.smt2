(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: Event-B
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e32 () U)
(declare-fun e37 () U)
(declare-fun e55 () U)
(declare-fun e54 () U)
(declare-fun e46 () U)
(declare-fun e45 () U)
(declare-fun e44 () U)
(declare-fun e47 () U)
(declare-fun e30 () U)
(declare-fun e33 () U)
(declare-fun e35 () U)
(declare-fun e29 () U)
(declare-fun e43 () U)
(declare-fun e34 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_31 () U)
(declare-fun g_s29_36 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_38 () U)
(declare-fun g_s31_39 () U)
(declare-fun g_s32_40 () U)
(declare-fun g_s33_41 () U)
(declare-fun g_s34_42 () U)
(declare-fun g_s35_48 () U)
(declare-fun g_s36_49 () U)
(declare-fun g_s37_50 () U)
(declare-fun g_s38_51 () U)
(declare-fun g_s39_52 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_53 () U)
(declare-fun g_s41_56 () U)
(declare-fun g_s42_57 () U)
(declare-fun g_s43_58 () U)
(declare-fun g_s44_59 () U)
(declare-fun g_s45_60 () U)
(declare-fun g_s46_61 () U)
(declare-fun g_s47_62 () U)
(declare-fun g_s48_63 () U)
(declare-fun g_s49_64 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_65 () U)
(declare-fun g_s50$1_82 () U)
(declare-fun g_s51_66 () U)
(declare-fun g_s51$1_83 () U)
(declare-fun g_s52_67 () U)
(declare-fun g_s53_68 () U)
(declare-fun g_s54_69 () U)
(declare-fun g_s55_70 () U)
(declare-fun g_s56_71 () U)
(declare-fun g_s57_72 () U)
(declare-fun g_s58_73 () U)
(declare-fun g_s59_74 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_75 () U)
(declare-fun g_s61_76 () U)
(declare-fun g_s62_77 () U)
(declare-fun g_s63_78 () U)
(declare-fun g_s64_79 () U)
(declare-fun g_s65_80 () U)
(declare-fun g_s66_81 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s9_10 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s5_6 g_s4_5))) (= g_s6_7 (SET (mapplet g_s8_9 g_s7_8))) (= g_s9_10 (SET (mapplet g_s11_12 g_s10_11))) (= g_s12_13 (SET (mapplet g_s14_15 g_s13_14))) (not (= g_s15_16 empty)) (= g_s16_17 (SET (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 g_s17_18)))))))))) (mem g_s26_27 NAT1) (mem g_s27_28 NAT1) (= g_s26_27 e29) (= g_s27_28 e30) (mem g_s28_31 NAT1) (= g_s28_31 (|+i| (idiv (|*i| e35 e34) (|*i| e33 e33)) e32)) (and (|>=i| g_s29_36 e32) (|<=i| g_s29_36 e37)) (mem g_s30_38 NAT1) (mem g_s31_39 NAT1) (mem g_s32_40 NAT1) (mem g_s33_41 NAT1) (mem g_s34_42 NAT1) (= g_s30_38 e34) (= g_s31_39 e43) (= g_s32_40 e44) (= g_s33_41 e45) (= g_s34_42 e46) (|>=i| (|-i| g_s30_38 g_s31_39) g_s27_28) (|>=i| (|+i| (|+i| g_s32_40 g_s34_42) g_s33_41) g_s27_28) (|>=i| (idiv g_s30_38 g_s28_31) e47) (= g_s35_48 e35) (mem g_s36_49 NAT1) (mem g_s37_50 NAT1) (mem g_s38_51 NAT1) (mem g_s39_52 NAT1) (mem g_s40_53 NAT1) (= g_s36_49 (|*i| e54 e34)) (= g_s37_50 (|*i| e37 e34)) (= g_s38_51 (|*i| e54 e34)) (= g_s39_52 (|*i| e46 e34)) (= g_s40_53 (|*i| e55 e34)) (mem g_s41_56 (perm g_s15_16)) (mem g_s42_57 NAT1) (= g_s42_57 (size g_s41_56)) (|<=i| (|+i| (idiv (|+i| (|+i| g_s30_38 g_s34_42) g_s33_41) g_s27_28) e32) g_s42_57) (mem g_s43_58 (|<->| g_s16_17 g_s16_17)) (= (image g_s43_58 (SET g_s17_18)) (SET (mapplet g_s25_26 (mapplet g_s18_19 g_s17_18)))) (= (image g_s43_58 (SET g_s18_19)) (SET (mapplet g_s25_26 (mapplet g_s19_20 g_s18_19)))) (= (image g_s43_58 (SET g_s19_20)) (SET (mapplet g_s25_26 (mapplet g_s22_23 (mapplet g_s20_21 g_s19_20))))) (= (image g_s43_58 (SET g_s20_21)) (SET (mapplet g_s25_26 (mapplet g_s21_22 g_s20_21)))) (= (image g_s43_58 (SET g_s21_22)) (SET (mapplet g_s25_26 (mapplet g_s22_23 g_s21_22)))) (= (image g_s43_58 (SET g_s22_23)) (SET (mapplet g_s25_26 (mapplet g_s23_24 g_s22_23)))) (= (image g_s43_58 (SET g_s23_24)) (SET (mapplet g_s25_26 (mapplet g_s22_23 (mapplet g_s24_25 g_s23_24))))) (= (image g_s43_58 (SET g_s24_25)) (SET (mapplet g_s25_26 (mapplet g_s18_19 (mapplet g_s17_18 g_s24_25))))) (= (image g_s43_58 (SET g_s25_26)) (SET g_s25_26))))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s44_59 BOOL) (mem g_s45_60 g_s16_17) (mem g_s46_61 BOOL) (mem g_s47_62 BOOL) (mem g_s48_63 BOOL) (mem g_s49_64 BOOL) (mem g_s50_65 BOOL) (mem g_s51_66 BOOL) (mem g_s52_67 BOOL) (subset g_s53_68 g_s15_16) (subset g_s54_69 g_s15_16) (mem g_s55_70 BOOL) (mem g_s56_71 BOOL) (mem g_s57_72 BOOL) (mem g_s58_73 NAT) (mem g_s59_74 BOOL) (mem g_s60_75 NAT) (mem g_s61_76 BOOL) (mem g_s62_77 NAT) (mem g_s63_78 BOOL) (mem g_s64_79 NAT) (mem g_s65_80 BOOL) (mem g_s66_81 NAT) (=> (not (= g_s45_60 g_s18_19)) (= g_s63_78 FALSE)) (=> (= g_s45_60 g_s18_19) (= g_s63_78 TRUE)) (=> (not (or (= g_s45_60 g_s19_20) (= g_s45_60 g_s21_22))) (= g_s57_72 FALSE)) (=> (or (= g_s45_60 g_s19_20) (= g_s45_60 g_s21_22)) (= g_s57_72 TRUE)) (=> (not (= g_s45_60 g_s20_21)) (= g_s59_74 FALSE)) (=> (= g_s45_60 g_s20_21) (= g_s59_74 TRUE)) (=> (not (= g_s45_60 g_s23_24)) (= g_s65_80 FALSE)) (=> (= g_s45_60 g_s23_24) (= g_s65_80 TRUE)) (=> (not (= g_s45_60 g_s24_25)) (= g_s61_76 FALSE)) (=> (= g_s45_60 g_s24_25) (= g_s61_76 TRUE)) (=> (or (= g_s45_60 g_s20_21) (= g_s45_60 g_s21_22)) (= g_s29_36 e37)) (=> (= g_s45_60 g_s20_21) (= g_s47_62 TRUE)) (=> (= g_s45_60 g_s21_22) (= g_s47_62 TRUE))))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (= g_s17_18 g_s18_19))
(define-fun lh_2 () Bool (or (= g_s17_18 g_s19_20) (= g_s17_18 g_s21_22)))
(define-fun lh_3 () Bool (= g_s17_18 g_s20_21))
(define-fun lh_4 () Bool (= g_s17_18 g_s23_24))
(define-fun lh_5 () Bool (= g_s17_18 g_s24_25))
(define-fun lh_6 () Bool (or (= g_s17_18 g_s20_21) (= g_s17_18 g_s21_22)))
(define-fun lh_7 () Bool (= g_s17_18 g_s21_22))
; PO 1 in group 0
(push 1)
(assert (not (mem e0 NAT)))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (subset empty g_s15_16)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> lh_1 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> lh_2 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> lh_3 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> lh_4 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> lh_5 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (=> lh_7 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 0
(push 1)
(assert (not (=> lh_6 (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (or (= g_s55_70 TRUE) (= g_s56_71 TRUE)))
(define-fun lh_1 () Bool (= g_s25_26 g_s18_19))
(define-fun lh_2 () Bool (or (= g_s25_26 g_s19_20) (= g_s25_26 g_s21_22)))
(define-fun lh_3 () Bool (= g_s25_26 g_s20_21))
(define-fun lh_4 () Bool (= g_s25_26 g_s23_24))
(define-fun lh_5 () Bool (= g_s25_26 g_s24_25))
(define-fun lh_6 () Bool (or (= g_s25_26 g_s20_21) (= g_s25_26 g_s21_22)))
(define-fun lh_7 () Bool (= g_s25_26 g_s21_22))
; PO 1 in group 1
(push 1)
(assert (not (mem e0 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> lh_1 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> lh_2 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> lh_3 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> lh_4 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> lh_5 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> lh_6 (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 1
(push 1)
(assert (not (=> lh_3 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 1
(push 1)
(assert (not (=> lh_7 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s17_18))
(assert (or (not (= g_s53_68 empty)) (not (= g_s54_69 empty))))
(assert (= g_s63_78 FALSE))
(define-fun lh_1 () Bool (mem g_s50$1_82 BOOL))
(define-fun lh_2 () Bool (mem g_s51$1_83 BOOL))
(define-fun lh_3 () Bool (=> (= g_s53_68 empty) (= g_s50$1_82 FALSE)))
(define-fun lh_4 () Bool (=> (not (= g_s53_68 empty)) (= g_s50$1_82 TRUE)))
(define-fun lh_5 () Bool (=> (= g_s54_69 empty) (= g_s51$1_83 FALSE)))
(define-fun lh_6 () Bool (=> (not (= g_s54_69 empty)) (= g_s51$1_83 TRUE)))
(define-fun lh_7 () Bool (not (or (= g_s18_19 g_s19_20) (= g_s18_19 g_s21_22))))
(define-fun lh_8 () Bool (not (= g_s18_19 g_s20_21)))
(define-fun lh_9 () Bool (= g_s18_19 g_s20_21))
(define-fun lh_10 () Bool (not (= g_s18_19 g_s23_24)))
(define-fun lh_11 () Bool (= g_s18_19 g_s23_24))
(define-fun lh_12 () Bool (not (= g_s18_19 g_s24_25)))
(define-fun lh_13 () Bool (= g_s18_19 g_s24_25))
(define-fun lh_14 () Bool (or (= g_s18_19 g_s20_21) (= g_s18_19 g_s21_22)))
(define-fun lh_15 () Bool (= g_s18_19 g_s21_22))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s39_52 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s57_72 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10) (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_14) (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_13) (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_12) (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_15) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_8) (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s18_19))
(assert (= g_s63_78 TRUE))
(assert (= g_s64_79 e0))
(assert (= g_s57_72 FALSE))
(define-fun lh_1 () Bool (mem g_s50$1_82 BOOL))
(define-fun lh_2 () Bool (mem g_s51$1_83 BOOL))
(define-fun lh_3 () Bool (=> (= g_s53_68 empty) (= g_s50$1_82 FALSE)))
(define-fun lh_4 () Bool (=> (not (= g_s53_68 empty)) (= g_s50$1_82 TRUE)))
(define-fun lh_5 () Bool (=> (= g_s54_69 empty) (= g_s51$1_83 FALSE)))
(define-fun lh_6 () Bool (=> (not (= g_s54_69 empty)) (= g_s51$1_83 TRUE)))
(define-fun lh_7 () Bool (= g_s19_20 g_s18_19))
(define-fun lh_8 () Bool (not (= g_s19_20 g_s20_21)))
(define-fun lh_9 () Bool (= g_s19_20 g_s20_21))
(define-fun lh_10 () Bool (not (= g_s19_20 g_s23_24)))
(define-fun lh_11 () Bool (= g_s19_20 g_s23_24))
(define-fun lh_12 () Bool (not (= g_s19_20 g_s24_25)))
(define-fun lh_13 () Bool (= g_s19_20 g_s24_25))
(define-fun lh_14 () Bool (or (= g_s19_20 g_s20_21) (= g_s19_20 g_s21_22)))
(define-fun lh_15 () Bool (= g_s19_20 g_s21_22))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s36_49 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10) (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_14) (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_13) (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_12) (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_15) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_8) (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s19_20))
(assert (= g_s57_72 TRUE))
(assert (= g_s58_73 e0))
(define-fun lh_1 () Bool (not (= g_s25_26 g_s18_19)))
(define-fun lh_2 () Bool (= g_s25_26 g_s18_19))
(define-fun lh_3 () Bool (or (= g_s25_26 g_s19_20) (= g_s25_26 g_s21_22)))
(define-fun lh_4 () Bool (not (= g_s25_26 g_s20_21)))
(define-fun lh_5 () Bool (= g_s25_26 g_s20_21))
(define-fun lh_6 () Bool (not (= g_s25_26 g_s23_24)))
(define-fun lh_7 () Bool (= g_s25_26 g_s23_24))
(define-fun lh_8 () Bool (not (= g_s25_26 g_s24_25)))
(define-fun lh_9 () Bool (= g_s25_26 g_s24_25))
(define-fun lh_10 () Bool (or (= g_s25_26 g_s20_21) (= g_s25_26 g_s21_22)))
(define-fun lh_11 () Bool (= g_s25_26 g_s21_22))
; PO 1 in group 4
(push 1)
(assert (not (=> lh_3 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> lh_2 (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (=> lh_1 (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 4
(push 1)
(assert (not (=> lh_7 (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 4
(push 1)
(assert (not (=> lh_6 (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 4
(push 1)
(assert (not (=> lh_10 (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 4
(push 1)
(assert (not (=> lh_9 (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 4
(push 1)
(assert (not (=> lh_8 (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 4
(push 1)
(assert (not (=> lh_5 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 4
(push 1)
(assert (not (=> lh_11 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 4
(push 1)
(assert (not (=> lh_5 (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 4
(push 1)
(assert (not (=> lh_4 (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s19_20))
(assert (= g_s57_72 TRUE))
(assert (|>i| g_s58_73 e0))
(assert (= g_s47_62 TRUE))
(assert (= g_s29_36 e32))
(define-fun lh_1 () Bool (mem g_s50$1_82 BOOL))
(define-fun lh_2 () Bool (mem g_s51$1_83 BOOL))
(define-fun lh_3 () Bool (=> (= g_s53_68 empty) (= g_s50$1_82 FALSE)))
(define-fun lh_4 () Bool (=> (not (= g_s53_68 empty)) (= g_s50$1_82 TRUE)))
(define-fun lh_5 () Bool (=> (= g_s54_69 empty) (= g_s51$1_83 FALSE)))
(define-fun lh_6 () Bool (=> (not (= g_s54_69 empty)) (= g_s51$1_83 TRUE)))
(define-fun lh_7 () Bool (not (= g_s22_23 g_s18_19)))
(define-fun lh_8 () Bool (= g_s22_23 g_s18_19))
(define-fun lh_9 () Bool (or (= g_s22_23 g_s19_20) (= g_s22_23 g_s21_22)))
(define-fun lh_10 () Bool (not (= g_s22_23 g_s20_21)))
(define-fun lh_11 () Bool (= g_s22_23 g_s20_21))
(define-fun lh_12 () Bool (not (= g_s22_23 g_s23_24)))
(define-fun lh_13 () Bool (= g_s22_23 g_s23_24))
(define-fun lh_14 () Bool (not (= g_s22_23 g_s24_25)))
(define-fun lh_15 () Bool (= g_s22_23 g_s24_25))
(define-fun lh_16 () Bool (or (= g_s22_23 g_s20_21) (= g_s22_23 g_s21_22)))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem e0 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_8) (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_13) (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_12) (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_16) (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_15) (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_14) (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10) (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s19_20))
(assert (= g_s57_72 TRUE))
(assert (|>i| g_s58_73 e0))
(assert (= g_s47_62 TRUE))
(assert (= g_s29_36 e37))
(define-fun lh_1 () Bool (mem g_s50$1_82 BOOL))
(define-fun lh_2 () Bool (mem g_s51$1_83 BOOL))
(define-fun lh_3 () Bool (=> (= g_s53_68 empty) (= g_s50$1_82 FALSE)))
(define-fun lh_4 () Bool (=> (not (= g_s53_68 empty)) (= g_s50$1_82 TRUE)))
(define-fun lh_5 () Bool (=> (= g_s54_69 empty) (= g_s51$1_83 FALSE)))
(define-fun lh_6 () Bool (=> (not (= g_s54_69 empty)) (= g_s51$1_83 TRUE)))
(define-fun lh_7 () Bool (not (= g_s20_21 g_s18_19)))
(define-fun lh_8 () Bool (= g_s20_21 g_s18_19))
(define-fun lh_9 () Bool (or (= g_s20_21 g_s19_20) (= g_s20_21 g_s21_22)))
(define-fun lh_10 () Bool (not (= g_s20_21 g_s23_24)))
(define-fun lh_11 () Bool (= g_s20_21 g_s23_24))
(define-fun lh_12 () Bool (not (= g_s20_21 g_s24_25)))
(define-fun lh_13 () Bool (= g_s20_21 g_s24_25))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem e0 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s37_50 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_8) (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10) (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_13) (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_12) (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s20_21))
(assert (= g_s59_74 TRUE))
(assert (= g_s60_75 e0))
(define-fun lh_1 () Bool (mem g_s50$1_82 BOOL))
(define-fun lh_2 () Bool (mem g_s51$1_83 BOOL))
(define-fun lh_3 () Bool (=> (= g_s53_68 empty) (= g_s50$1_82 FALSE)))
(define-fun lh_4 () Bool (=> (not (= g_s53_68 empty)) (= g_s50$1_82 TRUE)))
(define-fun lh_5 () Bool (=> (= g_s54_69 empty) (= g_s51$1_83 FALSE)))
(define-fun lh_6 () Bool (=> (not (= g_s54_69 empty)) (= g_s51$1_83 TRUE)))
(define-fun lh_7 () Bool (not (= g_s21_22 g_s18_19)))
(define-fun lh_8 () Bool (= g_s21_22 g_s18_19))
(define-fun lh_9 () Bool (= g_s21_22 g_s20_21))
(define-fun lh_10 () Bool (not (= g_s21_22 g_s23_24)))
(define-fun lh_11 () Bool (= g_s21_22 g_s23_24))
(define-fun lh_12 () Bool (not (= g_s21_22 g_s24_25)))
(define-fun lh_13 () Bool (= g_s21_22 g_s24_25))
; PO 1 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s36_49 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_8) (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10) (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_13) (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_12) (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s21_22))
(assert (= g_s57_72 TRUE))
(assert (= g_s58_73 e0))
(define-fun lh_1 () Bool (not (= g_s25_26 g_s18_19)))
(define-fun lh_2 () Bool (= g_s25_26 g_s18_19))
(define-fun lh_3 () Bool (or (= g_s25_26 g_s19_20) (= g_s25_26 g_s21_22)))
(define-fun lh_4 () Bool (not (= g_s25_26 g_s20_21)))
(define-fun lh_5 () Bool (= g_s25_26 g_s20_21))
(define-fun lh_6 () Bool (not (= g_s25_26 g_s23_24)))
(define-fun lh_7 () Bool (= g_s25_26 g_s23_24))
(define-fun lh_8 () Bool (not (= g_s25_26 g_s24_25)))
(define-fun lh_9 () Bool (= g_s25_26 g_s24_25))
(define-fun lh_10 () Bool (or (= g_s25_26 g_s20_21) (= g_s25_26 g_s21_22)))
(define-fun lh_11 () Bool (= g_s25_26 g_s21_22))
; PO 1 in group 8
(push 1)
(assert (not (=> lh_3 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> lh_2 (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 8
(push 1)
(assert (not (=> lh_1 (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 8
(push 1)
(assert (not (=> lh_7 (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 8
(push 1)
(assert (not (=> lh_6 (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 8
(push 1)
(assert (not (=> lh_10 (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 8
(push 1)
(assert (not (=> lh_9 (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 8
(push 1)
(assert (not (=> lh_8 (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 8
(push 1)
(assert (not (=> lh_5 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 8
(push 1)
(assert (not (=> lh_11 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 8
(push 1)
(assert (not (=> lh_5 (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 8
(push 1)
(assert (not (=> lh_4 (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s21_22))
(assert (= g_s57_72 TRUE))
(assert (|>i| g_s58_73 e0))
(assert (= g_s48_63 TRUE))
(define-fun lh_1 () Bool (mem g_s50$1_82 BOOL))
(define-fun lh_2 () Bool (mem g_s51$1_83 BOOL))
(define-fun lh_3 () Bool (=> (= g_s53_68 empty) (= g_s50$1_82 FALSE)))
(define-fun lh_4 () Bool (=> (not (= g_s53_68 empty)) (= g_s50$1_82 TRUE)))
(define-fun lh_5 () Bool (=> (= g_s54_69 empty) (= g_s51$1_83 FALSE)))
(define-fun lh_6 () Bool (=> (not (= g_s54_69 empty)) (= g_s51$1_83 TRUE)))
(define-fun lh_7 () Bool (not (= g_s22_23 g_s18_19)))
(define-fun lh_8 () Bool (= g_s22_23 g_s18_19))
(define-fun lh_9 () Bool (or (= g_s22_23 g_s19_20) (= g_s22_23 g_s21_22)))
(define-fun lh_10 () Bool (not (= g_s22_23 g_s20_21)))
(define-fun lh_11 () Bool (= g_s22_23 g_s20_21))
(define-fun lh_12 () Bool (not (= g_s22_23 g_s23_24)))
(define-fun lh_13 () Bool (= g_s22_23 g_s23_24))
(define-fun lh_14 () Bool (not (= g_s22_23 g_s24_25)))
(define-fun lh_15 () Bool (= g_s22_23 g_s24_25))
(define-fun lh_16 () Bool (or (= g_s22_23 g_s20_21) (= g_s22_23 g_s21_22)))
(define-fun lh_17 () Bool (= g_s22_23 g_s21_22))
; PO 1 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem e0 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_8) (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_13) (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_12) (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_16) (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_15) (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_14) (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_17) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10) (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s22_23))
(assert (= g_s53_68 empty))
(assert (= g_s54_69 empty))
(assert (= g_s65_80 FALSE))
(define-fun lh_1 () Bool (not (= g_s23_24 g_s18_19)))
(define-fun lh_2 () Bool (= g_s23_24 g_s18_19))
(define-fun lh_3 () Bool (not (or (= g_s23_24 g_s19_20) (= g_s23_24 g_s21_22))))
(define-fun lh_4 () Bool (not (= g_s23_24 g_s20_21)))
(define-fun lh_5 () Bool (= g_s23_24 g_s20_21))
(define-fun lh_6 () Bool (not (= g_s23_24 g_s24_25)))
(define-fun lh_7 () Bool (= g_s23_24 g_s24_25))
(define-fun lh_8 () Bool (or (= g_s23_24 g_s20_21) (= g_s23_24 g_s21_22)))
(define-fun lh_9 () Bool (= g_s23_24 g_s21_22))
; PO 1 in group 10
(push 1)
(assert (not (mem g_s40_53 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> lh_3 (= g_s57_72 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> lh_2 (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 10
(push 1)
(assert (not (=> lh_1 (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 10
(push 1)
(assert (not (=> lh_8 (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 10
(push 1)
(assert (not (=> lh_7 (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 10
(push 1)
(assert (not (=> lh_6 (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 10
(push 1)
(assert (not (=> lh_5 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 10
(push 1)
(assert (not (=> lh_9 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 10
(push 1)
(assert (not (=> lh_5 (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 10
(push 1)
(assert (not (=> lh_4 (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s23_24))
(assert (or (not (= g_s53_68 empty)) (not (= g_s54_69 empty))))
(assert (= g_s65_80 TRUE))
(define-fun lh_1 () Bool (mem g_s50$1_82 BOOL))
(define-fun lh_2 () Bool (mem g_s51$1_83 BOOL))
(define-fun lh_3 () Bool (=> (= g_s53_68 empty) (= g_s50$1_82 FALSE)))
(define-fun lh_4 () Bool (=> (not (= g_s53_68 empty)) (= g_s50$1_82 TRUE)))
(define-fun lh_5 () Bool (=> (= g_s54_69 empty) (= g_s51$1_83 FALSE)))
(define-fun lh_6 () Bool (=> (not (= g_s54_69 empty)) (= g_s51$1_83 TRUE)))
(define-fun lh_7 () Bool (not (= g_s22_23 g_s18_19)))
(define-fun lh_8 () Bool (= g_s22_23 g_s18_19))
(define-fun lh_9 () Bool (not (or (= g_s22_23 g_s19_20) (= g_s22_23 g_s21_22))))
(define-fun lh_10 () Bool (not (= g_s22_23 g_s20_21)))
(define-fun lh_11 () Bool (= g_s22_23 g_s20_21))
(define-fun lh_12 () Bool (= g_s22_23 g_s23_24))
(define-fun lh_13 () Bool (not (= g_s22_23 g_s24_25)))
(define-fun lh_14 () Bool (= g_s22_23 g_s24_25))
(define-fun lh_15 () Bool (or (= g_s22_23 g_s20_21) (= g_s22_23 g_s21_22)))
(define-fun lh_16 () Bool (= g_s22_23 g_s21_22))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem e0 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_12) (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= g_s57_72 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_8) (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_15) (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_14) (= g_s61_76 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_13) (= g_s61_76 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_16) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10) (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s23_24))
(assert (= g_s53_68 empty))
(assert (= g_s54_69 empty))
(assert (= g_s65_80 TRUE))
(assert (= g_s66_81 e0))
(assert (= g_s61_76 FALSE))
(assert (= g_s52_67 FALSE))
(define-fun lh_1 () Bool (not (= g_s24_25 g_s18_19)))
(define-fun lh_2 () Bool (= g_s24_25 g_s18_19))
(define-fun lh_3 () Bool (not (or (= g_s24_25 g_s19_20) (= g_s24_25 g_s21_22))))
(define-fun lh_4 () Bool (not (= g_s24_25 g_s20_21)))
(define-fun lh_5 () Bool (= g_s24_25 g_s20_21))
(define-fun lh_6 () Bool (= g_s24_25 g_s23_24))
(define-fun lh_7 () Bool (or (= g_s24_25 g_s20_21) (= g_s24_25 g_s21_22)))
(define-fun lh_8 () Bool (= g_s24_25 g_s21_22))
; PO 1 in group 12
(push 1)
(assert (not (mem g_s38_51 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> lh_6 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 12
(push 1)
(assert (not (=> lh_3 (= g_s57_72 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 12
(push 1)
(assert (not (=> lh_2 (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 12
(push 1)
(assert (not (=> lh_1 (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 12
(push 1)
(assert (not (=> lh_7 (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 12
(push 1)
(assert (not (=> lh_5 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 12
(push 1)
(assert (not (=> lh_8 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 12
(push 1)
(assert (not (=> lh_5 (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 12
(push 1)
(assert (not (=> lh_4 (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s24_25))
(assert (= g_s61_76 TRUE))
(assert (= g_s62_77 e0))
(define-fun lh_1 () Bool (not (= g_s25_26 g_s18_19)))
(define-fun lh_2 () Bool (= g_s25_26 g_s18_19))
(define-fun lh_3 () Bool (not (or (= g_s25_26 g_s19_20) (= g_s25_26 g_s21_22))))
(define-fun lh_4 () Bool (not (= g_s25_26 g_s20_21)))
(define-fun lh_5 () Bool (= g_s25_26 g_s20_21))
(define-fun lh_6 () Bool (not (= g_s25_26 g_s23_24)))
(define-fun lh_7 () Bool (= g_s25_26 g_s23_24))
(define-fun lh_8 () Bool (= g_s25_26 g_s24_25))
(define-fun lh_9 () Bool (or (= g_s25_26 g_s20_21) (= g_s25_26 g_s21_22)))
(define-fun lh_10 () Bool (= g_s25_26 g_s21_22))
; PO 1 in group 13
(push 1)
(assert (not (=> lh_8 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (=> lh_3 (= g_s57_72 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 13
(push 1)
(assert (not (=> lh_2 (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 13
(push 1)
(assert (not (=> lh_1 (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 13
(push 1)
(assert (not (=> lh_7 (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 13
(push 1)
(assert (not (=> lh_6 (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 13
(push 1)
(assert (not (=> lh_9 (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 13
(push 1)
(assert (not (=> lh_5 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 13
(push 1)
(assert (not (=> lh_10 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 13
(push 1)
(assert (not (=> lh_5 (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 13
(push 1)
(assert (not (=> lh_4 (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s24_25))
(assert (= g_s53_68 empty))
(assert (= g_s54_69 empty))
(assert (= g_s61_76 TRUE))
(assert (|>i| g_s62_77 e0))
(assert (= g_s46_61 TRUE))
(define-fun lh_1 () Bool (not (= g_s17_18 g_s18_19)))
(define-fun lh_2 () Bool (= g_s17_18 g_s18_19))
(define-fun lh_3 () Bool (not (or (= g_s17_18 g_s19_20) (= g_s17_18 g_s21_22))))
(define-fun lh_4 () Bool (not (= g_s17_18 g_s20_21)))
(define-fun lh_5 () Bool (= g_s17_18 g_s20_21))
(define-fun lh_6 () Bool (not (= g_s17_18 g_s23_24)))
(define-fun lh_7 () Bool (= g_s17_18 g_s23_24))
(define-fun lh_8 () Bool (= g_s17_18 g_s24_25))
(define-fun lh_9 () Bool (or (= g_s17_18 g_s20_21) (= g_s17_18 g_s21_22)))
(define-fun lh_10 () Bool (= g_s17_18 g_s21_22))
; PO 1 in group 14
(push 1)
(assert (not (mem e0 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> lh_8 (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 14
(push 1)
(assert (not (=> lh_3 (= g_s57_72 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 14
(push 1)
(assert (not (=> lh_2 (= g_s63_78 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 14
(push 1)
(assert (not (=> lh_1 (= g_s63_78 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 14
(push 1)
(assert (not (=> lh_7 (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 14
(push 1)
(assert (not (=> lh_6 (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 14
(push 1)
(assert (not (=> lh_9 (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 14
(push 1)
(assert (not (=> lh_5 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 14
(push 1)
(assert (not (=> lh_10 (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 14
(push 1)
(assert (not (=> lh_5 (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 14
(push 1)
(assert (not (=> lh_4 (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s44_59 TRUE))
(assert (= g_s45_60 g_s24_25))
(assert (or (not (= g_s53_68 empty)) (not (= g_s54_69 empty))))
(assert (= g_s61_76 TRUE))
(assert (= g_s63_78 FALSE))
(define-fun lh_1 () Bool (mem g_s50$1_82 BOOL))
(define-fun lh_2 () Bool (mem g_s51$1_83 BOOL))
(define-fun lh_3 () Bool (=> (= g_s53_68 empty) (= g_s50$1_82 FALSE)))
(define-fun lh_4 () Bool (=> (not (= g_s53_68 empty)) (= g_s50$1_82 TRUE)))
(define-fun lh_5 () Bool (=> (= g_s54_69 empty) (= g_s51$1_83 FALSE)))
(define-fun lh_6 () Bool (=> (not (= g_s54_69 empty)) (= g_s51$1_83 TRUE)))
(define-fun lh_7 () Bool (not (or (= g_s18_19 g_s19_20) (= g_s18_19 g_s21_22))))
(define-fun lh_8 () Bool (not (= g_s18_19 g_s20_21)))
(define-fun lh_9 () Bool (= g_s18_19 g_s20_21))
(define-fun lh_10 () Bool (not (= g_s18_19 g_s23_24)))
(define-fun lh_11 () Bool (= g_s18_19 g_s23_24))
(define-fun lh_12 () Bool (= g_s18_19 g_s24_25))
(define-fun lh_13 () Bool (or (= g_s18_19 g_s20_21) (= g_s18_19 g_s21_22)))
(define-fun lh_14 () Bool (= g_s18_19 g_s21_22))
; PO 1 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem e0 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s39_52 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_12) (= FALSE TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s57_72 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_11) (= g_s65_80 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_10) (= g_s65_80 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_13) (= g_s29_36 e37))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_14) (= g_s47_62 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_9) (= g_s59_74 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_8) (= g_s59_74 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)