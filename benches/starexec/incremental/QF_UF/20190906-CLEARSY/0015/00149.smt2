(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e93 () U)
(declare-fun e95 () U)
(declare-fun e97 () U)
(declare-fun e99 () U)
(declare-fun e101 () U)
(declare-fun e103 () U)
(declare-fun e105 () U)
(declare-fun e107 () U)
(declare-fun e109 () U)
(declare-fun e111 () U)
(declare-fun e113 () U)
(declare-fun e115 () U)
(declare-fun e117 () U)
(declare-fun e119 () U)
(declare-fun e121 () U)
(declare-fun e123 () U)
(declare-fun e125 () U)
(declare-fun e127 () U)
(declare-fun e129 () U)
(declare-fun e131 () U)
(declare-fun e133 () U)
(declare-fun e135 () U)
(declare-fun e137 () U)
(declare-fun e139 () U)
(declare-fun e141 () U)
(declare-fun e143 () U)
(declare-fun e145 () U)
(declare-fun e147 () U)
(declare-fun e149 () U)
(declare-fun e151 () U)
(declare-fun e153 () U)
(declare-fun e155 () U)
(declare-fun e157 () U)
(declare-fun e159 () U)
(declare-fun e161 () U)
(declare-fun e163 () U)
(declare-fun e165 () U)
(declare-fun e167 () U)
(declare-fun e169 () U)
(declare-fun e171 () U)
(declare-fun e173 () U)
(declare-fun e175 () U)
(declare-fun e177 () U)
(declare-fun e179 () U)
(declare-fun e181 () U)
(declare-fun e183 () U)
(declare-fun e185 () U)
(declare-fun e187 () U)
(declare-fun e189 () U)
(declare-fun e191 () U)
(declare-fun e193 () U)
(declare-fun e195 () U)
(declare-fun e197 () U)
(declare-fun e199 () U)
(declare-fun e201 () U)
(declare-fun e203 () U)
(declare-fun e205 () U)
(declare-fun e207 () U)
(declare-fun e209 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_110 () U)
(declare-fun g_s101_112 () U)
(declare-fun g_s102_114 () U)
(declare-fun g_s103_116 () U)
(declare-fun g_s104_118 () U)
(declare-fun g_s105_120 () U)
(declare-fun g_s106_122 () U)
(declare-fun g_s107_124 () U)
(declare-fun g_s108_126 () U)
(declare-fun g_s109_128 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_130 () U)
(declare-fun g_s111_132 () U)
(declare-fun g_s112_134 () U)
(declare-fun g_s113_136 () U)
(declare-fun g_s114_138 () U)
(declare-fun g_s115_140 () U)
(declare-fun g_s116_142 () U)
(declare-fun g_s117_144 () U)
(declare-fun g_s118_146 () U)
(declare-fun g_s119_148 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_150 () U)
(declare-fun g_s121_152 () U)
(declare-fun g_s122_154 () U)
(declare-fun g_s123_156 () U)
(declare-fun g_s124_158 () U)
(declare-fun g_s125_160 () U)
(declare-fun g_s126_162 () U)
(declare-fun g_s127_164 () U)
(declare-fun g_s128_166 () U)
(declare-fun g_s129_168 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_170 () U)
(declare-fun g_s131_172 () U)
(declare-fun g_s132_174 () U)
(declare-fun g_s133_176 () U)
(declare-fun g_s134_178 () U)
(declare-fun g_s135_180 () U)
(declare-fun g_s136_182 () U)
(declare-fun g_s137_184 () U)
(declare-fun g_s138_186 () U)
(declare-fun g_s139_188 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_190 () U)
(declare-fun g_s141_192 () U)
(declare-fun g_s142_194 () U)
(declare-fun g_s143_196 () U)
(declare-fun g_s144_198 () U)
(declare-fun g_s145_200 () U)
(declare-fun g_s146_202 () U)
(declare-fun g_s147_204 () U)
(declare-fun g_s148_206 () U)
(declare-fun g_s149_208 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_210 () U)
(declare-fun g_s151_212 () U)
(declare-fun g_s152_211 () U)
(declare-fun g_s153_213 () U)
(declare-fun g_s154_214 () U)
(declare-fun g_s155_215 () U)
(declare-fun g_s156_216 () U)
(declare-fun g_s157_217 () U)
(declare-fun g_s158_218 () U)
(declare-fun g_s159_219 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_220 () U)
(declare-fun g_s161_221 () U)
(declare-fun g_s162_222 () U)
(declare-fun g_s163_223 () U)
(declare-fun g_s164_224 () U)
(declare-fun g_s165_225 () U)
(declare-fun g_s166_226 () U)
(declare-fun g_s167_227 () U)
(declare-fun g_s168_228 () U)
(declare-fun g_s169_229 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_230 () U)
(declare-fun g_s171_231 () U)
(declare-fun g_s172_232 () U)
(declare-fun g_s173_233 () U)
(declare-fun g_s174_234 () U)
(declare-fun g_s175_235 () U)
(declare-fun g_s176_236 () U)
(declare-fun g_s177_237 () U)
(declare-fun g_s178_238 () U)
(declare-fun g_s179_239 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_240 () U)
(declare-fun g_s181_241 () U)
(declare-fun g_s182_242 () U)
(declare-fun g_s183_243 () U)
(declare-fun g_s184_244 () U)
(declare-fun g_s185_245 () U)
(declare-fun g_s186_246 () U)
(declare-fun g_s187_247 () U)
(declare-fun g_s188_248 () U)
(declare-fun g_s189_249 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_250 () U)
(declare-fun g_s191_251 () U)
(declare-fun g_s192_252 () U)
(declare-fun g_s193_253 () U)
(declare-fun g_s194_255 () U)
(declare-fun g_s195_254 () U)
(declare-fun g_s196_256 () U)
(declare-fun g_s197_257 () U)
(declare-fun g_s198_258 () U)
(declare-fun g_s199_259 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_260 () U)
(declare-fun g_s201_261 () U)
(declare-fun g_s202_262 () U)
(declare-fun g_s203_263 () U)
(declare-fun g_s204_264 () U)
(declare-fun g_s205_265 () U)
(declare-fun g_s206_266 () U)
(declare-fun g_s207_267 () U)
(declare-fun g_s208_268 () U)
(declare-fun g_s209_269 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_270 () U)
(declare-fun g_s211_271 () U)
(declare-fun g_s212_272 () U)
(declare-fun g_s213_273 () U)
(declare-fun g_s214_274 () U)
(declare-fun g_s215_275 () U)
(declare-fun g_s216_276 () U)
(declare-fun g_s217_277 () U)
(declare-fun g_s218_278 () U)
(declare-fun g_s219_279 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_280 () U)
(declare-fun g_s221_281 () U)
(declare-fun g_s222_282 () U)
(declare-fun g_s223_283 () U)
(declare-fun g_s224_284 () U)
(declare-fun g_s225_285 () U)
(declare-fun g_s226_286 () U)
(declare-fun g_s227_287 () U)
(declare-fun g_s228_288 () U)
(declare-fun g_s229_289 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_290 () U)
(declare-fun g_s231_291 () U)
(declare-fun g_s232_292 () U)
(declare-fun g_s233_293 () U)
(declare-fun g_s234_294 () U)
(declare-fun g_s235_295 () U)
(declare-fun g_s236_296 () U)
(declare-fun g_s237_297 () U)
(declare-fun g_s238_298 () U)
(declare-fun g_s239_299 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_300 () U)
(declare-fun g_s241_301 () U)
(declare-fun g_s242_302 () U)
(declare-fun g_s243_303 () U)
(declare-fun g_s244_304 () U)
(declare-fun g_s245_305 () U)
(declare-fun g_s246_306 () U)
(declare-fun g_s247_307 () U)
(declare-fun g_s248_308 () U)
(declare-fun g_s249_309 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_310 () U)
(declare-fun g_s251_311 () U)
(declare-fun g_s252_312 () U)
(declare-fun g_s253_313 () U)
(declare-fun g_s254_314 () U)
(declare-fun g_s255_315 () U)
(declare-fun g_s256_316 () U)
(declare-fun g_s257_317 () U)
(declare-fun g_s258_318 () U)
(declare-fun g_s259_319 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_320 () U)
(declare-fun g_s261_321 () U)
(declare-fun g_s262_322 () U)
(declare-fun g_s263_323 () U)
(declare-fun g_s264_324 () U)
(declare-fun g_s265_325 () U)
(declare-fun g_s266_326 () U)
(declare-fun g_s267_327 () U)
(declare-fun g_s268_328 () U)
(declare-fun g_s269_329 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_330 () U)
(declare-fun g_s271_331 () U)
(declare-fun g_s272_332 () U)
(declare-fun g_s273_333 () U)
(declare-fun g_s274_334 () U)
(declare-fun g_s275_335 () U)
(declare-fun g_s276_336 () U)
(declare-fun g_s277_337 () U)
(declare-fun g_s278_338 () U)
(declare-fun g_s279_339 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_340 () U)
(declare-fun g_s281_341 () U)
(declare-fun g_s282_342 () U)
(declare-fun g_s283_343 () U)
(declare-fun g_s284_344 () U)
(declare-fun g_s285_345 () U)
(declare-fun g_s286_346 () U)
(declare-fun g_s287_347 () U)
(declare-fun g_s288_348 () U)
(declare-fun g_s289_349 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_350 () U)
(declare-fun g_s291_351 () U)
(declare-fun g_s292_352 () U)
(declare-fun g_s293_353 () U)
(declare-fun g_s294_354 () U)
(declare-fun g_s295_355 () U)
(declare-fun g_s296_356 () U)
(declare-fun g_s297_357 () U)
(declare-fun g_s298_358 () U)
(declare-fun g_s299_359 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_360 () U)
(declare-fun g_s301_361 () U)
(declare-fun g_s302_362 () U)
(declare-fun g_s303_363 () U)
(declare-fun g_s304_364 () U)
(declare-fun g_s305_365 () U)
(declare-fun g_s306_366 () U)
(declare-fun g_s307_367 () U)
(declare-fun g_s308_368 () U)
(declare-fun g_s309_369 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_370 () U)
(declare-fun g_s311_371 () U)
(declare-fun g_s312_372 () U)
(declare-fun g_s313_373 () U)
(declare-fun g_s314_374 () U)
(declare-fun g_s315_375 () U)
(declare-fun g_s316_376 () U)
(declare-fun g_s317_377 () U)
(declare-fun g_s318_378 () U)
(declare-fun g_s319_379 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_380 () U)
(declare-fun g_s321_381 () U)
(declare-fun g_s322_382 () U)
(declare-fun g_s323_383 () U)
(declare-fun g_s324_384 () U)
(declare-fun g_s325_385 () U)
(declare-fun g_s326_386 () U)
(declare-fun g_s327_387 () U)
(declare-fun g_s328_388 () U)
(declare-fun g_s329_389 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_390 () U)
(declare-fun g_s331_391 () U)
(declare-fun g_s332_392 () U)
(declare-fun g_s333_393 () U)
(declare-fun g_s334_394 () U)
(declare-fun g_s335_395 () U)
(declare-fun g_s336_396 () U)
(declare-fun g_s337_397 () U)
(declare-fun g_s338_398 () U)
(declare-fun g_s339_399 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_400 () U)
(declare-fun g_s341_401 () U)
(declare-fun g_s342_402 () U)
(declare-fun g_s343_403 () U)
(declare-fun g_s344_404 () U)
(declare-fun g_s345_405 () U)
(declare-fun g_s346_406 () U)
(declare-fun g_s347_407 () U)
(declare-fun g_s348_408 () U)
(declare-fun g_s349_409 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_410 () U)
(declare-fun g_s351_411 () U)
(declare-fun g_s352_412 () U)
(declare-fun g_s353_413 () U)
(declare-fun g_s354_414 () U)
(declare-fun g_s355_415 () U)
(declare-fun g_s356_416 () U)
(declare-fun g_s357_417 () U)
(declare-fun g_s358_418 () U)
(declare-fun g_s359_419 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_420 () U)
(declare-fun g_s361_421 () U)
(declare-fun g_s362_422 () U)
(declare-fun g_s363_423 () U)
(declare-fun g_s364_424 () U)
(declare-fun g_s365_425 () U)
(declare-fun g_s366_426 () U)
(declare-fun g_s367_427 () U)
(declare-fun g_s368_428 () U)
(declare-fun g_s369_429 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_430 () U)
(declare-fun g_s371_431 () U)
(declare-fun g_s372_432 () U)
(declare-fun g_s373_433 () U)
(declare-fun g_s374_434 () U)
(declare-fun g_s375_435 () U)
(declare-fun g_s376_436 () U)
(declare-fun g_s377_437 () U)
(declare-fun g_s378_438 () U)
(declare-fun g_s379_439 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_440 () U)
(declare-fun g_s381_441 () U)
(declare-fun g_s382_442 () U)
(declare-fun g_s383_443 () U)
(declare-fun g_s384_444 () U)
(declare-fun g_s385_445 () U)
(declare-fun g_s386_446 () U)
(declare-fun g_s387_447 () U)
(declare-fun g_s388_448 () U)
(declare-fun g_s389_449 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_450 () U)
(declare-fun g_s391_451 () U)
(declare-fun g_s392_452 () U)
(declare-fun g_s393_453 () U)
(declare-fun g_s394_454 () U)
(declare-fun g_s395_455 () U)
(declare-fun g_s396_456 () U)
(declare-fun g_s397$1_457 () U)
(declare-fun g_s397$2_466 () U)
(declare-fun g_s397$3_473 () U)
(declare-fun g_s397$4_480 () U)
(declare-fun g_s397$5_487 () U)
(declare-fun g_s397$6_494 () U)
(declare-fun g_s397$7_501 () U)
(declare-fun g_s397$8_508 () U)
(declare-fun g_s398$1_458 () U)
(declare-fun g_s398$2_467 () U)
(declare-fun g_s398$3_474 () U)
(declare-fun g_s398$4_481 () U)
(declare-fun g_s398$5_488 () U)
(declare-fun g_s398$6_495 () U)
(declare-fun g_s398$7_502 () U)
(declare-fun g_s398$8_509 () U)
(declare-fun g_s399$1_459 () U)
(declare-fun g_s399$2_468 () U)
(declare-fun g_s399$3_475 () U)
(declare-fun g_s399$4_482 () U)
(declare-fun g_s399$5_489 () U)
(declare-fun g_s399$6_496 () U)
(declare-fun g_s399$7_503 () U)
(declare-fun g_s399$8_510 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s401$1_464 () U)
(declare-fun g_s401$2_469 () U)
(declare-fun g_s401$3_476 () U)
(declare-fun g_s401$4_483 () U)
(declare-fun g_s401$5_490 () U)
(declare-fun g_s401$6_497 () U)
(declare-fun g_s401$7_504 () U)
(declare-fun g_s401$8_511 () U)
(declare-fun g_s402$1_461 () U)
(declare-fun g_s402$2_470 () U)
(declare-fun g_s402$3_477 () U)
(declare-fun g_s402$4_484 () U)
(declare-fun g_s402$5_491 () U)
(declare-fun g_s402$6_498 () U)
(declare-fun g_s402$7_505 () U)
(declare-fun g_s402$8_512 () U)
(declare-fun g_s403$1_462 () U)
(declare-fun g_s403$2_471 () U)
(declare-fun g_s403$3_478 () U)
(declare-fun g_s403$4_485 () U)
(declare-fun g_s403$5_492 () U)
(declare-fun g_s403$6_499 () U)
(declare-fun g_s403$7_506 () U)
(declare-fun g_s403$8_513 () U)
(declare-fun g_s404$1_463 () U)
(declare-fun g_s404$2_472 () U)
(declare-fun g_s404$3_479 () U)
(declare-fun g_s404$4_486 () U)
(declare-fun g_s404$5_493 () U)
(declare-fun g_s404$6_500 () U)
(declare-fun g_s404$7_507 () U)
(declare-fun g_s404$8_514 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_516 () U)
(declare-fun g_s410$1_517 () U)
(declare-fun g_s411_527 () U)
(declare-fun g_s411_521 () U)
(declare-fun g_s411_524 () U)
(declare-fun g_s411_518 () U)
(declare-fun g_s411$1_528 () U)
(declare-fun g_s411$1_522 () U)
(declare-fun g_s411$1_525 () U)
(declare-fun g_s411$1_519 () U)
(declare-fun g_s412_520 () U)
(declare-fun g_s416_523 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s421_526 () U)
(declare-fun g_s424_529 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_94 () U)
(declare-fun g_s93_96 () U)
(declare-fun g_s94_98 () U)
(declare-fun g_s95_100 () U)
(declare-fun g_s96_102 () U)
(declare-fun g_s97_104 () U)
(declare-fun g_s98_106 () U)
(declare-fun g_s99_108 () U)
(declare-fun e460 () U)
(declare-fun e515 () U)
(declare-fun e465 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (not (= g_s12_13 empty)) (not (= g_s13_14 empty)) (not (= g_s14_15 empty)) (not (= g_s15_16 empty)) (not (= g_s16_17 empty)) (not (= g_s17_18 empty)) (not (= g_s18_19 empty)) (= g_s19_20 INT) (= g_s20_21 NAT) (= g_s21_22 NAT1) (subset g_s21_22 g_s20_21) (subset g_s20_21 g_s19_20) (mem g_s22_23 g_s19_20) (mem g_s22_23 g_s20_21) (not (mem g_s22_23 g_s21_22)) (mem g_s23_24 g_s19_20) (not (mem g_s23_24 g_s20_21)) (= g_s24_25 INT) (subset g_s25_26 g_s0_1) (mem g_s26_27 g_s0_1) (mem g_s26_27 g_s25_26) (mem g_s27_28 g_s0_1) (not (mem g_s27_28 g_s25_26)) (mem g_s28_29 (|+->| NAT g_s0_1)) (mem g_s28_29 (perm g_s25_26)) (= (card g_s25_26) g_s29_30) (subset g_s30_31 g_s1_2) (mem g_s31_32 g_s1_2) (mem g_s31_32 g_s30_31) (mem g_s32_33 g_s1_2) (not (mem g_s32_33 g_s30_31)) (mem g_s33_34 (|+->| NAT g_s1_2)) (mem g_s33_34 (perm g_s30_31)) (= (card g_s30_31) g_s34_35) (subset g_s35_36 g_s2_3) (mem g_s36_37 g_s2_3) (not (mem g_s36_37 g_s35_36)) (mem g_s37_38 (|+->| NAT g_s2_3)) (mem g_s37_38 (perm g_s35_36)) (subset g_s38_39 g_s3_4) (mem g_s39_40 g_s3_4) (not (mem g_s39_40 g_s38_39)) (mem g_s40_41 (|+->| NAT g_s3_4)) (mem g_s40_41 (perm g_s38_39)) (subset g_s41_42 g_s4_5) (mem g_s42_43 g_s4_5) (not (mem g_s42_43 g_s41_42)) (mem g_s43_44 (|+->| NAT g_s4_5)) (mem g_s43_44 (perm g_s41_42)) (subset g_s44_45 g_s5_6) (mem g_s45_46 g_s5_6) (not (mem g_s45_46 g_s44_45)) (mem g_s46_47 (|+->| NAT g_s5_6)) (mem g_s46_47 (perm g_s44_45)) (subset g_s47_48 g_s6_7) (mem g_s48_49 g_s6_7) (not (mem g_s48_49 g_s47_48)) (mem g_s49_50 (|+->| NAT g_s6_7)) (mem g_s49_50 (perm g_s47_48)) (subset g_s50_51 g_s7_8) (mem g_s51_52 g_s7_8) (not (mem g_s51_52 g_s50_51)) (mem g_s52_53 (|+->| NAT g_s7_8)) (mem g_s52_53 (perm g_s50_51)) (subset g_s53_54 g_s8_9) (mem g_s54_55 g_s8_9) (not (mem g_s54_55 g_s53_54)) (mem g_s55_56 (|+->| NAT g_s8_9)) (mem g_s55_56 (perm g_s53_54)) (subset g_s56_57 g_s9_10) (mem g_s57_58 g_s9_10) (not (mem g_s57_58 g_s56_57)) (mem g_s58_59 (|+->| NAT g_s9_10)) (mem g_s58_59 (perm g_s56_57)) (mem g_s59_60 g_s10_11) (mem g_s60_61 (|-->| g_s10_11 g_s3_4)) (= (apply g_s60_61 g_s59_60) g_s39_40) (subset g_s61_62 g_s11_12) (mem g_s62_63 g_s11_12) (not (mem g_s62_63 g_s61_62)) (subset g_s63_64 g_s12_13) (mem g_s64_65 g_s12_13) (not (mem g_s64_65 g_s63_64)) (mem g_s65_66 (|+->| NAT g_s12_13)) (mem g_s65_66 (perm g_s63_64)) (subset g_s66_67 g_s13_14) (mem g_s67_68 g_s13_14) (not (mem g_s67_68 g_s66_67)) (mem g_s68_69 (|+->| NAT g_s13_14)) (mem g_s68_69 (perm g_s66_67)) (subset g_s69_70 g_s14_15) (mem g_s70_71 g_s14_15) (not (mem g_s70_71 g_s69_70)) (mem g_s71_72 (|+->| NAT g_s14_15)) (mem g_s71_72 (perm g_s69_70)) (subset g_s72_73 g_s15_16) (mem g_s73_74 g_s15_16) (not (mem g_s73_74 g_s72_73)) (mem g_s74_75 (|+->| NAT g_s15_16)) (mem g_s74_75 (perm g_s72_73)) (subset g_s75_76 g_s16_17) (mem g_s76_77 g_s16_17) (not (mem g_s76_77 g_s75_76)) (mem g_s77_78 (|+->| NAT g_s16_17)) (mem g_s77_78 (perm g_s75_76)) (mem g_s78_79 (|>->| g_s63_64 g_s30_31)) (mem g_s79_80 (|>->| g_s66_67 g_s30_31)) (mem g_s80_81 g_s1_2) (=> (not (= g_s81_82 e0)) (mem g_s80_81 g_s30_31)) (mem g_s82_83 (|>->| g_s72_73 g_s30_31)) (= (binary_inter (ran g_s78_79) (ran g_s79_80)) empty) (= (binary_inter (ran g_s78_79) (ran g_s82_83)) empty) (= (binary_inter (ran g_s82_83) (ran g_s79_80)) empty) (=> (not (= g_s81_82 e0)) (not (mem g_s80_81 (ran g_s78_79)))) (=> (not (= g_s81_82 e0)) (not (mem g_s80_81 (ran g_s79_80)))) (=> (not (= g_s81_82 e0)) (not (mem g_s80_81 (ran g_s82_83)))) (subset g_s83_84 g_s17_18) (mem g_s84_85 g_s17_18) (not (mem g_s84_85 g_s83_84)) (mem g_s85_86 (|+->| NAT g_s17_18)) (mem g_s85_86 (perm g_s83_84)) (subset g_s86_87 g_s18_19) (mem g_s87_88 g_s18_19) (not (mem g_s87_88 g_s86_87)) (mem g_s88_89 (|+->| NAT g_s18_19)) (mem g_s88_89 (perm g_s86_87))))
(define-fun |def_seext| () Bool (and (= g_s89_90 TRUE) (= g_s90_91 FALSE) (= g_s91_92 e0) (= g_s92_94 e93) (= g_s93_96 e95) (= g_s94_98 e97) (= g_s95_100 e99) (= g_s96_102 e101) (= g_s97_104 e103) (= g_s98_106 e105) (= g_s99_108 e107) (= g_s100_110 e109) (= g_s101_112 e111) (= g_s102_114 e113) (= g_s103_116 e115) (= g_s104_118 e117) (= g_s105_120 e119) (= g_s106_122 e121) (= g_s107_124 e123) (= g_s108_126 e125) (= g_s109_128 e127) (= g_s110_130 e129) (= g_s111_132 e131) (= g_s112_134 e133) (= g_s113_136 e135) (= g_s114_138 e137) (= g_s115_140 e139) (= g_s116_142 e141) (= g_s117_144 e143) (= g_s118_146 e145) (= g_s119_148 e147) (= g_s120_150 e149) (= g_s121_152 e151) (= g_s122_154 e153) (= g_s123_156 e155) (= g_s124_158 e157) (= g_s125_160 e159) (= g_s126_162 e161) (= g_s127_164 e163) (= g_s128_166 e165) (= g_s129_168 e167) (= g_s130_170 e169) (= g_s131_172 e171) (= g_s132_174 e173) (= g_s133_176 e175) (= g_s134_178 e177) (= g_s135_180 e179) (= g_s136_182 e181) (= g_s137_184 e183) (= g_s138_186 e185) (= g_s139_188 e187) (= g_s140_190 e189) (= g_s141_192 e191) (= g_s142_194 e193) (= g_s143_196 e195) (= g_s144_198 e197) (= g_s145_200 e199) (= g_s146_202 e201) (= g_s147_204 e203) (= g_s148_206 e205) (= g_s149_208 e207) (= g_s150_210 e209) (mem g_s151_212 g_s152_211) (mem g_s153_213 g_s152_211) (mem g_s154_214 g_s152_211) (mem g_s155_215 g_s152_211) (mem g_s156_216 g_s152_211) (mem g_s157_217 g_s152_211) (mem g_s158_218 g_s152_211) (mem g_s159_219 g_s152_211) (mem g_s160_220 g_s152_211) (mem g_s161_221 g_s152_211) (mem g_s162_222 g_s152_211) (mem g_s163_223 g_s152_211) (mem g_s164_224 g_s152_211) (mem g_s165_225 g_s152_211) (mem g_s166_226 g_s152_211) (mem g_s167_227 g_s152_211) (mem g_s168_228 g_s152_211) (mem g_s169_229 g_s152_211) (mem g_s170_230 g_s152_211) (mem g_s171_231 g_s152_211) (mem g_s172_232 g_s152_211) (mem g_s173_233 g_s152_211) (mem g_s174_234 g_s152_211) (mem g_s175_235 g_s152_211) (mem g_s176_236 g_s152_211) (mem g_s177_237 g_s152_211) (mem g_s178_238 g_s152_211) (mem g_s179_239 g_s152_211) (mem g_s180_240 g_s152_211) (mem g_s181_241 g_s152_211) (mem g_s182_242 g_s152_211) (mem g_s183_243 g_s152_211) (mem g_s184_244 g_s152_211) (mem g_s185_245 g_s152_211) (mem g_s186_246 g_s152_211) (mem g_s187_247 g_s152_211) (mem g_s188_248 g_s152_211) (mem g_s189_249 g_s152_211) (mem g_s190_250 g_s152_211) (mem g_s191_251 g_s152_211) (mem g_s192_252 g_s152_211) (mem g_s193_253 g_s152_211) (mem g_s194_255 g_s195_254) (mem g_s196_256 g_s195_254) (mem g_s197_257 g_s195_254) (mem g_s198_258 g_s195_254) (mem g_s199_259 g_s195_254) (mem g_s200_260 g_s195_254) (mem g_s201_261 g_s195_254) (mem g_s202_262 g_s195_254) (mem g_s203_263 g_s195_254) (mem g_s204_264 g_s195_254) (mem g_s205_265 g_s195_254) (mem g_s206_266 g_s195_254) (mem g_s207_267 g_s195_254) (mem g_s208_268 g_s195_254) (mem g_s209_269 g_s195_254) (mem g_s210_270 g_s195_254) (mem g_s211_271 g_s195_254) (mem g_s212_272 g_s195_254) (mem g_s213_273 g_s195_254) (mem g_s214_274 g_s195_254) (mem g_s215_275 g_s195_254) (mem g_s216_276 g_s195_254) (mem g_s217_277 g_s195_254) (mem g_s218_278 g_s195_254) (mem g_s219_279 g_s195_254) (mem g_s220_280 g_s195_254) (mem g_s221_281 g_s195_254) (mem g_s222_282 g_s195_254) (mem g_s223_283 g_s195_254) (mem g_s224_284 g_s195_254) (mem g_s225_285 g_s195_254) (mem g_s226_286 g_s195_254) (mem g_s227_287 g_s195_254) (mem g_s228_288 g_s195_254) (mem g_s229_289 g_s195_254) (mem g_s230_290 g_s195_254) (mem g_s231_291 g_s195_254) (mem g_s232_292 g_s195_254) (mem g_s233_293 g_s195_254) (mem g_s234_294 g_s195_254) (mem g_s235_295 g_s195_254) (mem g_s236_296 g_s195_254) (mem g_s237_297 g_s195_254) (mem g_s238_298 g_s195_254) (mem g_s239_299 g_s195_254) (mem g_s240_300 g_s195_254) (mem g_s241_301 g_s195_254) (mem g_s242_302 g_s195_254) (mem g_s243_303 g_s195_254) (mem g_s244_304 g_s195_254) (mem g_s245_305 g_s195_254) (mem g_s246_306 g_s195_254) (mem g_s247_307 g_s195_254) (mem g_s248_308 g_s195_254) (mem g_s249_309 g_s195_254) (mem g_s250_310 g_s195_254) (mem g_s251_311 g_s195_254) (mem g_s252_312 g_s195_254) (mem g_s253_313 g_s195_254) (mem g_s254_314 g_s195_254) (mem g_s255_315 g_s195_254) (mem g_s256_316 g_s195_254) (mem g_s257_317 g_s195_254) (mem g_s258_318 g_s195_254) (mem g_s259_319 g_s195_254) (mem g_s260_320 g_s195_254) (mem g_s261_321 g_s195_254) (mem g_s262_322 g_s195_254) (mem g_s263_323 g_s195_254) (mem g_s264_324 g_s195_254) (mem g_s265_325 g_s195_254) (mem g_s266_326 g_s195_254) (mem g_s267_327 g_s195_254) (mem g_s268_328 g_s195_254) (mem g_s269_329 g_s195_254) (mem g_s270_330 g_s195_254) (mem g_s271_331 g_s195_254) (mem g_s272_332 g_s195_254) (mem g_s273_333 g_s195_254) (mem g_s274_334 g_s195_254) (mem g_s275_335 g_s195_254) (mem g_s276_336 g_s195_254) (mem g_s277_337 g_s195_254) (mem g_s278_338 g_s195_254) (mem g_s279_339 g_s195_254) (mem g_s280_340 g_s195_254) (mem g_s281_341 g_s195_254) (mem g_s282_342 g_s195_254) (mem g_s283_343 g_s195_254) (mem g_s284_344 g_s195_254) (mem g_s285_345 g_s195_254) (mem g_s286_346 g_s195_254) (mem g_s287_347 g_s195_254) (mem g_s288_348 g_s195_254) (mem g_s289_349 g_s195_254) (mem g_s290_350 g_s195_254) (mem g_s291_351 g_s195_254) (mem g_s292_352 g_s195_254) (mem g_s293_353 g_s195_254) (mem g_s294_354 g_s195_254) (mem g_s295_355 g_s195_254) (mem g_s296_356 g_s195_254) (mem g_s297_357 g_s195_254) (mem g_s298_358 g_s195_254) (mem g_s299_359 g_s195_254) (mem g_s300_360 g_s195_254) (mem g_s301_361 g_s195_254) (mem g_s302_362 g_s195_254) (mem g_s303_363 g_s195_254) (mem g_s304_364 g_s195_254) (mem g_s305_365 g_s195_254) (mem g_s306_366 g_s195_254) (mem g_s307_367 g_s195_254) (mem g_s308_368 g_s195_254) (mem g_s309_369 g_s195_254) (mem g_s310_370 g_s195_254) (mem g_s311_371 g_s195_254) (mem g_s312_372 g_s195_254) (mem g_s313_373 g_s195_254) (mem g_s314_374 g_s195_254) (mem g_s315_375 g_s195_254) (mem g_s316_376 g_s195_254) (mem g_s317_377 g_s195_254) (mem g_s318_378 g_s195_254) (mem g_s319_379 g_s195_254) (mem g_s320_380 g_s195_254) (mem g_s321_381 g_s195_254) (mem g_s322_382 g_s195_254) (mem g_s323_383 g_s195_254) (mem g_s324_384 g_s195_254) (mem g_s325_385 g_s195_254) (mem g_s326_386 g_s195_254) (mem g_s327_387 g_s195_254) (mem g_s328_388 g_s195_254) (mem g_s329_389 g_s195_254) (mem g_s330_390 g_s195_254) (mem g_s331_391 g_s195_254) (mem g_s332_392 g_s195_254) (mem g_s333_393 g_s195_254) (mem g_s334_394 g_s195_254) (mem g_s335_395 g_s195_254) (mem g_s336_396 g_s195_254) (mem g_s337_397 g_s195_254) (mem g_s338_398 g_s195_254) (mem g_s339_399 g_s195_254) (mem g_s340_400 g_s195_254) (mem g_s341_401 g_s195_254) (mem g_s342_402 g_s195_254) (mem g_s343_403 g_s195_254) (mem g_s344_404 g_s195_254) (mem g_s345_405 g_s195_254) (mem g_s346_406 g_s195_254) (mem g_s347_407 g_s195_254) (mem g_s348_408 g_s195_254) (mem g_s349_409 g_s195_254) (mem g_s350_410 g_s195_254) (mem g_s351_411 g_s195_254) (mem g_s352_412 g_s195_254) (mem g_s353_413 g_s195_254) (mem g_s354_414 g_s195_254) (mem g_s355_415 g_s195_254) (mem g_s356_416 g_s195_254) (mem g_s357_417 g_s195_254) (mem g_s358_418 g_s195_254) (mem g_s359_419 g_s195_254) (mem g_s360_420 g_s195_254) (mem g_s361_421 g_s195_254) (mem g_s362_422 g_s195_254) (mem g_s363_423 g_s195_254) (mem g_s364_424 g_s195_254) (mem g_s365_425 g_s195_254) (mem g_s366_426 g_s195_254) (mem g_s367_427 g_s195_254) (mem g_s368_428 g_s195_254) (mem g_s369_429 g_s195_254) (mem g_s370_430 g_s195_254) (mem g_s371_431 g_s195_254) (mem g_s372_432 g_s195_254) (mem g_s373_433 g_s195_254) (mem g_s374_434 g_s195_254) (mem g_s375_435 g_s195_254) (mem g_s376_436 g_s195_254) (mem g_s377_437 g_s195_254) (mem g_s378_438 g_s195_254) (mem g_s379_439 g_s195_254) (mem g_s380_440 g_s195_254) (mem g_s381_441 g_s195_254) (mem g_s382_442 g_s195_254) (mem g_s383_443 g_s195_254) (mem g_s384_444 g_s195_254) (mem g_s385_445 g_s195_254) (mem g_s386_446 g_s195_254) (mem g_s387_447 g_s195_254) (mem g_s388_448 g_s195_254) (mem g_s389_449 g_s195_254)))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s390_450 (|+->| g_s72_73 g_s41_42)) (mem g_s391_451 (|+->| g_s72_73 g_s35_36)) (mem g_s392_452 (|-->| g_s72_73 NAT)) (mem g_s393_453 (|-->| g_s72_73 (POW g_s83_84))) (mem g_s394_454 (|+->| g_s72_73 g_s20_21)) (mem g_s395_455 (|+->| g_s72_73 g_s20_21)) (subset g_s396_456 g_s72_73)))
(define-fun |def_inv| () Bool (and (= g_s390_450 (range_restriction (domain_restriction g_s72_73 g_s397$1_457) g_s41_42)) (= g_s391_451 (range_restriction (domain_restriction g_s72_73 g_s398$1_458) g_s35_36)) (= g_s392_452 (range_restriction (domain_restriction g_s72_73 g_s399$1_459) NAT)) (= g_s393_453 e460) (= g_s394_454 (range_restriction (domain_restriction g_s72_73 g_s402$1_461) g_s20_21)) (= g_s395_455 (range_restriction (domain_restriction g_s72_73 g_s403$1_462) g_s20_21)) (= g_s396_456 (binary_inter g_s72_73 (image (inverse g_s404$1_463) (SET TRUE))))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s397$1_457 (|-->| g_s15_16 g_s4_5)) (mem g_s398$1_458 (|-->| g_s15_16 g_s2_3)) (mem g_s399$1_459 (|-->| g_s15_16 NAT)) (mem g_s401$1_464 (|-->| (set_prod g_s15_16 g_s17_18) BOOL)) (mem g_s402$1_461 (|-->| g_s15_16 g_s19_20)) (mem g_s403$1_462 (|-->| g_s15_16 g_s19_20)) (mem g_s404$1_463 (|-->| g_s15_16 BOOL))))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem (set_prod g_s15_16 (SET g_s42_43)) (|-->| g_s15_16 g_s4_5)))
(define-fun lh_2 () Bool (mem (set_prod g_s15_16 (SET g_s36_37)) (|-->| g_s15_16 g_s2_3)))
(define-fun lh_3 () Bool (mem (set_prod g_s15_16 (SET e0)) (|-->| g_s15_16 NAT)))
(define-fun lh_4 () Bool (mem (set_prod (set_prod g_s15_16 g_s17_18) (SET FALSE)) (|-->| (set_prod g_s15_16 g_s17_18) BOOL)))
(define-fun lh_5 () Bool (mem (set_prod g_s15_16 (SET e0)) (|-->| g_s15_16 g_s19_20)))
(define-fun lh_6 () Bool (mem (set_prod g_s15_16 (SET FALSE)) (|-->| g_s15_16 BOOL)))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= empty (binary_inter g_s72_73 (image (inverse (set_prod g_s15_16 (SET FALSE))) (SET TRUE)))))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= empty (range_restriction (domain_restriction g_s72_73 (set_prod g_s15_16 (SET g_s42_43))) g_s41_42)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= empty (range_restriction (domain_restriction g_s72_73 (set_prod g_s15_16 (SET g_s36_37))) g_s35_36)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (set_prod g_s72_73 (SET empty)) e465))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (set_prod g_s72_73 (SET e0)) (range_restriction (domain_restriction g_s72_73 (set_prod g_s15_16 (SET e0))) NAT)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (set_prod g_s72_73 (SET e0)) (range_restriction (domain_restriction g_s72_73 (set_prod g_s15_16 (SET e0))) g_s20_21)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s92_94 NAT))
(define-fun lh_2 () Bool (mem g_s365_425 g_s195_254))
(define-fun lh_3 () Bool (mem g_s180_240 g_s152_211))
(define-fun lh_4 () Bool (mem g_s159_219 g_s152_211))
(define-fun lh_5 () Bool (mem g_s397$2_466 (|-->| g_s15_16 g_s4_5)))
(define-fun lh_6 () Bool (mem g_s398$2_467 (|-->| g_s15_16 g_s2_3)))
(define-fun lh_7 () Bool (mem g_s399$2_468 (|-->| g_s15_16 NAT)))
(define-fun lh_8 () Bool (mem g_s401$2_469 (|-->| (set_prod g_s15_16 g_s17_18) BOOL)))
(define-fun lh_9 () Bool (mem g_s402$2_470 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_10 () Bool (mem g_s403$2_471 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_11 () Bool (mem g_s404$2_472 (|-->| g_s15_16 BOOL)))
(define-fun lh_12 () Bool (mem g_s93_96 NAT))
(define-fun lh_13 () Bool (mem g_s366_426 g_s195_254))
(define-fun lh_14 () Bool (mem g_s397$3_473 (|-->| g_s15_16 g_s4_5)))
(define-fun lh_15 () Bool (mem g_s398$3_474 (|-->| g_s15_16 g_s2_3)))
(define-fun lh_16 () Bool (mem g_s399$3_475 (|-->| g_s15_16 NAT)))
(define-fun lh_17 () Bool (mem g_s401$3_476 (|-->| (set_prod g_s15_16 g_s17_18) BOOL)))
(define-fun lh_18 () Bool (mem g_s402$3_477 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_19 () Bool (mem g_s403$3_478 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_20 () Bool (mem g_s404$3_479 (|-->| g_s15_16 BOOL)))
(define-fun lh_21 () Bool (mem g_s94_98 NAT))
(define-fun lh_22 () Bool (mem g_s367_427 g_s195_254))
(define-fun lh_23 () Bool (mem g_s397$4_480 (|-->| g_s15_16 g_s4_5)))
(define-fun lh_24 () Bool (mem g_s398$4_481 (|-->| g_s15_16 g_s2_3)))
(define-fun lh_25 () Bool (mem g_s399$4_482 (|-->| g_s15_16 NAT)))
(define-fun lh_26 () Bool (mem g_s401$4_483 (|-->| (set_prod g_s15_16 g_s17_18) BOOL)))
(define-fun lh_27 () Bool (mem g_s402$4_484 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_28 () Bool (mem g_s403$4_485 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_29 () Bool (mem g_s404$4_486 (|-->| g_s15_16 BOOL)))
(define-fun lh_30 () Bool (mem g_s95_100 NAT))
(define-fun lh_31 () Bool (mem g_s368_428 g_s195_254))
(define-fun lh_32 () Bool (mem g_s397$5_487 (|-->| g_s15_16 g_s4_5)))
(define-fun lh_33 () Bool (mem g_s398$5_488 (|-->| g_s15_16 g_s2_3)))
(define-fun lh_34 () Bool (mem g_s399$5_489 (|-->| g_s15_16 NAT)))
(define-fun lh_35 () Bool (mem g_s401$5_490 (|-->| (set_prod g_s15_16 g_s17_18) BOOL)))
(define-fun lh_36 () Bool (mem g_s402$5_491 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_37 () Bool (mem g_s403$5_492 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_38 () Bool (mem g_s404$5_493 (|-->| g_s15_16 BOOL)))
(define-fun lh_39 () Bool (mem g_s96_102 NAT))
(define-fun lh_40 () Bool (mem g_s369_429 g_s195_254))
(define-fun lh_41 () Bool (mem g_s397$6_494 (|-->| g_s15_16 g_s4_5)))
(define-fun lh_42 () Bool (mem g_s398$6_495 (|-->| g_s15_16 g_s2_3)))
(define-fun lh_43 () Bool (mem g_s399$6_496 (|-->| g_s15_16 NAT)))
(define-fun lh_44 () Bool (mem g_s401$6_497 (|-->| (set_prod g_s15_16 g_s17_18) BOOL)))
(define-fun lh_45 () Bool (mem g_s402$6_498 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_46 () Bool (mem g_s403$6_499 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_47 () Bool (mem g_s404$6_500 (|-->| g_s15_16 BOOL)))
(define-fun lh_48 () Bool (mem g_s97_104 NAT))
(define-fun lh_49 () Bool (mem g_s370_430 g_s195_254))
(define-fun lh_50 () Bool (mem g_s397$7_501 (|-->| g_s15_16 g_s4_5)))
(define-fun lh_51 () Bool (mem g_s398$7_502 (|-->| g_s15_16 g_s2_3)))
(define-fun lh_52 () Bool (mem g_s399$7_503 (|-->| g_s15_16 NAT)))
(define-fun lh_53 () Bool (mem g_s401$7_504 (|-->| (set_prod g_s15_16 g_s17_18) BOOL)))
(define-fun lh_54 () Bool (mem g_s402$7_505 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_55 () Bool (mem g_s403$7_506 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_56 () Bool (mem g_s404$7_507 (|-->| g_s15_16 BOOL)))
(define-fun lh_57 () Bool (mem g_s98_106 NAT))
(define-fun lh_58 () Bool (mem g_s371_431 g_s195_254))
(define-fun lh_59 () Bool (mem g_s397$8_508 (|-->| g_s15_16 g_s4_5)))
(define-fun lh_60 () Bool (mem g_s398$8_509 (|-->| g_s15_16 g_s2_3)))
(define-fun lh_61 () Bool (mem g_s399$8_510 (|-->| g_s15_16 NAT)))
(define-fun lh_62 () Bool (mem g_s401$8_511 (|-->| (set_prod g_s15_16 g_s17_18) BOOL)))
(define-fun lh_63 () Bool (mem g_s402$8_512 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_64 () Bool (mem g_s403$8_513 (|-->| g_s15_16 g_s19_20)))
(define-fun lh_65 () Bool (mem g_s404$8_514 (|-->| g_s15_16 BOOL)))
; PO 1 in group 1
(push 1)
(assert (not (mem g_s92_94 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s93_96 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (mem g_s94_98 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29) (mem g_s95_100 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38) (mem g_s96_102 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem g_s97_104 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56) (mem g_s98_106 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65) (mem e515 (|-->| g_s72_73 (POW g_s83_84))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65) (mem (range_restriction (domain_restriction g_s72_73 g_s398$8_509) g_s35_36) (|+->| g_s72_73 g_s35_36)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65) (mem (range_restriction (domain_restriction g_s72_73 g_s399$8_510) NAT) (|-->| g_s72_73 NAT)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65) (mem (range_restriction (domain_restriction g_s72_73 g_s403$8_513) g_s20_21) (|+->| g_s72_73 g_s20_21)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65) (mem (range_restriction (domain_restriction g_s72_73 g_s402$8_512) g_s20_21) (|+->| g_s72_73 g_s20_21)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65) (mem (range_restriction (domain_restriction g_s72_73 g_s397$8_508) g_s41_42) (|+->| g_s72_73 g_s41_42)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65) (subset (binary_inter g_s72_73 (image (inverse g_s404$8_514) (SET TRUE))) g_s72_73))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s410$1_517 g_s410_516))
(assert (= g_s411$1_519 g_s411_518))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem (apply g_s397$1_457 g_s412_520) g_s4_5))
(define-fun lh_4 () Bool (mem g_s412_520 (dom g_s390_450)))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s397$1_457 g_s412_520) g_s41_42)) (bool (mem g_s412_520 (dom g_s390_450)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s397$1_457 g_s412_520) (apply g_s390_450 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s410$1_517 g_s410_516))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem (apply g_s397$1_457 g_s412_520) g_s4_5))
; PO 1 in group 3
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s397$1_457 g_s412_520) g_s41_42)) (bool (mem g_s412_520 (dom g_s390_450)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_519 g_s411_518))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem g_s412_520 (dom g_s390_450)))
; PO 1 in group 4
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s397$1_457 g_s412_520) (apply g_s390_450 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_522 g_s411_521))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem g_s416_523 g_s4_5))
(define-fun lh_4 () Bool (mem g_s416_523 g_s41_42))
; PO 1 in group 5
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (= (apply g_s397$1_457 g_s412_520) g_s416_523)) (bool (mem (mapplet g_s412_520 g_s416_523) g_s390_450))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s410$1_517 g_s410_516))
(assert (= g_s411$1_525 g_s411_524))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem (apply g_s398$1_458 g_s412_520) g_s2_3))
(define-fun lh_4 () Bool (mem g_s412_520 (dom g_s391_451)))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s398$1_458 g_s412_520) g_s35_36)) (bool (mem g_s412_520 (dom g_s391_451)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s398$1_458 g_s412_520) (apply g_s391_451 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s410$1_517 g_s410_516))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem (apply g_s398$1_458 g_s412_520) g_s2_3))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s398$1_458 g_s412_520) g_s35_36)) (bool (mem g_s412_520 (dom g_s391_451)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_525 g_s411_524))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem g_s412_520 (dom g_s391_451)))
; PO 1 in group 8
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s398$1_458 g_s412_520) (apply g_s391_451 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_522 g_s411_521))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem g_s421_526 g_s2_3))
(define-fun lh_4 () Bool (mem g_s421_526 g_s35_36))
; PO 1 in group 9
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (= (apply g_s398$1_458 g_s412_520) g_s421_526)) (bool (mem (mapplet g_s412_520 g_s421_526) g_s391_451))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_528 g_s411_527))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s392_452 g_s412_520) NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (apply g_s399$1_459 g_s412_520) (apply g_s392_452 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_522 g_s411_521))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem g_s424_529 g_s17_18))
(define-fun lh_4 () Bool (mem g_s424_529 g_s83_84))
; PO 1 in group 11
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s401$1_464 (mapplet g_s412_520 g_s424_529)) (bool (mem g_s424_529 (apply g_s393_453 g_s412_520)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s410$1_517 g_s410_516))
(assert (= g_s411$1_528 g_s411_527))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem (apply g_s402$1_461 g_s412_520) g_s19_20))
(define-fun lh_4 () Bool (mem g_s412_520 (dom g_s394_454)))
; PO 1 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s402$1_461 g_s412_520) g_s19_20))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s394_454 g_s412_520) g_s19_20))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s402$1_461 g_s412_520) g_s20_21)) (bool (mem g_s412_520 (dom g_s394_454)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s402$1_461 g_s412_520) (apply g_s394_454 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s410$1_517 g_s410_516))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem (apply g_s402$1_461 g_s412_520) g_s19_20))
; PO 1 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s402$1_461 g_s412_520) g_s19_20))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s402$1_461 g_s412_520) g_s20_21)) (bool (mem g_s412_520 (dom g_s394_454)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_528 g_s411_527))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem g_s412_520 (dom g_s394_454)))
; PO 1 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (apply g_s394_454 g_s412_520) g_s19_20))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s402$1_461 g_s412_520) (apply g_s394_454 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s410$1_517 g_s410_516))
(assert (= g_s411$1_528 g_s411_527))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem (apply g_s403$1_462 g_s412_520) g_s19_20))
(define-fun lh_4 () Bool (mem g_s412_520 (dom g_s395_455)))
; PO 1 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s403$1_462 g_s412_520) g_s19_20))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s395_455 g_s412_520) g_s19_20))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s403$1_462 g_s412_520) g_s20_21)) (bool (mem g_s412_520 (dom g_s395_455)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s403$1_462 g_s412_520) (apply g_s395_455 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s410$1_517 g_s410_516))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem (apply g_s403$1_462 g_s412_520) g_s19_20))
; PO 1 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s403$1_462 g_s412_520) g_s19_20))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s403$1_462 g_s412_520) g_s20_21)) (bool (mem g_s412_520 (dom g_s395_455)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_528 g_s411_527))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
(define-fun lh_3 () Bool (mem g_s412_520 (dom g_s395_455)))
; PO 1 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (apply g_s395_455 g_s412_520) g_s19_20))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s403$1_462 g_s412_520) (apply g_s395_455 g_s412_520)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s411$1_522 g_s411_521))
(define-fun lh_1 () Bool (mem g_s412_520 g_s15_16))
(define-fun lh_2 () Bool (mem g_s412_520 g_s72_73))
; PO 1 in group 18
(assert (not (=> (and lh_1 lh_2) (= (apply g_s404$1_463 g_s412_520) (bool (mem g_s412_520 g_s396_456))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 19
(push 1)
(assert (not (mem g_s412_520 (dom g_s397$1_457))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 19
(push 1)
(assert (not (mem g_s397$1_457 (|+->| (dom g_s397$1_457) (ran g_s397$1_457)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 20
(push 1)
(assert (not (mem g_s412_520 (dom g_s397$1_457))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 20
(push 1)
(assert (not (mem g_s397$1_457 (|+->| (dom g_s397$1_457) (ran g_s397$1_457)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
(assert (mem g_s412_520 (dom g_s390_450)))
; PO 1 in group 21
(push 1)
(assert (not (mem g_s412_520 (dom g_s397$1_457))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 21
(push 1)
(assert (not (mem g_s397$1_457 (|+->| (dom g_s397$1_457) (ran g_s397$1_457)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
(assert (mem g_s416_523 g_s4_5))
(assert (mem g_s416_523 g_s41_42))
; PO 1 in group 22
(push 1)
(assert (not (mem g_s412_520 (dom g_s397$1_457))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 22
(push 1)
(assert (not (mem g_s397$1_457 (|+->| (dom g_s397$1_457) (ran g_s397$1_457)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 23
(push 1)
(assert (not (mem g_s398$1_458 (|+->| (dom g_s398$1_458) (ran g_s398$1_458)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 23
(push 1)
(assert (not (mem g_s412_520 (dom g_s398$1_458))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 24 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 24
(push 1)
(assert (not (mem g_s398$1_458 (|+->| (dom g_s398$1_458) (ran g_s398$1_458)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 24
(push 1)
(assert (not (mem g_s412_520 (dom g_s398$1_458))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 25 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
(assert (mem g_s412_520 (dom g_s391_451)))
; PO 1 in group 25
(push 1)
(assert (not (mem g_s398$1_458 (|+->| (dom g_s398$1_458) (ran g_s398$1_458)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 25
(push 1)
(assert (not (mem g_s412_520 (dom g_s398$1_458))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 26 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 26
(push 1)
(assert (not (mem g_s399$1_459 (|+->| (dom g_s399$1_459) (ran g_s399$1_459)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 26
(push 1)
(assert (not (mem g_s412_520 (dom g_s399$1_459))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 27 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
(assert (mem g_s421_526 g_s2_3))
(assert (mem g_s421_526 g_s35_36))
; PO 1 in group 27
(push 1)
(assert (not (mem g_s398$1_458 (|+->| (dom g_s398$1_458) (ran g_s398$1_458)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 27
(push 1)
(assert (not (mem g_s412_520 (dom g_s398$1_458))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 28 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
(assert (mem g_s424_529 g_s17_18))
(assert (mem g_s424_529 g_s83_84))
; PO 1 in group 28
(push 1)
(assert (not (mem g_s401$1_464 (|+->| (dom g_s401$1_464) (ran g_s401$1_464)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 28
(push 1)
(assert (not (mem (mapplet g_s412_520 g_s424_529) (dom g_s401$1_464))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 29 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 29
(push 1)
(assert (not (mem g_s402$1_461 (|+->| (dom g_s402$1_461) (ran g_s402$1_461)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 29
(push 1)
(assert (not (mem g_s412_520 (dom g_s402$1_461))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 30 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 30
(push 1)
(assert (not (mem g_s402$1_461 (|+->| (dom g_s402$1_461) (ran g_s402$1_461)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 30
(push 1)
(assert (not (mem g_s412_520 (dom g_s402$1_461))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 31 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
(assert (mem g_s412_520 (dom g_s394_454)))
; PO 1 in group 31
(push 1)
(assert (not (mem g_s402$1_461 (|+->| (dom g_s402$1_461) (ran g_s402$1_461)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 31
(push 1)
(assert (not (mem g_s412_520 (dom g_s402$1_461))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 32 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 32
(push 1)
(assert (not (mem g_s403$1_462 (|+->| (dom g_s403$1_462) (ran g_s403$1_462)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 32
(push 1)
(assert (not (mem g_s412_520 (dom g_s403$1_462))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 33 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 33
(push 1)
(assert (not (mem g_s403$1_462 (|+->| (dom g_s403$1_462) (ran g_s403$1_462)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 33
(push 1)
(assert (not (mem g_s412_520 (dom g_s403$1_462))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 34 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
(assert (mem g_s412_520 (dom g_s395_455)))
; PO 1 in group 34
(push 1)
(assert (not (mem g_s403$1_462 (|+->| (dom g_s403$1_462) (ran g_s403$1_462)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 34
(push 1)
(assert (not (mem g_s412_520 (dom g_s403$1_462))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 35 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_520 g_s15_16))
(assert (mem g_s412_520 g_s72_73))
; PO 1 in group 35
(push 1)
(assert (not (mem g_s404$1_463 (|+->| (dom g_s404$1_463) (ran g_s404$1_463)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 35
(push 1)
(assert (not (mem g_s412_520 (dom g_s404$1_463))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)