(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e182 () U)
(declare-fun e143 () U)
(declare-fun e0 () U)
(declare-fun e90 () U)
(declare-fun e221 () U)
(declare-fun e186 () U)
(declare-fun e183 () U)
(declare-fun e233 () U)
(declare-fun e109 () U)
(declare-fun e191 () U)
(declare-fun e178 () U)
(declare-fun e152 () U)
(declare-fun e225 () U)
(declare-fun e123 () U)
(declare-fun e172 () U)
(declare-fun e216 () U)
(declare-fun e189 () U)
(declare-fun e8 () U)
(declare-fun e214 () U)
(declare-fun e220 () U)
(declare-fun e112 () U)
(declare-fun e23 () U)
(declare-fun e181 () U)
(declare-fun e7 () U)
(declare-fun e137 () U)
(declare-fun e85 () U)
(declare-fun e222 () U)
(declare-fun e226 () U)
(declare-fun e115 () U)
(declare-fun e217 () U)
(declare-fun e215 () U)
(declare-fun e174 () U)
(declare-fun e104 () U)
(declare-fun e228 () U)
(declare-fun e218 () U)
(declare-fun e219 () U)
(declare-fun e184 () U)
(declare-fun e168 () U)
(declare-fun e230 () U)
(declare-fun e231 () U)
(declare-fun e166 () U)
(declare-fun e229 () U)
(declare-fun e164 () U)
(declare-fun e235 () U)
(declare-fun e119 () U)
(declare-fun e162 () U)
(declare-fun e234 () U)
(declare-fun e132 () U)
(declare-fun e126 () U)
(declare-fun e144 () U)
(declare-fun e156 () U)
(declare-fun e142 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_12 () U)
(declare-fun g_s100_107 () U)
(declare-fun g_s101_108 () U)
(declare-fun g_s102_110 () U)
(declare-fun g_s103_111 () U)
(declare-fun g_s104_113 () U)
(declare-fun g_s105_114 () U)
(declare-fun g_s106_116 () U)
(declare-fun g_s107_117 () U)
(declare-fun g_s108_118 () U)
(declare-fun g_s109_120 () U)
(declare-fun g_s11_15 () U)
(declare-fun g_s110_121 () U)
(declare-fun g_s111_122 () U)
(declare-fun g_s112_124 () U)
(declare-fun g_s113_125 () U)
(declare-fun g_s114_127 () U)
(declare-fun g_s115_128 () U)
(declare-fun g_s116_129 () U)
(declare-fun g_s117_130 () U)
(declare-fun g_s118_131 () U)
(declare-fun g_s119_133 () U)
(declare-fun g_s12_14 () U)
(declare-fun g_s120_134 () U)
(declare-fun g_s121_135 () U)
(declare-fun g_s122_136 () U)
(declare-fun g_s123_138 () U)
(declare-fun g_s124_139 () U)
(declare-fun g_s125_140 () U)
(declare-fun g_s126_141 () U)
(declare-fun g_s127_145 () U)
(declare-fun g_s128_146 () U)
(declare-fun g_s129_147 () U)
(declare-fun g_s13_17 () U)
(declare-fun g_s130_148 () U)
(declare-fun g_s131_149 () U)
(declare-fun g_s132_150 () U)
(declare-fun g_s133_151 () U)
(declare-fun g_s134_153 () U)
(declare-fun g_s135_154 () U)
(declare-fun g_s136_155 () U)
(declare-fun g_s137_157 () U)
(declare-fun g_s138_158 () U)
(declare-fun g_s139_159 () U)
(declare-fun g_s14_16 () U)
(declare-fun g_s140_160 () U)
(declare-fun g_s141_161 () U)
(declare-fun g_s142_163 () U)
(declare-fun g_s143_165 () U)
(declare-fun g_s144_167 () U)
(declare-fun g_s145_169 () U)
(declare-fun g_s146_170 () U)
(declare-fun g_s147_171 () U)
(declare-fun g_s148_173 () U)
(declare-fun g_s149_175 () U)
(declare-fun g_s15_18 () U)
(declare-fun g_s150_176 () U)
(declare-fun g_s151_177 () U)
(declare-fun g_s152_179 () U)
(declare-fun g_s153_180 () U)
(declare-fun g_s154_185 () U)
(declare-fun g_s155_187 () U)
(declare-fun g_s156_188 () U)
(declare-fun g_s157_190 () U)
(declare-fun g_s158_192 () U)
(declare-fun g_s159_193 () U)
(declare-fun g_s16_20 () U)
(declare-fun g_s160_194 () U)
(declare-fun g_s161_195 () U)
(declare-fun g_s162_196 () U)
(declare-fun g_s163_197 () U)
(declare-fun g_s164_198 () U)
(declare-fun g_s165_199 () U)
(declare-fun g_s166_200 () U)
(declare-fun g_s167_201 () U)
(declare-fun g_s168_202 () U)
(declare-fun g_s169_203 () U)
(declare-fun g_s17_19 () U)
(declare-fun g_s170_204 () U)
(declare-fun g_s171_205 () U)
(declare-fun g_s172_206 () U)
(declare-fun g_s173_207 () U)
(declare-fun g_s174_208 () U)
(declare-fun g_s175_209 () U)
(declare-fun g_s176_210 () U)
(declare-fun g_s177_211 () U)
(declare-fun g_s178_212 () U)
(declare-fun g_s179_213 () U)
(declare-fun g_s18_21 () U)
(declare-fun g_s180_223 () U)
(declare-fun g_s181_224 () U)
(declare-fun g_s182_227 () U)
(declare-fun g_s183_232 () U)
(declare-fun g_s184_236 () U)
(declare-fun g_s185_237 () U)
(declare-fun g_s186_238 () U)
(declare-fun g_s187_239 () U)
(declare-fun g_s188_240 () U)
(declare-fun g_s189_241 () U)
(declare-fun g_s19_22 () U)
(declare-fun g_s190_242 () U)
(declare-fun g_s191_243 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_25 () U)
(declare-fun g_s21_24 () U)
(declare-fun g_s22_26 () U)
(declare-fun g_s23_27 () U)
(declare-fun g_s24_28 () U)
(declare-fun g_s25_29 () U)
(declare-fun g_s26_30 () U)
(declare-fun g_s27_31 () U)
(declare-fun g_s28_32 () U)
(declare-fun g_s29_33 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_34 () U)
(declare-fun g_s31_35 () U)
(declare-fun g_s32_36 () U)
(declare-fun g_s33_37 () U)
(declare-fun g_s34_38 () U)
(declare-fun g_s35_39 () U)
(declare-fun g_s36_40 () U)
(declare-fun g_s37_41 () U)
(declare-fun g_s38_42 () U)
(declare-fun g_s39_43 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_44 () U)
(declare-fun g_s41_45 () U)
(declare-fun g_s42_46 () U)
(declare-fun g_s43_47 () U)
(declare-fun g_s44_48 () U)
(declare-fun g_s45_49 () U)
(declare-fun g_s46_50 () U)
(declare-fun g_s47_51 () U)
(declare-fun g_s48_52 () U)
(declare-fun g_s49_53 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_54 () U)
(declare-fun g_s51_55 () U)
(declare-fun g_s52_56 () U)
(declare-fun g_s53_57 () U)
(declare-fun g_s54_58 () U)
(declare-fun g_s55_59 () U)
(declare-fun g_s56_60 () U)
(declare-fun g_s57_61 () U)
(declare-fun g_s58_62 () U)
(declare-fun g_s59_63 () U)
(declare-fun g_s6_9 () U)
(declare-fun g_s60_64 () U)
(declare-fun g_s61_65 () U)
(declare-fun g_s62_66 () U)
(declare-fun g_s63_67 () U)
(declare-fun g_s64_68 () U)
(declare-fun g_s65_69 () U)
(declare-fun g_s66_70 () U)
(declare-fun g_s67_71 () U)
(declare-fun g_s68_72 () U)
(declare-fun g_s69_73 () U)
(declare-fun g_s7_10 () U)
(declare-fun g_s70_74 () U)
(declare-fun g_s71_75 () U)
(declare-fun g_s72_76 () U)
(declare-fun g_s73_77 () U)
(declare-fun g_s74_78 () U)
(declare-fun g_s75_79 () U)
(declare-fun g_s76_80 () U)
(declare-fun g_s77_81 () U)
(declare-fun g_s78_82 () U)
(declare-fun g_s79_83 () U)
(declare-fun g_s8_11 () U)
(declare-fun g_s80_84 () U)
(declare-fun g_s81_86 () U)
(declare-fun g_s82_87 () U)
(declare-fun g_s83_88 () U)
(declare-fun g_s84_89 () U)
(declare-fun g_s85_91 () U)
(declare-fun g_s86_92 () U)
(declare-fun g_s87_93 () U)
(declare-fun g_s88_94 () U)
(declare-fun g_s89_95 () U)
(declare-fun g_s9_13 () U)
(declare-fun g_s90_96 () U)
(declare-fun g_s91_97 () U)
(declare-fun g_s92_98 () U)
(declare-fun g_s93_99 () U)
(declare-fun g_s94_100 () U)
(declare-fun g_s95_101 () U)
(declare-fun g_s96_102 () U)
(declare-fun g_s97_103 () U)
(declare-fun g_s98_105 () U)
(declare-fun g_s99_106 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (mem g_s0_1 NAT1) (= g_s0_1 MaxInt) (mem g_s1_2 NAT1) (mem g_s2_3 NAT1) (mem g_s3_4 NAT1) (mem g_s4_5 NAT1) (mem g_s5_6 NAT1) (= g_s4_5 e7) (= g_s5_6 e8)))
(define-fun |def_seext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool (and (|<i| g_s6_9 MaxInt) (|<i| g_s7_10 MaxInt) (|<i| g_s8_11 MaxInt) (|<=i| g_s9_13 g_s10_12) (|<=i| g_s11_15 g_s12_14) (|<=i| g_s13_17 g_s14_16) (|<=i| g_s15_18 g_s14_16) (|<i| g_s16_20 g_s17_19) (not (mem g_s18_21 (interval g_s16_20 g_s17_19))) (= g_s19_22 MaxInt) (= g_s20_25 (|*i| g_s21_24 e23)) (mem g_s6_9 NAT) (mem g_s7_10 NAT) (mem g_s8_11 NAT) (mem g_s22_26 NAT) (mem g_s23_27 NAT) (mem g_s24_28 NAT) (mem g_s25_29 NAT) (mem g_s26_30 NAT) (mem g_s27_31 NAT) (mem g_s28_32 NAT) (mem g_s29_33 NAT) (mem g_s30_34 NAT) (mem g_s31_35 NAT) (mem g_s32_36 NAT) (mem g_s12_14 NAT) (mem g_s33_37 NAT) (mem g_s34_38 NAT) (mem g_s35_39 NAT) (mem g_s36_40 NAT) (mem g_s37_41 NAT) (mem g_s38_42 NAT) (mem g_s39_43 NAT) (mem g_s40_44 NAT1) (mem g_s41_45 NAT) (mem g_s11_15 NAT) (mem g_s42_46 NAT) (mem g_s43_47 NAT) (mem g_s44_48 NAT) (mem g_s45_49 NAT) (mem g_s46_50 NAT) (mem g_s47_51 NAT) (mem g_s48_52 NAT) (mem g_s49_53 NAT) (mem g_s50_54 NAT) (mem g_s51_55 NAT) (mem g_s52_56 NAT) (mem g_s53_57 NAT) (mem g_s10_12 NAT) (mem g_s9_13 NAT) (mem g_s54_58 NAT) (mem g_s55_59 NAT) (mem g_s56_60 NAT) (mem g_s57_61 NAT) (mem g_s58_62 NAT) (mem g_s59_63 NAT) (mem g_s60_64 NAT) (mem g_s61_65 NAT) (mem g_s62_66 NAT) (mem g_s63_67 NAT) (mem g_s64_68 NAT) (mem g_s65_69 NAT) (mem g_s66_70 NAT) (mem g_s67_71 NAT) (mem g_s68_72 NAT) (mem g_s69_73 NAT) (mem g_s70_74 NAT1) (mem g_s71_75 NAT) (mem g_s72_76 NAT) (mem g_s73_77 NAT) (mem g_s74_78 NAT) (mem g_s75_79 NAT) (mem g_s14_16 NAT) (mem g_s13_17 NAT) (mem g_s15_18 NAT) (mem g_s20_25 NAT) (mem g_s21_24 NAT) (mem g_s76_80 NAT) (mem g_s19_22 NAT) (mem g_s77_81 NAT) (mem g_s78_82 NAT) (mem g_s16_20 INT) (mem g_s17_19 NAT) (mem g_s18_21 INT)))
(define-fun |def_abs| () Bool true)
(define-fun |def_inv| () Bool true)
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool (and (= g_s23_27 g_s79_83) (= g_s24_28 g_s80_84) (= g_s28_32 e85) (= g_s29_33 g_s81_86) (= g_s30_34 g_s82_87) (= g_s31_35 g_s83_88) (= g_s32_36 g_s84_89) (= g_s12_14 g_s11_15) (= g_s38_42 e90) (= g_s40_44 e90) (= g_s43_47 g_s85_91) (= g_s44_48 g_s86_92) (= g_s45_49 g_s87_93) (= g_s46_50 g_s86_92) (= g_s47_51 g_s86_92) (= g_s48_52 g_s86_92) (= g_s49_53 g_s86_92) (= g_s50_54 g_s88_94) (= g_s51_55 g_s89_95) (= g_s52_56 g_s90_96) (= g_s54_58 g_s91_97) (= g_s55_59 g_s92_98) (= g_s58_62 g_s93_99) (= g_s59_63 g_s93_99) (= g_s60_64 g_s93_99) (= g_s61_65 g_s93_99) (= g_s64_68 g_s94_100) (= g_s63_67 g_s95_101) (= g_s67_71 g_s96_102) (= g_s68_72 g_s97_103) (= g_s69_73 e104) (= g_s70_74 g_s98_105) (= g_s56_60 g_s99_106) (= g_s20_25 (|*i| g_s21_24 e23))))
(define-fun |def_imprp| () Bool (and (mem g_s100_107 INTEGER) (= g_s100_107 e0) (mem g_s101_108 INTEGER) (= g_s101_108 e109) (mem g_s102_110 INTEGER) (= g_s102_110 e90) (mem g_s103_111 INTEGER) (= g_s103_111 e112) (mem g_s104_113 INTEGER) (= g_s104_113 e90) (mem g_s105_114 INTEGER) (= g_s105_114 e115) (mem g_s106_116 INTEGER) (= g_s106_116 e0) (mem g_s96_102 INTEGER) (= g_s96_102 e104) (mem g_s107_117 INTEGER) (= g_s107_117 e0) (mem g_s108_118 INTEGER) (= g_s108_118 e119) (mem g_s109_120 INTEGER) (= g_s109_120 e0) (mem g_s110_121 INTEGER) (= g_s110_121 e0) (mem g_s111_122 INTEGER) (= g_s111_122 e123) (mem g_s112_124 INTEGER) (= g_s112_124 e0) (mem g_s113_125 INTEGER) (= g_s113_125 e126) (mem g_s114_127 INTEGER) (= g_s114_127 e0) (mem g_s77_81 INTEGER) (= g_s77_81 e0) (mem g_s78_82 INTEGER) (= g_s78_82 e104) (mem g_s115_128 INTEGER) (= g_s115_128 e0) (mem g_s87_93 INTEGER) (= g_s87_93 e119) (mem g_s116_129 INTEGER) (= g_s116_129 e0) (mem g_s117_130 INTEGER) (= g_s117_130 e90) (mem g_s118_131 INTEGER) (= g_s118_131 e0) (mem g_s88_94 INTEGER) (= g_s88_94 e132) (mem g_s119_133 INTEGER) (= g_s119_133 e0) (mem g_s90_96 INTEGER) (= g_s90_96 e132) (mem g_s120_134 INTEGER) (= g_s120_134 e0) (mem g_s121_135 INTEGER) (= g_s121_135 e0) (mem g_s122_136 INTEGER) (= g_s122_136 e137) (mem g_s123_138 INTEGER) (= g_s123_138 e0) (mem g_s124_139 INTEGER) (= g_s124_139 e0) (mem g_s125_140 INTEGER) (= g_s125_140 e90) (mem g_s126_141 INTEGER) (= g_s126_141 e0) (mem g_s76_80 INTEGER) (= g_s76_80 e0) (mem g_s19_22 INTEGER) (= g_s19_22 e142) (mem g_s16_20 INTEGER) (= g_s16_20 e143) (mem g_s17_19 INTEGER) (= g_s17_19 e144) (mem g_s127_145 INTEGER) (= g_s127_145 e90) (mem g_s128_146 INTEGER) (= g_s128_146 e0) (mem g_s129_147 INTEGER) (= g_s129_147 e104) (mem g_s130_148 INTEGER) (= g_s130_148 e90) (mem g_s131_149 INTEGER) (= g_s131_149 e90) (mem g_s132_150 INTEGER) (= g_s132_150 e0) (mem g_s133_151 INTEGER) (= g_s133_151 e152) (mem g_s134_153 INTEGER) (= g_s134_153 e0) (mem g_s135_154 INTEGER) (= g_s135_154 e0) (mem g_s136_155 INTEGER) (= g_s136_155 e156) (mem g_s137_157 INTEGER) (= g_s137_157 e90) (mem g_s138_158 INTEGER) (= g_s138_158 e90) (mem g_s139_159 INTEGER) (= g_s139_159 e90) (mem g_s140_160 INTEGER) (= g_s140_160 e90) (mem g_s141_161 INTEGER) (= g_s141_161 e162) (mem g_s142_163 INTEGER) (= g_s142_163 e164) (mem g_s143_165 INTEGER) (= g_s143_165 e166) (mem g_s144_167 INTEGER) (= g_s144_167 e168) (mem g_s145_169 INTEGER) (= g_s145_169 e0) (mem g_s85_91 INTEGER) (= g_s85_91 e126) (mem g_s21_24 INTEGER) (= g_s21_24 e119) (mem g_s146_170 INTEGER) (= g_s146_170 e142) (mem g_s147_171 INTEGER) (= g_s147_171 e0) (mem g_s86_92 INTEGER) (= g_s86_92 e132) (mem g_s11_15 INTEGER) (= g_s11_15 e172) (mem g_s39_43 INTEGER) (= g_s39_43 e109) (mem g_s148_173 INTEGER) (= g_s148_173 e0) (mem g_s89_95 INTEGER) (= g_s89_95 e119) (mem g_s93_99 INTEGER) (= g_s93_99 e174) (mem g_s149_175 INTEGER) (= g_s149_175 e104) (mem g_s150_176 INTEGER) (= g_s150_176 e0) (mem g_s151_177 INTEGER) (= g_s151_177 e178) (mem g_s152_179 INTEGER) (= g_s152_179 e109) (mem g_s25_29 INTEGER) (= g_s25_29 e115) (mem g_s80_84 INTEGER) (= g_s80_84 e8) (mem g_s91_97 INTEGER) (= g_s91_97 e8) (mem g_s153_180 INTEGER) (= g_s153_180 e178) (mem g_s95_101 INTEGER) (= g_s95_101 e8) (mem g_s99_106 INTEGER) (= g_s99_106 e181) (mem g_s18_21 INTEGER) (= g_s18_21 e182) (mem g_s36_40 INTEGER) (= g_s36_40 e183) (mem g_s81_86 INTEGER) (= g_s81_86 e184) (mem g_s82_87 INTEGER) (= g_s82_87 e184) (mem g_s83_88 INTEGER) (= g_s83_88 e184) (mem g_s84_89 INTEGER) (= g_s84_89 e184) (mem g_s37_41 INTEGER) (= g_s37_41 e183) (mem g_s154_185 INTEGER) (= g_s154_185 e186) (mem g_s155_187 INTEGER) (= g_s155_187 e123) (mem g_s156_188 INTEGER) (= g_s156_188 e189) (mem g_s157_190 INTEGER) (= g_s157_190 e0) (mem g_s92_98 INTEGER) (= g_s92_98 e191) (mem g_s158_192 INTEGER) (= g_s158_192 e0) (mem g_s159_193 INTEGER) (= g_s159_193 e183) (mem g_s160_194 INTEGER) (= g_s160_194 e181) (mem g_s161_195 INTEGER) (= g_s161_195 e90) (mem g_s162_196 INTEGER) (= g_s162_196 e90) (mem g_s163_197 INTEGER) (= g_s163_197 e90) (mem g_s164_198 INTEGER) (= g_s164_198 e90) (mem g_s165_199 INTEGER) (= g_s165_199 e90) (mem g_s166_200 INTEGER) (= g_s166_200 e90) (mem g_s167_201 INTEGER) (= g_s167_201 e90) (mem g_s168_202 INTEGER) (= g_s168_202 e90) (mem g_s169_203 INTEGER) (= g_s169_203 e90) (mem g_s170_204 INTEGER) (= g_s170_204 e90) (mem g_s171_205 INTEGER) (= g_s171_205 e90) (mem g_s172_206 INTEGER) (= g_s172_206 e109) (mem g_s173_207 INTEGER) (= g_s173_207 e109) (mem g_s174_208 INTEGER) (= g_s174_208 e181) (mem g_s175_209 INTEGER) (= g_s175_209 e181) (mem g_s176_210 INTEGER) (= g_s176_210 e90) (mem g_s177_211 INTEGER) (= g_s177_211 e183) (mem g_s178_212 INTEGER) (= g_s178_212 e183) (mem g_s179_213 INTEGER) (= g_s179_213 e90) (mem g_s22_26 INTEGER) (= g_s22_26 e214) (mem g_s26_30 INTEGER) (= g_s26_30 e215) (mem g_s27_31 INTEGER) (= g_s27_31 e216) (mem g_s34_38 INTEGER) (= g_s34_38 e217) (mem g_s33_37 INTEGER) (= g_s33_37 e218) (mem g_s6_9 INTEGER) (= g_s6_9 e219) (mem g_s35_39 INTEGER) (= g_s35_39 e220) (mem g_s41_45 INTEGER) (= g_s41_45 e221) (mem g_s42_46 INTEGER) (= g_s42_46 e222) (mem g_s53_57 INTEGER) (= g_s53_57 e221) (mem g_s180_223 INTEGER) (= g_s180_223 e186) (mem g_s9_13 INTEGER) (= g_s9_13 e220) (mem g_s94_100 INTEGER) (= g_s94_100 e186) (mem g_s57_61 INTEGER) (= g_s57_61 e191) (mem g_s181_224 INTEGER) (= g_s181_224 e225) (mem g_s79_83 INTEGER) (= g_s79_83 e172) (mem g_s62_66 INTEGER) (= g_s62_66 e109) (mem g_s66_70 INTEGER) (= g_s66_70 e216) (mem g_s65_69 INTEGER) (= g_s65_69 e221) (mem g_s10_12 INTEGER) (= g_s10_12 e226) (mem g_s182_227 INTEGER) (= g_s182_227 e104) (mem g_s98_105 INTEGER) (= g_s98_105 e104) (mem g_s97_103 INTEGER) (= g_s97_103 e178) (mem g_s71_75 INTEGER) (= g_s71_75 e228) (mem g_s72_76 INTEGER) (= g_s72_76 e229) (mem g_s73_77 INTEGER) (= g_s73_77 e8) (mem g_s74_78 INTEGER) (= g_s74_78 e230) (mem g_s75_79 INTEGER) (= g_s75_79 e231) (mem g_s183_232 INTEGER) (= g_s183_232 e233) (mem g_s14_16 INTEGER) (= g_s14_16 e7) (mem g_s13_17 INTEGER) (= g_s13_17 e172) (mem g_s7_10 INTEGER) (= g_s7_10 e234) (mem g_s8_11 INTEGER) (= g_s8_11 e235) (mem g_s15_18 INTEGER) (= g_s15_18 e7) (mem g_s184_236 INTEGER) (= g_s184_236 e172) (mem g_s185_237 INTEGER) (= g_s185_237 e109) (mem g_s186_238 INTEGER) (= g_s186_238 e183) (mem g_s187_239 INTEGER) (= g_s187_239 e181) (mem g_s188_240 INTEGER) (= g_s188_240 e109) (mem g_s189_241 INTEGER) (= g_s189_241 e183) (mem g_s190_242 INTEGER) (= g_s190_242 e181) (mem g_s191_243 INTEGER) (= g_s191_243 e181)))
(define-fun |def_imext| () Bool true)
; PO group 0 
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_imprp|)
; PO 1 in group 0
(push 1)
(assert (not (not (mem g_s18_21 (interval g_s16_20 g_s17_19)))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (mem e90 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (mem e90 NAT1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (mem e85 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (mem e104 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (mem g_s90_96 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (mem g_s19_22 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (mem g_s76_80 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 0
(push 1)
(assert (not (mem g_s87_93 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 0
(push 1)
(assert (not (mem g_s88_94 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 0
(push 1)
(assert (not (mem g_s96_102 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 0
(push 1)
(assert (not (mem g_s18_21 INT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 0
(push 1)
(assert (not (mem g_s17_19 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 0
(push 1)
(assert (not (mem g_s16_20 INT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 0
(push 1)
(assert (not (mem g_s78_82 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 0
(push 1)
(assert (not (mem g_s77_81 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 0
(push 1)
(assert (not (mem g_s86_92 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 0
(push 1)
(assert (not (mem g_s85_91 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 0
(push 1)
(assert (not (mem g_s89_95 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 0
(push 1)
(assert (not (mem g_s21_24 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 21 in group 0
(push 1)
(assert (not (mem g_s97_103 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 22 in group 0
(push 1)
(assert (not (mem g_s82_87 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 23 in group 0
(push 1)
(assert (not (mem g_s81_86 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 24 in group 0
(push 1)
(assert (not (mem g_s22_26 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 25 in group 0
(push 1)
(assert (not (mem g_s79_83 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 26 in group 0
(push 1)
(assert (not (mem g_s25_29 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 27 in group 0
(push 1)
(assert (not (mem g_s26_30 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 28 in group 0
(push 1)
(assert (not (mem g_s15_18 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 29 in group 0
(push 1)
(assert (not (mem g_s27_31 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 30 in group 0
(push 1)
(assert (not (mem g_s14_16 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 31 in group 0
(push 1)
(assert (not (mem g_s13_17 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 32 in group 0
(push 1)
(assert (not (mem g_s34_38 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 33 in group 0
(push 1)
(assert (not (mem g_s33_37 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 34 in group 0
(push 1)
(assert (not (mem g_s6_9 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 35 in group 0
(push 1)
(assert (not (mem g_s7_10 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 36 in group 0
(push 1)
(assert (not (mem g_s8_11 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 37 in group 0
(push 1)
(assert (not (mem g_s35_39 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 38 in group 0
(push 1)
(assert (not (mem g_s91_97 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 39 in group 0
(push 1)
(assert (not (mem g_s92_98 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 40 in group 0
(push 1)
(assert (not (mem g_s39_43 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 41 in group 0
(push 1)
(assert (not (mem g_s99_106 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 42 in group 0
(push 1)
(assert (not (mem g_s37_41 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 43 in group 0
(push 1)
(assert (not (mem g_s36_40 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 44 in group 0
(push 1)
(assert (not (mem g_s41_45 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 45 in group 0
(push 1)
(assert (not (mem g_s11_15 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 46 in group 0
(push 1)
(assert (not (mem g_s73_77 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 47 in group 0
(push 1)
(assert (not (mem g_s71_75 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 48 in group 0
(push 1)
(assert (not (mem g_s72_76 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 49 in group 0
(push 1)
(assert (not (mem g_s74_78 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 50 in group 0
(push 1)
(assert (not (mem g_s75_79 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 51 in group 0
(push 1)
(assert (not (mem g_s42_46 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 52 in group 0
(push 1)
(assert (not (mem g_s53_57 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 53 in group 0
(push 1)
(assert (not (mem g_s10_12 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 54 in group 0
(push 1)
(assert (not (mem g_s9_13 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 55 in group 0
(push 1)
(assert (not (mem g_s62_66 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 56 in group 0
(push 1)
(assert (not (mem g_s94_100 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 57 in group 0
(push 1)
(assert (not (mem g_s57_61 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 58 in group 0
(push 1)
(assert (not (mem g_s80_84 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 59 in group 0
(push 1)
(assert (not (mem g_s93_99 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 60 in group 0
(push 1)
(assert (not (mem g_s95_101 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 61 in group 0
(push 1)
(assert (not (mem g_s66_70 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 62 in group 0
(push 1)
(assert (not (mem g_s65_69 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 63 in group 0
(push 1)
(assert (not (mem g_s84_89 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 64 in group 0
(push 1)
(assert (not (mem g_s83_88 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 65 in group 0
(push 1)
(assert (not (mem g_s98_105 NAT1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 66 in group 0
(push 1)
(assert (not (mem (|*i| g_s21_24 e23) NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 67 in group 0
(push 1)
(assert (not (= g_s19_22 MaxInt)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 68 in group 0
(push 1)
(assert (not (|<i| g_s16_20 g_s17_19)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 69 in group 0
(push 1)
(assert (not (|<i| g_s6_9 MaxInt)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 70 in group 0
(push 1)
(assert (not (|<i| g_s7_10 MaxInt)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 71 in group 0
(push 1)
(assert (not (|<i| g_s8_11 MaxInt)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 72 in group 0
(push 1)
(assert (not (|<=i| g_s15_18 g_s14_16)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 73 in group 0
(push 1)
(assert (not (|<=i| g_s13_17 g_s14_16)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 74 in group 0
(push 1)
(assert (not (|<=i| g_s11_15 g_s11_15)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 75 in group 0
(push 1)
(assert (not (|<=i| g_s9_13 g_s10_12)))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)