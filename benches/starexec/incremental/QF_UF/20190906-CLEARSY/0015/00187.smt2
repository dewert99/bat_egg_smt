(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_143 () U)
(declare-fun g_s143_144 () U)
(declare-fun g_s144_145 () U)
(declare-fun g_s145_146 () U)
(declare-fun g_s146_147 () U)
(declare-fun g_s147_148 () U)
(declare-fun g_s148_149 () U)
(declare-fun g_s149_150 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_151 () U)
(declare-fun g_s151_152 () U)
(declare-fun g_s152_153 () U)
(declare-fun g_s153_154 () U)
(declare-fun g_s154_155 () U)
(declare-fun g_s155_156 () U)
(declare-fun g_s156_157 () U)
(declare-fun g_s157_158 () U)
(declare-fun g_s158_159 () U)
(declare-fun g_s159_160 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_161 () U)
(declare-fun g_s161_162 () U)
(declare-fun g_s162_163 () U)
(declare-fun g_s163_164 () U)
(declare-fun g_s164_165 () U)
(declare-fun g_s165_166 () U)
(declare-fun g_s166_167 () U)
(declare-fun g_s167_168 () U)
(declare-fun g_s168_169 () U)
(declare-fun g_s169_170 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_171 () U)
(declare-fun g_s171_172 () U)
(declare-fun g_s172_173 () U)
(declare-fun g_s173_174 () U)
(declare-fun g_s174_175 () U)
(declare-fun g_s175_176 () U)
(declare-fun g_s176_177 () U)
(declare-fun g_s177_178 () U)
(declare-fun g_s178_179 () U)
(declare-fun g_s179_180 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_181 () U)
(declare-fun g_s181_182 () U)
(declare-fun g_s182_183 () U)
(declare-fun g_s183_184 () U)
(declare-fun g_s184_185 () U)
(declare-fun g_s185_186 () U)
(declare-fun g_s186_187 () U)
(declare-fun g_s187_188 () U)
(declare-fun g_s188_189 () U)
(declare-fun g_s189_190 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_191 () U)
(declare-fun g_s191_192 () U)
(declare-fun g_s192_193 () U)
(declare-fun g_s193_194 () U)
(declare-fun g_s194_195 () U)
(declare-fun g_s194$1_215 () U)
(declare-fun g_s195_196 () U)
(declare-fun g_s196_197 () U)
(declare-fun g_s197_198 () U)
(declare-fun g_s197$1_216 () U)
(declare-fun g_s198_199 () U)
(declare-fun g_s199_200 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_201 () U)
(declare-fun g_s200$1_217 () U)
(declare-fun g_s201_202 () U)
(declare-fun g_s201$1_218 () U)
(declare-fun g_s202_203 () U)
(declare-fun g_s203_204 () U)
(declare-fun g_s204_205 () U)
(declare-fun g_s205_206 () U)
(declare-fun g_s206_207 () U)
(declare-fun g_s207_208 () U)
(declare-fun g_s208_209 () U)
(declare-fun g_s209_210 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_211 () U)
(declare-fun g_s211_212 () U)
(declare-fun g_s212_213 () U)
(declare-fun g_s213_214 () U)
(declare-fun g_s217_219 () U)
(declare-fun g_s218$1_223 () U)
(declare-fun g_s218$1_224 () U)
(declare-fun g_s218$1_221 () U)
(declare-fun g_s218$1_220 () U)
(declare-fun g_s218$1_225 () U)
(declare-fun g_s218$1_222 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s8_9 (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 g_s4_5)))))) (= g_s9_10 (SET (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 g_s10_11))))) (= g_s14_15 (SET (mapplet g_s17_18 (mapplet g_s16_17 g_s15_16)))) (= g_s18_19 (SET (mapplet g_s21_22 (mapplet g_s20_21 g_s19_20)))) (= g_s22_23 (SET (mapplet g_s25_26 (mapplet g_s24_25 g_s23_24)))) (= g_s26_27 (SET (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 g_s27_28))))) (= g_s31_32 (SET (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 g_s32_33))))))))) (= g_s40_41 (SET (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 g_s41_42))))) (= g_s45_46 (SET (mapplet g_s53_54 (mapplet g_s52_53 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 g_s46_47))))))))) (= g_s54_55 (SET (mapplet g_s57_58 (mapplet g_s56_57 g_s55_56)))) (= g_s58_59 (SET (mapplet g_s61_62 (mapplet g_s60_61 g_s59_60)))) (= g_s62_63 (SET (mapplet g_s65_66 (mapplet g_s64_65 g_s63_64)))) (= g_s66_67 (SET (mapplet g_s68_69 g_s67_68))) (= g_s69_70 (SET (mapplet g_s71_72 g_s70_71))) (= g_s72_73 (SET (mapplet g_s75_76 (mapplet g_s74_75 g_s73_74)))) (= g_s76_77 (SET (mapplet g_s78_79 g_s77_78))) (= g_s79_80 (SET (mapplet g_s82_83 (mapplet g_s81_82 g_s80_81)))) (not (= g_s83_84 empty)) (not (= g_s84_85 empty)) (not (= g_s85_86 empty)) (not (= g_s86_87 empty)) (not (= g_s87_88 empty)) (not (= g_s88_89 empty)) (not (= g_s89_90 empty)) (not (= g_s90_91 empty)) (not (= g_s91_92 empty)) (not (= g_s92_93 empty)) (not (= g_s93_94 empty)) (not (= g_s94_95 empty)) (not (= g_s95_96 empty)) (= g_s96_97 (SET (mapplet g_s99_100 (mapplet g_s98_99 g_s97_98)))) (not (= g_s100_101 empty)) (not (= g_s101_102 empty)) (= g_s102_103 INT) (= g_s103_104 NAT) (= g_s104_105 NAT1) (subset g_s104_105 g_s103_104) (subset g_s103_104 g_s102_103) (mem g_s105_106 g_s102_103) (mem g_s105_106 g_s103_104) (not (mem g_s105_106 g_s104_105)) (mem g_s106_107 g_s102_103) (not (mem g_s106_107 g_s103_104)) (= g_s107_108 INT) (subset g_s108_109 g_s83_84) (mem g_s109_110 g_s83_84) (mem g_s109_110 g_s108_109) (mem g_s110_111 g_s83_84) (not (mem g_s110_111 g_s108_109)) (mem g_s111_112 (|+->| NAT g_s83_84)) (mem g_s111_112 (perm g_s108_109)) (= (card g_s108_109) g_s112_113) (subset g_s113_114 g_s84_85) (mem g_s114_115 g_s84_85) (mem g_s114_115 g_s113_114) (mem g_s115_116 g_s84_85) (not (mem g_s115_116 g_s113_114)) (mem g_s116_117 (|+->| NAT g_s84_85)) (mem g_s116_117 (perm g_s113_114)) (= (card g_s113_114) g_s117_118) (subset g_s118_119 INT) (subset g_s119_120 NAT) (subset g_s119_120 g_s118_119) (mem g_s120_121 g_s118_119) (not (mem g_s120_121 g_s119_120)) (= g_s121_122 INTEGER) (subset g_s122_123 INTEGER) (subset g_s122_123 g_s121_122) (mem g_s123_124 g_s121_122) (not (mem g_s123_124 g_s122_123)) (subset g_s124_125 INT) (subset g_s125_126 NAT) (mem e0 g_s125_126) (subset g_s125_126 g_s124_125) (mem g_s126_127 g_s124_125) (not (mem g_s126_127 g_s125_126)) (= g_s127_128 INTEGER) (= g_s128_129 NATURAL) (subset g_s128_129 g_s127_128) (mem g_s129_130 g_s128_129) (mem g_s130_131 g_s128_129) (mem g_s131_132 g_s127_128) (not (mem g_s131_132 g_s128_129)) (|<=i| g_s129_130 g_s130_131) (= g_s132_133 INTEGER) (= g_s133_134 NATURAL) (subset g_s133_134 g_s132_133) (mem g_s134_135 g_s133_134) (mem g_s135_136 g_s133_134) (mem g_s136_137 g_s132_133) (not (mem g_s136_137 g_s133_134)) (|<=i| g_s134_135 g_s135_136) (mem g_s137_138 (|-->| g_s124_125 g_s118_119)) (= (apply g_s137_138 g_s126_127) g_s120_121) (subset (image g_s137_138 g_s125_126) g_s119_120) (subset (image g_s137_138 (set_diff g_s124_125 g_s125_126)) (set_diff g_s118_119 g_s119_120)) (mem g_s138_139 (|-->| g_s132_133 g_s127_128)) (= (apply g_s138_139 g_s136_137) g_s131_132) (subset (image g_s138_139 g_s133_134) g_s128_129) (subset (image g_s138_139 (set_diff g_s132_133 g_s133_134)) (set_diff g_s127_128 g_s128_129)) (subset g_s139_140 g_s85_86) (mem g_s140_141 g_s85_86) (not (mem g_s140_141 g_s139_140)) (mem g_s141_142 (|+->| NAT g_s85_86)) (mem g_s141_142 (perm g_s139_140)) (subset g_s142_143 g_s86_87) (mem g_s143_144 g_s86_87) (not (mem g_s143_144 g_s142_143)) (mem g_s144_145 (|+->| NAT g_s86_87)) (mem g_s144_145 (perm g_s142_143)) (subset g_s145_146 g_s87_88) (mem g_s146_147 g_s87_88) (not (mem g_s146_147 g_s145_146)) (mem g_s147_148 (|+->| NAT g_s87_88)) (mem g_s147_148 (perm g_s145_146)) (subset g_s148_149 g_s88_89) (mem g_s149_150 g_s88_89) (not (mem g_s149_150 g_s148_149)) (mem g_s150_151 (|+->| NAT g_s88_89)) (mem g_s150_151 (perm g_s148_149)) (subset g_s151_152 g_s89_90) (mem g_s152_153 g_s89_90) (not (mem g_s152_153 g_s151_152)) (mem g_s153_154 (|+->| NAT g_s89_90)) (mem g_s153_154 (perm g_s151_152)) (subset g_s154_155 g_s90_91) (mem g_s155_156 g_s90_91) (not (mem g_s155_156 g_s154_155)) (mem g_s156_157 (|+->| NAT g_s90_91)) (mem g_s156_157 (perm g_s154_155)) (subset g_s157_158 g_s91_92) (mem g_s158_159 g_s91_92) (not (mem g_s158_159 g_s157_158)) (mem g_s159_160 (|+->| NAT g_s91_92)) (mem g_s159_160 (perm g_s157_158)) (subset g_s160_161 g_s92_93) (mem g_s161_162 g_s92_93) (not (mem g_s161_162 g_s160_161)) (mem g_s162_163 (|+->| NAT g_s92_93)) (mem g_s162_163 (perm g_s160_161)) (mem g_s163_164 g_s93_94) (mem g_s164_165 (|-->| g_s93_94 g_s86_87)) (= (apply g_s164_165 g_s163_164) g_s143_144) (subset g_s165_166 g_s94_95) (mem g_s166_167 g_s94_95) (not (mem g_s166_167 g_s165_166)) (subset g_s167_168 g_s95_96) (mem g_s168_169 g_s95_96) (not (mem g_s168_169 g_s167_168)) (mem g_s169_170 (|+->| NAT g_s95_96)) (mem g_s169_170 (perm g_s167_168)) (subset g_s170_171 g_s54_55) (not (mem g_s55_56 g_s170_171)) (= g_s170_171 (SET (mapplet g_s57_58 g_s56_57))) (mem g_s171_172 (|>->>| g_s170_171 g_s170_171)) (= (binary_inter g_s171_172 (id g_s170_171)) empty) (mem g_s172_173 (|>->>| g_s14_15 g_s54_55)) (not (mem (apply g_s172_173 g_s15_16) g_s170_171)) (mem g_s173_174 (|>->>| g_s18_19 g_s54_55)) (mem g_s174_175 (|>->>| g_s54_55 g_s18_19)) (= g_s173_174 (inverse g_s174_175)) (not (mem (apply g_s173_174 g_s19_20) g_s170_171)) (subset g_s175_176 g_s9_10) (not (mem g_s10_11 g_s175_176)) (= g_s175_176 (SET (mapplet g_s13_14 (mapplet g_s12_13 g_s11_12)))) (subset g_s176_177 g_s100_101) (mem g_s177_178 g_s100_101) (not (mem g_s177_178 g_s176_177)) (mem g_s178_179 (|+->| NAT g_s100_101)) (mem g_s178_179 (perm g_s176_177)) (subset g_s179_180 g_s101_102) (mem g_s180_181 g_s101_102) (not (mem g_s180_181 g_s179_180)) (mem g_s181_182 (|+->| NAT g_s101_102)) (mem g_s181_182 (perm g_s179_180)) (mem g_s182_183 (|-->| NATURAL g_s101_102)) (mem g_s183_184 (|>->| g_s179_180 g_s108_109)) (= g_s184_185 INTEGER) (= g_s185_186 NATURAL) (subset g_s185_186 g_s184_185) (mem g_s186_187 g_s184_185) (not (mem g_s186_187 g_s185_186)) (mem g_s187_188 g_s185_186) (= g_s188_189 INTEGER) (= g_s189_190 NATURAL) (subset g_s189_190 g_s188_189) (not (mem g_s186_187 g_s189_190)) (mem g_s187_188 g_s189_190) (mem g_s190_191 (|-->| g_s188_189 g_s184_185)) (= (apply g_s190_191 g_s186_187) g_s186_187) (subset (image g_s190_191 g_s189_190) g_s185_186) (subset (image g_s190_191 (set_diff g_s184_185 g_s189_190)) (set_diff g_s184_185 g_s185_186))))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s191_192 (|+->| g_s179_180 g_s142_143)) (mem g_s192_193 (|+->| g_s179_180 g_s139_140)) (mem g_s193_194 (|+->| g_s179_180 g_s157_158)) (mem g_s194_195 (|+->| g_s179_180 g_s119_120)) (mem g_s195_196 (|-->| g_s179_180 g_s14_15)) (mem g_s196_197 (|+->| g_s179_180 g_s157_158)) (mem g_s197_198 (|+->| g_s179_180 g_s119_120)) (mem g_s198_199 (|-->| g_s179_180 g_s14_15)) (subset g_s199_200 g_s179_180) (mem g_s200_201 (|+->| g_s179_180 g_s128_129)) (mem g_s201_202 (|+->| g_s179_180 g_s185_186)) (subset g_s202_203 g_s179_180) (subset g_s203_204 g_s179_180) (subset g_s204_205 g_s179_180) (subset g_s205_206 g_s179_180) (subset g_s206_207 g_s179_180) (subset g_s207_208 g_s179_180) (subset g_s208_209 g_s179_180) (subset g_s209_210 g_s179_180) (mem g_s210_211 (|+->| g_s179_180 g_s175_176)) (subset g_s211_212 g_s179_180) (mem g_s212_213 (|+->| g_s179_180 g_s103_104)) (subset g_s213_214 g_s179_180)))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s194$1_215 (|+->| g_s179_180 g_s119_120)))
(define-fun lh_2 () Bool (mem g_s197$1_216 (|+->| g_s179_180 g_s119_120)))
(define-fun lh_3 () Bool (mem g_s200$1_217 (|+->| g_s179_180 g_s128_129)))
(define-fun lh_4 () Bool (mem g_s201$1_218 (|+->| g_s179_180 g_s185_186)))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem empty (|+->| g_s179_180 g_s175_176)))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem empty (|+->| g_s179_180 g_s142_143)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem empty (|+->| g_s179_180 g_s139_140)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem empty (|+->| g_s179_180 g_s157_158)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (set_prod g_s179_180 (SET e0)) (|+->| g_s179_180 g_s103_104)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (set_prod g_s179_180 (SET g_s15_16)) (|-->| g_s179_180 g_s14_15)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (subset empty g_s179_180))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s191_192)))
(define-fun lh_2 () Bool (mem g_s218$1_220 g_s86_87))
; PO 1 in group 1
(assert (not (=> (and lh_1 lh_2) (mem g_s191_192 (|+->| (dom g_s191_192) (ran g_s191_192))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s191_192)))
(define-fun lh_1 () Bool (mem g_s218$1_220 g_s86_87))
; PO 1 in group 2
(assert (not (=> lh_1 (mem g_s191_192 (|+->| (dom g_s191_192) (ran g_s191_192))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s192_193)))
(define-fun lh_2 () Bool (mem g_s218$1_221 g_s85_86))
; PO 1 in group 3
(assert (not (=> (and lh_1 lh_2) (mem g_s192_193 (|+->| (dom g_s192_193) (ran g_s192_193))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s192_193)))
(define-fun lh_1 () Bool (mem g_s218$1_221 g_s85_86))
; PO 1 in group 4
(assert (not (=> lh_1 (mem g_s192_193 (|+->| (dom g_s192_193) (ran g_s192_193))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s193_194)))
(define-fun lh_2 () Bool (mem g_s218$1_222 g_s91_92))
; PO 1 in group 5
(assert (not (=> (and lh_1 lh_2) (mem g_s193_194 (|+->| (dom g_s193_194) (ran g_s193_194))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s193_194)))
(define-fun lh_1 () Bool (mem g_s218$1_222 g_s91_92))
; PO 1 in group 6
(assert (not (=> lh_1 (mem g_s193_194 (|+->| (dom g_s193_194) (ran g_s193_194))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s194_195)))
(define-fun lh_2 () Bool (mem g_s218$1_223 g_s118_119))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2) (mem g_s194_195 (|+->| (dom g_s194_195) (ran g_s194_195))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s194_195)))
(define-fun lh_1 () Bool (mem g_s218$1_223 g_s118_119))
; PO 1 in group 8
(assert (not (=> lh_1 (mem g_s194_195 (|+->| (dom g_s194_195) (ran g_s194_195))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s218$1_224 g_s14_15))
; PO 1 in group 9
(push 1)
(assert (not (=> lh_1 (mem g_s195_196 (|+->| (dom g_s195_196) (ran g_s195_196))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> lh_1 (mem g_s217_219 (dom g_s195_196)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s196_197)))
(define-fun lh_2 () Bool (mem g_s218$1_222 g_s91_92))
; PO 1 in group 10
(assert (not (=> (and lh_1 lh_2) (mem g_s196_197 (|+->| (dom g_s196_197) (ran g_s196_197))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s196_197)))
(define-fun lh_1 () Bool (mem g_s218$1_222 g_s91_92))
; PO 1 in group 11
(assert (not (=> lh_1 (mem g_s196_197 (|+->| (dom g_s196_197) (ran g_s196_197))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s197_198)))
(define-fun lh_2 () Bool (mem g_s218$1_223 g_s118_119))
; PO 1 in group 12
(assert (not (=> (and lh_1 lh_2) (mem g_s197_198 (|+->| (dom g_s197_198) (ran g_s197_198))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s197_198)))
(define-fun lh_1 () Bool (mem g_s218$1_223 g_s118_119))
; PO 1 in group 13
(assert (not (=> lh_1 (mem g_s197_198 (|+->| (dom g_s197_198) (ran g_s197_198))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s218$1_224 g_s14_15))
; PO 1 in group 14
(push 1)
(assert (not (=> lh_1 (mem g_s198_199 (|+->| (dom g_s198_199) (ran g_s198_199))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> lh_1 (mem g_s217_219 (dom g_s198_199)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s200_201)))
(define-fun lh_2 () Bool (mem g_s218$1_223 g_s127_128))
; PO 1 in group 15
(assert (not (=> (and lh_1 lh_2) (mem g_s200_201 (|+->| (dom g_s200_201) (ran g_s200_201))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s200_201)))
(define-fun lh_1 () Bool (mem g_s218$1_223 g_s127_128))
; PO 1 in group 16
(assert (not (=> lh_1 (mem g_s200_201 (|+->| (dom g_s200_201) (ran g_s200_201))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s201_202)))
(define-fun lh_2 () Bool (mem g_s218$1_223 g_s184_185))
; PO 1 in group 17
(assert (not (=> (and lh_1 lh_2) (mem g_s201_202 (|+->| (dom g_s201_202) (ran g_s201_202))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s201_202)))
(define-fun lh_1 () Bool (mem g_s218$1_223 g_s184_185))
; PO 1 in group 18
(assert (not (=> lh_1 (mem g_s201_202 (|+->| (dom g_s201_202) (ran g_s201_202))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s210_211)))
(define-fun lh_2 () Bool (mem g_s218$1_225 g_s9_10))
; PO 1 in group 19
(assert (not (=> (and lh_1 lh_2) (mem g_s210_211 (|+->| (dom g_s210_211) (ran g_s210_211))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s210_211)))
(define-fun lh_1 () Bool (mem g_s218$1_225 g_s9_10))
; PO 1 in group 20
(assert (not (=> lh_1 (mem g_s210_211 (|+->| (dom g_s210_211) (ran g_s210_211))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(define-fun lh_1 () Bool (mem g_s217_219 (dom g_s212_213)))
(define-fun lh_2 () Bool (mem g_s218$1_223 g_s102_103))
; PO 1 in group 21
(assert (not (=> (and lh_1 lh_2) (mem g_s212_213 (|+->| (dom g_s212_213) (ran g_s212_213))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s217_219 g_s101_102))
(assert (mem g_s217_219 g_s179_180))
(assert (mem g_s217_219 (dom g_s212_213)))
(define-fun lh_1 () Bool (mem g_s218$1_223 g_s102_103))
; PO 1 in group 22
(assert (not (=> lh_1 (mem g_s212_213 (|+->| (dom g_s212_213) (ran g_s212_213))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)