(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e119 () U)
(declare-fun e199 () U)
(declare-fun e201 () U)
(declare-fun e203 () U)
(declare-fun e205 () U)
(declare-fun e207 () U)
(declare-fun e209 () U)
(declare-fun e211 () U)
(declare-fun e213 () U)
(declare-fun e215 () U)
(declare-fun e217 () U)
(declare-fun e219 () U)
(declare-fun e221 () U)
(declare-fun e223 () U)
(declare-fun e225 () U)
(declare-fun e227 () U)
(declare-fun e229 () U)
(declare-fun e231 () U)
(declare-fun e233 () U)
(declare-fun e235 () U)
(declare-fun e237 () U)
(declare-fun e239 () U)
(declare-fun e241 () U)
(declare-fun e243 () U)
(declare-fun e245 () U)
(declare-fun e247 () U)
(declare-fun e249 () U)
(declare-fun e251 () U)
(declare-fun e253 () U)
(declare-fun e255 () U)
(declare-fun e257 () U)
(declare-fun e259 () U)
(declare-fun e261 () U)
(declare-fun e263 () U)
(declare-fun e265 () U)
(declare-fun e267 () U)
(declare-fun e269 () U)
(declare-fun e271 () U)
(declare-fun e273 () U)
(declare-fun e275 () U)
(declare-fun e277 () U)
(declare-fun e279 () U)
(declare-fun e281 () U)
(declare-fun e283 () U)
(declare-fun e285 () U)
(declare-fun e287 () U)
(declare-fun e289 () U)
(declare-fun e291 () U)
(declare-fun e293 () U)
(declare-fun e295 () U)
(declare-fun e297 () U)
(declare-fun e299 () U)
(declare-fun e301 () U)
(declare-fun e303 () U)
(declare-fun e305 () U)
(declare-fun e307 () U)
(declare-fun e309 () U)
(declare-fun e311 () U)
(declare-fun e313 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_120 () U)
(declare-fun g_s119_121 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_122 () U)
(declare-fun g_s121_123 () U)
(declare-fun g_s122_124 () U)
(declare-fun g_s123_125 () U)
(declare-fun g_s124_126 () U)
(declare-fun g_s125_127 () U)
(declare-fun g_s126_128 () U)
(declare-fun g_s127_129 () U)
(declare-fun g_s128_130 () U)
(declare-fun g_s129_131 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_132 () U)
(declare-fun g_s131_133 () U)
(declare-fun g_s132_134 () U)
(declare-fun g_s133_135 () U)
(declare-fun g_s134_136 () U)
(declare-fun g_s135_137 () U)
(declare-fun g_s136_138 () U)
(declare-fun g_s137_139 () U)
(declare-fun g_s138_140 () U)
(declare-fun g_s139_141 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_142 () U)
(declare-fun g_s141_143 () U)
(declare-fun g_s142_144 () U)
(declare-fun g_s143_145 () U)
(declare-fun g_s144_146 () U)
(declare-fun g_s145_147 () U)
(declare-fun g_s146_148 () U)
(declare-fun g_s147_149 () U)
(declare-fun g_s148_150 () U)
(declare-fun g_s149_151 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_152 () U)
(declare-fun g_s151_153 () U)
(declare-fun g_s152_154 () U)
(declare-fun g_s153_155 () U)
(declare-fun g_s154_156 () U)
(declare-fun g_s155_157 () U)
(declare-fun g_s156_158 () U)
(declare-fun g_s157_159 () U)
(declare-fun g_s158_160 () U)
(declare-fun g_s159_161 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_162 () U)
(declare-fun g_s161_163 () U)
(declare-fun g_s162_164 () U)
(declare-fun g_s163_165 () U)
(declare-fun g_s164_166 () U)
(declare-fun g_s165_167 () U)
(declare-fun g_s166_168 () U)
(declare-fun g_s167_169 () U)
(declare-fun g_s168_170 () U)
(declare-fun g_s169_171 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_172 () U)
(declare-fun g_s171_173 () U)
(declare-fun g_s172_174 () U)
(declare-fun g_s173_175 () U)
(declare-fun g_s174_176 () U)
(declare-fun g_s175_177 () U)
(declare-fun g_s176_178 () U)
(declare-fun g_s177_179 () U)
(declare-fun g_s178_180 () U)
(declare-fun g_s179_181 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_182 () U)
(declare-fun g_s181_183 () U)
(declare-fun g_s182_184 () U)
(declare-fun g_s183_185 () U)
(declare-fun g_s184_186 () U)
(declare-fun g_s185_187 () U)
(declare-fun g_s186_188 () U)
(declare-fun g_s187_189 () U)
(declare-fun g_s188_190 () U)
(declare-fun g_s189_191 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_192 () U)
(declare-fun g_s191_193 () U)
(declare-fun g_s192_194 () U)
(declare-fun g_s193_195 () U)
(declare-fun g_s194_196 () U)
(declare-fun g_s195_197 () U)
(declare-fun g_s196_198 () U)
(declare-fun g_s197_200 () U)
(declare-fun g_s198_202 () U)
(declare-fun g_s199_204 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_206 () U)
(declare-fun g_s201_208 () U)
(declare-fun g_s202_210 () U)
(declare-fun g_s203_212 () U)
(declare-fun g_s204_214 () U)
(declare-fun g_s205_216 () U)
(declare-fun g_s206_218 () U)
(declare-fun g_s207_220 () U)
(declare-fun g_s208_222 () U)
(declare-fun g_s209_224 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_226 () U)
(declare-fun g_s211_228 () U)
(declare-fun g_s212_230 () U)
(declare-fun g_s213_232 () U)
(declare-fun g_s214_234 () U)
(declare-fun g_s215_236 () U)
(declare-fun g_s216_238 () U)
(declare-fun g_s217_240 () U)
(declare-fun g_s218_242 () U)
(declare-fun g_s219_244 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_246 () U)
(declare-fun g_s221_248 () U)
(declare-fun g_s222_250 () U)
(declare-fun g_s223_252 () U)
(declare-fun g_s224_254 () U)
(declare-fun g_s225_256 () U)
(declare-fun g_s226_258 () U)
(declare-fun g_s227_260 () U)
(declare-fun g_s228_262 () U)
(declare-fun g_s229_264 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_266 () U)
(declare-fun g_s231_268 () U)
(declare-fun g_s232_270 () U)
(declare-fun g_s233_272 () U)
(declare-fun g_s234_274 () U)
(declare-fun g_s235_276 () U)
(declare-fun g_s236_278 () U)
(declare-fun g_s237_280 () U)
(declare-fun g_s238_282 () U)
(declare-fun g_s239_284 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_286 () U)
(declare-fun g_s241_288 () U)
(declare-fun g_s242_290 () U)
(declare-fun g_s243_292 () U)
(declare-fun g_s244_294 () U)
(declare-fun g_s245_296 () U)
(declare-fun g_s246_298 () U)
(declare-fun g_s247_300 () U)
(declare-fun g_s248_302 () U)
(declare-fun g_s249_304 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_306 () U)
(declare-fun g_s251_308 () U)
(declare-fun g_s252_310 () U)
(declare-fun g_s253_312 () U)
(declare-fun g_s254_314 () U)
(declare-fun g_s255_315 () U)
(declare-fun g_s256_316 () U)
(declare-fun g_s257_317 () U)
(declare-fun g_s258_318 () U)
(declare-fun g_s259_319 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_320 () U)
(declare-fun g_s261_321 () U)
(declare-fun g_s262_322 () U)
(declare-fun g_s263_323 () U)
(declare-fun g_s264_324 () U)
(declare-fun g_s265_325 () U)
(declare-fun g_s266_326 () U)
(declare-fun g_s267_327 () U)
(declare-fun g_s268_328 () U)
(declare-fun g_s269_329 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_330 () U)
(declare-fun g_s271_331 () U)
(declare-fun g_s272_332 () U)
(declare-fun g_s273_333 () U)
(declare-fun g_s274_334 () U)
(declare-fun g_s275_335 () U)
(declare-fun g_s276_336 () U)
(declare-fun g_s277_337 () U)
(declare-fun g_s278_338 () U)
(declare-fun g_s279_339 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_340 () U)
(declare-fun g_s281_341 () U)
(declare-fun g_s282_342 () U)
(declare-fun g_s283_343 () U)
(declare-fun g_s284_344 () U)
(declare-fun g_s285_345 () U)
(declare-fun g_s286_346 () U)
(declare-fun g_s287_347 () U)
(declare-fun g_s288_348 () U)
(declare-fun g_s289_349 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_350 () U)
(declare-fun g_s291_351 () U)
(declare-fun g_s292_352 () U)
(declare-fun g_s293_353 () U)
(declare-fun g_s294_354 () U)
(declare-fun g_s295_355 () U)
(declare-fun g_s296_356 () U)
(declare-fun g_s297_357 () U)
(declare-fun g_s298_358 () U)
(declare-fun g_s299_359 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_360 () U)
(declare-fun g_s301_361 () U)
(declare-fun g_s302_362 () U)
(declare-fun g_s303_363 () U)
(declare-fun g_s304_364 () U)
(declare-fun g_s305_365 () U)
(declare-fun g_s306_366 () U)
(declare-fun g_s307_367 () U)
(declare-fun g_s308_368 () U)
(declare-fun g_s309_369 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_370 () U)
(declare-fun g_s311_371 () U)
(declare-fun g_s312_372 () U)
(declare-fun g_s313_373 () U)
(declare-fun g_s314_374 () U)
(declare-fun g_s315_375 () U)
(declare-fun g_s316_376 () U)
(declare-fun g_s317_377 () U)
(declare-fun g_s318_378 () U)
(declare-fun g_s319_379 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_380 () U)
(declare-fun g_s321_381 () U)
(declare-fun g_s322_382 () U)
(declare-fun g_s323_383 () U)
(declare-fun g_s324_384 () U)
(declare-fun g_s325_385 () U)
(declare-fun g_s326_386 () U)
(declare-fun g_s327_387 () U)
(declare-fun g_s328_388 () U)
(declare-fun g_s329_389 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_390 () U)
(declare-fun g_s331_391 () U)
(declare-fun g_s332_392 () U)
(declare-fun g_s333_393 () U)
(declare-fun g_s334_394 () U)
(declare-fun g_s335_395 () U)
(declare-fun g_s336_396 () U)
(declare-fun g_s337_397 () U)
(declare-fun g_s338_398 () U)
(declare-fun g_s339_399 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_400 () U)
(declare-fun g_s341_401 () U)
(declare-fun g_s342_402 () U)
(declare-fun g_s343_403 () U)
(declare-fun g_s344_404 () U)
(declare-fun g_s345_405 () U)
(declare-fun g_s346_406 () U)
(declare-fun g_s347_407 () U)
(declare-fun g_s348_408 () U)
(declare-fun g_s349_409 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_410 () U)
(declare-fun g_s351_411 () U)
(declare-fun g_s352_412 () U)
(declare-fun g_s353_413 () U)
(declare-fun g_s354_414 () U)
(declare-fun g_s355_415 () U)
(declare-fun g_s356_416 () U)
(declare-fun g_s357_417 () U)
(declare-fun g_s358_418 () U)
(declare-fun g_s359_419 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_420 () U)
(declare-fun g_s361_421 () U)
(declare-fun g_s362_422 () U)
(declare-fun g_s363_423 () U)
(declare-fun g_s364_424 () U)
(declare-fun g_s365_425 () U)
(declare-fun g_s366_426 () U)
(declare-fun g_s367_427 () U)
(declare-fun g_s368_428 () U)
(declare-fun g_s369_429 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_430 () U)
(declare-fun g_s371_431 () U)
(declare-fun g_s372_432 () U)
(declare-fun g_s373_433 () U)
(declare-fun g_s374_434 () U)
(declare-fun g_s375_435 () U)
(declare-fun g_s376_436 () U)
(declare-fun g_s377_437 () U)
(declare-fun g_s378_438 () U)
(declare-fun g_s379_439 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_440 () U)
(declare-fun g_s381_441 () U)
(declare-fun g_s382_442 () U)
(declare-fun g_s383_443 () U)
(declare-fun g_s384_444 () U)
(declare-fun g_s385_445 () U)
(declare-fun g_s386_446 () U)
(declare-fun g_s387_447 () U)
(declare-fun g_s388_448 () U)
(declare-fun g_s389_449 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_450 () U)
(declare-fun g_s391_451 () U)
(declare-fun g_s392_452 () U)
(declare-fun g_s393_453 () U)
(declare-fun g_s394_454 () U)
(declare-fun g_s395_455 () U)
(declare-fun g_s396_456 () U)
(declare-fun g_s397_457 () U)
(declare-fun g_s398_458 () U)
(declare-fun g_s399_459 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_460 () U)
(declare-fun g_s401_461 () U)
(declare-fun g_s402_462 () U)
(declare-fun g_s403_463 () U)
(declare-fun g_s404_464 () U)
(declare-fun g_s405_465 () U)
(declare-fun g_s406_466 () U)
(declare-fun g_s407_467 () U)
(declare-fun g_s408_468 () U)
(declare-fun g_s409_469 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_470 () U)
(declare-fun g_s411_471 () U)
(declare-fun g_s412_472 () U)
(declare-fun g_s413_473 () U)
(declare-fun g_s414_474 () U)
(declare-fun g_s415_475 () U)
(declare-fun g_s416_476 () U)
(declare-fun g_s417_477 () U)
(declare-fun g_s418_478 () U)
(declare-fun g_s419_479 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_480 () U)
(declare-fun g_s421_481 () U)
(declare-fun g_s422_482 () U)
(declare-fun g_s423_483 () U)
(declare-fun g_s424_484 () U)
(declare-fun g_s425_485 () U)
(declare-fun g_s426_486 () U)
(declare-fun g_s427_487 () U)
(declare-fun g_s428_488 () U)
(declare-fun g_s429_489 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430_490 () U)
(declare-fun g_s431_491 () U)
(declare-fun g_s432_492 () U)
(declare-fun g_s433_493 () U)
(declare-fun g_s434_494 () U)
(declare-fun g_s435_495 () U)
(declare-fun g_s436_496 () U)
(declare-fun g_s437_497 () U)
(declare-fun g_s438_498 () U)
(declare-fun g_s439_499 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s440_500 () U)
(declare-fun g_s441_501 () U)
(declare-fun g_s442_502 () U)
(declare-fun g_s443_503 () U)
(declare-fun g_s444_504 () U)
(declare-fun g_s445_505 () U)
(declare-fun g_s446_506 () U)
(declare-fun g_s447_507 () U)
(declare-fun g_s448_508 () U)
(declare-fun g_s449_509 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s450_510 () U)
(declare-fun g_s451_511 () U)
(declare-fun g_s452_512 () U)
(declare-fun g_s453_513 () U)
(declare-fun g_s454_514 () U)
(declare-fun g_s455_515 () U)
(declare-fun g_s456_516 () U)
(declare-fun g_s457_517 () U)
(declare-fun g_s458_518 () U)
(declare-fun g_s459_519 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s460_520 () U)
(declare-fun g_s461_521 () U)
(declare-fun g_s462_522 () U)
(declare-fun g_s463_523 () U)
(declare-fun g_s464_524 () U)
(declare-fun g_s465_525 () U)
(declare-fun g_s466_526 () U)
(declare-fun g_s467_527 () U)
(declare-fun g_s468_528 () U)
(declare-fun g_s469_529 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s470_530 () U)
(declare-fun g_s471_531 () U)
(declare-fun g_s472_532 () U)
(declare-fun g_s473_533 () U)
(declare-fun g_s474_534 () U)
(declare-fun g_s475_535 () U)
(declare-fun g_s476_536 () U)
(declare-fun g_s477_537 () U)
(declare-fun g_s478_538 () U)
(declare-fun g_s479_539 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s480_540 () U)
(declare-fun g_s481_541 () U)
(declare-fun g_s482_542 () U)
(declare-fun g_s483_543 () U)
(declare-fun g_s484_544 () U)
(declare-fun g_s485_545 () U)
(declare-fun g_s486_546 () U)
(declare-fun g_s487_547 () U)
(declare-fun g_s488_548 () U)
(declare-fun g_s489_549 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s490_550 () U)
(declare-fun g_s491_551 () U)
(declare-fun g_s492_552 () U)
(declare-fun g_s493_553 () U)
(declare-fun g_s494_554 () U)
(declare-fun g_s495_555 () U)
(declare-fun g_s496_556 () U)
(declare-fun g_s497_557 () U)
(declare-fun g_s498_558 () U)
(declare-fun g_s499$1_559 () U)
(declare-fun g_s499$2_568 () U)
(declare-fun g_s499$3_575 () U)
(declare-fun g_s499$4_582 () U)
(declare-fun g_s499$5_589 () U)
(declare-fun g_s499$6_596 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s500$1_560 () U)
(declare-fun g_s500$2_569 () U)
(declare-fun g_s500$3_576 () U)
(declare-fun g_s500$4_583 () U)
(declare-fun g_s500$5_590 () U)
(declare-fun g_s500$6_597 () U)
(declare-fun g_s501$1_561 () U)
(declare-fun g_s501$2_570 () U)
(declare-fun g_s501$3_577 () U)
(declare-fun g_s501$4_584 () U)
(declare-fun g_s501$5_591 () U)
(declare-fun g_s501$6_598 () U)
(declare-fun g_s502_617 () U)
(declare-fun g_s503_618 () U)
(declare-fun g_s504$1_566 () U)
(declare-fun g_s504$2_571 () U)
(declare-fun g_s504$3_578 () U)
(declare-fun g_s504$4_585 () U)
(declare-fun g_s504$5_592 () U)
(declare-fun g_s504$6_599 () U)
(declare-fun g_s505$1_563 () U)
(declare-fun g_s505$2_572 () U)
(declare-fun g_s505$3_579 () U)
(declare-fun g_s505$4_586 () U)
(declare-fun g_s505$5_593 () U)
(declare-fun g_s505$6_600 () U)
(declare-fun g_s506$1_564 () U)
(declare-fun g_s506$2_573 () U)
(declare-fun g_s506$3_580 () U)
(declare-fun g_s506$4_587 () U)
(declare-fun g_s506$5_594 () U)
(declare-fun g_s506$6_601 () U)
(declare-fun g_s507$1_565 () U)
(declare-fun g_s507$2_574 () U)
(declare-fun g_s507$3_581 () U)
(declare-fun g_s507$4_588 () U)
(declare-fun g_s507$5_595 () U)
(declare-fun g_s507$6_602 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s513_604 () U)
(declare-fun g_s513$1_605 () U)
(declare-fun g_s514_612 () U)
(declare-fun g_s514_609 () U)
(declare-fun g_s514_614 () U)
(declare-fun g_s514_606 () U)
(declare-fun g_s514$1_613 () U)
(declare-fun g_s514$1_610 () U)
(declare-fun g_s514$1_615 () U)
(declare-fun g_s514$1_607 () U)
(declare-fun g_s515_608 () U)
(declare-fun g_s519_611 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s526_616 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
(declare-fun e562 () U)
(declare-fun e603 () U)
(declare-fun e567 () U)
(declare-fun e117 () U)
(declare-fun e116 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (= g_s8_9 (SET (mapplet g_s10_11 g_s9_10))) (= g_s11_12 (SET (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 g_s12_13)))))) (= g_s17_18 (SET (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 g_s18_19))))) (= g_s22_23 (SET (mapplet g_s25_26 (mapplet g_s24_25 g_s23_24)))) (= g_s26_27 (SET (mapplet g_s29_30 (mapplet g_s28_29 g_s27_28)))) (= g_s30_31 (SET (mapplet g_s33_34 (mapplet g_s32_33 g_s31_32)))) (= g_s34_35 (SET (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 g_s35_36))))) (= g_s39_40 (SET (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 g_s40_41))))))))) (= g_s48_49 (SET (mapplet g_s52_53 (mapplet g_s51_52 (mapplet g_s50_51 g_s49_50))))) (= g_s53_54 (SET (mapplet g_s61_62 (mapplet g_s60_61 (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 g_s54_55))))))))) (= g_s62_63 (SET (mapplet g_s65_66 (mapplet g_s64_65 g_s63_64)))) (= g_s66_67 (SET (mapplet g_s69_70 (mapplet g_s68_69 g_s67_68)))) (= g_s70_71 (SET (mapplet g_s73_74 (mapplet g_s72_73 g_s71_72)))) (= g_s74_75 (SET (mapplet g_s76_77 g_s75_76))) (= g_s77_78 (SET (mapplet g_s79_80 g_s78_79))) (= g_s80_81 (SET (mapplet g_s83_84 (mapplet g_s82_83 g_s81_82)))) (= g_s84_85 (SET (mapplet g_s86_87 g_s85_86))) (= g_s87_88 (SET (mapplet g_s90_91 (mapplet g_s89_90 g_s88_89)))) (not (= g_s91_92 empty)) (not (= g_s92_93 empty)) (not (= g_s93_94 empty)) (not (= g_s94_95 empty)) (not (= g_s95_96 empty)) (not (= g_s96_97 empty)) (not (= g_s97_98 empty)) (not (= g_s98_99 empty)) (not (= g_s99_100 empty)) (not (= g_s100_101 empty)) (not (= g_s101_102 empty)) (not (= g_s102_103 empty)) (not (= g_s103_104 empty)) (not (= g_s104_105 empty)) (not (= g_s105_106 empty)) (not (= g_s106_107 empty)) (not (= g_s107_108 empty)) (not (= g_s108_109 empty)) (not (= g_s109_110 empty)) (= g_s110_111 (SET (mapplet g_s113_114 (mapplet g_s112_113 g_s111_112)))) (mem g_s114_115 (|-->| (set_prod INTEGER NATURAL) INTEGER)) (= g_s114_115 (binary_union e117 e116)) (mem g_s117_118 (|-->| BOOL NAT)) (= g_s117_118 (SET (mapplet (mapplet FALSE e0) (mapplet TRUE e119)))) (= g_s118_120 INT) (= g_s119_121 NAT) (= g_s120_122 NAT1) (subset g_s120_122 g_s119_121) (subset g_s119_121 g_s118_120) (mem g_s121_123 g_s118_120) (mem g_s121_123 g_s119_121) (not (mem g_s121_123 g_s120_122)) (mem g_s122_124 g_s118_120) (not (mem g_s122_124 g_s119_121)) (= g_s123_125 INT) (subset g_s124_126 g_s91_92) (mem g_s125_127 g_s91_92) (mem g_s125_127 g_s124_126) (mem g_s126_128 g_s91_92) (not (mem g_s126_128 g_s124_126)) (mem g_s127_129 (|+->| NAT g_s91_92)) (mem g_s127_129 (perm g_s124_126)) (= (card g_s124_126) g_s128_130) (subset g_s129_131 g_s92_93) (mem g_s130_132 g_s92_93) (mem g_s130_132 g_s129_131) (mem g_s131_133 g_s92_93) (not (mem g_s131_133 g_s129_131)) (mem g_s132_134 (|+->| NAT g_s92_93)) (mem g_s132_134 (perm g_s129_131)) (= (card g_s129_131) g_s133_135) (subset g_s134_136 g_s93_94) (mem g_s135_137 g_s93_94) (not (mem g_s135_137 g_s134_136)) (mem g_s136_138 (|+->| NAT g_s93_94)) (mem g_s136_138 (perm g_s134_136)) (subset g_s137_139 g_s94_95) (mem g_s138_140 g_s94_95) (not (mem g_s138_140 g_s137_139)) (mem g_s139_141 (|+->| NAT g_s94_95)) (mem g_s139_141 (perm g_s137_139)) (subset g_s140_142 g_s95_96) (mem g_s141_143 g_s95_96) (not (mem g_s141_143 g_s140_142)) (mem g_s142_144 (|+->| NAT g_s95_96)) (mem g_s142_144 (perm g_s140_142)) (subset g_s143_145 g_s96_97) (mem g_s144_146 g_s96_97) (not (mem g_s144_146 g_s143_145)) (mem g_s145_147 (|+->| NAT g_s96_97)) (mem g_s145_147 (perm g_s143_145)) (subset g_s146_148 g_s97_98) (mem g_s147_149 g_s97_98) (not (mem g_s147_149 g_s146_148)) (mem g_s148_150 (|+->| NAT g_s97_98)) (mem g_s148_150 (perm g_s146_148)) (subset g_s149_151 g_s98_99) (mem g_s150_152 g_s98_99) (not (mem g_s150_152 g_s149_151)) (mem g_s151_153 (|+->| NAT g_s98_99)) (mem g_s151_153 (perm g_s149_151)) (subset g_s152_154 g_s99_100) (mem g_s153_155 g_s99_100) (not (mem g_s153_155 g_s152_154)) (mem g_s154_156 (|+->| NAT g_s99_100)) (mem g_s154_156 (perm g_s152_154)) (subset g_s155_157 g_s100_101) (mem g_s156_158 g_s100_101) (not (mem g_s156_158 g_s155_157)) (mem g_s157_159 (|+->| NAT g_s100_101)) (mem g_s157_159 (perm g_s155_157)) (subset g_s158_160 g_s101_102) (mem g_s159_161 g_s101_102) (not (mem g_s159_161 g_s158_160)) (mem g_s160_162 (|+->| NAT g_s101_102)) (mem g_s160_162 (perm g_s158_160)) (subset g_s161_163 g_s102_103) (mem g_s162_164 g_s102_103) (not (mem g_s162_164 g_s161_163)) (mem g_s163_165 (|+->| NAT g_s102_103)) (mem g_s163_165 (perm g_s161_163)) (mem g_s164_166 g_s103_104) (mem g_s165_167 (|-->| g_s103_104 g_s96_97)) (= (apply g_s165_167 g_s164_166) g_s144_146) (subset g_s166_168 g_s104_105) (mem g_s167_169 g_s104_105) (not (mem g_s167_169 g_s166_168)) (subset g_s168_170 g_s105_106) (mem g_s169_171 g_s105_106) (not (mem g_s169_171 g_s168_170)) (mem g_s170_172 (|+->| NAT g_s105_106)) (mem g_s170_172 (perm g_s168_170)) (subset g_s171_173 g_s106_107) (mem g_s172_174 g_s106_107) (not (mem g_s172_174 g_s171_173)) (mem g_s173_175 (|+->| NAT g_s106_107)) (mem g_s173_175 (perm g_s171_173)) (subset g_s174_176 g_s107_108) (mem g_s175_177 g_s107_108) (not (mem g_s175_177 g_s174_176)) (mem g_s176_178 (|+->| NAT g_s107_108)) (mem g_s176_178 (perm g_s174_176)) (subset g_s177_179 g_s108_109) (mem g_s178_180 g_s108_109) (not (mem g_s178_180 g_s177_179)) (mem g_s179_181 (|+->| NAT g_s108_109)) (mem g_s179_181 (perm g_s177_179)) (subset g_s180_182 g_s109_110) (mem g_s181_183 g_s109_110) (not (mem g_s181_183 g_s180_182)) (mem g_s182_184 (|+->| NAT g_s109_110)) (mem g_s182_184 (perm g_s180_182)) (mem g_s183_185 (|>->| g_s168_170 g_s129_131)) (mem g_s184_186 (|>->| g_s171_173 g_s129_131)) (mem g_s185_187 g_s92_93) (=> (not (= g_s186_188 e0)) (mem g_s185_187 g_s129_131)) (mem g_s187_189 (|>->| g_s177_179 g_s129_131)) (= (binary_inter (ran g_s183_185) (ran g_s184_186)) empty) (= (binary_inter (ran g_s183_185) (ran g_s187_189)) empty) (= (binary_inter (ran g_s187_189) (ran g_s184_186)) empty) (=> (not (= g_s186_188 e0)) (not (mem g_s185_187 (ran g_s183_185)))) (=> (not (= g_s186_188 e0)) (not (mem g_s185_187 (ran g_s184_186)))) (=> (not (= g_s186_188 e0)) (not (mem g_s185_187 (ran g_s187_189)))) (subset g_s188_190 g_s62_63) (not (mem g_s63_64 g_s188_190)) (= g_s188_190 (SET (mapplet g_s65_66 g_s64_65))) (mem g_s189_191 (|>->>| g_s188_190 g_s188_190)) (= (binary_inter g_s189_191 (id g_s188_190)) empty) (mem g_s190_192 (|>->>| g_s22_23 g_s62_63)) (not (mem (apply g_s190_192 g_s23_24) g_s188_190)) (mem g_s191_193 (|>->>| g_s26_27 g_s62_63)) (mem g_s192_194 (|>->>| g_s62_63 g_s26_27)) (= g_s191_193 (inverse g_s192_194)) (not (mem (apply g_s191_193 g_s27_28) g_s188_190))))
(define-fun |def_seext| () Bool (and (= g_s193_195 TRUE) (= g_s194_196 FALSE) (= g_s195_197 e0) (= g_s196_198 e119) (= g_s197_200 e199) (= g_s198_202 e201) (= g_s199_204 e203) (= g_s200_206 e205) (= g_s201_208 e207) (= g_s202_210 e209) (= g_s203_212 e211) (= g_s204_214 e213) (= g_s205_216 e215) (= g_s206_218 e217) (= g_s207_220 e219) (= g_s208_222 e221) (= g_s209_224 e223) (= g_s210_226 e225) (= g_s211_228 e227) (= g_s212_230 e229) (= g_s213_232 e231) (= g_s214_234 e233) (= g_s215_236 e235) (= g_s216_238 e237) (= g_s217_240 e239) (= g_s218_242 e241) (= g_s219_244 e243) (= g_s220_246 e245) (= g_s221_248 e247) (= g_s222_250 e249) (= g_s223_252 e251) (= g_s224_254 e253) (= g_s225_256 e255) (= g_s226_258 e257) (= g_s227_260 e259) (= g_s228_262 e261) (= g_s229_264 e263) (= g_s230_266 e265) (= g_s231_268 e267) (= g_s232_270 e269) (= g_s233_272 e271) (= g_s234_274 e273) (= g_s235_276 e275) (= g_s236_278 e277) (= g_s237_280 e279) (= g_s238_282 e281) (= g_s239_284 e283) (= g_s240_286 e285) (= g_s241_288 e287) (= g_s242_290 e289) (= g_s243_292 e291) (= g_s244_294 e293) (= g_s245_296 e295) (= g_s246_298 e297) (= g_s247_300 e299) (= g_s248_302 e301) (= g_s249_304 e303) (= g_s250_306 e305) (= g_s251_308 e307) (= g_s252_310 e309) (= g_s253_312 e311) (= g_s254_314 e313) (mem g_s255_315 g_s0_1) (mem g_s256_316 g_s0_1) (mem g_s257_317 g_s0_1) (mem g_s258_318 g_s0_1) (mem g_s259_319 g_s0_1) (mem g_s260_320 g_s0_1) (mem g_s261_321 g_s0_1) (mem g_s262_322 g_s0_1) (mem g_s263_323 g_s0_1) (mem g_s264_324 g_s0_1) (mem g_s265_325 g_s0_1) (mem g_s266_326 g_s0_1) (mem g_s267_327 g_s0_1) (mem g_s268_328 g_s0_1) (mem g_s269_329 g_s0_1) (mem g_s270_330 g_s0_1) (mem g_s271_331 g_s0_1) (mem g_s272_332 g_s0_1) (mem g_s273_333 g_s0_1) (mem g_s274_334 g_s0_1) (mem g_s275_335 g_s0_1) (mem g_s276_336 g_s0_1) (mem g_s277_337 g_s0_1) (mem g_s278_338 g_s0_1) (mem g_s279_339 g_s0_1) (mem g_s280_340 g_s0_1) (mem g_s281_341 g_s0_1) (mem g_s282_342 g_s0_1) (mem g_s283_343 g_s0_1) (mem g_s284_344 g_s0_1) (mem g_s285_345 g_s0_1) (mem g_s286_346 g_s0_1) (mem g_s287_347 g_s0_1) (mem g_s288_348 g_s0_1) (mem g_s289_349 g_s0_1) (mem g_s290_350 g_s0_1) (mem g_s291_351 g_s0_1) (mem g_s292_352 g_s0_1) (mem g_s293_353 g_s0_1) (mem g_s294_354 g_s0_1) (mem g_s295_355 g_s0_1) (mem g_s296_356 g_s0_1) (mem g_s297_357 g_s7_8) (mem g_s298_358 g_s7_8) (mem g_s299_359 g_s7_8) (mem g_s300_360 g_s7_8) (mem g_s301_361 g_s7_8) (mem g_s302_362 g_s7_8) (mem g_s303_363 g_s7_8) (mem g_s304_364 g_s7_8) (mem g_s305_365 g_s7_8) (mem g_s306_366 g_s7_8) (mem g_s307_367 g_s7_8) (mem g_s308_368 g_s7_8) (mem g_s309_369 g_s7_8) (mem g_s310_370 g_s7_8) (mem g_s311_371 g_s7_8) (mem g_s312_372 g_s7_8) (mem g_s313_373 g_s7_8) (mem g_s314_374 g_s7_8) (mem g_s315_375 g_s7_8) (mem g_s316_376 g_s7_8) (mem g_s317_377 g_s7_8) (mem g_s318_378 g_s7_8) (mem g_s319_379 g_s7_8) (mem g_s320_380 g_s7_8) (mem g_s321_381 g_s7_8) (mem g_s322_382 g_s7_8) (mem g_s323_383 g_s7_8) (mem g_s324_384 g_s7_8) (mem g_s325_385 g_s7_8) (mem g_s326_386 g_s7_8) (mem g_s327_387 g_s7_8) (mem g_s328_388 g_s7_8) (mem g_s329_389 g_s7_8) (mem g_s330_390 g_s7_8) (mem g_s331_391 g_s7_8) (mem g_s332_392 g_s7_8) (mem g_s333_393 g_s7_8) (mem g_s334_394 g_s7_8) (mem g_s335_395 g_s7_8) (mem g_s336_396 g_s7_8) (mem g_s337_397 g_s7_8) (mem g_s338_398 g_s7_8) (mem g_s339_399 g_s7_8) (mem g_s340_400 g_s7_8) (mem g_s341_401 g_s7_8) (mem g_s342_402 g_s7_8) (mem g_s343_403 g_s7_8) (mem g_s344_404 g_s7_8) (mem g_s345_405 g_s7_8) (mem g_s346_406 g_s7_8) (mem g_s347_407 g_s7_8) (mem g_s348_408 g_s7_8) (mem g_s349_409 g_s7_8) (mem g_s350_410 g_s7_8) (mem g_s351_411 g_s7_8) (mem g_s352_412 g_s7_8) (mem g_s353_413 g_s7_8) (mem g_s354_414 g_s7_8) (mem g_s355_415 g_s7_8) (mem g_s356_416 g_s7_8) (mem g_s357_417 g_s7_8) (mem g_s358_418 g_s7_8) (mem g_s359_419 g_s7_8) (mem g_s360_420 g_s7_8) (mem g_s361_421 g_s7_8) (mem g_s362_422 g_s7_8) (mem g_s363_423 g_s7_8) (mem g_s364_424 g_s7_8) (mem g_s365_425 g_s7_8) (mem g_s366_426 g_s7_8) (mem g_s367_427 g_s7_8) (mem g_s368_428 g_s7_8) (mem g_s369_429 g_s7_8) (mem g_s370_430 g_s7_8) (mem g_s371_431 g_s7_8) (mem g_s372_432 g_s7_8) (mem g_s373_433 g_s7_8) (mem g_s374_434 g_s7_8) (mem g_s375_435 g_s7_8) (mem g_s376_436 g_s7_8) (mem g_s377_437 g_s7_8) (mem g_s378_438 g_s7_8) (mem g_s379_439 g_s7_8) (mem g_s380_440 g_s7_8) (mem g_s381_441 g_s7_8) (mem g_s382_442 g_s7_8) (mem g_s383_443 g_s7_8) (mem g_s384_444 g_s7_8) (mem g_s385_445 g_s7_8) (mem g_s386_446 g_s7_8) (mem g_s387_447 g_s7_8) (mem g_s388_448 g_s7_8) (mem g_s389_449 g_s7_8) (mem g_s390_450 g_s7_8) (mem g_s391_451 g_s7_8) (mem g_s392_452 g_s7_8) (mem g_s393_453 g_s7_8) (mem g_s394_454 g_s7_8) (mem g_s395_455 g_s7_8) (mem g_s396_456 g_s7_8) (mem g_s397_457 g_s7_8) (mem g_s398_458 g_s7_8) (mem g_s399_459 g_s7_8) (mem g_s400_460 g_s7_8) (mem g_s401_461 g_s7_8) (mem g_s402_462 g_s7_8) (mem g_s403_463 g_s7_8) (mem g_s404_464 g_s7_8) (mem g_s405_465 g_s7_8) (mem g_s406_466 g_s7_8) (mem g_s407_467 g_s7_8) (mem g_s408_468 g_s7_8) (mem g_s409_469 g_s7_8) (mem g_s410_470 g_s7_8) (mem g_s411_471 g_s7_8) (mem g_s412_472 g_s7_8) (mem g_s413_473 g_s7_8) (mem g_s414_474 g_s7_8) (mem g_s415_475 g_s7_8) (mem g_s416_476 g_s7_8) (mem g_s417_477 g_s7_8) (mem g_s418_478 g_s7_8) (mem g_s419_479 g_s7_8) (mem g_s420_480 g_s7_8) (mem g_s421_481 g_s7_8) (mem g_s422_482 g_s7_8) (mem g_s423_483 g_s7_8) (mem g_s424_484 g_s7_8) (mem g_s425_485 g_s7_8) (mem g_s426_486 g_s7_8) (mem g_s427_487 g_s7_8) (mem g_s428_488 g_s7_8) (mem g_s429_489 g_s7_8) (mem g_s430_490 g_s7_8) (mem g_s431_491 g_s7_8) (mem g_s432_492 g_s7_8) (mem g_s433_493 g_s7_8) (mem g_s434_494 g_s7_8) (mem g_s435_495 g_s7_8) (mem g_s436_496 g_s7_8) (mem g_s437_497 g_s7_8) (mem g_s438_498 g_s7_8) (mem g_s439_499 g_s7_8) (mem g_s440_500 g_s7_8) (mem g_s441_501 g_s7_8) (mem g_s442_502 g_s7_8) (mem g_s443_503 g_s7_8) (mem g_s444_504 g_s7_8) (mem g_s445_505 g_s7_8) (mem g_s446_506 g_s7_8) (mem g_s447_507 g_s7_8) (mem g_s448_508 g_s7_8) (mem g_s449_509 g_s7_8) (mem g_s450_510 g_s7_8) (mem g_s451_511 g_s7_8) (mem g_s452_512 g_s7_8) (mem g_s453_513 g_s7_8) (mem g_s454_514 g_s7_8) (mem g_s455_515 g_s7_8) (mem g_s456_516 g_s7_8) (mem g_s457_517 g_s7_8) (mem g_s458_518 g_s7_8) (mem g_s459_519 g_s7_8) (mem g_s460_520 g_s7_8) (mem g_s461_521 g_s7_8) (mem g_s462_522 g_s7_8) (mem g_s463_523 g_s7_8) (mem g_s464_524 g_s7_8) (mem g_s465_525 g_s7_8) (mem g_s466_526 g_s7_8) (mem g_s467_527 g_s7_8) (mem g_s468_528 g_s7_8) (mem g_s469_529 g_s7_8) (mem g_s470_530 g_s7_8) (mem g_s471_531 g_s7_8) (mem g_s472_532 g_s7_8) (mem g_s473_533 g_s7_8) (mem g_s474_534 g_s7_8) (mem g_s475_535 g_s7_8) (mem g_s476_536 g_s7_8) (mem g_s477_537 g_s7_8) (mem g_s478_538 g_s7_8) (mem g_s479_539 g_s7_8) (mem g_s480_540 g_s7_8) (mem g_s481_541 g_s7_8) (mem g_s482_542 g_s7_8) (mem g_s483_543 g_s7_8) (mem g_s484_544 g_s7_8) (mem g_s485_545 g_s7_8) (mem g_s486_546 g_s7_8) (mem g_s487_547 g_s7_8) (mem g_s488_548 g_s7_8) (mem g_s489_549 g_s7_8) (mem g_s490_550 g_s7_8) (mem g_s491_551 g_s7_8)))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s492_552 (|+->| g_s168_170 g_s140_142)) (mem g_s493_553 (|+->| g_s168_170 g_s140_142)) (mem g_s494_554 (|-->| g_s168_170 NAT)) (mem g_s495_555 (|-->| g_s168_170 (|+->| g_s137_139 g_s188_190))) (mem g_s496_556 (|+->| g_s168_170 g_s119_121)) (mem g_s497_557 (|+->| g_s168_170 g_s119_121)) (subset g_s498_558 g_s168_170)))
(define-fun |def_inv| () Bool (and (= g_s492_552 (range_restriction (domain_restriction g_s168_170 g_s499$1_559) g_s140_142)) (= g_s493_553 (range_restriction (domain_restriction g_s168_170 g_s500$1_560) g_s140_142)) (= g_s494_554 (range_restriction (domain_restriction g_s168_170 g_s501$1_561) NAT)) (= g_s495_555 e562) (= g_s496_556 (range_restriction (domain_restriction g_s168_170 g_s505$1_563) g_s119_121)) (= g_s497_557 (range_restriction (domain_restriction g_s168_170 g_s506$1_564) g_s119_121)) (= g_s498_558 (binary_inter g_s168_170 (image (inverse g_s507$1_565) (SET TRUE))))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s499$1_559 (|-->| g_s105_106 g_s95_96)) (mem g_s500$1_560 (|-->| g_s105_106 g_s95_96)) (mem g_s501$1_561 (|-->| g_s105_106 NAT)) (mem g_s504$1_566 (|-->| (set_prod g_s105_106 g_s94_95) g_s26_27)) (mem g_s505$1_563 (|-->| g_s105_106 g_s118_120)) (mem g_s506$1_564 (|-->| g_s105_106 g_s118_120)) (mem g_s507$1_565 (|-->| g_s105_106 BOOL))))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem (set_prod g_s105_106 (SET g_s141_143)) (|-->| g_s105_106 g_s95_96)))
(define-fun lh_2 () Bool (mem (set_prod g_s105_106 (SET e0)) (|-->| g_s105_106 NAT)))
(define-fun lh_3 () Bool (mem (set_prod (set_prod g_s105_106 g_s94_95) (SET g_s27_28)) (|-->| (set_prod g_s105_106 g_s94_95) g_s26_27)))
(define-fun lh_4 () Bool (mem (set_prod g_s105_106 (SET e0)) (|-->| g_s105_106 g_s118_120)))
(define-fun lh_5 () Bool (mem (set_prod g_s105_106 (SET FALSE)) (|-->| g_s105_106 BOOL)))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= empty (binary_inter g_s168_170 (image (inverse (set_prod g_s105_106 (SET FALSE))) (SET TRUE)))))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= empty (range_restriction (domain_restriction g_s168_170 (set_prod g_s105_106 (SET g_s141_143))) g_s140_142)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= (set_prod g_s168_170 (SET empty)) e567))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= (set_prod g_s168_170 (SET e0)) (range_restriction (domain_restriction g_s168_170 (set_prod g_s105_106 (SET e0))) NAT)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= (set_prod g_s168_170 (SET e0)) (range_restriction (domain_restriction g_s168_170 (set_prod g_s105_106 (SET e0))) g_s119_121)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s196_198 NAT))
(define-fun lh_2 () Bool (mem g_s454_514 g_s7_8))
(define-fun lh_3 () Bool (mem g_s280_340 g_s0_1))
(define-fun lh_4 () Bool (mem g_s259_319 g_s0_1))
(define-fun lh_5 () Bool (mem g_s499$2_568 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_6 () Bool (mem g_s500$2_569 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_7 () Bool (mem g_s501$2_570 (|-->| g_s105_106 NAT)))
(define-fun lh_8 () Bool (mem g_s504$2_571 (|-->| (set_prod g_s105_106 g_s94_95) g_s26_27)))
(define-fun lh_9 () Bool (mem g_s505$2_572 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_10 () Bool (mem g_s506$2_573 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_11 () Bool (mem g_s507$2_574 (|-->| g_s105_106 BOOL)))
(define-fun lh_12 () Bool (mem g_s197_200 NAT))
(define-fun lh_13 () Bool (mem g_s455_515 g_s7_8))
(define-fun lh_14 () Bool (mem g_s499$3_575 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_15 () Bool (mem g_s500$3_576 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_16 () Bool (mem g_s501$3_577 (|-->| g_s105_106 NAT)))
(define-fun lh_17 () Bool (mem g_s504$3_578 (|-->| (set_prod g_s105_106 g_s94_95) g_s26_27)))
(define-fun lh_18 () Bool (mem g_s505$3_579 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_19 () Bool (mem g_s506$3_580 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_20 () Bool (mem g_s507$3_581 (|-->| g_s105_106 BOOL)))
(define-fun lh_21 () Bool (mem g_s198_202 NAT))
(define-fun lh_22 () Bool (mem g_s456_516 g_s7_8))
(define-fun lh_23 () Bool (mem g_s499$4_582 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_24 () Bool (mem g_s500$4_583 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_25 () Bool (mem g_s501$4_584 (|-->| g_s105_106 NAT)))
(define-fun lh_26 () Bool (mem g_s504$4_585 (|-->| (set_prod g_s105_106 g_s94_95) g_s26_27)))
(define-fun lh_27 () Bool (mem g_s505$4_586 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_28 () Bool (mem g_s506$4_587 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_29 () Bool (mem g_s507$4_588 (|-->| g_s105_106 BOOL)))
(define-fun lh_30 () Bool (mem g_s199_204 NAT))
(define-fun lh_31 () Bool (mem g_s457_517 g_s7_8))
(define-fun lh_32 () Bool (mem g_s499$5_589 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_33 () Bool (mem g_s500$5_590 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_34 () Bool (mem g_s501$5_591 (|-->| g_s105_106 NAT)))
(define-fun lh_35 () Bool (mem g_s504$5_592 (|-->| (set_prod g_s105_106 g_s94_95) g_s26_27)))
(define-fun lh_36 () Bool (mem g_s505$5_593 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_37 () Bool (mem g_s506$5_594 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_38 () Bool (mem g_s507$5_595 (|-->| g_s105_106 BOOL)))
(define-fun lh_39 () Bool (mem g_s200_206 NAT))
(define-fun lh_40 () Bool (mem g_s458_518 g_s7_8))
(define-fun lh_41 () Bool (mem g_s499$6_596 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_42 () Bool (mem g_s500$6_597 (|-->| g_s105_106 g_s95_96)))
(define-fun lh_43 () Bool (mem g_s501$6_598 (|-->| g_s105_106 NAT)))
(define-fun lh_44 () Bool (mem g_s504$6_599 (|-->| (set_prod g_s105_106 g_s94_95) g_s26_27)))
(define-fun lh_45 () Bool (mem g_s505$6_600 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_46 () Bool (mem g_s506$6_601 (|-->| g_s105_106 g_s118_120)))
(define-fun lh_47 () Bool (mem g_s507$6_602 (|-->| g_s105_106 BOOL)))
; PO 1 in group 1
(push 1)
(assert (not (mem g_s196_198 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s197_200 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (mem g_s198_202 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29) (mem g_s199_204 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38) (mem g_s200_206 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem e603 (|-->| g_s168_170 (|+->| g_s137_139 g_s188_190))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s168_170 g_s500$6_597) g_s140_142) (|+->| g_s168_170 g_s140_142)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s168_170 g_s501$6_598) NAT) (|-->| g_s168_170 NAT)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s168_170 g_s506$6_601) g_s119_121) (|+->| g_s168_170 g_s119_121)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s168_170 g_s505$6_600) g_s119_121) (|+->| g_s168_170 g_s119_121)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s168_170 g_s499$6_596) g_s140_142) (|+->| g_s168_170 g_s140_142)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (subset (binary_inter g_s168_170 (image (inverse g_s507$6_602) (SET TRUE))) g_s168_170))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(assert (= g_s514$1_607 g_s514_606))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem (apply g_s499$1_559 g_s515_608) g_s95_96))
(define-fun lh_4 () Bool (mem g_s515_608 (dom g_s492_552)))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s499$1_559 g_s515_608) g_s140_142)) (bool (mem g_s515_608 (dom g_s492_552)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s499$1_559 g_s515_608) (apply g_s492_552 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem (apply g_s499$1_559 g_s515_608) g_s95_96))
; PO 1 in group 3
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s499$1_559 g_s515_608) g_s140_142)) (bool (mem g_s515_608 (dom g_s492_552)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_607 g_s514_606))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s515_608 (dom g_s492_552)))
; PO 1 in group 4
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s499$1_559 g_s515_608) (apply g_s492_552 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_610 g_s514_609))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s519_611 g_s95_96))
(define-fun lh_4 () Bool (mem g_s519_611 g_s140_142))
; PO 1 in group 5
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (= g_s519_611 (apply g_s499$1_559 g_s515_608))) (bool (mem (mapplet g_s515_608 g_s519_611) g_s492_552))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(assert (= g_s514$1_607 g_s514_606))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem (apply g_s500$1_560 g_s515_608) g_s95_96))
(define-fun lh_4 () Bool (mem g_s515_608 (dom g_s493_553)))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s500$1_560 g_s515_608) g_s140_142)) (bool (mem g_s515_608 (dom g_s493_553)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s500$1_560 g_s515_608) (apply g_s493_553 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem (apply g_s500$1_560 g_s515_608) g_s95_96))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s500$1_560 g_s515_608) g_s140_142)) (bool (mem g_s515_608 (dom g_s493_553)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_607 g_s514_606))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s515_608 (dom g_s493_553)))
; PO 1 in group 8
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s500$1_560 g_s515_608) (apply g_s493_553 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_610 g_s514_609))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s519_611 g_s95_96))
(define-fun lh_4 () Bool (mem g_s519_611 g_s140_142))
; PO 1 in group 9
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (= g_s519_611 (apply g_s500$1_560 g_s515_608))) (bool (mem (mapplet g_s515_608 g_s519_611) g_s493_553))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_613 g_s514_612))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s494_554 g_s515_608) NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (apply g_s501$1_561 g_s515_608) (apply g_s494_554 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(assert (= g_s514$1_615 g_s514_614))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s526_616 g_s94_95))
(define-fun lh_4 () Bool (mem g_s526_616 g_s137_139))
(define-fun lh_5 () Bool (mem (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616)) g_s26_27))
(define-fun lh_6 () Bool (mem (apply g_s191_193 (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616))) g_s62_63))
(define-fun lh_7 () Bool (mem g_s526_616 (dom (apply g_s495_555 g_s515_608))))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= (bool (mem (apply g_s191_193 (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616))) g_s188_190)) (bool (mem g_s526_616 (dom (apply g_s495_555 g_s515_608))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= (apply g_s191_193 (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616))) (apply (apply g_s495_555 g_s515_608) g_s526_616)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s526_616 g_s94_95))
(define-fun lh_4 () Bool (mem g_s526_616 g_s137_139))
(define-fun lh_5 () Bool (mem (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616)) g_s26_27))
(define-fun lh_6 () Bool (mem (apply g_s191_193 (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616))) g_s62_63))
; PO 1 in group 12
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (bool (mem (apply g_s191_193 (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616))) g_s188_190)) (bool (mem g_s526_616 (dom (apply g_s495_555 g_s515_608))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_615 g_s514_614))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s526_616 g_s94_95))
(define-fun lh_4 () Bool (mem g_s526_616 g_s137_139))
(define-fun lh_5 () Bool (mem g_s526_616 (dom (apply g_s495_555 g_s515_608))))
(define-fun lh_6 () Bool (mem (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616)) g_s26_27))
; PO 1 in group 13
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (apply g_s191_193 (apply g_s504$1_566 (mapplet g_s515_608 g_s526_616))) (apply (apply g_s495_555 g_s515_608) g_s526_616)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(assert (= g_s514$1_613 g_s514_612))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem (apply g_s505$1_563 g_s515_608) g_s118_120))
(define-fun lh_4 () Bool (mem g_s515_608 (dom g_s496_556)))
; PO 1 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s505$1_563 g_s515_608) g_s118_120))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s496_556 g_s515_608) g_s118_120))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s505$1_563 g_s515_608) g_s119_121)) (bool (mem g_s515_608 (dom g_s496_556)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s505$1_563 g_s515_608) (apply g_s496_556 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem (apply g_s505$1_563 g_s515_608) g_s118_120))
; PO 1 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s505$1_563 g_s515_608) g_s118_120))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s505$1_563 g_s515_608) g_s119_121)) (bool (mem g_s515_608 (dom g_s496_556)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_613 g_s514_612))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s515_608 (dom g_s496_556)))
; PO 1 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (apply g_s496_556 g_s515_608) g_s118_120))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s505$1_563 g_s515_608) (apply g_s496_556 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(assert (= g_s514$1_613 g_s514_612))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem (apply g_s506$1_564 g_s515_608) g_s118_120))
(define-fun lh_4 () Bool (mem g_s515_608 (dom g_s497_557)))
; PO 1 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s506$1_564 g_s515_608) g_s118_120))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s497_557 g_s515_608) g_s118_120))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s506$1_564 g_s515_608) g_s119_121)) (bool (mem g_s515_608 (dom g_s497_557)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s506$1_564 g_s515_608) (apply g_s497_557 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_605 g_s513_604))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem (apply g_s506$1_564 g_s515_608) g_s118_120))
; PO 1 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s506$1_564 g_s515_608) g_s118_120))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s506$1_564 g_s515_608) g_s119_121)) (bool (mem g_s515_608 (dom g_s497_557)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_613 g_s514_612))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
(define-fun lh_3 () Bool (mem g_s515_608 (dom g_s497_557)))
; PO 1 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (apply g_s497_557 g_s515_608) g_s118_120))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s506$1_564 g_s515_608) (apply g_s497_557 g_s515_608)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s514$1_610 g_s514_609))
(define-fun lh_1 () Bool (mem g_s515_608 g_s105_106))
(define-fun lh_2 () Bool (mem g_s515_608 g_s168_170))
; PO 1 in group 20
(assert (not (=> (and lh_1 lh_2) (= (apply g_s507$1_565 g_s515_608) (bool (mem g_s515_608 g_s498_558))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(define-fun lh_1 () Bool (= g_s492_552 (range_restriction (domain_restriction g_s168_170 g_s499$1_559) g_s140_142)))
(define-fun lh_2 () Bool (= g_s493_553 (range_restriction (domain_restriction g_s168_170 g_s500$1_560) g_s140_142)))
(define-fun lh_3 () Bool (= g_s494_554 (range_restriction (domain_restriction g_s168_170 g_s501$1_561) NAT)))
(define-fun lh_4 () Bool (mem g_s502_617 g_s168_170))
(define-fun lh_5 () Bool (mem g_s503_618 g_s137_139))
(define-fun lh_6 () Bool (mem (apply g_s191_193 (apply g_s504$1_566 (mapplet g_s502_617 g_s503_618))) g_s188_190))
; PO 1 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s504$1_566 (|+->| (dom g_s504$1_566) (ran g_s504$1_566))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s191_193 (|+->| (dom g_s191_193) (ran g_s191_193))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (mapplet g_s502_617 g_s503_618) (dom g_s504$1_566)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s504$1_566 (mapplet g_s502_617 g_s503_618)) (dom g_s191_193)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s504$1_566 (|+->| (dom g_s504$1_566) (ran g_s504$1_566))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s191_193 (|+->| (dom g_s191_193) (ran g_s191_193))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (mapplet g_s502_617 g_s503_618) (dom g_s504$1_566)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (apply g_s504$1_566 (mapplet g_s502_617 g_s503_618)) (dom g_s191_193)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 22
(push 1)
(assert (not (mem g_s515_608 (dom g_s499$1_559))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 22
(push 1)
(assert (not (mem g_s499$1_559 (|+->| (dom g_s499$1_559) (ran g_s499$1_559)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 23
(push 1)
(assert (not (mem g_s515_608 (dom g_s499$1_559))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 23
(push 1)
(assert (not (mem g_s499$1_559 (|+->| (dom g_s499$1_559) (ran g_s499$1_559)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 24 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s515_608 (dom g_s492_552)))
; PO 1 in group 24
(push 1)
(assert (not (mem g_s515_608 (dom g_s499$1_559))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 24
(push 1)
(assert (not (mem g_s499$1_559 (|+->| (dom g_s499$1_559) (ran g_s499$1_559)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 25 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s519_611 g_s95_96))
(assert (mem g_s519_611 g_s140_142))
; PO 1 in group 25
(push 1)
(assert (not (mem g_s515_608 (dom g_s499$1_559))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 25
(push 1)
(assert (not (mem g_s499$1_559 (|+->| (dom g_s499$1_559) (ran g_s499$1_559)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 26 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 26
(push 1)
(assert (not (mem g_s500$1_560 (|+->| (dom g_s500$1_560) (ran g_s500$1_560)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 26
(push 1)
(assert (not (mem g_s515_608 (dom g_s500$1_560))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 27 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 27
(push 1)
(assert (not (mem g_s500$1_560 (|+->| (dom g_s500$1_560) (ran g_s500$1_560)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 27
(push 1)
(assert (not (mem g_s515_608 (dom g_s500$1_560))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 28 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s515_608 (dom g_s493_553)))
; PO 1 in group 28
(push 1)
(assert (not (mem g_s500$1_560 (|+->| (dom g_s500$1_560) (ran g_s500$1_560)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 28
(push 1)
(assert (not (mem g_s515_608 (dom g_s500$1_560))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 29 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s519_611 g_s95_96))
(assert (mem g_s519_611 g_s140_142))
; PO 1 in group 29
(push 1)
(assert (not (mem g_s500$1_560 (|+->| (dom g_s500$1_560) (ran g_s500$1_560)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 29
(push 1)
(assert (not (mem g_s515_608 (dom g_s500$1_560))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 30 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 30
(push 1)
(assert (not (mem g_s501$1_561 (|+->| (dom g_s501$1_561) (ran g_s501$1_561)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 30
(push 1)
(assert (not (mem g_s515_608 (dom g_s501$1_561))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 31 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s526_616 g_s94_95))
(assert (mem g_s526_616 g_s137_139))
; PO 1 in group 31
(push 1)
(assert (not (mem g_s504$1_566 (|+->| (dom g_s504$1_566) (ran g_s504$1_566)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 31
(push 1)
(assert (not (mem (mapplet g_s515_608 g_s526_616) (dom g_s504$1_566))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 32 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s526_616 g_s94_95))
(assert (mem g_s526_616 g_s137_139))
; PO 1 in group 32
(push 1)
(assert (not (mem g_s504$1_566 (|+->| (dom g_s504$1_566) (ran g_s504$1_566)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 32
(push 1)
(assert (not (mem (mapplet g_s515_608 g_s526_616) (dom g_s504$1_566))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 33 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s526_616 g_s94_95))
(assert (mem g_s526_616 g_s137_139))
(assert (mem g_s526_616 (dom (apply g_s495_555 g_s515_608))))
; PO 1 in group 33
(push 1)
(assert (not (mem g_s504$1_566 (|+->| (dom g_s504$1_566) (ran g_s504$1_566)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 33
(push 1)
(assert (not (mem (mapplet g_s515_608 g_s526_616) (dom g_s504$1_566))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 34 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 34
(push 1)
(assert (not (mem g_s505$1_563 (|+->| (dom g_s505$1_563) (ran g_s505$1_563)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 34
(push 1)
(assert (not (mem g_s515_608 (dom g_s505$1_563))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 35 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 35
(push 1)
(assert (not (mem g_s505$1_563 (|+->| (dom g_s505$1_563) (ran g_s505$1_563)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 35
(push 1)
(assert (not (mem g_s515_608 (dom g_s505$1_563))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 36 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s515_608 (dom g_s496_556)))
; PO 1 in group 36
(push 1)
(assert (not (mem g_s505$1_563 (|+->| (dom g_s505$1_563) (ran g_s505$1_563)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 36
(push 1)
(assert (not (mem g_s515_608 (dom g_s505$1_563))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 37 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 37
(push 1)
(assert (not (mem g_s506$1_564 (|+->| (dom g_s506$1_564) (ran g_s506$1_564)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 37
(push 1)
(assert (not (mem g_s515_608 (dom g_s506$1_564))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 38 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 38
(push 1)
(assert (not (mem g_s506$1_564 (|+->| (dom g_s506$1_564) (ran g_s506$1_564)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 38
(push 1)
(assert (not (mem g_s515_608 (dom g_s506$1_564))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 39 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
(assert (mem g_s515_608 (dom g_s497_557)))
; PO 1 in group 39
(push 1)
(assert (not (mem g_s506$1_564 (|+->| (dom g_s506$1_564) (ran g_s506$1_564)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 39
(push 1)
(assert (not (mem g_s515_608 (dom g_s506$1_564))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 40 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s515_608 g_s105_106))
(assert (mem g_s515_608 g_s168_170))
; PO 1 in group 40
(push 1)
(assert (not (mem g_s515_608 (dom g_s507$1_565))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 40
(push 1)
(assert (not (mem g_s507$1_565 (|+->| (dom g_s507$1_565) (ran g_s507$1_565)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)