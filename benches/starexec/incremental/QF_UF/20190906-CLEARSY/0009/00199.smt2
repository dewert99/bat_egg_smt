(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e15 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s14_16 () U)
(declare-fun g_s15_17 () U)
(declare-fun g_s16_18 () U)
(declare-fun g_s17_19 () U)
(declare-fun g_s18_20 () U)
(declare-fun g_s19_21 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_22 () U)
(declare-fun g_s21_23 () U)
(declare-fun g_s22_24 () U)
(declare-fun g_s23_25 () U)
(declare-fun g_s24_26 () U)
(declare-fun g_s25_27 () U)
(declare-fun g_s26_28 () U)
(declare-fun g_s27_29 () U)
(declare-fun g_s28_30 () U)
(declare-fun g_s29_31 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_32 () U)
(declare-fun g_s31_33 () U)
(declare-fun g_s32_34 () U)
(declare-fun g_s33_35 () U)
(declare-fun g_s34_36 () U)
(declare-fun g_s35_37 () U)
(declare-fun g_s36_38 () U)
(declare-fun g_s37_39 () U)
(declare-fun g_s38_40 () U)
(declare-fun g_s39_41 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_42 () U)
(declare-fun g_s41_43 () U)
(declare-fun g_s42_44 () U)
(declare-fun g_s43_45 () U)
(declare-fun g_s44_46 () U)
(declare-fun g_s45_47 () U)
(declare-fun g_s46_48 () U)
(declare-fun g_s47_49 () U)
(declare-fun g_s48_50 () U)
(declare-fun g_s49_51 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_52 () U)
(declare-fun g_s51_53 () U)
(declare-fun g_s52_54 () U)
(declare-fun g_s53_55 () U)
(declare-fun g_s54_56 () U)
(declare-fun g_s55_57 () U)
(declare-fun g_s56_58 () U)
(declare-fun g_s57_59 () U)
(declare-fun g_s58_60 () U)
(declare-fun g_s59_61 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_62 () U)
(declare-fun g_s61_63 () U)
(declare-fun g_s62_64 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s69$1_75 () U)
(declare-fun g_s69$2_80 () U)
(declare-fun g_s69$3_85 () U)
(declare-fun g_s69$4_89 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s70$1_76 () U)
(declare-fun g_s70$2_81 () U)
(declare-fun g_s70$3_86 () U)
(declare-fun g_s70$4_90 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s71$1_77 () U)
(declare-fun g_s71$2_82 () U)
(declare-fun g_s71$3_87 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s72$1_78 () U)
(declare-fun g_s72$2_83 () U)
(declare-fun g_s72$3_88 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74$1_79 () U)
(declare-fun g_s78_84 () U)
(declare-fun g_s79$1_91 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80$1_92 () U)
(declare-fun g_s82_93 () U)
(declare-fun g_s82$1_94 () U)
(declare-fun g_s83_95 () U)
(declare-fun g_s83$1_96 () U)
(declare-fun g_s83$2_99 () U)
(declare-fun g_s84_97 () U)
(declare-fun g_s85_98 () U)
(declare-fun g_s87_100 () U)
(declare-fun g_s87$1_101 () U)
(declare-fun g_s89_102 () U)
(declare-fun g_s89$1_103 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_104 () U)
(declare-fun g_s90$1_105 () U)
(declare-fun g_s90$2_106 () U)
(declare-fun g_s92_107 () U)
(declare-fun g_s92$1_108 () U)
(declare-fun g_s93_109 () U)
(declare-fun g_s93$1_110 () U)
(declare-fun g_s93$2_111 () U)
(declare-fun e13 () U)
(declare-fun e12 () U)
(declare-fun e65 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (mem g_s10_11 (|-->| (set_prod INTEGER NATURAL) INTEGER)) (= g_s10_11 (binary_union e13 e12)) (mem g_s13_14 (|-->| BOOL NAT)) (= g_s13_14 (SET (mapplet (mapplet FALSE e0) (mapplet TRUE e15)))) (subset g_s14_16 g_s8_9) (mem g_s15_17 g_s8_9) (not (mem g_s15_17 g_s14_16)) (mem g_s16_18 (|+->| NAT g_s8_9)) (mem g_s16_18 (perm g_s14_16)) (mem g_s17_19 (|>->| g_s14_16 NAT)) (= g_s17_19 (inverse g_s16_18)) (= (card g_s14_16) g_s18_20) (subset g_s19_21 g_s9_10) (mem g_s20_22 g_s9_10) (not (mem g_s20_22 g_s19_21)) (mem g_s21_23 (|+->| NAT g_s9_10)) (mem g_s21_23 (perm g_s19_21)) (mem g_s22_24 (|>->| g_s19_21 NAT)) (= g_s22_24 (inverse g_s21_23)) (= (card g_s19_21) g_s23_25) (= g_s24_26 INT) (= g_s25_27 NAT) (= g_s26_28 NAT1) (subset g_s26_28 g_s25_27) (subset g_s25_27 g_s24_26) (= g_s27_29 INT) (= g_s28_30 NAT) (subset g_s28_30 g_s27_29) (mem g_s29_31 g_s24_26) (mem g_s29_31 g_s25_27) (not (mem g_s29_31 g_s26_28)) (mem g_s30_32 g_s24_26) (not (mem g_s30_32 g_s25_27)) (mem g_s31_33 g_s27_29) (mem g_s31_33 g_s28_30) (mem g_s32_34 g_s27_29) (not (mem g_s32_34 g_s28_30)) (= g_s33_35 INT) (= g_s34_36 INT) (= g_s35_37 NATURAL) (= g_s36_38 NATURAL) (mem g_s37_39 (|+->| (set_prod g_s33_35 g_s33_35) g_s33_35)) (subset g_s38_40 g_s33_35) (mem g_s39_41 (|-->| (set_prod g_s25_27 g_s25_27) g_s33_35)) (mem g_s40_42 (|+->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s41_43 (|-->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s42_44 (|-->| (set_prod g_s25_27 g_s33_35) (POW g_s25_27))) (mem g_s43_45 (|-->| (set_prod g_s25_27 g_s25_27) (POW g_s25_27))) (mem g_s44_46 (|-->| (set_prod g_s25_27 g_s25_27) (POW g_s25_27))) (mem g_s45_47 (|-->| (set_prod g_s25_27 g_s25_27) (POW g_s25_27))) (mem g_s46_48 (|-->| (set_prod g_s25_27 g_s25_27) (POW g_s25_27))) (mem g_s47_49 (|<->| g_s25_27 g_s25_27)) (mem g_s48_50 (|<->| g_s25_27 g_s25_27)) (mem g_s49_51 (|<->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s50_52 (|<->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s51_53 (|<->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s52_54 (|<->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s53_55 (|<->| g_s25_27 g_s25_27)) (mem g_s54_56 (|<->| g_s25_27 g_s25_27)) (mem g_s55_57 (|<->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s56_58 (|<->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s57_59 (|<->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s58_60 (|<->| (set_prod g_s25_27 g_s33_35) g_s25_27)) (mem g_s59_61 (|-->| (set_prod g_s25_27 g_s25_27) g_s25_27)) (mem g_s60_62 (|-->| (set_prod g_s25_27 g_s25_27) g_s25_27)) (mem g_s61_63 (|-->| (set_prod g_s24_26 g_s24_26) g_s24_26)) (mem g_s62_64 (|-->| (set_prod g_s24_26 g_s24_26) g_s24_26)) (= (dom g_s40_42) (set_prod g_s25_27 NAT)) (= (dom g_s37_39) e65)))
(define-fun |def_seext| () Bool (and (mem g_s65_66 g_s24_26) (mem g_s65_66 g_s25_27) (mem g_s66_67 g_s27_29) (mem g_s66_67 g_s28_30) (mem g_s67_68 g_s33_35) (mem g_s67_68 NAT) (mem g_s68_69 g_s34_36) (mem g_s68_69 NAT)))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s69_70 (|+->| g_s14_16 g_s25_27)) (mem g_s70_71 (|+->| g_s14_16 g_s25_27)) (mem g_s71_72 (|+->| g_s14_16 g_s33_35)) (mem g_s72_73 (|+->| g_s14_16 g_s25_27)) (subset g_s73_74 g_s14_16) (= (dom g_s69_70) (dom g_s70_71)) (= (dom g_s72_73) (dom g_s71_72))))
(define-fun |def_inv| () Bool (and (= g_s69_70 g_s69$1_75) (= g_s70_71 g_s70$1_76) (= g_s71_72 g_s71$1_77) (= g_s72_73 g_s72$1_78) (mem g_s74$1_79 (|-->| g_s8_9 BOOL)) (= g_s73_74 (binary_inter g_s14_16 (image (inverse g_s74$1_79) (SET TRUE))))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s69$1_75 (|+->| g_s14_16 g_s25_27)) (mem g_s70$1_76 (|+->| g_s14_16 g_s25_27)) (mem g_s71$1_77 (|+->| g_s14_16 g_s33_35)) (mem g_s72$1_78 (|+->| g_s14_16 g_s25_27)) (= (dom g_s69$1_75) (dom g_s70$1_76)) (= (dom g_s72$1_78) (dom g_s71$1_77))))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (= g_s69$2_80 empty))
(define-fun lh_2 () Bool (= g_s70$2_81 empty))
(define-fun lh_3 () Bool (= g_s71$2_82 empty))
(define-fun lh_4 () Bool (= g_s72$2_83 empty))
(define-fun lh_5 () Bool (mem g_s69$2_80 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_6 () Bool (mem g_s70$2_81 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_7 () Bool (mem g_s71$2_82 (|+->| g_s14_16 g_s33_35)))
(define-fun lh_8 () Bool (mem g_s72$2_83 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_9 () Bool (= (dom g_s69$2_80) (dom g_s70$2_81)))
(define-fun lh_10 () Bool (= (dom g_s72$2_83) (dom g_s71$2_82)))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem empty (|+->| g_s14_16 g_s33_35)))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem empty (|+->| g_s14_16 g_s25_27)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem (set_prod g_s8_9 (SET FALSE)) (|-->| g_s8_9 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (subset (binary_inter g_s14_16 (image (inverse (set_prod g_s8_9 (SET FALSE))) (SET TRUE))) g_s14_16))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= empty g_s69$2_80))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= empty g_s71$2_82))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= empty g_s70$2_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= empty g_s72$2_83))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s78_84 g_s8_9))
(define-fun lh_2 () Bool (mem g_s78_84 g_s14_16))
(define-fun lh_3 () Bool (mem g_s69$2_80 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_4 () Bool (mem g_s70$2_81 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_5 () Bool (mem g_s71$2_82 (|+->| g_s14_16 g_s33_35)))
(define-fun lh_6 () Bool (mem g_s72$2_83 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_7 () Bool (= (dom g_s69$2_80) (dom g_s70$2_81)))
(define-fun lh_8 () Bool (= (dom g_s72$2_83) (dom g_s71$2_82)))
(define-fun lh_9 () Bool (mem g_s69$3_85 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_10 () Bool (mem g_s70$3_86 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_11 () Bool (mem g_s71$3_87 (|+->| g_s14_16 g_s33_35)))
(define-fun lh_12 () Bool (mem g_s72$3_88 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_13 () Bool (= (dom g_s69$3_85) (dom g_s70$3_86)))
(define-fun lh_14 () Bool (= (dom g_s72$3_88) (dom g_s71$3_87)))
(define-fun lh_15 () Bool (mem g_s69$4_89 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_16 () Bool (mem g_s70$4_90 (|+->| g_s14_16 g_s25_27)))
(define-fun lh_17 () Bool (= (dom g_s69$4_89) (dom g_s70$4_90)))
(define-fun lh_18 () Bool (mem g_s79$1_91 g_s1_2))
(define-fun lh_19 () Bool (mem g_s80$1_92 BOOL))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (mem (|<+| g_s74$1_79 (SET (mapplet g_s78_84 g_s80$1_92))) (|-->| g_s8_9 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19) (subset (binary_inter g_s14_16 (image (inverse (|<+| g_s74$1_79 (SET (mapplet g_s78_84 g_s80$1_92)))) (SET TRUE))) g_s14_16))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s82$1_94 g_s82_93))
(assert (= g_s83$1_96 g_s83_95))
(define-fun lh_1 () Bool (mem g_s78_84 g_s8_9))
(define-fun lh_2 () Bool (mem g_s78_84 g_s14_16))
(define-fun lh_3 () Bool (mem g_s84_97 g_s24_26))
(define-fun lh_4 () Bool (mem g_s84_97 g_s25_27))
(define-fun lh_5 () Bool (mem g_s85_98 g_s33_35))
(define-fun lh_6 () Bool (|>=i| g_s85_98 e0))
(define-fun lh_7 () Bool (mem g_s78_84 (dom g_s71$1_77)))
(define-fun lh_8 () Bool (mem (apply g_s41_43 (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84))) (apply g_s42_44 (mapplet g_s65_66 g_s85_98))))
(define-fun lh_9 () Bool (mem g_s83$2_99 g_s24_26))
(define-fun lh_10 () Bool (= g_s83$2_99 (apply g_s41_43 (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84)))))
(define-fun lh_11 () Bool (not (and (mem g_s78_84 (dom g_s71$1_77)) (mem (apply g_s41_43 (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84))) (apply g_s42_44 (mapplet g_s65_66 g_s85_98))))))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem (apply g_s41_43 (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84))) g_s24_26))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_11) (mem (apply g_s41_43 (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84))) g_s24_26))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s87$1_101 g_s87_100))
(define-fun lh_1 () Bool (mem g_s78_84 g_s8_9))
(define-fun lh_2 () Bool (mem g_s78_84 g_s14_16))
; PO 1 in group 3
(assert (not (=> (and lh_1 lh_2) (= (apply g_s74$1_79 g_s78_84) (bool (mem g_s78_84 g_s73_74))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s89$1_103 g_s89_102))
(assert (= g_s90$1_105 g_s90_104))
(define-fun lh_1 () Bool (mem g_s78_84 g_s8_9))
(define-fun lh_2 () Bool (mem g_s78_84 g_s14_16))
(define-fun lh_3 () Bool (mem g_s78_84 (dom g_s69$1_75)))
(define-fun lh_4 () Bool (mem g_s90$2_106 g_s24_26))
(define-fun lh_5 () Bool (= g_s90$2_106 (apply g_s69$1_75 g_s78_84)))
; PO 1 in group 4
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s69$1_75 g_s78_84) g_s24_26))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s92$1_108 g_s92_107))
(assert (= g_s93$1_110 g_s93_109))
(define-fun lh_1 () Bool (mem g_s78_84 g_s8_9))
(define-fun lh_2 () Bool (mem g_s78_84 g_s14_16))
(define-fun lh_3 () Bool (mem g_s78_84 (dom g_s70$1_76)))
(define-fun lh_4 () Bool (mem g_s93$2_111 g_s24_26))
(define-fun lh_5 () Bool (= g_s93$2_111 (apply g_s70$1_76 g_s78_84)))
; PO 1 in group 5
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s70$1_76 g_s78_84) g_s24_26))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s83$1_96 g_s83_95))
(define-fun lh_1 () Bool (mem g_s78_84 g_s8_9))
(define-fun lh_2 () Bool (mem g_s78_84 g_s14_16))
(define-fun lh_3 () Bool (mem g_s84_97 g_s24_26))
(define-fun lh_4 () Bool (mem g_s84_97 g_s25_27))
(define-fun lh_5 () Bool (mem g_s78_84 (dom g_s71$1_77)))
(define-fun lh_6 () Bool (mem g_s83$2_99 g_s24_26))
(define-fun lh_7 () Bool (= g_s83$2_99 (apply g_s41_43 (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84)))))
; PO 1 in group 6
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (apply g_s41_43 (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84))) g_s24_26))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
; PO 1 in group 7
(push 1)
(assert (not (mem g_s74$1_79 (|+->| (dom g_s74$1_79) (ran g_s74$1_79)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (mem g_s78_84 (dom g_s74$1_79))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(assert (mem g_s84_97 g_s24_26))
(assert (mem g_s84_97 g_s25_27))
(assert (mem g_s85_98 g_s33_35))
(assert (|>=i| g_s85_98 e0))
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(assert (mem g_s84_97 g_s24_26))
(assert (mem g_s84_97 g_s25_27))
(assert (mem g_s85_98 g_s33_35))
(assert (|>=i| g_s85_98 e0))
(define-fun lh_1 () Bool (mem g_s78_84 (dom g_s71$1_77)))
(define-fun lh_2 () Bool (mem (apply g_s41_43 (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84))) (apply g_s42_44 (mapplet g_s65_66 g_s85_98))))
(define-fun lh_3 () Bool (mem g_s83$2_99 g_s24_26))
; PO 1 in group 8
(push 1)
(assert (not (=> lh_1 (mem g_s71$1_77 (|+->| (dom g_s71$1_77) (ran g_s71$1_77))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> lh_1 (mem g_s41_43 (|+->| (dom g_s41_43) (ran g_s41_43))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 8
(push 1)
(assert (not (=> lh_1 (mem g_s42_44 (|+->| (dom g_s42_44) (ran g_s42_44))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 8
(push 1)
(assert (not (=> lh_1 (mem (mapplet g_s65_66 g_s85_98) (dom g_s42_44)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 8
(push 1)
(assert (not (=> lh_1 (mem (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84)) (dom g_s41_43)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s71$1_77 (|+->| (dom g_s71$1_77) (ran g_s71$1_77))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s41_43 (|+->| (dom g_s41_43) (ran g_s41_43))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84)) (dom g_s41_43)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(assert (mem g_s84_97 g_s24_26))
(assert (mem g_s84_97 g_s25_27))
(assert (mem g_s78_84 (dom g_s71_72)))
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(assert (mem g_s84_97 g_s24_26))
(assert (mem g_s84_97 g_s25_27))
(assert (mem g_s78_84 (dom g_s71$1_77)))
(define-fun lh_1 () Bool (mem g_s83$2_99 g_s24_26))
; PO 1 in group 9
(push 1)
(assert (not (=> lh_1 (mem g_s71$1_77 (|+->| (dom g_s71$1_77) (ran g_s71$1_77))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> lh_1 (mem g_s41_43 (|+->| (dom g_s41_43) (ran g_s41_43))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 9
(push 1)
(assert (not (=> lh_1 (mem (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84)) (dom g_s41_43)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(assert (mem g_s84_97 g_s24_26))
(assert (mem g_s84_97 g_s25_27))
(assert (mem g_s85_98 g_s33_35))
(assert (|>=i| g_s85_98 e0))
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(assert (mem g_s84_97 g_s24_26))
(assert (mem g_s84_97 g_s25_27))
(assert (mem g_s85_98 g_s33_35))
(assert (|>=i| g_s85_98 e0))
(define-fun lh_1 () Bool (mem g_s78_84 (dom g_s71$1_77)))
; PO 1 in group 10
(push 1)
(assert (not (=> lh_1 (mem g_s71$1_77 (|+->| (dom g_s71$1_77) (ran g_s71$1_77))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> lh_1 (mem g_s41_43 (|+->| (dom g_s41_43) (ran g_s41_43))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> lh_1 (mem g_s42_44 (|+->| (dom g_s42_44) (ran g_s42_44))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 10
(push 1)
(assert (not (=> lh_1 (mem (mapplet g_s65_66 g_s85_98) (dom g_s42_44)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 10
(push 1)
(assert (not (=> lh_1 (mem (mapplet g_s84_97 (apply g_s71$1_77 g_s78_84)) (dom g_s41_43)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(define-fun lh_1 () Bool (mem g_s78_84 (dom g_s69$1_75)))
(define-fun lh_2 () Bool (mem g_s90$2_106 g_s24_26))
; PO 1 in group 11
(assert (not (=> (and lh_1 lh_2) (mem g_s69$1_75 (|+->| (dom g_s69$1_75) (ran g_s69$1_75))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(assert (mem g_s78_84 g_s8_9))
(assert (mem g_s78_84 g_s14_16))
(define-fun lh_1 () Bool (mem g_s78_84 (dom g_s70$1_76)))
(define-fun lh_2 () Bool (mem g_s93$2_111 g_s24_26))
; PO 1 in group 12
(assert (not (=> (and lh_1 lh_2) (mem g_s70$1_76 (|+->| (dom g_s70$1_76) (ran g_s70$1_76))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)