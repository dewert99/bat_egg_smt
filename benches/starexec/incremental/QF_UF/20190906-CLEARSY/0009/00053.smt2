(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e19 () U)
(declare-fun e67 () U)
(declare-fun e69 () U)
(declare-fun e71 () U)
(declare-fun e73 () U)
(declare-fun e75 () U)
(declare-fun e77 () U)
(declare-fun e79 () U)
(declare-fun e81 () U)
(declare-fun e83 () U)
(declare-fun e85 () U)
(declare-fun e87 () U)
(declare-fun e89 () U)
(declare-fun e91 () U)
(declare-fun e93 () U)
(declare-fun e95 () U)
(declare-fun e97 () U)
(declare-fun e99 () U)
(declare-fun e101 () U)
(declare-fun e103 () U)
(declare-fun e105 () U)
(declare-fun e107 () U)
(declare-fun e109 () U)
(declare-fun e111 () U)
(declare-fun e113 () U)
(declare-fun e115 () U)
(declare-fun e117 () U)
(declare-fun e119 () U)
(declare-fun e121 () U)
(declare-fun e123 () U)
(declare-fun e125 () U)
(declare-fun e127 () U)
(declare-fun e129 () U)
(declare-fun e131 () U)
(declare-fun e133 () U)
(declare-fun e135 () U)
(declare-fun e137 () U)
(declare-fun e139 () U)
(declare-fun e141 () U)
(declare-fun e143 () U)
(declare-fun e145 () U)
(declare-fun e147 () U)
(declare-fun e149 () U)
(declare-fun e151 () U)
(declare-fun e153 () U)
(declare-fun e155 () U)
(declare-fun e157 () U)
(declare-fun e159 () U)
(declare-fun e161 () U)
(declare-fun e163 () U)
(declare-fun e165 () U)
(declare-fun e167 () U)
(declare-fun e169 () U)
(declare-fun e171 () U)
(declare-fun e173 () U)
(declare-fun e175 () U)
(declare-fun e177 () U)
(declare-fun e179 () U)
(declare-fun e181 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_138 () U)
(declare-fun g_s101_140 () U)
(declare-fun g_s102_142 () U)
(declare-fun g_s103_144 () U)
(declare-fun g_s104_146 () U)
(declare-fun g_s105_148 () U)
(declare-fun g_s106_150 () U)
(declare-fun g_s107_152 () U)
(declare-fun g_s108_154 () U)
(declare-fun g_s109_156 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_158 () U)
(declare-fun g_s111_160 () U)
(declare-fun g_s112_162 () U)
(declare-fun g_s113_164 () U)
(declare-fun g_s114_166 () U)
(declare-fun g_s115_168 () U)
(declare-fun g_s116_170 () U)
(declare-fun g_s117_172 () U)
(declare-fun g_s118_174 () U)
(declare-fun g_s119_176 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_178 () U)
(declare-fun g_s121_180 () U)
(declare-fun g_s122_182 () U)
(declare-fun g_s123_183 () U)
(declare-fun g_s124_184 () U)
(declare-fun g_s125_185 () U)
(declare-fun g_s126_186 () U)
(declare-fun g_s127_187 () U)
(declare-fun g_s128_188 () U)
(declare-fun g_s129_189 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_190 () U)
(declare-fun g_s131_191 () U)
(declare-fun g_s132_192 () U)
(declare-fun g_s133_193 () U)
(declare-fun g_s134_194 () U)
(declare-fun g_s135_195 () U)
(declare-fun g_s136_196 () U)
(declare-fun g_s137_197 () U)
(declare-fun g_s138_198 () U)
(declare-fun g_s139_199 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_200 () U)
(declare-fun g_s141_201 () U)
(declare-fun g_s142_202 () U)
(declare-fun g_s143_203 () U)
(declare-fun g_s144_204 () U)
(declare-fun g_s145_205 () U)
(declare-fun g_s146_206 () U)
(declare-fun g_s147_207 () U)
(declare-fun g_s148_208 () U)
(declare-fun g_s149_209 () U)
(declare-fun g_s150_210 () U)
(declare-fun g_s151_211 () U)
(declare-fun g_s152_212 () U)
(declare-fun g_s153_213 () U)
(declare-fun g_s154_214 () U)
(declare-fun g_s155_215 () U)
(declare-fun g_s156_216 () U)
(declare-fun g_s157_217 () U)
(declare-fun g_s158_218 () U)
(declare-fun g_s159_219 () U)
(declare-fun g_s160_220 () U)
(declare-fun g_s161_221 () U)
(declare-fun g_s162_222 () U)
(declare-fun g_s163_223 () U)
(declare-fun g_s164_224 () U)
(declare-fun g_s165_225 () U)
(declare-fun g_s166_226 () U)
(declare-fun g_s167_227 () U)
(declare-fun g_s168_228 () U)
(declare-fun g_s169_229 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_230 () U)
(declare-fun g_s171_231 () U)
(declare-fun g_s172_232 () U)
(declare-fun g_s173_233 () U)
(declare-fun g_s174_234 () U)
(declare-fun g_s175_235 () U)
(declare-fun g_s176_236 () U)
(declare-fun g_s177_237 () U)
(declare-fun g_s178_238 () U)
(declare-fun g_s179_239 () U)
(declare-fun g_s18_20 () U)
(declare-fun g_s180_240 () U)
(declare-fun g_s181_241 () U)
(declare-fun g_s182_242 () U)
(declare-fun g_s183_243 () U)
(declare-fun g_s184_244 () U)
(declare-fun g_s185_245 () U)
(declare-fun g_s186_246 () U)
(declare-fun g_s187_247 () U)
(declare-fun g_s188_248 () U)
(declare-fun g_s189_249 () U)
(declare-fun g_s19_21 () U)
(declare-fun g_s190_250 () U)
(declare-fun g_s191_251 () U)
(declare-fun g_s192_252 () U)
(declare-fun g_s193_253 () U)
(declare-fun g_s194_254 () U)
(declare-fun g_s195_255 () U)
(declare-fun g_s196_256 () U)
(declare-fun g_s197_257 () U)
(declare-fun g_s198_258 () U)
(declare-fun g_s199_259 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_22 () U)
(declare-fun g_s200_260 () U)
(declare-fun g_s201_261 () U)
(declare-fun g_s202_262 () U)
(declare-fun g_s203_263 () U)
(declare-fun g_s204_264 () U)
(declare-fun g_s205_265 () U)
(declare-fun g_s206_266 () U)
(declare-fun g_s207_267 () U)
(declare-fun g_s208_268 () U)
(declare-fun g_s209_269 () U)
(declare-fun g_s21_23 () U)
(declare-fun g_s210_270 () U)
(declare-fun g_s211_271 () U)
(declare-fun g_s212_272 () U)
(declare-fun g_s213_273 () U)
(declare-fun g_s214_274 () U)
(declare-fun g_s215_275 () U)
(declare-fun g_s216_276 () U)
(declare-fun g_s217_277 () U)
(declare-fun g_s218_278 () U)
(declare-fun g_s219_279 () U)
(declare-fun g_s22_24 () U)
(declare-fun g_s220_280 () U)
(declare-fun g_s221_281 () U)
(declare-fun g_s222_282 () U)
(declare-fun g_s223_283 () U)
(declare-fun g_s224_284 () U)
(declare-fun g_s225_285 () U)
(declare-fun g_s226_286 () U)
(declare-fun g_s227_287 () U)
(declare-fun g_s228_288 () U)
(declare-fun g_s229_289 () U)
(declare-fun g_s23_25 () U)
(declare-fun g_s230_290 () U)
(declare-fun g_s231_291 () U)
(declare-fun g_s232_292 () U)
(declare-fun g_s233_293 () U)
(declare-fun g_s234_294 () U)
(declare-fun g_s235_295 () U)
(declare-fun g_s236_296 () U)
(declare-fun g_s237_297 () U)
(declare-fun g_s238_298 () U)
(declare-fun g_s239_299 () U)
(declare-fun g_s24_26 () U)
(declare-fun g_s240_300 () U)
(declare-fun g_s241_301 () U)
(declare-fun g_s242_302 () U)
(declare-fun g_s243_303 () U)
(declare-fun g_s244_304 () U)
(declare-fun g_s245_305 () U)
(declare-fun g_s246_306 () U)
(declare-fun g_s247_307 () U)
(declare-fun g_s248_308 () U)
(declare-fun g_s249_309 () U)
(declare-fun g_s25_27 () U)
(declare-fun g_s250_310 () U)
(declare-fun g_s251_311 () U)
(declare-fun g_s252_312 () U)
(declare-fun g_s253_313 () U)
(declare-fun g_s254_314 () U)
(declare-fun g_s255_315 () U)
(declare-fun g_s256_316 () U)
(declare-fun g_s257_317 () U)
(declare-fun g_s258_318 () U)
(declare-fun g_s259_319 () U)
(declare-fun g_s26_28 () U)
(declare-fun g_s260_320 () U)
(declare-fun g_s261_321 () U)
(declare-fun g_s262_322 () U)
(declare-fun g_s263_323 () U)
(declare-fun g_s264_324 () U)
(declare-fun g_s265_325 () U)
(declare-fun g_s266_326 () U)
(declare-fun g_s267_327 () U)
(declare-fun g_s268_328 () U)
(declare-fun g_s269_329 () U)
(declare-fun g_s27_29 () U)
(declare-fun g_s270_330 () U)
(declare-fun g_s271_331 () U)
(declare-fun g_s272_332 () U)
(declare-fun g_s273_333 () U)
(declare-fun g_s274_334 () U)
(declare-fun g_s275_335 () U)
(declare-fun g_s276_336 () U)
(declare-fun g_s277_337 () U)
(declare-fun g_s278_338 () U)
(declare-fun g_s279_339 () U)
(declare-fun g_s28_30 () U)
(declare-fun g_s280_340 () U)
(declare-fun g_s281_341 () U)
(declare-fun g_s282_342 () U)
(declare-fun g_s283_343 () U)
(declare-fun g_s284_344 () U)
(declare-fun g_s285_345 () U)
(declare-fun g_s286_346 () U)
(declare-fun g_s287_347 () U)
(declare-fun g_s288_348 () U)
(declare-fun g_s289_349 () U)
(declare-fun g_s29_31 () U)
(declare-fun g_s290_350 () U)
(declare-fun g_s291_351 () U)
(declare-fun g_s292_352 () U)
(declare-fun g_s293_353 () U)
(declare-fun g_s294_354 () U)
(declare-fun g_s295_355 () U)
(declare-fun g_s296_356 () U)
(declare-fun g_s297_357 () U)
(declare-fun g_s298_358 () U)
(declare-fun g_s298$1_359 () U)
(declare-fun g_s299$1_360 () U)
(declare-fun g_s299$2_377 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_32 () U)
(declare-fun g_s300$1_361 () U)
(declare-fun g_s300$2_378 () U)
(declare-fun g_s301$1_362 () U)
(declare-fun g_s301$2_379 () U)
(declare-fun g_s302$1_363 () U)
(declare-fun g_s302$2_380 () U)
(declare-fun g_s303$1_364 () U)
(declare-fun g_s303$2_381 () U)
(declare-fun g_s304$1_365 () U)
(declare-fun g_s304$2_382 () U)
(declare-fun g_s305$1_366 () U)
(declare-fun g_s305$2_383 () U)
(declare-fun g_s306$1_367 () U)
(declare-fun g_s306$2_384 () U)
(declare-fun g_s307$1_368 () U)
(declare-fun g_s307$2_385 () U)
(declare-fun g_s308$1_369 () U)
(declare-fun g_s308$2_386 () U)
(declare-fun g_s309$1_370 () U)
(declare-fun g_s309$2_387 () U)
(declare-fun g_s31_33 () U)
(declare-fun g_s313_371 () U)
(declare-fun g_s314$1_373 () U)
(declare-fun g_s315_372 () U)
(declare-fun g_s316$1_374 () U)
(declare-fun g_s317$1_375 () U)
(declare-fun g_s318$1_376 () U)
(declare-fun g_s319$1_388 () U)
(declare-fun g_s32_34 () U)
(declare-fun g_s321_389 () U)
(declare-fun g_s321$1_390 () U)
(declare-fun g_s322$1_391 () U)
(declare-fun g_s324_392 () U)
(declare-fun g_s324$1_393 () U)
(declare-fun g_s325$1_394 () U)
(declare-fun g_s327_395 () U)
(declare-fun g_s327$1_396 () U)
(declare-fun g_s328$1_397 () U)
(declare-fun g_s33_35 () U)
(declare-fun g_s330_398 () U)
(declare-fun g_s330$1_399 () U)
(declare-fun g_s331$1_400 () U)
(declare-fun g_s333_401 () U)
(declare-fun g_s333$1_402 () U)
(declare-fun g_s334_403 () U)
(declare-fun g_s334$1_404 () U)
(declare-fun g_s335_405 () U)
(declare-fun g_s336$1_406 () U)
(declare-fun g_s338_407 () U)
(declare-fun g_s338$1_408 () U)
(declare-fun g_s34_37 () U)
(declare-fun g_s340_409 () U)
(declare-fun g_s340$1_410 () U)
(declare-fun g_s342_411 () U)
(declare-fun g_s342$1_412 () U)
(declare-fun g_s344_413 () U)
(declare-fun g_s344$1_414 () U)
(declare-fun g_s346_415 () U)
(declare-fun g_s346$1_416 () U)
(declare-fun g_s348_417 () U)
(declare-fun g_s348$1_418 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_38 () U)
(declare-fun g_s37_40 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_41 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_42 () U)
(declare-fun g_s41_43 () U)
(declare-fun g_s42_44 () U)
(declare-fun g_s43_45 () U)
(declare-fun g_s44_46 () U)
(declare-fun g_s45_47 () U)
(declare-fun g_s46_48 () U)
(declare-fun g_s47_49 () U)
(declare-fun g_s48_50 () U)
(declare-fun g_s49_51 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_52 () U)
(declare-fun g_s51_53 () U)
(declare-fun g_s52_54 () U)
(declare-fun g_s53_55 () U)
(declare-fun g_s54_56 () U)
(declare-fun g_s55_57 () U)
(declare-fun g_s56_58 () U)
(declare-fun g_s57_59 () U)
(declare-fun g_s58_60 () U)
(declare-fun g_s59_61 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_62 () U)
(declare-fun g_s61_63 () U)
(declare-fun g_s62_64 () U)
(declare-fun g_s63_65 () U)
(declare-fun g_s64_66 () U)
(declare-fun g_s65_68 () U)
(declare-fun g_s66_70 () U)
(declare-fun g_s67_72 () U)
(declare-fun g_s68_74 () U)
(declare-fun g_s69_76 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_78 () U)
(declare-fun g_s71_80 () U)
(declare-fun g_s72_82 () U)
(declare-fun g_s73_84 () U)
(declare-fun g_s74_86 () U)
(declare-fun g_s75_88 () U)
(declare-fun g_s76_90 () U)
(declare-fun g_s77_92 () U)
(declare-fun g_s78_94 () U)
(declare-fun g_s79_96 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_98 () U)
(declare-fun g_s81_100 () U)
(declare-fun g_s82_102 () U)
(declare-fun g_s83_104 () U)
(declare-fun g_s84_106 () U)
(declare-fun g_s85_108 () U)
(declare-fun g_s86_110 () U)
(declare-fun g_s87_112 () U)
(declare-fun g_s88_114 () U)
(declare-fun g_s89_116 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_118 () U)
(declare-fun g_s91_120 () U)
(declare-fun g_s92_122 () U)
(declare-fun g_s93_124 () U)
(declare-fun g_s94_126 () U)
(declare-fun g_s95_128 () U)
(declare-fun g_s96_130 () U)
(declare-fun g_s97_132 () U)
(declare-fun g_s98_134 () U)
(declare-fun g_s99_136 () U)
(declare-fun e17 () U)
(declare-fun e16 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (not (= g_s12_13 empty)) (not (= g_s13_14 empty)) (mem g_s14_15 (|-->| (set_prod INTEGER NATURAL) INTEGER)) (= g_s14_15 (binary_union e17 e16)) (mem g_s17_18 (|-->| BOOL NAT)) (= g_s17_18 (SET (mapplet (mapplet FALSE e0) (mapplet TRUE e19)))) (= g_s18_20 INT) (= g_s19_21 NAT) (= g_s20_22 NAT1) (subset g_s20_22 g_s19_21) (subset g_s19_21 g_s18_20) (= g_s21_23 INT) (= g_s22_24 NAT) (subset g_s22_24 g_s21_23) (mem g_s23_25 g_s18_20) (mem g_s23_25 g_s19_21) (not (mem g_s23_25 g_s20_22)) (mem g_s24_26 g_s18_20) (not (mem g_s24_26 g_s19_21)) (mem g_s25_27 g_s21_23) (mem g_s25_27 g_s22_24) (mem g_s26_28 g_s21_23) (not (mem g_s26_28 g_s22_24)) (= g_s27_29 INT) (= g_s28_30 INT) (= g_s29_31 NATURAL) (= g_s30_32 NATURAL) (subset g_s31_33 g_s8_9) (mem g_s32_34 g_s8_9) (not (mem g_s32_34 g_s31_33)) (mem g_s33_35 (|+->| NAT g_s8_9)) (mem g_s33_35 (perm g_s31_33)) (mem g_s34_37 (|>->>| g_s31_33 g_s35_36)) (mem g_s36_38 (|>+>| g_s35_36 g_s31_33)) (mem g_s37_40 (|>->>| g_s31_33 g_s38_39)) (mem g_s39_41 (|>+>| g_s38_39 g_s31_33)) (= g_s36_38 (inverse g_s34_37)) (= g_s39_41 (inverse g_s37_40)) (subset g_s40_42 g_s9_10) (mem g_s41_43 g_s9_10) (not (mem g_s41_43 g_s40_42)) (subset g_s42_44 g_s10_11) (mem g_s43_45 g_s10_11) (not (mem g_s43_45 g_s42_44)) (subset g_s44_46 g_s11_12) (mem g_s45_47 g_s11_12) (not (mem g_s45_47 g_s44_46)) (subset g_s46_48 g_s12_13) (mem g_s47_49 g_s12_13) (not (mem g_s47_49 g_s46_48)) (mem g_s48_50 (|+->| NAT g_s12_13)) (mem g_s48_50 (perm g_s46_48)) (subset g_s49_51 g_s13_14) (mem g_s50_52 g_s13_14) (not (mem g_s50_52 g_s49_51)) (mem g_s51_53 (|+->| NAT g_s13_14)) (mem g_s51_53 (perm g_s49_51)) (subset g_s52_54 g_s13_14) (mem g_s53_55 g_s13_14) (not (mem g_s53_55 g_s52_54)) (mem g_s54_56 (|+->| NAT g_s13_14)) (mem g_s54_56 (perm g_s52_54)) (= g_s55_57 NAT) (= g_s56_58 NAT1) (subset g_s56_58 g_s55_57) (mem g_s57_59 g_s55_57) (not (mem g_s57_59 g_s56_58)) (= g_s58_60 NAT) (= g_s59_61 NAT1) (subset g_s59_61 g_s58_60) (mem g_s60_62 g_s58_60) (not (mem g_s60_62 g_s59_61))))
(define-fun |def_seext| () Bool (and (= g_s61_63 TRUE) (= g_s62_64 FALSE) (= g_s63_65 e0) (= g_s64_66 e19) (= g_s65_68 e67) (= g_s66_70 e69) (= g_s67_72 e71) (= g_s68_74 e73) (= g_s69_76 e75) (= g_s70_78 e77) (= g_s71_80 e79) (= g_s72_82 e81) (= g_s73_84 e83) (= g_s74_86 e85) (= g_s75_88 e87) (= g_s76_90 e89) (= g_s77_92 e91) (= g_s78_94 e93) (= g_s79_96 e95) (= g_s80_98 e97) (= g_s81_100 e99) (= g_s82_102 e101) (= g_s83_104 e103) (= g_s84_106 e105) (= g_s85_108 e107) (= g_s86_110 e109) (= g_s87_112 e111) (= g_s88_114 e113) (= g_s89_116 e115) (= g_s90_118 e117) (= g_s91_120 e119) (= g_s92_122 e121) (= g_s93_124 e123) (= g_s94_126 e125) (= g_s95_128 e127) (= g_s96_130 e129) (= g_s97_132 e131) (= g_s98_134 e133) (= g_s99_136 e135) (= g_s100_138 e137) (= g_s101_140 e139) (= g_s102_142 e141) (= g_s103_144 e143) (= g_s104_146 e145) (= g_s105_148 e147) (= g_s106_150 e149) (= g_s107_152 e151) (= g_s108_154 e153) (= g_s109_156 e155) (= g_s110_158 e157) (= g_s111_160 e159) (= g_s112_162 e161) (= g_s113_164 e163) (= g_s114_166 e165) (= g_s115_168 e167) (= g_s116_170 e169) (= g_s117_172 e171) (= g_s118_174 e173) (= g_s119_176 e175) (= g_s120_178 e177) (= g_s121_180 e179) (= g_s122_182 e181) (mem g_s123_183 g_s0_1) (mem g_s124_184 g_s0_1) (mem g_s125_185 g_s0_1) (mem g_s126_186 g_s0_1) (mem g_s127_187 g_s0_1) (mem g_s128_188 g_s0_1) (mem g_s129_189 g_s0_1) (mem g_s130_190 g_s0_1) (mem g_s131_191 g_s0_1) (mem g_s132_192 g_s0_1) (mem g_s133_193 g_s0_1) (mem g_s134_194 g_s0_1) (mem g_s135_195 g_s0_1) (mem g_s136_196 g_s0_1) (mem g_s137_197 g_s0_1) (mem g_s138_198 g_s0_1) (mem g_s139_199 g_s0_1) (mem g_s140_200 g_s0_1) (mem g_s141_201 g_s0_1) (mem g_s142_202 g_s0_1) (mem g_s143_203 g_s0_1) (mem g_s144_204 g_s0_1) (mem g_s145_205 g_s0_1) (mem g_s146_206 g_s0_1) (mem g_s147_207 g_s0_1) (mem g_s148_208 g_s0_1) (mem g_s149_209 g_s0_1) (mem g_s150_210 g_s0_1) (mem g_s151_211 g_s0_1) (mem g_s152_212 g_s0_1) (mem g_s153_213 g_s0_1) (mem g_s154_214 g_s0_1) (mem g_s155_215 g_s0_1) (mem g_s156_216 g_s0_1) (mem g_s157_217 g_s0_1) (mem g_s158_218 g_s0_1) (mem g_s159_219 g_s0_1) (mem g_s160_220 g_s0_1) (mem g_s161_221 g_s0_1) (mem g_s162_222 g_s0_1) (mem g_s163_223 g_s0_1) (mem g_s164_224 g_s0_1) (mem g_s165_225 g_s0_1) (mem g_s166_226 g_s0_1) (mem g_s167_227 g_s0_1) (mem g_s168_228 g_s0_1) (mem g_s169_229 g_s0_1) (mem g_s170_230 g_s0_1) (mem g_s171_231 g_s0_1) (mem g_s172_232 g_s0_1) (mem g_s173_233 g_s0_1) (mem g_s174_234 g_s0_1) (mem g_s175_235 g_s0_1) (mem g_s176_236 g_s0_1) (mem g_s177_237 g_s0_1) (mem g_s178_238 g_s0_1) (mem g_s179_239 g_s0_1) (mem g_s180_240 g_s0_1) (mem g_s181_241 g_s0_1) (mem g_s182_242 g_s0_1) (mem g_s183_243 g_s0_1) (mem g_s184_244 g_s0_1) (mem g_s185_245 g_s0_1) (mem g_s186_246 g_s0_1) (mem g_s187_247 g_s0_1) (mem g_s188_248 g_s0_1) (mem g_s189_249 g_s0_1) (mem g_s190_250 g_s0_1) (mem g_s191_251 g_s0_1) (mem g_s192_252 g_s0_1) (mem g_s193_253 g_s0_1) (mem g_s194_254 g_s0_1) (mem g_s195_255 g_s0_1) (mem g_s196_256 g_s0_1) (mem g_s197_257 g_s0_1) (mem g_s198_258 g_s0_1) (mem g_s199_259 g_s0_1) (mem g_s200_260 g_s0_1) (mem g_s201_261 g_s0_1) (mem g_s202_262 g_s0_1) (mem g_s203_263 g_s0_1) (mem g_s204_264 g_s0_1) (mem g_s205_265 g_s0_1) (mem g_s206_266 g_s0_1) (mem g_s207_267 g_s0_1) (mem g_s208_268 g_s0_1) (mem g_s209_269 g_s0_1) (mem g_s210_270 g_s0_1) (mem g_s211_271 g_s0_1) (mem g_s212_272 g_s0_1) (mem g_s213_273 g_s0_1) (mem g_s214_274 g_s0_1) (mem g_s215_275 g_s0_1) (mem g_s216_276 g_s0_1) (mem g_s217_277 g_s0_1) (mem g_s218_278 g_s0_1) (mem g_s219_279 g_s0_1) (mem g_s220_280 g_s0_1) (mem g_s221_281 g_s0_1) (mem g_s222_282 g_s0_1) (mem g_s223_283 g_s0_1) (mem g_s224_284 g_s0_1) (mem g_s225_285 g_s0_1) (mem g_s226_286 g_s0_1) (mem g_s227_287 g_s0_1) (mem g_s228_288 g_s0_1) (mem g_s229_289 g_s0_1) (mem g_s230_290 g_s0_1) (mem g_s231_291 g_s0_1) (mem g_s232_292 g_s0_1) (mem g_s233_293 g_s0_1) (mem g_s234_294 g_s0_1) (mem g_s235_295 g_s0_1) (mem g_s236_296 g_s7_8) (mem g_s237_297 g_s7_8) (mem g_s238_298 g_s7_8) (mem g_s239_299 g_s7_8) (mem g_s240_300 g_s7_8) (mem g_s241_301 g_s7_8) (mem g_s242_302 g_s7_8) (mem g_s243_303 g_s7_8) (mem g_s244_304 g_s7_8) (mem g_s245_305 g_s7_8) (mem g_s246_306 g_s7_8) (mem g_s247_307 g_s7_8) (mem g_s248_308 g_s7_8) (mem g_s249_309 g_s7_8) (mem g_s250_310 g_s7_8) (mem g_s251_311 g_s7_8) (mem g_s252_312 g_s7_8) (mem g_s253_313 g_s7_8) (mem g_s254_314 g_s7_8) (mem g_s255_315 g_s7_8) (mem g_s256_316 g_s7_8) (mem g_s257_317 g_s7_8) (mem g_s258_318 g_s7_8) (mem g_s259_319 g_s7_8) (mem g_s260_320 g_s7_8) (mem g_s261_321 g_s7_8) (mem g_s262_322 g_s7_8) (mem g_s263_323 g_s7_8) (mem g_s264_324 g_s7_8) (mem g_s265_325 g_s7_8) (mem g_s266_326 g_s7_8) (mem g_s267_327 g_s7_8) (mem g_s268_328 g_s7_8) (mem g_s269_329 g_s7_8) (mem g_s270_330 g_s7_8) (mem g_s271_331 g_s7_8) (mem g_s272_332 g_s7_8) (mem g_s273_333 g_s7_8) (mem g_s274_334 g_s7_8) (mem g_s275_335 g_s7_8) (mem g_s276_336 g_s7_8) (mem g_s277_337 g_s7_8) (mem g_s278_338 g_s7_8) (mem g_s279_339 g_s7_8) (mem g_s280_340 g_s7_8) (mem g_s281_341 g_s7_8) (mem g_s282_342 g_s7_8) (mem g_s283_343 g_s7_8) (mem g_s284_344 g_s7_8) (mem g_s285_345 g_s7_8) (mem g_s286_346 g_s7_8)))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s287_347 g_s55_57) (mem g_s288_348 g_s58_60) (mem g_s289_349 g_s55_57) (mem g_s290_350 g_s55_57) (mem g_s291_351 (|+->| g_s49_51 g_s59_61)) (mem g_s292_352 g_s9_10) (mem g_s293_353 g_s9_10) (mem g_s294_354 g_s18_20) (mem g_s295_355 g_s21_23) (mem g_s296_356 g_s18_20) (mem g_s297_357 g_s21_23) (mem g_s298_358 BOOL)))
(define-fun |def_inv| () Bool (and (= g_s298_358 g_s298$1_359) (mem g_s298$1_359 BOOL) (= g_s287_347 g_s299$1_360) (= g_s288_348 g_s300$1_361) (= g_s289_349 g_s301$1_362) (= g_s290_350 g_s302$1_363) (= g_s291_351 (range_restriction (domain_restriction g_s49_51 g_s303$1_364) g_s59_61)) (= g_s292_352 g_s304$1_365) (= g_s293_353 g_s305$1_366) (= g_s294_354 g_s306$1_367) (= g_s295_355 g_s307$1_368) (= g_s296_356 g_s308$1_369) (= g_s297_357 g_s309$1_370)))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s299$1_360 g_s55_57) (mem g_s300$1_361 g_s58_60) (mem g_s301$1_362 g_s55_57) (mem g_s302$1_363 g_s55_57) (mem g_s303$1_364 (|-->| g_s13_14 g_s58_60)) (mem g_s304$1_365 g_s9_10) (mem g_s305$1_366 g_s9_10) (mem g_s306$1_367 g_s18_20) (mem g_s307$1_368 g_s21_23) (mem g_s308$1_369 g_s18_20) (mem g_s309$1_370 g_s21_23)))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s57_59 g_s55_57))
(define-fun lh_2 () Bool (mem g_s60_62 g_s58_60))
(define-fun lh_3 () Bool (mem (set_prod g_s13_14 (SET g_s60_62)) (|-->| g_s13_14 g_s58_60)))
(define-fun lh_4 () Bool (mem g_s41_43 g_s9_10))
(define-fun lh_5 () Bool (mem g_s24_26 g_s18_20))
(define-fun lh_6 () Bool (mem g_s26_28 g_s21_23))
; PO 1 in group 0
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= empty (range_restriction (domain_restriction g_s49_51 (set_prod g_s13_14 (SET g_s60_62))) g_s59_61)))))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s313_371 g_s8_9))
(define-fun lh_2 () Bool (mem g_s313_371 g_s31_33))
(define-fun lh_3 () Bool (mem g_s314$1_373 g_s315_372))
(define-fun lh_4 () Bool (mem g_s314$1_373 g_s35_36))
(define-fun lh_5 () Bool (= g_s314$1_373 (apply g_s34_37 g_s313_371)))
(define-fun lh_6 () Bool (mem g_s316$1_374 g_s1_2))
(define-fun lh_7 () Bool (mem g_s317$1_375 BOOL))
(define-fun lh_8 () Bool (= g_s317$1_375 TRUE))
(define-fun lh_9 () Bool (mem g_s284_344 g_s7_8))
(define-fun lh_10 () Bool (mem g_s223_283 g_s0_1))
(define-fun lh_11 () Bool (mem g_s171_231 g_s0_1))
(define-fun lh_12 () Bool (mem g_s318$1_376 BOOL))
(define-fun lh_13 () Bool (mem g_s299$2_377 g_s55_57))
(define-fun lh_14 () Bool (mem g_s300$2_378 g_s58_60))
(define-fun lh_15 () Bool (mem g_s301$2_379 g_s55_57))
(define-fun lh_16 () Bool (mem g_s302$2_380 g_s55_57))
(define-fun lh_17 () Bool (mem g_s303$2_381 (|-->| g_s13_14 g_s58_60)))
(define-fun lh_18 () Bool (mem g_s304$2_382 g_s9_10))
(define-fun lh_19 () Bool (mem g_s305$2_383 g_s9_10))
(define-fun lh_20 () Bool (mem g_s306$2_384 g_s18_20))
(define-fun lh_21 () Bool (mem g_s307$2_385 g_s21_23))
(define-fun lh_22 () Bool (mem g_s308$2_386 g_s18_20))
(define-fun lh_23 () Bool (mem g_s309$2_387 g_s21_23))
(define-fun lh_24 () Bool (mem g_s319$1_388 BOOL))
(define-fun lh_25 () Bool (= g_s319$1_388 TRUE))
(define-fun lh_26 () Bool (= g_s318$1_376 TRUE))
; PO 1 in group 1
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26) (mem (range_restriction (domain_restriction g_s49_51 g_s303$2_381) g_s59_61) (|+->| g_s49_51 g_s59_61)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s321$1_390 g_s321_389))
(define-fun lh_1 () Bool (mem g_s322$1_391 g_s55_57))
(define-fun lh_2 () Bool (= g_s322$1_391 g_s299$1_360))
; PO 1 in group 2
(assert (not (=> (and lh_1 lh_2) (= g_s322$1_391 g_s287_347))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s324$1_393 g_s324_392))
(define-fun lh_1 () Bool (mem g_s325$1_394 g_s58_60))
(define-fun lh_2 () Bool (= g_s325$1_394 g_s300$1_361))
; PO 1 in group 3
(assert (not (=> (and lh_1 lh_2) (= g_s325$1_394 g_s288_348))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s327$1_396 g_s327_395))
(define-fun lh_1 () Bool (mem g_s328$1_397 g_s55_57))
(define-fun lh_2 () Bool (= g_s328$1_397 g_s301$1_362))
; PO 1 in group 4
(assert (not (=> (and lh_1 lh_2) (= g_s328$1_397 g_s289_349))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s330$1_399 g_s330_398))
(define-fun lh_1 () Bool (mem g_s331$1_400 g_s55_57))
(define-fun lh_2 () Bool (= g_s331$1_400 g_s302$1_363))
; PO 1 in group 5
(assert (not (=> (and lh_1 lh_2) (= g_s331$1_400 g_s290_350))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s333$1_402 g_s333_401))
(assert (= g_s334$1_404 g_s334_403))
(define-fun lh_1 () Bool (mem g_s335_405 g_s13_14))
(define-fun lh_2 () Bool (mem g_s335_405 g_s49_51))
(define-fun lh_3 () Bool (mem g_s336$1_406 g_s58_60))
(define-fun lh_4 () Bool (= g_s336$1_406 (apply g_s303$1_364 g_s335_405)))
(define-fun lh_5 () Bool (mem g_s335_405 (dom g_s291_351)))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s291_351 g_s335_405) g_s58_60))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s336$1_406 (apply g_s291_351 g_s335_405)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= (bool (mem g_s336$1_406 g_s59_61)) (bool (mem g_s335_405 (dom g_s291_351)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s338$1_408 g_s338_407))
; PO 1 in group 7
(assert (not (= g_s304$1_365 g_s292_352)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s340$1_410 g_s340_409))
; PO 1 in group 8
(assert (not (= g_s305$1_366 g_s293_353)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s342$1_412 g_s342_411))
; PO 1 in group 9
(assert (not (= g_s306$1_367 g_s294_354)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s344$1_414 g_s344_413))
; PO 1 in group 10
(assert (not (= g_s307$1_368 g_s295_355)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s346$1_416 g_s346_415))
; PO 1 in group 11
(assert (not (= g_s308$1_369 g_s296_356)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s348$1_418 g_s348_417))
; PO 1 in group 12
(assert (not (= g_s309$1_370 g_s297_357)))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)