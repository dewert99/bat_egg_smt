(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e89 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_102 () U)
(declare-fun g_s101_103 () U)
(declare-fun g_s102_104 () U)
(declare-fun g_s103_105 () U)
(declare-fun g_s104_106 () U)
(declare-fun g_s105_107 () U)
(declare-fun g_s106_108 () U)
(declare-fun g_s107_109 () U)
(declare-fun g_s108_110 () U)
(declare-fun g_s109_111 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_112 () U)
(declare-fun g_s111_113 () U)
(declare-fun g_s112_114 () U)
(declare-fun g_s113_115 () U)
(declare-fun g_s114_116 () U)
(declare-fun g_s115_117 () U)
(declare-fun g_s116_118 () U)
(declare-fun g_s117_119 () U)
(declare-fun g_s118_120 () U)
(declare-fun g_s119_121 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_122 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_90 () U)
(declare-fun g_s89_91 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_92 () U)
(declare-fun g_s91_93 () U)
(declare-fun g_s92_94 () U)
(declare-fun g_s93_95 () U)
(declare-fun g_s94_96 () U)
(declare-fun g_s95_97 () U)
(declare-fun g_s96_98 () U)
(declare-fun g_s97_99 () U)
(declare-fun g_s98_100 () U)
(declare-fun g_s99_101 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (mem g_s0_1 NAT1) (mem g_s1_2 NAT1) (mem g_s2_3 NAT1) (mem g_s3_4 NAT1) (mem g_s4_5 NAT1) (mem g_s5_6 NAT1) (mem g_s6_7 NAT1) (mem g_s7_8 NAT1) (mem g_s8_9 NAT1) (mem g_s9_10 NAT1) (mem g_s10_11 NAT1) (mem g_s11_12 NAT1) (mem g_s12_13 NAT1) (mem g_s13_14 NAT1) (mem g_s14_15 NAT1) (mem g_s15_16 NAT1) (mem g_s16_17 NAT1) (mem g_s17_18 NAT1) (mem g_s18_19 NAT1) (mem g_s19_20 NAT1) (mem g_s20_21 NAT1) (mem g_s21_22 NAT1) (mem g_s22_23 NAT1) (mem g_s23_24 NAT1) (mem g_s24_25 NAT1) (mem g_s25_26 NAT1) (mem g_s26_27 NAT1) (mem g_s27_28 NAT1) (mem g_s28_29 NAT1) (mem g_s29_30 NAT1) (mem g_s30_31 NAT1) (mem g_s31_32 NAT1) (mem g_s32_33 NAT) (mem g_s33_34 NAT) (mem g_s34_35 NAT) (mem g_s35_36 NAT) (mem g_s36_37 NAT) (mem g_s37_38 NAT) (mem g_s38_39 NAT) (mem g_s39_40 NAT) (mem g_s40_41 NAT) (mem g_s41_42 NAT) (mem g_s42_43 NAT) (mem g_s43_44 NAT) (mem g_s44_45 NAT) (mem g_s45_46 NAT) (mem g_s46_47 NAT) (mem g_s47_48 NAT) (mem g_s48_49 NAT) (mem g_s49_50 NAT) (mem g_s50_51 NAT) (mem g_s51_52 NAT) (mem g_s52_53 NAT) (mem g_s53_54 NAT) (mem g_s54_55 NAT) (mem g_s55_56 NAT) (mem g_s56_57 NAT) (mem g_s57_58 NAT) (mem g_s58_59 NAT) (mem g_s59_60 NAT) (mem g_s60_61 NAT) (mem g_s61_62 NAT) (mem g_s62_63 INT) (mem g_s63_64 NAT) (|<=i| g_s14_15 g_s13_14) (|<=i| g_s17_18 g_s16_17) (|<=i| g_s20_21 g_s19_20) (|<=i| g_s23_24 g_s22_23) (|<=i| g_s28_29 g_s64_65) (|<=i| g_s29_30 g_s65_66) (|<=i| g_s30_31 g_s66_67) (|<=i| g_s24_25 g_s67_68) (|<=i| g_s25_26 g_s24_25) (= g_s32_33 e0) (= g_s33_34 e0) (= g_s34_35 e0) (= g_s35_36 e0) (= g_s36_37 e0) (= g_s37_38 e0) (= g_s38_39 e0) (= g_s39_40 e0) (= g_s40_41 e0) (= g_s41_42 e0) (= g_s42_43 e0) (= g_s43_44 e0) (= g_s44_45 e0) (= g_s45_46 e0) (= g_s46_47 e0) (= g_s47_48 e0) (= g_s48_49 e0) (= g_s49_50 e0) (= g_s50_51 e0) (= g_s51_52 e0) (= g_s52_53 e0) (= g_s53_54 e0) (= g_s54_55 e0) (= g_s55_56 e0) (= g_s56_57 e0) (= g_s57_58 e0) (= g_s58_59 e0) (= g_s59_60 e0) (= g_s60_61 e0) (= g_s61_62 e0) (= g_s62_63 g_s68_69) (= g_s63_64 g_s69_70) (mem g_s70_71 NAT1) (mem g_s71_72 NAT1) (mem g_s72_73 NAT1) (mem g_s73_74 NAT1) (mem g_s74_75 NAT1) (mem g_s75_76 NAT1) (mem g_s76_77 NAT) (mem g_s77_78 NAT) (mem g_s78_79 NAT) (mem g_s79_80 NAT) (mem g_s80_81 NAT) (mem g_s81_82 NAT) (mem g_s82_83 NAT) (mem g_s83_84 NAT) (mem g_s84_85 NAT) (mem g_s85_86 NAT) (mem g_s86_87 NAT) (mem g_s87_88 NAT) (|<i| g_s70_71 MaxInt) (|<i| g_s71_72 MaxInt) (|<i| g_s72_73 MaxInt) (|<i| g_s73_74 MaxInt) (|<i| g_s74_75 MaxInt) (|<i| g_s75_76 MaxInt) (= g_s76_77 e89) (= g_s77_78 e0) (= g_s78_79 e89) (= g_s79_80 e0) (= g_s80_81 e89) (= g_s81_82 e0) (= g_s82_83 e89) (= g_s83_84 e0) (= g_s84_85 e89) (= g_s85_86 e0) (= g_s86_87 e89) (= g_s87_88 e0)))
(define-fun |def_seext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool (and (mem g_s88_90 NATURAL1) (mem g_s89_91 NATURAL1) (mem g_s90_92 NATURAL1) (mem g_s91_93 NATURAL1) (mem g_s92_94 NATURAL1) (mem g_s93_95 NATURAL1) (mem g_s94_96 NATURAL1) (mem g_s95_97 NATURAL1) (mem g_s96_98 NATURAL1) (mem g_s97_99 NATURAL1) (mem g_s98_100 NATURAL1) (mem g_s99_101 NATURAL1) (mem g_s100_102 NATURAL1) (mem g_s101_103 NATURAL1) (mem g_s102_104 NATURAL1) (mem g_s103_105 NATURAL1) (mem g_s104_106 NATURAL1) (mem g_s105_107 NATURAL1) (mem g_s106_108 NATURAL1) (mem g_s107_109 NATURAL1) (mem g_s108_110 NATURAL1) (mem g_s109_111 NATURAL1) (mem g_s110_112 NATURAL1) (mem g_s111_113 NATURAL1) (mem g_s112_114 NATURAL1) (mem g_s113_115 NATURAL1) (mem g_s114_116 NATURAL1) (mem g_s115_117 NATURAL1) (mem g_s116_118 NATURAL1) (mem g_s117_119 NATURAL1) (mem g_s118_120 NATURAL1) (mem g_s119_121 NATURAL1) (mem g_s120_122 NATURAL1)))
(define-fun |def_abs| () Bool true)
(define-fun |def_inv| () Bool true)
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool (and (= g_s88_90 (|+i| g_s0_1 g_s1_2)) (= g_s89_91 (|+i| g_s0_1 g_s2_3)) (= g_s90_92 (|+i| g_s0_1 g_s3_4)) (= g_s91_93 (|+i| g_s0_1 g_s4_5)) (= g_s92_94 (|+i| g_s0_1 g_s5_6)) (= g_s93_95 (|+i| g_s0_1 g_s6_7)) (= g_s94_96 (|+i| g_s0_1 g_s7_8)) (= g_s95_97 (|+i| g_s0_1 g_s8_9)) (= g_s96_98 (|+i| g_s0_1 g_s70_71)) (= g_s97_99 (|+i| g_s0_1 g_s12_13)) (= g_s98_100 (|+i| g_s0_1 g_s13_14)) (= g_s99_101 (|+i| g_s0_1 g_s71_72)) (= g_s100_102 (|+i| g_s0_1 g_s15_16)) (= g_s101_103 (|+i| g_s0_1 g_s16_17)) (= g_s102_104 (|+i| g_s0_1 g_s72_73)) (= g_s103_105 (|+i| g_s0_1 g_s74_75)) (= g_s104_106 (|+i| g_s0_1 g_s18_19)) (= g_s105_107 (|+i| g_s0_1 g_s19_20)) (= g_s106_108 (|+i| g_s0_1 g_s73_74)) (= g_s107_109 (|+i| g_s0_1 g_s75_76)) (= g_s108_110 (|+i| g_s0_1 g_s21_22)) (= g_s109_111 (|+i| g_s0_1 g_s22_23)) (= g_s110_112 (|+i| g_s0_1 g_s24_25)) (= g_s111_113 (|+i| g_s0_1 g_s26_27)) (= g_s112_114 (|+i| (|-i| g_s0_1 e89) (|*i| (|+i| g_s26_27 e89) (|+i| g_s14_15 e89)))) (= g_s113_115 (|+i| (|-i| g_s0_1 e89) (|*i| (|+i| g_s26_27 e89) (|+i| g_s17_18 e89)))) (= g_s114_116 (|+i| (|-i| g_s0_1 e89) (|*i| (|+i| g_s26_27 e89) (|+i| g_s18_19 e89)))) (= g_s115_117 (|+i| (|-i| g_s0_1 e89) (|*i| (|+i| g_s26_27 e89) (|+i| g_s21_22 e89)))) (= g_s116_118 (|+i| g_s0_1 g_s27_28)) (= g_s117_119 (|+i| g_s0_1 g_s28_29)) (= g_s118_120 (|+i| g_s0_1 g_s29_30)) (= g_s119_121 (|+i| g_s0_1 g_s30_31)) (= g_s120_122 (|+i| g_s0_1 g_s31_32))))
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool true)
; PO group 0 
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_imprp|)
; PO 1 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s3_4) NATURAL1)))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s2_3) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s1_2) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s27_28) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s26_27) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s28_29) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s24_25) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s13_14) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s12_13) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s16_17) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s15_16) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s31_32) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s70_71) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s71_72) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s72_73) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s74_75) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s73_74) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s75_76) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s4_5) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s5_6) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 21 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s6_7) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 22 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s8_9) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 23 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s7_8) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 24 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s19_20) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 25 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s18_19) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 26 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s22_23) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 27 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s21_22) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 28 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s29_30) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 29 in group 0
(push 1)
(assert (not (mem (|+i| g_s0_1 g_s30_31) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 30 in group 0
(push 1)
(assert (not (mem (|+i| (|-i| g_s0_1 e89) (|*i| (|+i| g_s26_27 e89) (|+i| g_s14_15 e89))) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 31 in group 0
(push 1)
(assert (not (mem (|+i| (|-i| g_s0_1 e89) (|*i| (|+i| g_s26_27 e89) (|+i| g_s17_18 e89))) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 32 in group 0
(push 1)
(assert (not (mem (|+i| (|-i| g_s0_1 e89) (|*i| (|+i| g_s26_27 e89) (|+i| g_s18_19 e89))) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 33 in group 0
(push 1)
(assert (not (mem (|+i| (|-i| g_s0_1 e89) (|*i| (|+i| g_s26_27 e89) (|+i| g_s21_22 e89))) NATURAL1)))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)