(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e19 () U)
(declare-fun e82 () U)
(declare-fun e84 () U)
(declare-fun e86 () U)
(declare-fun e88 () U)
(declare-fun e90 () U)
(declare-fun e92 () U)
(declare-fun e94 () U)
(declare-fun e96 () U)
(declare-fun e98 () U)
(declare-fun e100 () U)
(declare-fun e102 () U)
(declare-fun e104 () U)
(declare-fun e106 () U)
(declare-fun e108 () U)
(declare-fun e110 () U)
(declare-fun e112 () U)
(declare-fun e114 () U)
(declare-fun e116 () U)
(declare-fun e118 () U)
(declare-fun e120 () U)
(declare-fun e122 () U)
(declare-fun e124 () U)
(declare-fun e126 () U)
(declare-fun e128 () U)
(declare-fun e130 () U)
(declare-fun e132 () U)
(declare-fun e134 () U)
(declare-fun e136 () U)
(declare-fun e138 () U)
(declare-fun e140 () U)
(declare-fun e142 () U)
(declare-fun e144 () U)
(declare-fun e146 () U)
(declare-fun e148 () U)
(declare-fun e150 () U)
(declare-fun e152 () U)
(declare-fun e154 () U)
(declare-fun e156 () U)
(declare-fun e158 () U)
(declare-fun e160 () U)
(declare-fun e162 () U)
(declare-fun e164 () U)
(declare-fun e166 () U)
(declare-fun e168 () U)
(declare-fun e170 () U)
(declare-fun e172 () U)
(declare-fun e174 () U)
(declare-fun e176 () U)
(declare-fun e178 () U)
(declare-fun e180 () U)
(declare-fun e182 () U)
(declare-fun e184 () U)
(declare-fun e186 () U)
(declare-fun e188 () U)
(declare-fun e190 () U)
(declare-fun e192 () U)
(declare-fun e194 () U)
(declare-fun e196 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_121 () U)
(declare-fun g_s101_123 () U)
(declare-fun g_s102_125 () U)
(declare-fun g_s103_127 () U)
(declare-fun g_s104_129 () U)
(declare-fun g_s105_131 () U)
(declare-fun g_s106_133 () U)
(declare-fun g_s107_135 () U)
(declare-fun g_s108_137 () U)
(declare-fun g_s109_139 () U)
(declare-fun g_s11_13 () U)
(declare-fun g_s110_141 () U)
(declare-fun g_s111_143 () U)
(declare-fun g_s112_145 () U)
(declare-fun g_s113_147 () U)
(declare-fun g_s114_149 () U)
(declare-fun g_s115_151 () U)
(declare-fun g_s116_153 () U)
(declare-fun g_s117_155 () U)
(declare-fun g_s118_157 () U)
(declare-fun g_s119_159 () U)
(declare-fun g_s120_161 () U)
(declare-fun g_s121_163 () U)
(declare-fun g_s122_165 () U)
(declare-fun g_s123_167 () U)
(declare-fun g_s124_169 () U)
(declare-fun g_s125_171 () U)
(declare-fun g_s126_173 () U)
(declare-fun g_s127_175 () U)
(declare-fun g_s128_177 () U)
(declare-fun g_s129_179 () U)
(declare-fun g_s13_15 () U)
(declare-fun g_s130_181 () U)
(declare-fun g_s131_183 () U)
(declare-fun g_s132_185 () U)
(declare-fun g_s133_187 () U)
(declare-fun g_s134_189 () U)
(declare-fun g_s135_191 () U)
(declare-fun g_s136_193 () U)
(declare-fun g_s137_195 () U)
(declare-fun g_s138_197 () U)
(declare-fun g_s139_198 () U)
(declare-fun g_s140_199 () U)
(declare-fun g_s141_200 () U)
(declare-fun g_s142_201 () U)
(declare-fun g_s143_202 () U)
(declare-fun g_s144_204 () U)
(declare-fun g_s145_203 () U)
(declare-fun g_s146_205 () U)
(declare-fun g_s147_207 () U)
(declare-fun g_s148_206 () U)
(declare-fun g_s149_208 () U)
(declare-fun g_s15_17 () U)
(declare-fun g_s150_209 () U)
(declare-fun g_s151_210 () U)
(declare-fun g_s152_211 () U)
(declare-fun g_s153_212 () U)
(declare-fun g_s154_214 () U)
(declare-fun g_s155_213 () U)
(declare-fun g_s156_215 () U)
(declare-fun g_s157_216 () U)
(declare-fun g_s158_217 () U)
(declare-fun g_s159_218 () U)
(declare-fun g_s16_16 () U)
(declare-fun g_s160_219 () U)
(declare-fun g_s161_220 () U)
(declare-fun g_s162_221 () U)
(declare-fun g_s163_222 () U)
(declare-fun g_s164_223 () U)
(declare-fun g_s164$1_226 () U)
(declare-fun g_s165_224 () U)
(declare-fun g_s165$1_227 () U)
(declare-fun g_s166_225 () U)
(declare-fun g_s166$1_228 () U)
(declare-fun g_s167$1_229 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s171_230 () U)
(declare-fun g_s173$1_231 () U)
(declare-fun g_s174$1_232 () U)
(declare-fun g_s175$1_233 () U)
(declare-fun g_s175$2_235 () U)
(declare-fun g_s176$1_234 () U)
(declare-fun g_s18_20 () U)
(declare-fun g_s180_236 () U)
(declare-fun g_s180$1_237 () U)
(declare-fun g_s19_21 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_22 () U)
(declare-fun g_s21_23 () U)
(declare-fun g_s22_24 () U)
(declare-fun g_s23_25 () U)
(declare-fun g_s24_26 () U)
(declare-fun g_s25_27 () U)
(declare-fun g_s26_28 () U)
(declare-fun g_s27_29 () U)
(declare-fun g_s28_30 () U)
(declare-fun g_s29_31 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_32 () U)
(declare-fun g_s31_33 () U)
(declare-fun g_s32_34 () U)
(declare-fun g_s33_35 () U)
(declare-fun g_s34_36 () U)
(declare-fun g_s35_37 () U)
(declare-fun g_s36_38 () U)
(declare-fun g_s37_39 () U)
(declare-fun g_s38_40 () U)
(declare-fun g_s39_41 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_42 () U)
(declare-fun g_s41_43 () U)
(declare-fun g_s42_44 () U)
(declare-fun g_s43_45 () U)
(declare-fun g_s44_46 () U)
(declare-fun g_s45_47 () U)
(declare-fun g_s46_48 () U)
(declare-fun g_s47_49 () U)
(declare-fun g_s48_50 () U)
(declare-fun g_s49_51 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_52 () U)
(declare-fun g_s51_53 () U)
(declare-fun g_s52_54 () U)
(declare-fun g_s53_55 () U)
(declare-fun g_s54_56 () U)
(declare-fun g_s55_57 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_71 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_70 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_83 () U)
(declare-fun g_s82_85 () U)
(declare-fun g_s83_87 () U)
(declare-fun g_s84_89 () U)
(declare-fun g_s85_91 () U)
(declare-fun g_s86_93 () U)
(declare-fun g_s87_95 () U)
(declare-fun g_s88_97 () U)
(declare-fun g_s89_99 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_101 () U)
(declare-fun g_s91_103 () U)
(declare-fun g_s92_105 () U)
(declare-fun g_s93_107 () U)
(declare-fun g_s94_109 () U)
(declare-fun g_s95_111 () U)
(declare-fun g_s96_113 () U)
(declare-fun g_s97_115 () U)
(declare-fun g_s98_117 () U)
(declare-fun g_s99_119 () U)
(declare-fun e12 () U)
(declare-fun e14 () U)
(declare-fun e58 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (= g_s7_8 (SET (mapplet g_s10_11 (mapplet g_s9_10 g_s8_9)))) (= g_s11_13 e12) (= g_s13_15 e14) (= g_s15_17 (interval (iuminus g_s16_16) g_s16_16)) (= g_s17_18 (interval e0 g_s16_16)) (= g_s18_20 (interval e19 g_s16_16)) (subset g_s18_20 g_s17_18) (subset g_s17_18 g_s15_17) (subset g_s17_18 NAT) (subset g_s18_20 NAT1) (subset g_s15_17 INT) (mem g_s19_21 g_s15_17) (mem g_s19_21 g_s17_18) (not (mem g_s19_21 g_s18_20)) (mem g_s20_22 g_s15_17) (not (mem g_s20_22 g_s17_18)) (= g_s21_23 (interval (iuminus g_s16_16) g_s16_16)) (subset g_s21_23 INT) (subset g_s22_24 g_s0_1) (mem g_s23_25 g_s0_1) (mem g_s23_25 g_s22_24) (mem g_s24_26 g_s0_1) (not (mem g_s24_26 g_s22_24)) (mem g_s25_27 (|+->| NAT g_s0_1)) (mem g_s25_27 (perm g_s22_24)) (= (card g_s22_24) g_s26_28) (subset g_s27_29 g_s1_2) (mem g_s28_30 g_s1_2) (mem g_s28_30 g_s27_29) (mem g_s29_31 g_s1_2) (not (mem g_s29_31 g_s27_29)) (mem g_s30_32 (|+->| NAT g_s1_2)) (mem g_s30_32 (perm g_s27_29)) (= (card g_s27_29) g_s31_33) (mem g_s32_34 (|+->| (set_prod g_s21_23 g_s21_23) g_s21_23)) (subset g_s33_35 g_s21_23) (mem g_s34_36 (|-->| (set_prod g_s17_18 g_s17_18) g_s21_23)) (mem g_s35_37 (|+->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s36_38 (|-->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s37_39 (|-->| (set_prod g_s17_18 g_s21_23) (POW g_s17_18))) (mem g_s38_40 (|-->| (set_prod g_s17_18 g_s17_18) (POW g_s17_18))) (mem g_s39_41 (|-->| (set_prod g_s17_18 g_s17_18) (POW g_s17_18))) (mem g_s40_42 (|-->| (set_prod g_s17_18 g_s17_18) (POW g_s17_18))) (mem g_s41_43 (|-->| (set_prod g_s17_18 g_s17_18) (POW g_s17_18))) (mem g_s42_44 (|<->| g_s17_18 g_s17_18)) (mem g_s43_45 (|<->| g_s17_18 g_s17_18)) (mem g_s44_46 (|<->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s45_47 (|<->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s46_48 (|<->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s47_49 (|<->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s48_50 (|<->| g_s17_18 g_s17_18)) (mem g_s49_51 (|<->| g_s17_18 g_s17_18)) (mem g_s50_52 (|<->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s51_53 (|<->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s52_54 (|<->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s53_55 (|<->| (set_prod g_s17_18 g_s21_23) g_s17_18)) (mem g_s54_56 (|-->| (set_prod g_s17_18 g_s17_18) g_s17_18)) (mem g_s55_57 (|-->| (set_prod g_s17_18 g_s17_18) g_s17_18)) (= (dom g_s35_37) (set_prod g_s17_18 (interval e0 g_s16_16))) (= (dom g_s32_34) e58) (subset g_s58_59 g_s2_3) (mem g_s59_60 g_s2_3) (not (mem g_s59_60 g_s58_59)) (subset g_s60_61 g_s3_4) (mem g_s61_62 g_s3_4) (not (mem g_s61_62 g_s60_61)) (subset g_s62_63 g_s4_5) (mem g_s63_64 g_s4_5) (not (mem g_s63_64 g_s62_63)) (mem g_s64_65 (|+->| NAT g_s4_5)) (mem g_s64_65 (perm g_s62_63)) (= g_s65_66 INT) (= g_s66_67 NAT) (mem g_s67_68 g_s65_66) (not (mem g_s67_68 g_s66_67)) (mem g_s68_69 g_s65_66) (mem g_s68_69 g_s66_67) (mem g_s69_71 (|>->| g_s62_63 g_s70_70)) (subset g_s71_72 g_s5_6) (mem g_s72_73 g_s5_6) (not (mem g_s72_73 g_s71_72)) (mem g_s73_74 (|+->| NAT g_s5_6)) (mem g_s73_74 (perm g_s71_72)) (subset g_s74_75 g_s6_7) (mem g_s75_76 g_s6_7) (not (mem g_s75_76 g_s74_75)) (mem g_s76_77 (|+->| NAT g_s6_7)) (mem g_s76_77 (perm g_s74_75))))
(define-fun |def_seext| () Bool (and (= g_s77_78 TRUE) (= g_s78_79 FALSE) (= g_s79_80 e0) (= g_s80_81 e19) (= g_s81_83 e82) (= g_s82_85 e84) (= g_s83_87 e86) (= g_s84_89 e88) (= g_s85_91 e90) (= g_s86_93 e92) (= g_s87_95 e94) (= g_s88_97 e96) (= g_s89_99 e98) (= g_s90_101 e100) (= g_s91_103 e102) (= g_s92_105 e104) (= g_s93_107 e106) (= g_s94_109 e108) (= g_s95_111 e110) (= g_s96_113 e112) (= g_s97_115 e114) (= g_s98_117 e116) (= g_s99_119 e118) (= g_s100_121 e120) (= g_s101_123 e122) (= g_s102_125 e124) (= g_s103_127 e126) (= g_s104_129 e128) (= g_s105_131 e130) (= g_s106_133 e132) (= g_s107_135 e134) (= g_s108_137 e136) (= g_s109_139 e138) (= g_s110_141 e140) (= g_s111_143 e142) (= g_s112_145 e144) (= g_s113_147 e146) (= g_s114_149 e148) (= g_s115_151 e150) (= g_s116_153 e152) (= g_s117_155 e154) (= g_s118_157 e156) (= g_s119_159 e158) (= g_s120_161 e160) (= g_s121_163 e162) (= g_s122_165 e164) (= g_s123_167 e166) (= g_s124_169 e168) (= g_s125_171 e170) (= g_s126_173 e172) (= g_s127_175 e174) (= g_s128_177 e176) (= g_s129_179 e178) (= g_s130_181 e180) (= g_s131_183 e182) (= g_s132_185 e184) (= g_s133_187 e186) (= g_s134_189 e188) (= g_s135_191 e190) (= g_s136_193 e192) (= g_s137_195 e194) (= g_s138_197 e196) (subset g_s139_198 g_s62_63) (subset g_s140_199 g_s62_63) (subset g_s141_200 g_s62_63) (mem g_s142_201 (|+->| g_s62_63 g_s58_59)) (mem g_s143_202 (|+->| g_s62_63 g_s17_18)) (mem g_s144_204 (|+->| g_s62_63 g_s145_203)) (mem g_s146_205 (|+->| g_s62_63 g_s17_18)) (mem g_s147_207 (|-->| g_s62_63 (POW g_s148_206))) (subset g_s149_208 g_s62_63) (mem g_s150_209 (|+->| g_s62_63 g_s58_59)) (mem g_s151_210 (|+->| g_s62_63 g_s17_18)) (mem g_s152_211 (|+->| g_s62_63 g_s145_203)) (mem g_s153_212 (|+->| g_s62_63 g_s17_18)) (mem g_s154_214 (|<->| g_s62_63 g_s155_213)) (mem g_s156_215 (|+->| g_s62_63 g_s66_67)) (subset g_s157_216 g_s62_63) (mem g_s158_217 (|+->| g_s62_63 g_s58_59)) (mem g_s159_218 (|+->| g_s62_63 g_s17_18)) (mem g_s160_219 (|+->| g_s62_63 g_s145_203)) (mem g_s161_220 (|+->| g_s62_63 g_s17_18)) (subset g_s162_221 g_s62_63)))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s163_222 (|+->| g_s62_63 g_s17_18)) (mem g_s164_223 g_s15_17) (mem g_s165_224 g_s15_17) (mem g_s166_225 BOOL)))
(define-fun |def_inv| () Bool (and (= g_s164_223 g_s164$1_226) (= g_s165_224 g_s165$1_227) (= g_s166_225 g_s166$1_228) (mem g_s164$1_226 g_s15_17) (mem g_s165$1_227 g_s15_17) (mem g_s166$1_228 BOOL) (mem g_s167$1_229 (|-->| g_s4_5 g_s15_17)) (= g_s163_222 (range_restriction (domain_restriction g_s62_63 g_s167$1_229) g_s17_18))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
; PO 1 in group 0
(push 1)
(assert (not (mem (set_prod g_s4_5 (SET g_s20_22)) (|-->| g_s4_5 g_s15_17))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (= empty (range_restriction (domain_restriction g_s62_63 (set_prod g_s4_5 (SET g_s20_22))) g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
; PO 1 in group 1
(assert (not (=> (and lh_1 lh_2) (= FALSE g_s78_79))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202))))
(define-fun lh_4 () Bool (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210))))
(define-fun lh_5 () Bool (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218))))
(define-fun lh_6 () Bool (mem g_s171_230 (dom g_s143_202)))
(define-fun lh_7 () Bool (mem g_s173$1_231 g_s15_17))
(define-fun lh_8 () Bool (= g_s173$1_231 (apply g_s143_202 g_s171_230)))
(define-fun lh_9 () Bool (mem g_s171_230 (dom g_s151_210)))
(define-fun lh_10 () Bool (mem g_s174$1_232 g_s15_17))
(define-fun lh_11 () Bool (= g_s174$1_232 (apply g_s151_210 g_s171_230)))
(define-fun lh_12 () Bool (mem g_s173$1_231 g_s17_18))
(define-fun lh_13 () Bool (mem g_s174$1_232 g_s17_18))
(define-fun lh_14 () Bool (mem g_s175$1_233 g_s15_17))
(define-fun lh_15 () Bool (= g_s175$1_233 (apply g_s55_57 (mapplet g_s173$1_231 g_s174$1_232))))
(define-fun lh_16 () Bool (mem g_s171_230 (dom g_s159_218)))
(define-fun lh_17 () Bool (mem g_s176$1_234 g_s15_17))
(define-fun lh_18 () Bool (= g_s176$1_234 (apply g_s159_218 g_s171_230)))
(define-fun lh_19 () Bool (mem g_s175$1_233 g_s17_18))
(define-fun lh_20 () Bool (mem g_s176$1_234 g_s17_18))
(define-fun lh_21 () Bool (mem g_s175$2_235 g_s15_17))
(define-fun lh_22 () Bool (= g_s175$2_235 (apply g_s55_57 (mapplet g_s175$1_233 g_s176$1_234))))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s171_230 (dom g_s143_202)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s171_230 (dom g_s151_210)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s174$1_232 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s173$1_231 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem g_s171_230 (dom g_s159_218)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem g_s176$1_234 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem g_s175$1_233 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22) (= (apply g_s55_57 (mapplet (apply g_s55_57 (mapplet (apply g_s143_202 g_s171_230) (apply g_s151_210 g_s171_230))) (apply g_s159_218 g_s171_230))) g_s175$2_235))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202))))
(define-fun lh_4 () Bool (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210))))
(define-fun lh_5 () Bool (not (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218)))))
(define-fun lh_6 () Bool (mem g_s171_230 (dom g_s143_202)))
(define-fun lh_7 () Bool (mem g_s173$1_231 g_s15_17))
(define-fun lh_8 () Bool (= g_s173$1_231 (apply g_s143_202 g_s171_230)))
(define-fun lh_9 () Bool (mem g_s171_230 (dom g_s151_210)))
(define-fun lh_10 () Bool (mem g_s174$1_232 g_s15_17))
(define-fun lh_11 () Bool (= g_s174$1_232 (apply g_s151_210 g_s171_230)))
(define-fun lh_12 () Bool (mem g_s173$1_231 g_s17_18))
(define-fun lh_13 () Bool (mem g_s174$1_232 g_s17_18))
(define-fun lh_14 () Bool (mem g_s175$1_233 g_s15_17))
(define-fun lh_15 () Bool (= g_s175$1_233 (apply g_s55_57 (mapplet g_s173$1_231 g_s174$1_232))))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s171_230 (dom g_s143_202)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s171_230 (dom g_s151_210)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s174$1_232 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s173$1_231 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (= (apply g_s55_57 (mapplet (apply g_s143_202 g_s171_230) (apply g_s151_210 g_s171_230))) g_s175$1_233))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s180$1_237 g_s180_236))
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202))))
(define-fun lh_4 () Bool (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210))))
; PO 1 in group 4
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (and (= (bool (mem g_s171_230 g_s140_199)) TRUE) (= (bool (mem g_s171_230 (dom g_s159_218))) TRUE))) (bool (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202))))
(define-fun lh_4 () Bool (not (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210)))))
(define-fun lh_5 () Bool (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218))))
(define-fun lh_6 () Bool (mem g_s171_230 (dom g_s143_202)))
(define-fun lh_7 () Bool (mem g_s173$1_231 g_s15_17))
(define-fun lh_8 () Bool (= g_s173$1_231 (apply g_s143_202 g_s171_230)))
(define-fun lh_9 () Bool (mem g_s171_230 (dom g_s159_218)))
(define-fun lh_10 () Bool (mem g_s176$1_234 g_s15_17))
(define-fun lh_11 () Bool (= g_s176$1_234 (apply g_s159_218 g_s171_230)))
(define-fun lh_12 () Bool (mem g_s173$1_231 g_s17_18))
(define-fun lh_13 () Bool (mem g_s176$1_234 g_s17_18))
(define-fun lh_14 () Bool (mem g_s175$1_233 g_s15_17))
(define-fun lh_15 () Bool (= g_s175$1_233 (apply g_s55_57 (mapplet g_s173$1_231 g_s176$1_234))))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s171_230 (dom g_s143_202)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s171_230 (dom g_s159_218)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s176$1_234 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s173$1_231 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (= (apply g_s55_57 (mapplet (apply g_s143_202 g_s171_230) (apply g_s159_218 g_s171_230))) g_s175$1_233))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202))))
(define-fun lh_4 () Bool (not (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210)))))
(define-fun lh_5 () Bool (not (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218)))))
(define-fun lh_6 () Bool (mem g_s171_230 (dom g_s143_202)))
(define-fun lh_7 () Bool (mem g_s173$1_231 g_s15_17))
(define-fun lh_8 () Bool (= g_s173$1_231 (apply g_s143_202 g_s171_230)))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s171_230 (dom g_s143_202)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= (apply g_s143_202 g_s171_230) g_s173$1_231))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s180$1_237 g_s180_236))
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202))))
(define-fun lh_4 () Bool (not (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210)))))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (and (= (bool (mem g_s171_230 g_s140_199)) TRUE) (= (bool (mem g_s171_230 (dom g_s159_218))) TRUE))) (bool (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s180$1_237 g_s180_236))
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202))))
; PO 1 in group 8
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (and (= (bool (mem g_s171_230 g_s139_198)) TRUE) (= (bool (mem g_s171_230 (dom g_s151_210))) TRUE))) (bool (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (not (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202)))))
(define-fun lh_4 () Bool (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210))))
(define-fun lh_5 () Bool (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218))))
(define-fun lh_6 () Bool (mem g_s171_230 (dom g_s151_210)))
(define-fun lh_7 () Bool (mem g_s174$1_232 g_s15_17))
(define-fun lh_8 () Bool (= g_s174$1_232 (apply g_s151_210 g_s171_230)))
(define-fun lh_9 () Bool (mem g_s171_230 (dom g_s159_218)))
(define-fun lh_10 () Bool (mem g_s176$1_234 g_s15_17))
(define-fun lh_11 () Bool (= g_s176$1_234 (apply g_s159_218 g_s171_230)))
(define-fun lh_12 () Bool (mem g_s174$1_232 g_s17_18))
(define-fun lh_13 () Bool (mem g_s176$1_234 g_s17_18))
(define-fun lh_14 () Bool (mem g_s175$1_233 g_s15_17))
(define-fun lh_15 () Bool (= g_s175$1_233 (apply g_s55_57 (mapplet g_s174$1_232 g_s176$1_234))))
; PO 1 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s171_230 (dom g_s151_210)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s171_230 (dom g_s159_218)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s174$1_232 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s176$1_234 g_s17_18))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (= (apply g_s55_57 (mapplet (apply g_s151_210 g_s171_230) (apply g_s159_218 g_s171_230))) g_s175$1_233))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (not (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202)))))
(define-fun lh_4 () Bool (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210))))
(define-fun lh_5 () Bool (not (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218)))))
(define-fun lh_6 () Bool (mem g_s171_230 (dom g_s151_210)))
(define-fun lh_7 () Bool (mem g_s174$1_232 g_s15_17))
(define-fun lh_8 () Bool (= g_s174$1_232 (apply g_s151_210 g_s171_230)))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s171_230 (dom g_s151_210)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= (apply g_s151_210 g_s171_230) g_s174$1_232))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s180$1_237 g_s180_236))
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (not (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202)))))
(define-fun lh_4 () Bool (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210))))
; PO 1 in group 11
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (and (= (bool (mem g_s171_230 g_s140_199)) TRUE) (= (bool (mem g_s171_230 (dom g_s159_218))) TRUE))) (bool (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (not (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202)))))
(define-fun lh_4 () Bool (not (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210)))))
(define-fun lh_5 () Bool (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218))))
(define-fun lh_6 () Bool (mem g_s171_230 (dom g_s159_218)))
(define-fun lh_7 () Bool (mem g_s176$1_234 g_s15_17))
(define-fun lh_8 () Bool (= g_s176$1_234 (apply g_s159_218 g_s171_230)))
; PO 1 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s171_230 (dom g_s159_218)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= (apply g_s159_218 g_s171_230) g_s176$1_234))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s180$1_237 g_s180_236))
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (not (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202)))))
(define-fun lh_4 () Bool (not (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210)))))
; PO 1 in group 13
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (and (= (bool (mem g_s171_230 g_s140_199)) TRUE) (= (bool (mem g_s171_230 (dom g_s159_218))) TRUE))) (bool (mem g_s171_230 (binary_inter g_s140_199 (dom g_s159_218))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s180$1_237 g_s180_236))
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (not (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202)))))
; PO 1 in group 14
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (and (= (bool (mem g_s171_230 g_s139_198)) TRUE) (= (bool (mem g_s171_230 (dom g_s151_210))) TRUE))) (bool (mem g_s171_230 (binary_inter g_s139_198 (dom g_s151_210))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s180$1_237 g_s180_236))
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
; PO 1 in group 15
(assert (not (=> (and lh_1 lh_2) (= (bool (and (= (bool (mem g_s171_230 g_s141_200)) TRUE) (= (bool (mem g_s171_230 (dom g_s143_202))) TRUE))) (bool (mem g_s171_230 (binary_inter g_s141_200 (dom g_s143_202))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s171_230 g_s4_5))
(define-fun lh_2 () Bool (mem g_s171_230 g_s62_63))
(define-fun lh_3 () Bool (mem g_s164$1_226 g_s17_18))
; PO 1 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (|<+| g_s167$1_229 (SET (mapplet g_s171_230 g_s164$1_226))) (|-->| g_s4_5 g_s15_17)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (|<+| g_s163_222 (SET (mapplet g_s171_230 g_s164$1_226))) (range_restriction (domain_restriction g_s62_63 (|<+| g_s167$1_229 (SET (mapplet g_s171_230 g_s164$1_226)))) g_s17_18)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)