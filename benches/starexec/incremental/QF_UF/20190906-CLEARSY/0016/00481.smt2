(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e208 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_143 () U)
(declare-fun g_s143_144 () U)
(declare-fun g_s144_145 () U)
(declare-fun g_s145_146 () U)
(declare-fun g_s146_147 () U)
(declare-fun g_s147_148 () U)
(declare-fun g_s148_149 () U)
(declare-fun g_s149_150 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_151 () U)
(declare-fun g_s151_152 () U)
(declare-fun g_s152_153 () U)
(declare-fun g_s153_154 () U)
(declare-fun g_s154_155 () U)
(declare-fun g_s155_156 () U)
(declare-fun g_s156_157 () U)
(declare-fun g_s157_158 () U)
(declare-fun g_s158_159 () U)
(declare-fun g_s159_160 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_161 () U)
(declare-fun g_s161_162 () U)
(declare-fun g_s162_163 () U)
(declare-fun g_s163_164 () U)
(declare-fun g_s164_165 () U)
(declare-fun g_s165_166 () U)
(declare-fun g_s166_167 () U)
(declare-fun g_s167_168 () U)
(declare-fun g_s168_169 () U)
(declare-fun g_s169_170 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_171 () U)
(declare-fun g_s171_172 () U)
(declare-fun g_s172_173 () U)
(declare-fun g_s173_174 () U)
(declare-fun g_s174_175 () U)
(declare-fun g_s175_176 () U)
(declare-fun g_s176_177 () U)
(declare-fun g_s177_178 () U)
(declare-fun g_s178_179 () U)
(declare-fun g_s179_180 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_181 () U)
(declare-fun g_s181_182 () U)
(declare-fun g_s182_183 () U)
(declare-fun g_s183_184 () U)
(declare-fun g_s184_185 () U)
(declare-fun g_s185_186 () U)
(declare-fun g_s186_187 () U)
(declare-fun g_s187_188 () U)
(declare-fun g_s188_189 () U)
(declare-fun g_s189_190 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_191 () U)
(declare-fun g_s191_192 () U)
(declare-fun g_s192_193 () U)
(declare-fun g_s193_194 () U)
(declare-fun g_s194_195 () U)
(declare-fun g_s195_196 () U)
(declare-fun g_s196_197 () U)
(declare-fun g_s197_198 () U)
(declare-fun g_s198_199 () U)
(declare-fun g_s199_200 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_201 () U)
(declare-fun g_s201_202 () U)
(declare-fun g_s202_203 () U)
(declare-fun g_s203_204 () U)
(declare-fun g_s204_206 () U)
(declare-fun g_s205_205 () U)
(declare-fun g_s206_207 () U)
(declare-fun g_s207_209 () U)
(declare-fun g_s208_210 () U)
(declare-fun g_s209_211 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_212 () U)
(declare-fun g_s211_213 () U)
(declare-fun g_s212_214 () U)
(declare-fun g_s213_215 () U)
(declare-fun g_s214_216 () U)
(declare-fun g_s215_217 () U)
(declare-fun g_s216_218 () U)
(declare-fun g_s217_219 () U)
(declare-fun g_s218_220 () U)
(declare-fun g_s219_221 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_222 () U)
(declare-fun g_s221_223 () U)
(declare-fun g_s222_224 () U)
(declare-fun g_s223_225 () U)
(declare-fun g_s224_226 () U)
(declare-fun g_s225_227 () U)
(declare-fun g_s226_228 () U)
(declare-fun g_s227_229 () U)
(declare-fun g_s228_230 () U)
(declare-fun g_s229_231 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_232 () U)
(declare-fun g_s231_233 () U)
(declare-fun g_s232_234 () U)
(declare-fun g_s233_235 () U)
(declare-fun g_s234_236 () U)
(declare-fun g_s235_237 () U)
(declare-fun g_s236_238 () U)
(declare-fun g_s237_239 () U)
(declare-fun g_s238_240 () U)
(declare-fun g_s239_241 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_242 () U)
(declare-fun g_s241_243 () U)
(declare-fun g_s242_244 () U)
(declare-fun g_s243_245 () U)
(declare-fun g_s244_246 () U)
(declare-fun g_s245_247 () U)
(declare-fun g_s246_248 () U)
(declare-fun g_s247_249 () U)
(declare-fun g_s248_250 () U)
(declare-fun g_s249_251 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_252 () U)
(declare-fun g_s251_253 () U)
(declare-fun g_s252_254 () U)
(declare-fun g_s253_255 () U)
(declare-fun g_s254_256 () U)
(declare-fun g_s255_257 () U)
(declare-fun g_s256_258 () U)
(declare-fun g_s257_259 () U)
(declare-fun g_s258_260 () U)
(declare-fun g_s259_261 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_262 () U)
(declare-fun g_s261_263 () U)
(declare-fun g_s262_264 () U)
(declare-fun g_s263_265 () U)
(declare-fun g_s264_266 () U)
(declare-fun g_s265_267 () U)
(declare-fun g_s266_268 () U)
(declare-fun g_s267_269 () U)
(declare-fun g_s268_270 () U)
(declare-fun g_s269_271 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_272 () U)
(declare-fun g_s271_273 () U)
(declare-fun g_s272_274 () U)
(declare-fun g_s273_275 () U)
(declare-fun g_s274_276 () U)
(declare-fun g_s275_277 () U)
(declare-fun g_s276_278 () U)
(declare-fun g_s277_279 () U)
(declare-fun g_s278_280 () U)
(declare-fun g_s279_281 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_282 () U)
(declare-fun g_s281_283 () U)
(declare-fun g_s282_284 () U)
(declare-fun g_s283_285 () U)
(declare-fun g_s284_286 () U)
(declare-fun g_s285_287 () U)
(declare-fun g_s286_288 () U)
(declare-fun g_s287_289 () U)
(declare-fun g_s288_290 () U)
(declare-fun g_s289_291 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_292 () U)
(declare-fun g_s291_293 () U)
(declare-fun g_s292_294 () U)
(declare-fun g_s293_295 () U)
(declare-fun g_s294_296 () U)
(declare-fun g_s295_297 () U)
(declare-fun g_s296_298 () U)
(declare-fun g_s297_299 () U)
(declare-fun g_s298_300 () U)
(declare-fun g_s299_301 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_302 () U)
(declare-fun g_s301_303 () U)
(declare-fun g_s302_304 () U)
(declare-fun g_s303_305 () U)
(declare-fun g_s304_306 () U)
(declare-fun g_s305_307 () U)
(declare-fun g_s306_308 () U)
(declare-fun g_s307_309 () U)
(declare-fun g_s308_310 () U)
(declare-fun g_s309_311 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_312 () U)
(declare-fun g_s311_313 () U)
(declare-fun g_s312_314 () U)
(declare-fun g_s313_315 () U)
(declare-fun g_s314_316 () U)
(declare-fun g_s315_317 () U)
(declare-fun g_s316_318 () U)
(declare-fun g_s317_319 () U)
(declare-fun g_s318_320 () U)
(declare-fun g_s319_321 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_322 () U)
(declare-fun g_s321_323 () U)
(declare-fun g_s322_324 () U)
(declare-fun g_s323_325 () U)
(declare-fun g_s324_326 () U)
(declare-fun g_s325_327 () U)
(declare-fun g_s326_328 () U)
(declare-fun g_s327_329 () U)
(declare-fun g_s328_330 () U)
(declare-fun g_s329_331 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_332 () U)
(declare-fun g_s331_333 () U)
(declare-fun g_s332_334 () U)
(declare-fun g_s333_335 () U)
(declare-fun g_s334_336 () U)
(declare-fun g_s335_337 () U)
(declare-fun g_s336_338 () U)
(declare-fun g_s337_339 () U)
(declare-fun g_s338_340 () U)
(declare-fun g_s339_341 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_342 () U)
(declare-fun g_s341_343 () U)
(declare-fun g_s342_344 () U)
(declare-fun g_s343_345 () U)
(declare-fun g_s344_346 () U)
(declare-fun g_s345_347 () U)
(declare-fun g_s346_348 () U)
(declare-fun g_s347_349 () U)
(declare-fun g_s348_350 () U)
(declare-fun g_s349_351 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_352 () U)
(declare-fun g_s351_353 () U)
(declare-fun g_s352_354 () U)
(declare-fun g_s353_355 () U)
(declare-fun g_s354_356 () U)
(declare-fun g_s355_357 () U)
(declare-fun g_s356_358 () U)
(declare-fun g_s357_359 () U)
(declare-fun g_s358_360 () U)
(declare-fun g_s359_361 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_362 () U)
(declare-fun g_s361_363 () U)
(declare-fun g_s362_364 () U)
(declare-fun g_s363_365 () U)
(declare-fun g_s364_366 () U)
(declare-fun g_s366_367 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s374$1_389 () U)
(declare-fun g_s374$1_368 () U)
(declare-fun g_s374$1_381 () U)
(declare-fun g_s377$1_369 () U)
(declare-fun g_s379$1_370 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s382$1_371 () U)
(declare-fun g_s385$1_372 () U)
(declare-fun g_s388$1_373 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s391$1_374 () U)
(declare-fun g_s393$1_375 () U)
(declare-fun g_s396$1_376 () U)
(declare-fun g_s399$1_377 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s402$1_378 () U)
(declare-fun g_s404$1_379 () U)
(declare-fun g_s407$1_380 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s414$1_382 () U)
(declare-fun g_s417$1_383 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420$1_384 () U)
(declare-fun g_s423$1_385 () U)
(declare-fun g_s426$1_386 () U)
(declare-fun g_s428$1_387 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430_388 () U)
(declare-fun g_s432$1_390 () U)
(declare-fun g_s434_391 () U)
(declare-fun g_s435$1_392 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s7_8 (mapplet g_s6_7 (mapplet g_s5_6 g_s4_5))))) (= g_s8_9 (SET (mapplet g_s12_13 (mapplet g_s11_12 (mapplet g_s10_11 g_s9_10))))) (= g_s13_14 (SET (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 g_s14_15)))))))))) (= g_s23_24 (SET (mapplet g_s26_27 (mapplet g_s25_26 g_s24_25)))) (= g_s27_28 (SET (mapplet g_s29_30 g_s28_29))) (= g_s30_31 (SET (mapplet g_s33_34 (mapplet g_s32_33 g_s31_32)))) (= g_s34_35 (SET (mapplet g_s36_37 g_s35_36))) (= g_s37_38 (SET (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 g_s38_39))))) (= g_s42_43 (SET (mapplet g_s44_45 g_s43_44))) (= g_s45_46 (SET (mapplet g_s48_49 (mapplet g_s47_48 g_s46_47)))) (= g_s49_50 (SET (mapplet g_s52_53 (mapplet g_s51_52 g_s50_51)))) (= g_s53_54 (SET (mapplet g_s55_56 g_s54_55))) (= g_s56_57 (SET (mapplet g_s59_60 (mapplet g_s58_59 g_s57_58)))) (= g_s60_61 (SET (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 (mapplet g_s62_63 g_s61_62)))))) (= g_s66_67 (SET (mapplet g_s69_70 (mapplet g_s68_69 g_s67_68)))) (= g_s70_71 (SET (mapplet g_s73_74 (mapplet g_s72_73 g_s71_72)))) (= g_s74_75 (SET (mapplet g_s77_78 (mapplet g_s76_77 g_s75_76)))) (= g_s78_79 (SET (mapplet g_s81_82 (mapplet g_s80_81 g_s79_80)))) (= g_s82_83 (SET (mapplet g_s85_86 (mapplet g_s84_85 g_s83_84)))) (= g_s86_87 (SET (mapplet g_s93_94 (mapplet g_s92_93 (mapplet g_s91_92 (mapplet g_s90_91 (mapplet g_s89_90 (mapplet g_s88_89 g_s87_88)))))))) (= g_s94_95 (SET (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 g_s95_96))))) (= g_s99_100 (SET (mapplet g_s103_104 (mapplet g_s102_103 (mapplet g_s101_102 g_s100_101))))) (= g_s104_105 (SET (mapplet g_s107_108 (mapplet g_s106_107 g_s105_106)))) (= g_s108_109 (SET (mapplet g_s112_113 (mapplet g_s111_112 (mapplet g_s110_111 g_s109_110))))) (= g_s113_114 (SET (mapplet g_s117_118 (mapplet g_s116_117 (mapplet g_s115_116 g_s114_115))))) (= g_s118_119 (SET (mapplet g_s122_123 (mapplet g_s121_122 (mapplet g_s120_121 g_s119_120))))) (= g_s123_124 (SET (mapplet g_s127_128 (mapplet g_s126_127 (mapplet g_s125_126 g_s124_125))))) (= g_s128_129 (SET (mapplet g_s131_132 (mapplet g_s130_131 g_s129_130)))) (= g_s132_133 (SET (mapplet g_s136_137 (mapplet g_s135_136 (mapplet g_s134_135 g_s133_134))))) (= g_s137_138 (SET (mapplet g_s140_141 (mapplet g_s139_140 g_s138_139)))) (= g_s141_142 (SET (mapplet g_s144_145 (mapplet g_s143_144 g_s142_143)))) (= g_s145_146 (SET (mapplet g_s152_153 (mapplet g_s151_152 (mapplet g_s150_151 (mapplet g_s149_150 (mapplet g_s148_149 (mapplet g_s147_148 g_s146_147)))))))) (= g_s153_154 (SET (mapplet g_s157_158 (mapplet g_s156_157 (mapplet g_s155_156 g_s154_155))))) (= g_s158_159 (SET (mapplet g_s162_163 (mapplet g_s161_162 (mapplet g_s160_161 g_s159_160))))) (not (= g_s163_164 empty)) (not (= g_s164_165 empty)) (not (= g_s165_166 empty)) (= g_s166_167 (SET (mapplet g_s173_174 (mapplet g_s172_173 (mapplet g_s171_172 (mapplet g_s170_171 (mapplet g_s169_170 (mapplet g_s168_169 g_s167_168)))))))) (not (= g_s174_175 empty)) (not (= g_s175_176 empty)) (not (= g_s176_177 empty)) (not (= g_s177_178 empty)) (not (= g_s178_179 empty)) (not (= g_s179_180 empty)) (not (= g_s180_181 empty)) (not (= g_s181_182 empty)) (not (= g_s182_183 empty)) (not (= g_s183_184 empty)) (not (= g_s184_185 empty)) (not (= g_s185_186 empty)) (not (= g_s186_187 empty)) (not (= g_s187_188 empty)) (not (= g_s188_189 empty)) (not (= g_s189_190 empty)) (not (= g_s190_191 empty)) (not (= g_s191_192 empty)) (= g_s192_193 (SET (mapplet g_s196_197 (mapplet g_s195_196 (mapplet g_s194_195 g_s193_194))))) (not (= g_s197_198 empty)) (not (= g_s198_199 empty)) (not (= g_s199_200 empty)) (not (= g_s200_201 empty)) (not (= g_s201_202 empty)) (not (= g_s202_203 empty)) (not (= g_s203_204 empty)) (= g_s204_206 (interval (iuminus g_s205_205) g_s205_205)) (= g_s206_207 (interval e0 g_s205_205)) (= g_s207_209 (interval e208 g_s205_205)) (subset g_s207_209 g_s206_207) (subset g_s206_207 g_s204_206) (subset g_s206_207 NAT) (subset g_s207_209 NAT1) (subset g_s204_206 INT) (mem g_s208_210 g_s204_206) (mem g_s208_210 g_s206_207) (not (mem g_s208_210 g_s207_209)) (mem g_s209_211 g_s204_206) (not (mem g_s209_211 g_s206_207)) (= g_s210_212 (interval (iuminus g_s205_205) g_s205_205)) (subset g_s210_212 INT) (subset g_s211_213 g_s163_164) (mem g_s212_214 g_s163_164) (mem g_s212_214 g_s211_213) (mem g_s213_215 g_s163_164) (not (mem g_s213_215 g_s211_213)) (mem g_s214_216 (|+->| NAT g_s163_164)) (mem g_s214_216 (perm g_s211_213)) (= (card g_s211_213) g_s215_217) (subset g_s216_218 g_s164_165) (mem g_s217_219 g_s164_165) (mem g_s217_219 g_s216_218) (mem g_s218_220 g_s164_165) (not (mem g_s218_220 g_s216_218)) (mem g_s219_221 (|+->| NAT g_s164_165)) (mem g_s219_221 (perm g_s216_218)) (= (card g_s216_218) g_s220_222) (subset g_s221_223 INT) (subset g_s222_224 NAT) (subset g_s222_224 g_s221_223) (mem g_s223_225 g_s221_223) (not (mem g_s223_225 g_s222_224)) (= g_s224_226 INTEGER) (subset g_s225_227 INTEGER) (subset g_s225_227 g_s224_226) (mem g_s226_228 g_s224_226) (not (mem g_s226_228 g_s225_227)) (= g_s227_229 INTEGER) (= g_s228_230 NATURAL) (subset g_s228_230 g_s227_229) (mem g_s229_231 g_s228_230) (mem g_s230_232 g_s228_230) (mem g_s231_233 g_s227_229) (not (mem g_s231_233 g_s228_230)) (|<=i| g_s229_231 g_s230_232) (subset g_s232_234 g_s165_166) (mem g_s233_235 g_s165_166) (not (mem g_s233_235 g_s232_234)) (mem g_s234_236 (|+->| NAT g_s165_166)) (mem g_s234_236 (perm g_s232_234)) (subset g_s222_224 g_s225_227) (subset g_s235_237 g_s166_167) (not (mem g_s173_174 g_s235_237)) (= g_s235_237 (SET (mapplet g_s172_173 (mapplet g_s171_172 (mapplet g_s170_171 (mapplet g_s169_170 (mapplet g_s168_169 g_s167_168))))))) (mem g_s236_238 (|>->| g_s235_237 g_s86_87)) (= g_s236_238 (SET (mapplet (mapplet g_s172_173 g_s92_93) (mapplet (mapplet g_s171_172 g_s91_92) (mapplet (mapplet g_s170_171 g_s90_91) (mapplet (mapplet g_s169_170 g_s89_90) (mapplet (mapplet g_s168_169 g_s88_89) (mapplet g_s167_168 g_s87_88)))))))) (mem g_s237_239 (|-->| g_s166_167 g_s86_87)) (subset g_s238_240 g_s174_175) (mem g_s239_241 g_s174_175) (not (mem g_s239_241 g_s238_240)) (mem g_s240_242 (|+->| NAT g_s174_175)) (mem g_s240_242 (perm g_s238_240)) (subset g_s241_243 g_s175_176) (mem g_s242_244 g_s175_176) (not (mem g_s242_244 g_s241_243)) (mem g_s243_245 (|+->| NAT g_s175_176)) (mem g_s243_245 (perm g_s241_243)) (subset g_s244_246 g_s176_177) (mem g_s245_247 g_s176_177) (not (mem g_s245_247 g_s244_246)) (mem g_s246_248 (|+->| NAT g_s176_177)) (mem g_s246_248 (perm g_s244_246)) (subset g_s247_249 g_s177_178) (mem g_s248_250 g_s177_178) (not (mem g_s248_250 g_s247_249)) (mem g_s249_251 (|+->| NAT g_s177_178)) (mem g_s249_251 (perm g_s247_249)) (subset g_s250_252 g_s178_179) (mem g_s251_253 g_s178_179) (not (mem g_s251_253 g_s250_252)) (subset g_s252_254 g_s179_180) (mem g_s253_255 g_s179_180) (not (mem g_s253_255 g_s252_254)) (subset g_s254_256 g_s180_181) (mem g_s255_257 g_s180_181) (not (mem g_s255_257 g_s254_256)) (subset g_s256_258 g_s181_182) (mem g_s257_259 g_s181_182) (not (mem g_s257_259 g_s256_258)) (subset g_s258_260 g_s158_159) (not (mem g_s159_160 g_s258_260)) (= g_s258_260 (SET (mapplet g_s162_163 (mapplet g_s161_162 g_s160_161)))) (mem g_s259_261 (|+->| g_s256_258 g_s254_256)) (mem g_s260_262 (|+->| g_s254_256 g_s256_258)) (subset g_s261_263 g_s182_183) (mem g_s262_264 g_s182_183) (not (mem g_s262_264 g_s261_263)) (mem g_s263_265 (|+->| NAT g_s182_183)) (mem g_s263_265 (perm g_s261_263)) (subset g_s264_266 g_s183_184) (mem g_s265_267 g_s183_184) (not (mem g_s265_267 g_s264_266)) (mem g_s266_268 (|+->| NAT g_s183_184)) (mem g_s266_268 (perm g_s264_266)) (subset g_s267_269 g_s184_185) (mem g_s268_270 g_s184_185) (not (mem g_s268_270 g_s267_269)) (subset g_s269_271 g_s99_100) (not (mem g_s100_101 g_s269_271)) (= g_s269_271 (SET (mapplet g_s103_104 g_s102_103))) (subset g_s270_272 g_s99_100) (not (mem g_s100_101 g_s270_272)) (= g_s270_272 (SET (mapplet g_s103_104 (mapplet g_s102_103 g_s101_102)))) (mem g_s271_273 (|>->>| g_s269_271 g_s269_271)) (= (binary_inter g_s271_273 (id g_s269_271)) empty) (mem g_s272_274 (|>->| g_s30_31 g_s99_100)) (not (mem (apply g_s272_274 g_s31_32) g_s269_271)) (mem g_s273_275 (|>->>| g_s45_46 (set_diff g_s99_100 (SET g_s101_102)))) (mem g_s274_276 (|>->>| (set_diff g_s99_100 (SET g_s101_102)) g_s45_46)) (= g_s273_275 (inverse g_s274_276)) (not (mem (apply g_s273_275 g_s46_47) g_s269_271)) (mem g_s275_277 (|-->| g_s37_38 g_s30_31)) (= (apply g_s275_277 g_s41_42) g_s31_32) (subset g_s276_278 g_s185_186) (mem g_s277_279 g_s185_186) (not (mem g_s277_279 g_s276_278)) (mem g_s278_280 (|+->| NAT g_s185_186)) (mem g_s278_280 (perm g_s276_278)) (subset g_s279_281 g_s186_187) (mem g_s280_282 g_s186_187) (not (mem g_s280_282 g_s279_281)) (mem g_s281_283 (|+->| NAT g_s186_187)) (mem g_s281_283 (perm g_s279_281)) (subset g_s282_284 g_s187_188) (mem g_s283_285 g_s187_188) (not (mem g_s283_285 g_s282_284)) (mem g_s284_286 (|+->| NAT g_s187_188)) (mem g_s284_286 (perm g_s282_284)) (subset g_s285_287 g_s188_189) (mem g_s286_288 g_s188_189) (not (mem g_s286_288 g_s285_287)) (mem g_s287_289 (|+->| NAT g_s188_189)) (mem g_s287_289 (perm g_s285_287)) (subset g_s288_290 g_s189_190) (mem g_s289_291 g_s189_190) (not (mem g_s289_291 g_s288_290)) (mem g_s290_292 (|+->| NAT g_s189_190)) (mem g_s290_292 (perm g_s288_290)) (subset g_s291_293 g_s190_191) (mem g_s292_294 g_s190_191) (not (mem g_s292_294 g_s291_293)) (mem g_s293_295 (|+->| NAT g_s190_191)) (mem g_s293_295 (perm g_s291_293)) (subset g_s294_296 g_s191_192) (mem g_s295_297 g_s191_192) (not (mem g_s295_297 g_s294_296)) (mem g_s296_298 (|+->| NAT g_s191_192)) (mem g_s296_298 (perm g_s294_296)) (subset g_s297_299 g_s132_133) (not (mem g_s133_134 g_s297_299)) (= g_s297_299 (SET (mapplet g_s136_137 (mapplet g_s135_136 g_s134_135)))) (subset g_s298_300 g_s23_24) (not (mem g_s24_25 g_s298_300)) (= g_s298_300 (SET (mapplet g_s26_27 g_s25_26))) (subset g_s299_301 g_s197_198) (mem g_s300_302 g_s197_198) (not (mem g_s300_302 g_s299_301)) (mem g_s301_303 (|+->| NAT g_s197_198)) (mem g_s301_303 (perm g_s299_301)) (subset g_s302_304 g_s198_199) (mem g_s303_305 g_s198_199) (not (mem g_s303_305 g_s302_304)) (mem g_s304_306 (|+->| NAT g_s198_199)) (mem g_s304_306 (perm g_s302_304)) (mem g_s305_307 (|>->| g_s302_304 g_s211_213)) (subset g_s306_308 g_s199_200) (mem g_s307_309 g_s199_200) (not (mem g_s307_309 g_s306_308)) (mem g_s308_310 (|+->| NAT g_s199_200)) (mem g_s308_310 (perm g_s306_308)) (subset g_s309_311 g_s200_201) (mem g_s310_312 g_s200_201) (not (mem g_s310_312 g_s309_311)) (= g_s311_313 INTEGER) (= g_s312_314 NATURAL) (subset g_s312_314 g_s311_313) (mem g_s313_315 g_s311_313) (not (mem g_s313_315 g_s312_314)) (mem g_s314_316 g_s312_314) (subset g_s315_317 g_s137_138) (not (mem g_s140_141 g_s315_317)) (= g_s315_317 (SET (mapplet g_s139_140 g_s138_139))) (mem g_s316_318 (|>->>| g_s34_35 g_s315_317)) (subset g_s317_319 g_s201_202) (mem g_s318_320 g_s201_202) (not (mem g_s318_320 g_s317_319)) (mem g_s319_321 (|+->| NAT g_s201_202)) (mem g_s319_321 (perm g_s317_319)) (subset g_s320_322 g_s202_203) (mem g_s321_323 g_s202_203) (not (mem g_s321_323 g_s320_322)) (subset g_s322_324 g_s203_204) (mem g_s323_325 g_s203_204) (not (mem g_s323_325 g_s322_324)) (mem g_s324_326 (|+->| NAT g_s203_204)) (mem g_s324_326 (perm g_s322_324))))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s325_327 (|+->| g_s302_304 g_s206_207)) (mem g_s326_328 (|+->| g_s302_304 g_s206_207)) (mem g_s327_329 (|>+>| g_s302_304 g_s254_256)) (subset g_s328_330 g_s302_304) (subset g_s329_331 g_s302_304) (subset g_s330_332 g_s302_304) (subset g_s331_333 g_s302_304) (mem g_s332_334 (|+->| g_s302_304 g_s206_207)) (mem g_s333_335 (|+->| g_s302_304 g_s282_284)) (mem g_s334_336 (|+->| g_s302_304 g_s222_224)) (mem g_s335_337 (|+->| g_s302_304 g_s238_240)) (mem g_s336_338 (|+->| g_s302_304 g_s238_240)) (mem g_s337_339 (|+->| g_s302_304 g_s261_263)) (mem g_s338_340 (|+->| g_s302_304 g_s222_224)) (mem g_s339_341 (|+->| g_s302_304 g_s238_240)) (mem g_s340_342 (|+->| g_s302_304 g_s261_263)) (mem g_s341_343 (|+->| g_s302_304 g_s238_240)) (subset g_s342_344 g_s302_304) (subset g_s343_345 g_s302_304) (mem g_s344_346 (|+->| g_s302_304 g_s206_207)) (mem g_s345_347 (|+->| g_s302_304 g_s269_271)) (mem g_s346_348 (|-->| g_s302_304 g_s30_31)) (mem g_s347_349 (|-->| g_s302_304 g_s30_31)) (mem g_s348_350 (|+->| g_s302_304 g_s228_230)) (mem g_s349_351 (|+->| g_s302_304 g_s312_314)) (subset g_s350_352 g_s302_304) (subset g_s351_353 g_s302_304) (mem g_s352_354 (|+->| g_s302_304 g_s298_300)) (mem g_s353_355 (|+->| g_s302_304 g_s206_207)) (subset g_s354_356 g_s302_304) (subset g_s355_357 g_s302_304) (subset g_s356_358 g_s302_304) (mem g_s357_359 (|+->| g_s302_304 g_s269_271)) (subset g_s358_360 g_s302_304) (subset g_s359_361 g_s302_304) (subset g_s360_362 g_s302_304) (mem g_s361_363 (|+->| g_s302_304 g_s315_317)) (subset g_s362_364 g_s317_319) (subset g_s363_365 g_s317_319) (mem g_s364_366 (|+->| g_s317_319 g_s302_304)) (= (dom g_s337_339) (dom g_s334_336)) (= (dom g_s337_339) (dom g_s335_337)) (= (dom g_s337_339) (dom g_s336_338)) (subset (dom g_s337_339) (dom g_s352_354)) (subset (dom g_s337_339) (dom g_s348_350)) (subset (dom g_s335_337) (dom g_s339_341)) (subset (dom g_s336_338) (dom g_s341_343)) (subset (dom g_s345_347) (dom g_s340_342)) (= (dom g_s340_342) (dom g_s338_340)) (= (dom g_s340_342) (dom g_s339_341)) (= (dom g_s340_342) (dom g_s341_343)) (= (dom g_s340_342) (dom g_s352_354)) (= (dom g_s340_342) (dom g_s348_350)) (= (dom g_s339_341) (dom g_s353_355))))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
; PO 1 in group 0
(assert (not (subset (set_diff g_s329_331 (SET g_s366_367)) g_s302_304)))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
; PO 1 in group 1
(assert (not (subset (binary_union g_s329_331 (SET g_s366_367)) g_s302_304)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
; PO 1 in group 2
(assert (not (subset (set_diff g_s330_332 (SET g_s366_367)) g_s302_304)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
; PO 1 in group 3
(assert (not (subset (binary_union g_s330_332 (SET g_s366_367)) g_s302_304)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
; PO 1 in group 4
(assert (not (subset (set_diff g_s331_333 (SET g_s366_367)) g_s302_304)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
; PO 1 in group 5
(assert (not (subset (binary_union g_s331_333 (SET g_s366_367)) g_s302_304)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s327_329)))
(define-fun lh_2 () Bool (mem g_s374$1_368 g_s180_181))
; PO 1 in group 6
(assert (not (=> (and lh_1 lh_2) (mem g_s327_329 (|+->| (dom g_s327_329) (ran g_s327_329))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s327_329)))
(define-fun lh_1 () Bool (mem g_s377$1_369 g_s180_181))
; PO 1 in group 7
(assert (not (=> lh_1 (mem g_s327_329 (|+->| (dom g_s327_329) (ran g_s327_329))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s332_334)))
(define-fun lh_2 () Bool (mem g_s379$1_370 g_s204_206))
; PO 1 in group 8
(assert (not (=> (and lh_1 lh_2) (mem g_s332_334 (|+->| (dom g_s332_334) (ran g_s332_334))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s332_334)))
(define-fun lh_1 () Bool (mem g_s379$1_370 g_s204_206))
; PO 1 in group 9
(assert (not (=> lh_1 (mem g_s332_334 (|+->| (dom g_s332_334) (ran g_s332_334))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s333_335)))
(define-fun lh_2 () Bool (mem g_s382$1_371 g_s187_188))
; PO 1 in group 10
(assert (not (=> (and lh_1 lh_2) (mem g_s333_335 (|+->| (dom g_s333_335) (ran g_s333_335))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s333_335)))
(define-fun lh_1 () Bool (mem g_s382$1_371 g_s187_188))
; PO 1 in group 11
(assert (not (=> lh_1 (mem g_s333_335 (|+->| (dom g_s333_335) (ran g_s333_335))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s334_336)))
(define-fun lh_2 () Bool (mem g_s385$1_372 g_s221_223))
; PO 1 in group 12
(assert (not (=> (and lh_1 lh_2) (mem g_s334_336 (|+->| (dom g_s334_336) (ran g_s334_336))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s334_336)))
(define-fun lh_1 () Bool (mem g_s385$1_372 g_s221_223))
; PO 1 in group 13
(assert (not (=> lh_1 (mem g_s334_336 (|+->| (dom g_s334_336) (ran g_s334_336))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s335_337)))
(define-fun lh_2 () Bool (mem g_s388$1_373 g_s174_175))
; PO 1 in group 14
(assert (not (=> (and lh_1 lh_2) (mem g_s335_337 (|+->| (dom g_s335_337) (ran g_s335_337))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s335_337)))
(define-fun lh_1 () Bool (mem g_s388$1_373 g_s174_175))
; PO 1 in group 15
(assert (not (=> lh_1 (mem g_s335_337 (|+->| (dom g_s335_337) (ran g_s335_337))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s336_338)))
(define-fun lh_1 () Bool (mem g_s391$1_374 g_s174_175))
; PO 1 in group 16
(assert (not (=> lh_1 (mem g_s336_338 (|+->| (dom g_s336_338) (ran g_s336_338))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s337_339)))
(define-fun lh_2 () Bool (mem g_s393$1_375 g_s182_183))
; PO 1 in group 17
(assert (not (=> (and lh_1 lh_2) (mem g_s337_339 (|+->| (dom g_s337_339) (ran g_s337_339))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s337_339)))
(define-fun lh_1 () Bool (mem g_s393$1_375 g_s182_183))
; PO 1 in group 18
(assert (not (=> lh_1 (mem g_s337_339 (|+->| (dom g_s337_339) (ran g_s337_339))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s338_340)))
(define-fun lh_2 () Bool (mem g_s396$1_376 g_s221_223))
; PO 1 in group 19
(assert (not (=> (and lh_1 lh_2) (mem g_s338_340 (|+->| (dom g_s338_340) (ran g_s338_340))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s338_340)))
(define-fun lh_1 () Bool (mem g_s396$1_376 g_s221_223))
; PO 1 in group 20
(assert (not (=> lh_1 (mem g_s338_340 (|+->| (dom g_s338_340) (ran g_s338_340))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s339_341)))
(define-fun lh_2 () Bool (mem g_s399$1_377 g_s174_175))
; PO 1 in group 21
(assert (not (=> (and lh_1 lh_2) (mem g_s339_341 (|+->| (dom g_s339_341) (ran g_s339_341))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s339_341)))
(define-fun lh_1 () Bool (mem g_s399$1_377 g_s174_175))
; PO 1 in group 22
(assert (not (=> lh_1 (mem g_s339_341 (|+->| (dom g_s339_341) (ran g_s339_341))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s341_343)))
(define-fun lh_1 () Bool (mem g_s402$1_378 g_s174_175))
; PO 1 in group 23
(assert (not (=> lh_1 (mem g_s341_343 (|+->| (dom g_s341_343) (ran g_s341_343))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 24 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s340_342)))
(define-fun lh_2 () Bool (mem g_s404$1_379 g_s182_183))
; PO 1 in group 24
(assert (not (=> (and lh_1 lh_2) (mem g_s340_342 (|+->| (dom g_s340_342) (ran g_s340_342))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 25 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s340_342)))
(define-fun lh_1 () Bool (mem g_s404$1_379 g_s182_183))
; PO 1 in group 25
(assert (not (=> lh_1 (mem g_s340_342 (|+->| (dom g_s340_342) (ran g_s340_342))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 26 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s344_346)))
(define-fun lh_1 () Bool (mem g_s407$1_380 g_s204_206))
; PO 1 in group 26
(assert (not (=> lh_1 (mem g_s344_346 (|+->| (dom g_s344_346) (ran g_s344_346))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 27 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s344_346)))
(define-fun lh_2 () Bool (mem g_s407$1_380 g_s204_206))
; PO 1 in group 27
(assert (not (=> (and lh_1 lh_2) (mem g_s344_346 (|+->| (dom g_s344_346) (ran g_s344_346))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 28 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s345_347)))
(define-fun lh_2 () Bool (mem g_s374$1_381 g_s99_100))
; PO 1 in group 28
(assert (not (=> (and lh_1 lh_2) (mem g_s345_347 (|+->| (dom g_s345_347) (ran g_s345_347))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 29 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s345_347)))
; PO 1 in group 29
(assert (not (mem g_s345_347 (|+->| (dom g_s345_347) (ran g_s345_347)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 30 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
; PO 1 in group 30
(push 1)
(assert (not (mem g_s366_367 (dom g_s346_348))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 30
(push 1)
(assert (not (mem g_s346_348 (|+->| (dom g_s346_348) (ran g_s346_348)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 31 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
; PO 1 in group 31
(push 1)
(assert (not (mem g_s366_367 (dom g_s347_349))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 31
(push 1)
(assert (not (mem g_s347_349 (|+->| (dom g_s347_349) (ran g_s347_349)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 32 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s348_350)))
(define-fun lh_2 () Bool (mem g_s414$1_382 g_s227_229))
; PO 1 in group 32
(assert (not (=> (and lh_1 lh_2) (mem g_s348_350 (|+->| (dom g_s348_350) (ran g_s348_350))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 33 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s348_350)))
(define-fun lh_1 () Bool (mem g_s414$1_382 g_s227_229))
; PO 1 in group 33
(assert (not (=> lh_1 (mem g_s348_350 (|+->| (dom g_s348_350) (ran g_s348_350))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 34 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s349_351)))
(define-fun lh_2 () Bool (mem g_s417$1_383 g_s311_313))
; PO 1 in group 34
(assert (not (=> (and lh_1 lh_2) (mem g_s349_351 (|+->| (dom g_s349_351) (ran g_s349_351))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 35 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s349_351)))
(define-fun lh_1 () Bool (mem g_s417$1_383 g_s311_313))
; PO 1 in group 35
(assert (not (=> lh_1 (mem g_s349_351 (|+->| (dom g_s349_351) (ran g_s349_351))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 36 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s352_354)))
(define-fun lh_2 () Bool (mem g_s420$1_384 g_s23_24))
; PO 1 in group 36
(assert (not (=> (and lh_1 lh_2) (mem g_s352_354 (|+->| (dom g_s352_354) (ran g_s352_354))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 37 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s352_354)))
(define-fun lh_1 () Bool (mem g_s420$1_384 g_s23_24))
; PO 1 in group 37
(assert (not (=> lh_1 (mem g_s352_354 (|+->| (dom g_s352_354) (ran g_s352_354))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 38 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s353_355)))
(define-fun lh_2 () Bool (mem g_s423$1_385 g_s204_206))
; PO 1 in group 38
(assert (not (=> (and lh_1 lh_2) (mem g_s353_355 (|+->| (dom g_s353_355) (ran g_s353_355))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 39 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s353_355)))
(define-fun lh_1 () Bool (mem g_s423$1_385 g_s204_206))
; PO 1 in group 39
(assert (not (=> lh_1 (mem g_s353_355 (|+->| (dom g_s353_355) (ran g_s353_355))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 40 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s357_359)))
(define-fun lh_2 () Bool (mem g_s426$1_386 g_s99_100))
; PO 1 in group 40
(assert (not (=> (and lh_1 lh_2) (mem g_s357_359 (|+->| (dom g_s357_359) (ran g_s357_359))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 41 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(define-fun lh_1 () Bool (mem g_s366_367 (dom g_s325_327)))
(define-fun lh_2 () Bool (mem g_s428$1_387 g_s204_206))
; PO 1 in group 41
(assert (not (=> (and lh_1 lh_2) (mem g_s325_327 (|+->| (dom g_s325_327) (ran g_s325_327))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 42 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s430_388 g_s198_199))
(assert (mem g_s430_388 g_s302_304))
(define-fun lh_1 () Bool (mem g_s430_388 (dom g_s326_328)))
(define-fun lh_2 () Bool (mem g_s374$1_389 g_s204_206))
; PO 1 in group 42
(assert (not (=> (and lh_1 lh_2) (mem g_s326_328 (|+->| (dom g_s326_328) (ran g_s326_328))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 43 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s366_367 g_s198_199))
(assert (mem g_s366_367 g_s302_304))
(assert (mem g_s366_367 (dom g_s361_363)))
(define-fun lh_1 () Bool (mem g_s432$1_390 g_s137_138))
; PO 1 in group 43
(assert (not (=> lh_1 (mem g_s361_363 (|+->| (dom g_s361_363) (ran g_s361_363))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 44 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s434_391 g_s201_202))
(assert (mem g_s434_391 g_s317_319))
(define-fun lh_1 () Bool (mem g_s434_391 (dom g_s364_366)))
(define-fun lh_2 () Bool (mem g_s435$1_392 g_s198_199))
; PO 1 in group 44
(assert (not (=> (and lh_1 lh_2) (mem g_s364_366 (|+->| (dom g_s364_366) (ran g_s364_366))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 45 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s434_391 g_s201_202))
(assert (mem g_s434_391 g_s317_319))
(assert (mem g_s434_391 (dom g_s364_366)))
(define-fun lh_1 () Bool (mem g_s435$1_392 g_s198_199))
; PO 1 in group 45
(assert (not (=> lh_1 (mem g_s364_366 (|+->| (dom g_s364_366) (ran g_s364_366))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)