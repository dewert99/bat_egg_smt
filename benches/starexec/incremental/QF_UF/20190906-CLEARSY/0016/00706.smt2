(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e149 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_143 () U)
(declare-fun g_s143_144 () U)
(declare-fun g_s144_145 () U)
(declare-fun g_s145_147 () U)
(declare-fun g_s146_146 () U)
(declare-fun g_s147_148 () U)
(declare-fun g_s148_150 () U)
(declare-fun g_s149_151 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_152 () U)
(declare-fun g_s151_153 () U)
(declare-fun g_s152_154 () U)
(declare-fun g_s153_155 () U)
(declare-fun g_s154_156 () U)
(declare-fun g_s155_157 () U)
(declare-fun g_s156_158 () U)
(declare-fun g_s157_159 () U)
(declare-fun g_s158_160 () U)
(declare-fun g_s159_161 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_162 () U)
(declare-fun g_s161_163 () U)
(declare-fun g_s162_164 () U)
(declare-fun g_s163_165 () U)
(declare-fun g_s164_166 () U)
(declare-fun g_s165_167 () U)
(declare-fun g_s166_168 () U)
(declare-fun g_s167_169 () U)
(declare-fun g_s168_170 () U)
(declare-fun g_s169_171 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_172 () U)
(declare-fun g_s171_173 () U)
(declare-fun g_s172_174 () U)
(declare-fun g_s173_175 () U)
(declare-fun g_s174_176 () U)
(declare-fun g_s175_177 () U)
(declare-fun g_s176_178 () U)
(declare-fun g_s177_179 () U)
(declare-fun g_s178_180 () U)
(declare-fun g_s179_181 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_182 () U)
(declare-fun g_s181_183 () U)
(declare-fun g_s182_184 () U)
(declare-fun g_s183_185 () U)
(declare-fun g_s184_186 () U)
(declare-fun g_s185_187 () U)
(declare-fun g_s186_188 () U)
(declare-fun g_s187_189 () U)
(declare-fun g_s188_190 () U)
(declare-fun g_s189_191 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_192 () U)
(declare-fun g_s191_193 () U)
(declare-fun g_s192_195 () U)
(declare-fun g_s193_194 () U)
(declare-fun g_s194_196 () U)
(declare-fun g_s195_197 () U)
(declare-fun g_s196_198 () U)
(declare-fun g_s197_199 () U)
(declare-fun g_s198_200 () U)
(declare-fun g_s199_201 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_202 () U)
(declare-fun g_s201_203 () U)
(declare-fun g_s202_204 () U)
(declare-fun g_s203_205 () U)
(declare-fun g_s204_206 () U)
(declare-fun g_s205_207 () U)
(declare-fun g_s206_208 () U)
(declare-fun g_s207_209 () U)
(declare-fun g_s208_210 () U)
(declare-fun g_s209_211 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_212 () U)
(declare-fun g_s211_213 () U)
(declare-fun g_s212_214 () U)
(declare-fun g_s213_215 () U)
(declare-fun g_s214_216 () U)
(declare-fun g_s215_217 () U)
(declare-fun g_s216_218 () U)
(declare-fun g_s217_219 () U)
(declare-fun g_s218_220 () U)
(declare-fun g_s219_221 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_222 () U)
(declare-fun g_s221_223 () U)
(declare-fun g_s222_224 () U)
(declare-fun g_s223_225 () U)
(declare-fun g_s224_226 () U)
(declare-fun g_s225_227 () U)
(declare-fun g_s226_228 () U)
(declare-fun g_s227_229 () U)
(declare-fun g_s228_230 () U)
(declare-fun g_s229_231 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_232 () U)
(declare-fun g_s231_233 () U)
(declare-fun g_s232_234 () U)
(declare-fun g_s233_235 () U)
(declare-fun g_s234_236 () U)
(declare-fun g_s235_237 () U)
(declare-fun g_s236_238 () U)
(declare-fun g_s237_239 () U)
(declare-fun g_s238_241 () U)
(declare-fun g_s239_240 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_242 () U)
(declare-fun g_s241_244 () U)
(declare-fun g_s242_243 () U)
(declare-fun g_s243_245 () U)
(declare-fun g_s244_246 () U)
(declare-fun g_s245_248 () U)
(declare-fun g_s246_247 () U)
(declare-fun g_s247_249 () U)
(declare-fun g_s248_250 () U)
(declare-fun g_s249_251 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_252 () U)
(declare-fun g_s251_253 () U)
(declare-fun g_s252_254 () U)
(declare-fun g_s253_255 () U)
(declare-fun g_s254_256 () U)
(declare-fun g_s255_257 () U)
(declare-fun g_s256_258 () U)
(declare-fun g_s257_259 () U)
(declare-fun g_s258_260 () U)
(declare-fun g_s259_262 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_261 () U)
(declare-fun g_s261_263 () U)
(declare-fun g_s262_264 () U)
(declare-fun g_s263_265 () U)
(declare-fun g_s264_266 () U)
(declare-fun g_s265_267 () U)
(declare-fun g_s266_268 () U)
(declare-fun g_s267_269 () U)
(declare-fun g_s268_270 () U)
(declare-fun g_s269_271 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_272 () U)
(declare-fun g_s271_273 () U)
(declare-fun g_s272_274 () U)
(declare-fun g_s273_275 () U)
(declare-fun g_s274_276 () U)
(declare-fun g_s275_277 () U)
(declare-fun g_s276_278 () U)
(declare-fun g_s277_279 () U)
(declare-fun g_s278_280 () U)
(declare-fun g_s279_281 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_282 () U)
(declare-fun g_s281_283 () U)
(declare-fun g_s282_284 () U)
(declare-fun g_s283_285 () U)
(declare-fun g_s284_286 () U)
(declare-fun g_s285_287 () U)
(declare-fun g_s286_288 () U)
(declare-fun g_s287_289 () U)
(declare-fun g_s288_290 () U)
(declare-fun g_s289_291 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_292 () U)
(declare-fun g_s291_293 () U)
(declare-fun g_s292_294 () U)
(declare-fun g_s293_295 () U)
(declare-fun g_s294_296 () U)
(declare-fun g_s295_297 () U)
(declare-fun g_s296_298 () U)
(declare-fun g_s297_299 () U)
(declare-fun g_s298_300 () U)
(declare-fun g_s299_301 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_302 () U)
(declare-fun g_s301_303 () U)
(declare-fun g_s302_304 () U)
(declare-fun g_s303_305 () U)
(declare-fun g_s304_306 () U)
(declare-fun g_s305_307 () U)
(declare-fun g_s306_308 () U)
(declare-fun g_s307_309 () U)
(declare-fun g_s308_310 () U)
(declare-fun g_s309_311 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_312 () U)
(declare-fun g_s311_313 () U)
(declare-fun g_s312_314 () U)
(declare-fun g_s313_315 () U)
(declare-fun g_s314_316 () U)
(declare-fun g_s315_317 () U)
(declare-fun g_s316_318 () U)
(declare-fun g_s317_319 () U)
(declare-fun g_s318_320 () U)
(declare-fun g_s319_321 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_322 () U)
(declare-fun g_s321_323 () U)
(declare-fun g_s322_324 () U)
(declare-fun g_s323_325 () U)
(declare-fun g_s324_326 () U)
(declare-fun g_s325_327 () U)
(declare-fun g_s326_328 () U)
(declare-fun g_s327_329 () U)
(declare-fun g_s328_330 () U)
(declare-fun g_s329_331 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_332 () U)
(declare-fun g_s331_333 () U)
(declare-fun g_s332_334 () U)
(declare-fun g_s333_335 () U)
(declare-fun g_s334_336 () U)
(declare-fun g_s335_337 () U)
(declare-fun g_s336_338 () U)
(declare-fun g_s337_339 () U)
(declare-fun g_s338_340 () U)
(declare-fun g_s339_341 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_342 () U)
(declare-fun g_s341_343 () U)
(declare-fun g_s342_344 () U)
(declare-fun g_s343_345 () U)
(declare-fun g_s344_346 () U)
(declare-fun g_s345_347 () U)
(declare-fun g_s346_348 () U)
(declare-fun g_s347_349 () U)
(declare-fun g_s348_350 () U)
(declare-fun g_s349_351 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_352 () U)
(declare-fun g_s351_353 () U)
(declare-fun g_s352_354 () U)
(declare-fun g_s353_355 () U)
(declare-fun g_s354_356 () U)
(declare-fun g_s355_357 () U)
(declare-fun g_s356_358 () U)
(declare-fun g_s357_359 () U)
(declare-fun g_s358_360 () U)
(declare-fun g_s359_361 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_362 () U)
(declare-fun g_s361_363 () U)
(declare-fun g_s362_364 () U)
(declare-fun g_s363_365 () U)
(declare-fun g_s364_366 () U)
(declare-fun g_s365_367 () U)
(declare-fun g_s366_368 () U)
(declare-fun g_s367_369 () U)
(declare-fun g_s368_370 () U)
(declare-fun g_s369_371 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_372 () U)
(declare-fun g_s371_373 () U)
(declare-fun g_s372_374 () U)
(declare-fun g_s373_375 () U)
(declare-fun g_s374_376 () U)
(declare-fun g_s375_377 () U)
(declare-fun g_s376_378 () U)
(declare-fun g_s377_379 () U)
(declare-fun g_s378_380 () U)
(declare-fun g_s379_381 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_382 () U)
(declare-fun g_s381_383 () U)
(declare-fun g_s382_384 () U)
(declare-fun g_s383_385 () U)
(declare-fun g_s384_386 () U)
(declare-fun g_s385_387 () U)
(declare-fun g_s385$1_408 () U)
(declare-fun g_s386_388 () U)
(declare-fun g_s387_389 () U)
(declare-fun g_s388_390 () U)
(declare-fun g_s389_391 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_392 () U)
(declare-fun g_s391_393 () U)
(declare-fun g_s392_394 () U)
(declare-fun g_s393_395 () U)
(declare-fun g_s394_396 () U)
(declare-fun g_s395_397 () U)
(declare-fun g_s396_398 () U)
(declare-fun g_s397_399 () U)
(declare-fun g_s398_400 () U)
(declare-fun g_s399_401 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_402 () U)
(declare-fun g_s401_403 () U)
(declare-fun g_s402_404 () U)
(declare-fun g_s403_405 () U)
(declare-fun g_s404_406 () U)
(declare-fun g_s406_407 () U)
(declare-fun g_s409_409 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s412_410 () U)
(declare-fun g_s413$1_411 () U)
(declare-fun g_s417$1_412 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_413 () U)
(declare-fun g_s421$1_414 () U)
(declare-fun g_s424$1_415 () U)
(declare-fun g_s427$1_416 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430$1_417 () U)
(declare-fun g_s433_418 () U)
(declare-fun g_s435_419 () U)
(declare-fun g_s437_420 () U)
(declare-fun g_s438$1_421 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s441_422 () U)
(declare-fun g_s444_423 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (= g_s2_3 (SET (mapplet g_s6_7 (mapplet g_s5_6 (mapplet g_s4_5 g_s3_4))))) (= g_s7_8 (SET (mapplet g_s11_12 (mapplet g_s10_11 (mapplet g_s9_10 g_s8_9))))) (= g_s12_13 (SET (mapplet g_s15_16 (mapplet g_s14_15 g_s13_14)))) (= g_s16_17 (SET (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 g_s17_18))))) (= g_s21_22 (SET (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 g_s22_23))))) (= g_s26_27 (SET (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 g_s27_28))))) (= g_s31_32 (SET (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 g_s32_33))))) (= g_s36_37 (SET (mapplet g_s39_40 (mapplet g_s38_39 g_s37_38)))) (= g_s40_41 (SET (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 g_s41_42))))) (= g_s45_46 (SET (mapplet g_s48_49 (mapplet g_s47_48 g_s46_47)))) (= g_s49_50 (SET (mapplet g_s52_53 (mapplet g_s51_52 g_s50_51)))) (= g_s53_54 (SET (mapplet g_s60_61 (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 g_s54_55)))))))) (= g_s61_62 (SET (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 g_s62_63))))) (= g_s66_67 (SET (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 g_s67_68))))) (not (= g_s71_72 empty)) (not (= g_s72_73 empty)) (not (= g_s73_74 empty)) (not (= g_s74_75 empty)) (not (= g_s75_76 empty)) (not (= g_s76_77 empty)) (not (= g_s77_78 empty)) (not (= g_s78_79 empty)) (not (= g_s79_80 empty)) (not (= g_s80_81 empty)) (not (= g_s81_82 empty)) (not (= g_s82_83 empty)) (not (= g_s83_84 empty)) (not (= g_s84_85 empty)) (not (= g_s85_86 empty)) (not (= g_s86_87 empty)) (not (= g_s87_88 empty)) (not (= g_s88_89 empty)) (not (= g_s89_90 empty)) (not (= g_s90_91 empty)) (not (= g_s91_92 empty)) (= g_s92_93 (SET (mapplet g_s95_96 (mapplet g_s94_95 g_s93_94)))) (not (= g_s96_97 empty)) (not (= g_s97_98 empty)) (not (= g_s98_99 empty)) (not (= g_s99_100 empty)) (not (= g_s100_101 empty)) (not (= g_s101_102 empty)) (not (= g_s102_103 empty)) (not (= g_s103_104 empty)) (= g_s104_105 (SET (mapplet g_s107_108 (mapplet g_s106_107 g_s105_106)))) (not (= g_s108_109 empty)) (not (= g_s109_110 empty)) (not (= g_s110_111 empty)) (not (= g_s111_112 empty)) (not (= g_s112_113 empty)) (not (= g_s113_114 empty)) (not (= g_s114_115 empty)) (= g_s115_116 (SET (mapplet g_s119_120 (mapplet g_s118_119 (mapplet g_s117_118 g_s116_117))))) (not (= g_s120_121 empty)) (not (= g_s121_122 empty)) (not (= g_s122_123 empty)) (not (= g_s123_124 empty)) (not (= g_s124_125 empty)) (not (= g_s125_126 empty)) (not (= g_s126_127 empty)) (not (= g_s127_128 empty)) (= g_s128_129 (SET (mapplet g_s130_131 g_s129_130))) (not (= g_s131_132 empty)) (not (= g_s132_133 empty)) (not (= g_s133_134 empty)) (not (= g_s134_135 empty)) (not (= g_s135_136 empty)) (not (= g_s136_137 empty)) (not (= g_s137_138 empty)) (not (= g_s138_139 empty)) (not (= g_s139_140 empty)) (not (= g_s140_141 empty)) (not (= g_s141_142 empty)) (not (= g_s142_143 empty)) (not (= g_s143_144 empty)) (not (= g_s144_145 empty)) (= g_s145_147 (interval (iuminus g_s146_146) g_s146_146)) (= g_s147_148 (interval e0 g_s146_146)) (= g_s148_150 (interval e149 g_s146_146)) (subset g_s148_150 g_s147_148) (subset g_s147_148 g_s145_147) (subset g_s147_148 NAT) (subset g_s148_150 NAT1) (subset g_s145_147 INT) (mem g_s149_151 g_s145_147) (mem g_s149_151 g_s147_148) (not (mem g_s149_151 g_s148_150)) (mem g_s150_152 g_s145_147) (not (mem g_s150_152 g_s147_148)) (= g_s151_153 (interval (iuminus g_s146_146) g_s146_146)) (subset g_s151_153 INT) (subset g_s152_154 g_s0_1) (mem g_s153_155 g_s0_1) (mem g_s153_155 g_s152_154) (mem g_s154_156 g_s0_1) (not (mem g_s154_156 g_s152_154)) (mem g_s155_157 (|+->| NAT g_s0_1)) (mem g_s155_157 (perm g_s152_154)) (= (card g_s152_154) g_s156_158) (subset g_s157_159 g_s1_2) (mem g_s158_160 g_s1_2) (mem g_s158_160 g_s157_159) (mem g_s159_161 g_s1_2) (not (mem g_s159_161 g_s157_159)) (mem g_s160_162 (|+->| NAT g_s1_2)) (mem g_s160_162 (perm g_s157_159)) (= (card g_s157_159) g_s161_163) (subset g_s162_164 g_s71_72) (mem g_s163_165 g_s71_72) (not (mem g_s163_165 g_s162_164)) (mem g_s164_166 (|+->| NAT g_s71_72)) (mem g_s164_166 (perm g_s162_164)) (subset g_s165_167 g_s72_73) (mem g_s166_168 g_s72_73) (not (mem g_s166_168 g_s165_167)) (mem g_s167_169 (|+->| NAT g_s72_73)) (mem g_s167_169 (perm g_s165_167)) (subset g_s168_170 g_s73_74) (mem g_s169_171 g_s73_74) (not (mem g_s169_171 g_s168_170)) (mem g_s170_172 (|+->| NAT g_s73_74)) (mem g_s170_172 (perm g_s168_170)) (subset g_s171_173 g_s74_75) (mem g_s172_174 g_s74_75) (not (mem g_s172_174 g_s171_173)) (mem g_s173_175 (|+->| NAT g_s74_75)) (mem g_s173_175 (perm g_s171_173)) (subset g_s174_176 g_s75_76) (mem g_s175_177 g_s75_76) (not (mem g_s175_177 g_s174_176)) (mem g_s176_178 (|+->| NAT g_s75_76)) (mem g_s176_178 (perm g_s174_176)) (subset g_s177_179 g_s76_77) (mem g_s178_180 g_s76_77) (not (mem g_s178_180 g_s177_179)) (mem g_s179_181 (|+->| NAT g_s76_77)) (mem g_s179_181 (perm g_s177_179)) (subset g_s180_182 g_s77_78) (mem g_s181_183 g_s77_78) (not (mem g_s181_183 g_s180_182)) (mem g_s182_184 (|+->| NAT g_s77_78)) (mem g_s182_184 (perm g_s180_182)) (subset g_s183_185 g_s78_79) (mem g_s184_186 g_s78_79) (not (mem g_s184_186 g_s183_185)) (mem g_s185_187 (|+->| NAT g_s78_79)) (mem g_s185_187 (perm g_s183_185)) (subset g_s186_188 g_s79_80) (mem g_s187_189 g_s79_80) (not (mem g_s187_189 g_s186_188)) (mem g_s188_190 (|+->| NAT g_s79_80)) (mem g_s188_190 (perm g_s186_188)) (subset g_s189_191 g_s80_81) (mem g_s190_192 g_s80_81) (not (mem g_s190_192 g_s189_191)) (mem g_s191_193 (|+->| NAT g_s80_81)) (mem g_s191_193 (perm g_s189_191)) (mem g_s192_195 (|-->| (set_prod g_s193_194 g_s193_194) g_s193_194)) (subset g_s194_196 g_s81_82) (mem g_s195_197 g_s81_82) (not (mem g_s195_197 g_s194_196)) (mem g_s196_198 (|+->| NAT g_s81_82)) (mem g_s196_198 (perm g_s194_196)) (subset g_s197_199 g_s82_83) (mem g_s198_200 g_s82_83) (not (mem g_s198_200 g_s197_199)) (mem g_s199_201 (|+->| NAT g_s82_83)) (mem g_s199_201 (perm g_s197_199)) (subset g_s200_202 g_s83_84) (mem g_s201_203 g_s83_84) (not (mem g_s201_203 g_s200_202)) (mem g_s202_204 (|+->| NAT g_s83_84)) (mem g_s202_204 (perm g_s200_202)) (subset g_s203_205 g_s84_85) (mem g_s204_206 g_s84_85) (not (mem g_s204_206 g_s203_205)) (mem g_s205_207 (|+->| NAT g_s84_85)) (mem g_s205_207 (perm g_s203_205)) (subset g_s206_208 g_s85_86) (mem g_s207_209 g_s85_86) (not (mem g_s207_209 g_s206_208)) (mem g_s208_210 (|+->| NAT g_s85_86)) (mem g_s208_210 (perm g_s206_208)) (subset g_s209_211 g_s86_87) (mem g_s210_212 g_s86_87) (not (mem g_s210_212 g_s209_211)) (mem g_s211_213 (|+->| NAT g_s86_87)) (mem g_s211_213 (perm g_s209_211)) (subset g_s212_214 g_s87_88) (mem g_s213_215 g_s87_88) (not (mem g_s213_215 g_s212_214)) (mem g_s214_216 (|+->| NAT g_s87_88)) (mem g_s214_216 (perm g_s212_214)) (subset g_s215_217 g_s88_89) (mem g_s216_218 g_s88_89) (not (mem g_s216_218 g_s215_217)) (subset g_s217_219 g_s89_90) (mem g_s218_220 g_s89_90) (not (mem g_s218_220 g_s217_219)) (mem g_s219_221 (|+->| NAT g_s89_90)) (mem g_s219_221 (perm g_s217_219)) (subset g_s220_222 g_s90_91) (mem g_s221_223 g_s90_91) (not (mem g_s221_223 g_s220_222)) (mem g_s222_224 (|+->| NAT g_s90_91)) (mem g_s222_224 (perm g_s220_222)) (subset g_s223_225 g_s91_92) (mem g_s224_226 g_s91_92) (not (mem g_s224_226 g_s223_225)) (mem g_s225_227 (|+->| NAT g_s91_92)) (mem g_s225_227 (perm g_s223_225)) (subset g_s226_228 g_s96_97) (mem g_s227_229 g_s96_97) (not (mem g_s227_229 g_s226_228)) (mem g_s228_230 (|+->| NAT g_s96_97)) (mem g_s228_230 (perm g_s226_228)) (subset g_s229_231 g_s97_98) (mem g_s230_232 g_s97_98) (not (mem g_s230_232 g_s229_231)) (mem g_s231_233 (|+->| NAT g_s97_98)) (mem g_s231_233 (perm g_s229_231)) (subset g_s232_234 g_s98_99) (mem g_s233_235 g_s98_99) (not (mem g_s233_235 g_s232_234)) (mem g_s234_236 (|+->| NAT g_s98_99)) (mem g_s234_236 (perm g_s232_234)) (subset g_s235_237 g_s7_8) (not (mem g_s8_9 g_s235_237)) (= g_s235_237 (SET (mapplet g_s11_12 g_s10_11))) (subset g_s236_238 g_s7_8) (not (mem g_s8_9 g_s236_238)) (= g_s236_238 (SET (mapplet g_s11_12 (mapplet g_s10_11 g_s9_10)))) (mem g_s237_239 (|>->>| g_s235_237 g_s235_237)) (= (binary_inter g_s237_239 (id g_s235_237)) empty) (mem g_s238_241 (|>->| g_s239_240 g_s7_8)) (not (mem (apply g_s238_241 g_s240_242) g_s235_237)) (mem g_s241_244 (|>->>| g_s242_243 (set_diff g_s7_8 (SET g_s9_10)))) (mem g_s243_245 (|>->>| (set_diff g_s7_8 (SET g_s9_10)) g_s242_243)) (= g_s241_244 (inverse g_s243_245)) (not (mem (apply g_s241_244 g_s244_246) g_s235_237)) (mem g_s245_248 (|-->| g_s246_247 g_s239_240)) (= (apply g_s245_248 g_s247_249) g_s240_242) (subset g_s248_250 g_s99_100) (mem g_s249_251 g_s99_100) (not (mem g_s249_251 g_s248_250)) (subset g_s250_252 g_s100_101) (mem g_s251_253 g_s100_101) (not (mem g_s251_253 g_s250_252)) (subset g_s252_254 g_s101_102) (mem g_s253_255 g_s101_102) (not (mem g_s253_255 g_s252_254)) (mem g_s254_256 (|+->| NAT g_s101_102)) (mem g_s254_256 (perm g_s252_254)) (= g_s255_257 INT) (= g_s256_258 NAT) (mem g_s257_259 g_s255_257) (not (mem g_s257_259 g_s256_258)) (mem g_s258_260 g_s255_257) (mem g_s258_260 g_s256_258) (mem g_s259_262 (|>->| g_s252_254 g_s260_261)) (subset g_s261_263 g_s102_103) (mem g_s262_264 g_s102_103) (not (mem g_s262_264 g_s261_263)) (mem g_s263_265 (|+->| NAT g_s102_103)) (mem g_s263_265 (perm g_s261_263)) (subset g_s264_266 g_s103_104) (mem g_s265_267 g_s103_104) (not (mem g_s265_267 g_s264_266)) (mem g_s266_268 (|+->| NAT g_s103_104)) (mem g_s266_268 (perm g_s264_266)) (subset g_s267_269 g_s108_109) (mem g_s268_270 g_s108_109) (not (mem g_s268_270 g_s267_269)) (mem g_s269_271 (|+->| NAT g_s108_109)) (mem g_s269_271 (perm g_s267_269)) (subset g_s270_272 g_s109_110) (mem g_s271_273 g_s109_110) (not (mem g_s271_273 g_s270_272)) (mem g_s272_274 (|+->| NAT g_s109_110)) (mem g_s272_274 (perm g_s270_272)) (subset g_s273_275 g_s110_111) (mem g_s274_276 g_s110_111) (not (mem g_s274_276 g_s273_275)) (mem g_s275_277 (|+->| NAT g_s110_111)) (mem g_s275_277 (perm g_s273_275)) (subset g_s276_278 g_s111_112) (mem g_s277_279 g_s111_112) (not (mem g_s277_279 g_s276_278)) (mem g_s278_280 (|+->| NAT g_s111_112)) (mem g_s278_280 (perm g_s276_278)) (subset g_s279_281 g_s112_113) (mem g_s280_282 g_s112_113) (not (mem g_s280_282 g_s279_281)) (mem g_s281_283 (|+->| NAT g_s112_113)) (mem g_s281_283 (perm g_s279_281)) (subset g_s282_284 g_s113_114) (mem g_s283_285 g_s113_114) (not (mem g_s283_285 g_s282_284)) (mem g_s284_286 (|+->| NAT g_s113_114)) (mem g_s284_286 (perm g_s282_284)) (subset g_s285_287 g_s114_115) (mem g_s286_288 g_s114_115) (not (mem g_s286_288 g_s285_287)) (mem g_s287_289 (|+->| NAT g_s114_115)) (mem g_s287_289 (perm g_s285_287)) (subset g_s288_290 g_s40_41) (not (mem g_s41_42 g_s288_290)) (= g_s288_290 (SET (mapplet g_s44_45 (mapplet g_s43_44 g_s42_43)))) (subset g_s289_291 g_s120_121) (mem g_s290_292 g_s120_121) (not (mem g_s290_292 g_s289_291)) (mem g_s291_293 (|+->| NAT g_s120_121)) (mem g_s291_293 (perm g_s289_291)) (subset g_s292_294 g_s121_122) (mem g_s293_295 g_s121_122) (not (mem g_s293_295 g_s292_294)) (mem g_s294_296 (|+->| NAT g_s121_122)) (mem g_s294_296 (perm g_s292_294)) (subset g_s295_297 g_s122_123) (mem g_s296_298 g_s122_123) (not (mem g_s296_298 g_s295_297)) (mem g_s297_299 (|+->| NAT g_s122_123)) (mem g_s297_299 (perm g_s295_297)) (subset g_s298_300 g_s123_124) (mem g_s299_301 g_s123_124) (not (mem g_s299_301 g_s298_300)) (mem g_s300_302 (|+->| NAT g_s123_124)) (mem g_s300_302 (perm g_s298_300)) (= (card g_s298_300) g_s301_303) (subset g_s302_304 g_s124_125) (mem g_s303_305 g_s124_125) (not (mem g_s303_305 g_s302_304)) (mem g_s304_306 (|+->| NAT g_s124_125)) (mem g_s304_306 (perm g_s302_304)) (subset g_s305_307 g_s125_126) (mem g_s306_308 g_s125_126) (not (mem g_s306_308 g_s305_307)) (mem g_s307_309 (|+->| NAT g_s125_126)) (mem g_s307_309 (perm g_s305_307)) (= (card g_s305_307) g_s308_310) (subset g_s309_311 g_s126_127) (mem g_s310_312 g_s126_127) (not (mem g_s310_312 g_s309_311)) (mem g_s311_313 (|+->| NAT g_s126_127)) (mem g_s311_313 (perm g_s309_311)) (subset g_s312_314 g_s127_128) (mem g_s313_315 g_s127_128) (not (mem g_s313_315 g_s312_314)) (mem g_s314_316 (|+->| NAT g_s127_128)) (mem g_s314_316 (perm g_s312_314)) (subset g_s315_317 g_s131_132) (mem g_s316_318 g_s131_132) (not (mem g_s316_318 g_s315_317)) (mem g_s317_319 (|+->| NAT g_s131_132)) (mem g_s317_319 (perm g_s315_317)) (subset g_s318_320 g_s132_133) (mem g_s319_321 g_s132_133) (not (mem g_s319_321 g_s318_320)) (mem g_s320_322 (|+->| NAT g_s132_133)) (mem g_s320_322 (perm g_s318_320)) (subset g_s321_323 g_s133_134) (mem g_s322_324 g_s133_134) (not (mem g_s322_324 g_s321_323)) (mem g_s323_325 (|+->| NAT g_s133_134)) (mem g_s323_325 (perm g_s321_323)) (subset g_s324_326 g_s134_135) (mem g_s325_327 g_s134_135) (not (mem g_s325_327 g_s324_326)) (mem g_s326_328 (|+->| NAT g_s134_135)) (mem g_s326_328 (perm g_s324_326)) (subset g_s327_329 g_s135_136) (mem g_s328_330 g_s135_136) (not (mem g_s328_330 g_s327_329)) (mem g_s329_331 (|+->| NAT g_s135_136)) (mem g_s329_331 (perm g_s327_329)) (subset g_s330_332 g_s136_137) (mem g_s331_333 g_s136_137) (not (mem g_s331_333 g_s330_332)) (mem g_s332_334 (|+->| NAT g_s136_137)) (mem g_s332_334 (perm g_s330_332)) (subset g_s333_335 g_s137_138) (mem g_s334_336 g_s137_138) (not (mem g_s334_336 g_s333_335)) (mem g_s335_337 (|+->| NAT g_s137_138)) (mem g_s335_337 (perm g_s333_335)) (subset g_s336_338 g_s138_139) (mem g_s337_339 g_s138_139) (not (mem g_s337_339 g_s336_338)) (mem g_s338_340 (|+->| NAT g_s138_139)) (mem g_s338_340 (perm g_s336_338)) (subset g_s339_341 g_s139_140) (mem g_s340_342 g_s139_140) (not (mem g_s340_342 g_s339_341)) (mem g_s341_343 (|+->| NAT g_s139_140)) (mem g_s341_343 (perm g_s339_341)) (subset g_s342_344 g_s140_141) (mem g_s343_345 g_s140_141) (not (mem g_s343_345 g_s342_344)) (mem g_s344_346 (|+->| NAT g_s140_141)) (mem g_s344_346 (perm g_s342_344)) (subset g_s345_347 g_s141_142) (mem g_s346_348 g_s141_142) (not (mem g_s346_348 g_s345_347)) (subset g_s347_349 g_s142_143) (mem g_s348_350 g_s142_143) (not (mem g_s348_350 g_s347_349)) (mem g_s349_351 (|+->| NAT g_s142_143)) (mem g_s349_351 (perm g_s347_349)) (subset g_s350_352 g_s143_144) (mem g_s351_353 g_s143_144) (not (mem g_s351_353 g_s350_352)) (mem g_s352_354 (|+->| NAT g_s143_144)) (mem g_s352_354 (perm g_s350_352)) (subset g_s353_355 g_s144_145) (mem g_s354_356 g_s144_145) (not (mem g_s354_356 g_s353_355)) (mem g_s355_357 (|+->| NAT g_s144_145)) (mem g_s355_357 (perm g_s353_355))))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s356_358 (|-->| g_s162_164 g_s12_13)) (subset g_s357_359 g_s206_208) (subset g_s358_360 g_s333_335) (subset g_s359_361 g_s289_291) (subset g_s360_362 g_s267_269) (subset g_s361_363 g_s318_320) (subset g_s362_364 g_s220_222) (subset g_s363_365 g_s273_275) (subset g_s364_366 g_s180_182) (mem g_s365_367 (|+->| g_s180_182 g_s147_148)) (subset g_s366_368 g_s180_182) (mem g_s367_369 (|+->| g_s180_182 g_s147_148)) (subset g_s368_370 g_s267_269) (subset g_s369_371 g_s267_269) (mem g_s370_372 (|+->| g_s174_176 g_s147_148)) (mem g_s371_373 (|<->| g_s174_176 g_s235_237)) (mem g_s372_374 (|+->| g_s174_176 g_s147_148)) (mem g_s371_373 (|<->| g_s174_176 g_s235_237)) (mem g_s373_375 (|+->| g_s174_176 g_s147_148)) (mem g_s374_376 (|<->| g_s174_176 g_s235_237)) (mem g_s375_377 (|+->| g_s174_176 g_s147_148)) (mem g_s374_376 (|<->| g_s174_176 g_s235_237)) (subset g_s376_378 g_s174_176) (subset g_s377_379 g_s174_176) (subset g_s378_380 g_s194_196) (subset g_s379_381 g_s194_196) (subset g_s380_382 g_s194_196) (subset g_s381_383 g_s264_266) (subset g_s382_384 g_s264_266) (mem g_s383_385 (|-->| g_s264_266 g_s26_27)) (subset g_s384_386 g_s273_275) (subset g_s385_387 g_s220_222) (subset g_s386_388 g_s273_275) (subset g_s387_389 g_s273_275) (subset g_s388_390 g_s212_214) (mem g_s389_391 BOOL) (subset g_s390_392 g_s226_228) (subset g_s391_393 g_s226_228) (mem g_s392_394 (|+->| g_s226_228 g_s147_148)) (subset g_s393_395 g_s212_214) (subset g_s394_396 g_s212_214) (subset g_s395_397 g_s212_214) (subset g_s396_398 g_s212_214) (subset g_s397_399 g_s212_214) (mem g_s398_400 (|+->| g_s212_214 g_s147_148)) (subset g_s399_401 g_s212_214) (mem g_s400_402 (|+->| g_s223_225 g_s151_153)) (subset g_s401_403 g_s229_231) (subset g_s402_404 g_s229_231) (subset g_s403_405 g_s220_222) (subset g_s404_406 g_s220_222)))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s406_407 g_s90_91))
(assert (mem g_s406_407 g_s220_222))
(define-fun lh_1 () Bool (mem g_s385$1_408 (POW g_s220_222)))
; PO 1 in group 0
(assert (not (=> lh_1 (subset g_s385$1_408 g_s220_222))))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s409_409 g_s110_111))
(assert (mem g_s409_409 g_s273_275))
; PO 1 in group 1
(assert (not (subset (set_diff g_s363_365 (SET g_s409_409)) g_s273_275)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s409_409 g_s110_111))
(assert (mem g_s409_409 g_s273_275))
; PO 1 in group 2
(assert (not (subset (binary_union g_s363_365 (SET g_s409_409)) g_s273_275)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_410 g_s77_78))
(assert (mem g_s412_410 g_s180_182))
(define-fun lh_1 () Bool (mem g_s412_410 (dom g_s365_367)))
(define-fun lh_2 () Bool (mem g_s413$1_411 g_s145_147))
; PO 1 in group 3
(assert (not (=> (and lh_1 lh_2) (mem g_s365_367 (|+->| (dom g_s365_367) (ran g_s365_367))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_410 g_s77_78))
(assert (mem g_s412_410 g_s180_182))
(assert (mem g_s412_410 (dom g_s365_367)))
(define-fun lh_1 () Bool (mem g_s413$1_411 g_s145_147))
; PO 1 in group 4
(assert (not (=> lh_1 (mem g_s365_367 (|+->| (dom g_s365_367) (ran g_s365_367))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_410 g_s77_78))
(assert (mem g_s412_410 g_s180_182))
(define-fun lh_1 () Bool (mem g_s412_410 (dom g_s367_369)))
(define-fun lh_2 () Bool (mem g_s417$1_412 g_s145_147))
; PO 1 in group 5
(assert (not (=> (and lh_1 lh_2) (mem g_s367_369 (|+->| (dom g_s367_369) (ran g_s367_369))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s412_410 g_s77_78))
(assert (mem g_s412_410 g_s180_182))
(assert (mem g_s412_410 (dom g_s367_369)))
(define-fun lh_1 () Bool (mem g_s417$1_412 g_s145_147))
; PO 1 in group 6
(assert (not (=> lh_1 (mem g_s367_369 (|+->| (dom g_s367_369) (ran g_s367_369))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s420_413 g_s75_76))
(assert (mem g_s420_413 g_s174_176))
(define-fun lh_1 () Bool (mem g_s420_413 (dom g_s370_372)))
(define-fun lh_2 () Bool (mem g_s421$1_414 g_s145_147))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2) (mem g_s370_372 (|+->| (dom g_s370_372) (ran g_s370_372))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s420_413 g_s75_76))
(assert (mem g_s420_413 g_s174_176))
(assert (mem g_s420_413 (dom g_s370_372)))
(define-fun lh_1 () Bool (mem g_s421$1_414 g_s145_147))
; PO 1 in group 8
(assert (not (=> lh_1 (mem g_s370_372 (|+->| (dom g_s370_372) (ran g_s370_372))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s420_413 g_s75_76))
(assert (mem g_s420_413 g_s174_176))
(define-fun lh_1 () Bool (mem g_s420_413 (dom g_s372_374)))
(define-fun lh_2 () Bool (mem g_s424$1_415 g_s145_147))
; PO 1 in group 9
(assert (not (=> (and lh_1 lh_2) (mem g_s372_374 (|+->| (dom g_s372_374) (ran g_s372_374))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s420_413 g_s75_76))
(assert (mem g_s420_413 g_s174_176))
(assert (mem g_s420_413 (dom g_s372_374)))
(define-fun lh_1 () Bool (mem g_s424$1_415 g_s145_147))
; PO 1 in group 10
(assert (not (=> lh_1 (mem g_s372_374 (|+->| (dom g_s372_374) (ran g_s372_374))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s420_413 g_s75_76))
(assert (mem g_s420_413 g_s174_176))
(define-fun lh_1 () Bool (mem g_s420_413 (dom g_s373_375)))
(define-fun lh_2 () Bool (mem g_s427$1_416 g_s145_147))
; PO 1 in group 11
(assert (not (=> (and lh_1 lh_2) (mem g_s373_375 (|+->| (dom g_s373_375) (ran g_s373_375))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s420_413 g_s75_76))
(assert (mem g_s420_413 g_s174_176))
(assert (mem g_s420_413 (dom g_s373_375)))
(define-fun lh_1 () Bool (mem g_s427$1_416 g_s145_147))
; PO 1 in group 12
(assert (not (=> lh_1 (mem g_s373_375 (|+->| (dom g_s373_375) (ran g_s373_375))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s420_413 g_s75_76))
(assert (mem g_s420_413 g_s174_176))
(define-fun lh_1 () Bool (mem g_s420_413 (dom g_s375_377)))
(define-fun lh_2 () Bool (mem g_s430$1_417 g_s145_147))
; PO 1 in group 13
(assert (not (=> (and lh_1 lh_2) (mem g_s375_377 (|+->| (dom g_s375_377) (ran g_s375_377))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s420_413 g_s75_76))
(assert (mem g_s420_413 g_s174_176))
(assert (mem g_s420_413 (dom g_s375_377)))
(define-fun lh_1 () Bool (mem g_s430$1_417 g_s145_147))
; PO 1 in group 14
(assert (not (=> lh_1 (mem g_s375_377 (|+->| (dom g_s375_377) (ran g_s375_377))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s433_418 g_s71_72))
(assert (mem g_s433_418 g_s162_164))
; PO 1 in group 15
(push 1)
(assert (not (mem g_s433_418 (dom g_s356_358))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (mem g_s356_358 (|+->| (dom g_s356_358) (ran g_s356_358)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s435_419 g_s103_104))
(assert (mem g_s435_419 g_s264_266))
; PO 1 in group 16
(push 1)
(assert (not (mem g_s383_385 (|+->| (dom g_s383_385) (ran g_s383_385)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (mem g_s435_419 (dom g_s383_385))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s437_420 g_s96_97))
(assert (mem g_s437_420 g_s226_228))
(assert (mem g_s437_420 (dom g_s392_394)))
(define-fun lh_1 () Bool (mem g_s438$1_421 g_s145_147))
; PO 1 in group 17
(assert (not (=> lh_1 (mem g_s392_394 (|+->| (dom g_s392_394) (ran g_s392_394))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s437_420 g_s96_97))
(assert (mem g_s437_420 g_s226_228))
(define-fun lh_1 () Bool (mem g_s437_420 (dom g_s392_394)))
(define-fun lh_2 () Bool (mem g_s438$1_421 g_s145_147))
; PO 1 in group 18
(assert (not (=> (and lh_1 lh_2) (mem g_s392_394 (|+->| (dom g_s392_394) (ran g_s392_394))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s441_422 g_s87_88))
(assert (mem g_s441_422 g_s212_214))
(define-fun lh_1 () Bool (mem g_s441_422 (dom g_s398_400)))
(define-fun lh_2 () Bool (mem g_s438$1_421 g_s145_147))
; PO 1 in group 19
(assert (not (=> (and lh_1 lh_2) (mem g_s398_400 (|+->| (dom g_s398_400) (ran g_s398_400))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s441_422 g_s87_88))
(assert (mem g_s441_422 g_s212_214))
(assert (mem g_s441_422 (dom g_s398_400)))
(define-fun lh_1 () Bool (mem g_s438$1_421 g_s145_147))
; PO 1 in group 20
(assert (not (=> lh_1 (mem g_s398_400 (|+->| (dom g_s398_400) (ran g_s398_400))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s444_423 g_s91_92))
(assert (mem g_s444_423 g_s223_225))
(define-fun lh_1 () Bool (mem g_s444_423 (dom g_s400_402)))
(define-fun lh_2 () Bool (mem g_s438$1_421 g_s151_153))
; PO 1 in group 21
(assert (not (=> (and lh_1 lh_2) (mem g_s400_402 (|+->| (dom g_s400_402) (ran g_s400_402))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)