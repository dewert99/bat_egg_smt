(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e50 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_102 () U)
(declare-fun g_s101_103 () U)
(declare-fun g_s102_104 () U)
(declare-fun g_s103_105 () U)
(declare-fun g_s104_106 () U)
(declare-fun g_s105_107 () U)
(declare-fun g_s106_108 () U)
(declare-fun g_s107_109 () U)
(declare-fun g_s108_110 () U)
(declare-fun g_s109_111 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_112 () U)
(declare-fun g_s111_113 () U)
(declare-fun g_s112_114 () U)
(declare-fun g_s113_115 () U)
(declare-fun g_s114_116 () U)
(declare-fun g_s115_117 () U)
(declare-fun g_s116_118 () U)
(declare-fun g_s117_119 () U)
(declare-fun g_s118_120 () U)
(declare-fun g_s119_121 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_122 () U)
(declare-fun g_s121_123 () U)
(declare-fun g_s122_124 () U)
(declare-fun g_s123_125 () U)
(declare-fun g_s124_126 () U)
(declare-fun g_s125_127 () U)
(declare-fun g_s126_128 () U)
(declare-fun g_s127_129 () U)
(declare-fun g_s128_130 () U)
(declare-fun g_s129_131 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_132 () U)
(declare-fun g_s131_133 () U)
(declare-fun g_s132_134 () U)
(declare-fun g_s133_135 () U)
(declare-fun g_s134_136 () U)
(declare-fun g_s135_137 () U)
(declare-fun g_s136_138 () U)
(declare-fun g_s137_139 () U)
(declare-fun g_s138_140 () U)
(declare-fun g_s139_141 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_142 () U)
(declare-fun g_s141_143 () U)
(declare-fun g_s142_144 () U)
(declare-fun g_s143_145 () U)
(declare-fun g_s144_146 () U)
(declare-fun g_s145_147 () U)
(declare-fun g_s146_148 () U)
(declare-fun g_s147_149 () U)
(declare-fun g_s148_150 () U)
(declare-fun g_s149_151 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_152 () U)
(declare-fun g_s151_153 () U)
(declare-fun g_s152_154 () U)
(declare-fun g_s153_155 () U)
(declare-fun g_s154_156 () U)
(declare-fun g_s155_157 () U)
(declare-fun g_s156_158 () U)
(declare-fun g_s157_159 () U)
(declare-fun g_s158_160 () U)
(declare-fun g_s159_161 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_162 () U)
(declare-fun g_s161_163 () U)
(declare-fun g_s162_164 () U)
(declare-fun g_s163_165 () U)
(declare-fun g_s164_166 () U)
(declare-fun g_s165_167 () U)
(declare-fun g_s166_168 () U)
(declare-fun g_s167_169 () U)
(declare-fun g_s168_170 () U)
(declare-fun g_s169_171 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_172 () U)
(declare-fun g_s171_173 () U)
(declare-fun g_s172_174 () U)
(declare-fun g_s173_175 () U)
(declare-fun g_s174_176 () U)
(declare-fun g_s175_177 () U)
(declare-fun g_s176_178 () U)
(declare-fun g_s177_179 () U)
(declare-fun g_s178_180 () U)
(declare-fun g_s179_181 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_182 () U)
(declare-fun g_s180$1_189 () U)
(declare-fun g_s181_183 () U)
(declare-fun g_s181$1_190 () U)
(declare-fun g_s182_184 () U)
(declare-fun g_s182$1_191 () U)
(declare-fun g_s183_185 () U)
(declare-fun g_s183$1_192 () U)
(declare-fun g_s184_186 () U)
(declare-fun g_s184$1_193 () U)
(declare-fun g_s185_187 () U)
(declare-fun g_s185$1_194 () U)
(declare-fun g_s186_188 () U)
(declare-fun g_s186$1_195 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_196 () U)
(declare-fun g_s192_197 () U)
(declare-fun g_s195_198 () U)
(declare-fun g_s197_199 () U)
(declare-fun g_s199_200 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s201$1_201 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_48 () U)
(declare-fun g_s47_47 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_51 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_52 () U)
(declare-fun g_s51_53 () U)
(declare-fun g_s52_54 () U)
(declare-fun g_s53_55 () U)
(declare-fun g_s54_56 () U)
(declare-fun g_s55_57 () U)
(declare-fun g_s56_58 () U)
(declare-fun g_s57_59 () U)
(declare-fun g_s58_60 () U)
(declare-fun g_s59_61 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_62 () U)
(declare-fun g_s61_63 () U)
(declare-fun g_s62_64 () U)
(declare-fun g_s63_65 () U)
(declare-fun g_s64_66 () U)
(declare-fun g_s65_67 () U)
(declare-fun g_s66_68 () U)
(declare-fun g_s67_69 () U)
(declare-fun g_s68_70 () U)
(declare-fun g_s69_71 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_72 () U)
(declare-fun g_s71_73 () U)
(declare-fun g_s72_74 () U)
(declare-fun g_s73_75 () U)
(declare-fun g_s74_76 () U)
(declare-fun g_s75_78 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_79 () U)
(declare-fun g_s78_80 () U)
(declare-fun g_s79_81 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_82 () U)
(declare-fun g_s81_83 () U)
(declare-fun g_s82_84 () U)
(declare-fun g_s83_85 () U)
(declare-fun g_s84_86 () U)
(declare-fun g_s85_87 () U)
(declare-fun g_s86_88 () U)
(declare-fun g_s87_89 () U)
(declare-fun g_s88_90 () U)
(declare-fun g_s89_91 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_92 () U)
(declare-fun g_s91_93 () U)
(declare-fun g_s92_94 () U)
(declare-fun g_s93_95 () U)
(declare-fun g_s94_96 () U)
(declare-fun g_s95_97 () U)
(declare-fun g_s96_98 () U)
(declare-fun g_s97_99 () U)
(declare-fun g_s98_101 () U)
(declare-fun g_s99_100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (not (= g_s12_13 empty)) (= g_s13_14 (SET (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 g_s14_15))))) (not (= g_s18_19 empty)) (not (= g_s19_20 empty)) (not (= g_s20_21 empty)) (not (= g_s21_22 empty)) (not (= g_s22_23 empty)) (not (= g_s23_24 empty)) (not (= g_s24_25 empty)) (not (= g_s25_26 empty)) (not (= g_s26_27 empty)) (not (= g_s27_28 empty)) (not (= g_s28_29 empty)) (not (= g_s29_30 empty)) (= g_s30_31 (SET (mapplet g_s32_33 g_s31_32))) (not (= g_s33_34 empty)) (not (= g_s34_35 empty)) (not (= g_s35_36 empty)) (not (= g_s36_37 empty)) (not (= g_s37_38 empty)) (not (= g_s38_39 empty)) (not (= g_s39_40 empty)) (not (= g_s40_41 empty)) (not (= g_s41_42 empty)) (not (= g_s42_43 empty)) (not (= g_s43_44 empty)) (not (= g_s44_45 empty)) (not (= g_s45_46 empty)) (= g_s46_48 (interval (iuminus g_s47_47) g_s47_47)) (= g_s48_49 (interval e0 g_s47_47)) (= g_s49_51 (interval e50 g_s47_47)) (subset g_s49_51 g_s48_49) (subset g_s48_49 g_s46_48) (subset g_s48_49 NAT) (subset g_s49_51 NAT1) (subset g_s46_48 INT) (mem g_s50_52 g_s46_48) (mem g_s50_52 g_s48_49) (not (mem g_s50_52 g_s49_51)) (mem g_s51_53 g_s46_48) (not (mem g_s51_53 g_s48_49)) (= g_s52_54 (interval (iuminus g_s47_47) g_s47_47)) (subset g_s52_54 INT) (subset g_s53_55 g_s0_1) (mem g_s54_56 g_s0_1) (mem g_s54_56 g_s53_55) (mem g_s55_57 g_s0_1) (not (mem g_s55_57 g_s53_55)) (mem g_s56_58 (|+->| NAT g_s0_1)) (mem g_s56_58 (perm g_s53_55)) (= (card g_s53_55) g_s57_59) (subset g_s58_60 g_s1_2) (mem g_s59_61 g_s1_2) (mem g_s59_61 g_s58_60) (mem g_s60_62 g_s1_2) (not (mem g_s60_62 g_s58_60)) (mem g_s61_63 (|+->| NAT g_s1_2)) (mem g_s61_63 (perm g_s58_60)) (= (card g_s58_60) g_s62_64) (subset g_s63_65 g_s2_3) (mem g_s64_66 g_s2_3) (not (mem g_s64_66 g_s63_65)) (mem g_s65_67 (|+->| NAT g_s2_3)) (mem g_s65_67 (perm g_s63_65)) (subset g_s66_68 g_s3_4) (mem g_s67_69 g_s3_4) (not (mem g_s67_69 g_s66_68)) (mem g_s68_70 (|+->| NAT g_s3_4)) (mem g_s68_70 (perm g_s66_68)) (subset g_s69_71 g_s4_5) (mem g_s70_72 g_s4_5) (not (mem g_s70_72 g_s69_71)) (mem g_s71_73 (|+->| NAT g_s4_5)) (mem g_s71_73 (perm g_s69_71)) (subset g_s72_74 g_s5_6) (mem g_s73_75 g_s5_6) (not (mem g_s73_75 g_s72_74)) (mem g_s74_76 (|+->| NAT g_s5_6)) (mem g_s74_76 (perm g_s72_74)) (mem g_s75_78 (|-->| (set_prod g_s76_77 g_s76_77) g_s76_77)) (subset g_s77_79 g_s6_7) (mem g_s78_80 g_s6_7) (not (mem g_s78_80 g_s77_79)) (mem g_s79_81 (|+->| NAT g_s6_7)) (mem g_s79_81 (perm g_s77_79)) (subset g_s80_82 g_s7_8) (mem g_s81_83 g_s7_8) (not (mem g_s81_83 g_s80_82)) (mem g_s82_84 (|+->| NAT g_s7_8)) (mem g_s82_84 (perm g_s80_82)) (subset g_s83_85 g_s8_9) (mem g_s84_86 g_s8_9) (not (mem g_s84_86 g_s83_85)) (mem g_s85_87 (|+->| NAT g_s8_9)) (mem g_s85_87 (perm g_s83_85)) (subset g_s86_88 g_s9_10) (mem g_s87_89 g_s9_10) (not (mem g_s87_89 g_s86_88)) (mem g_s88_90 (|+->| NAT g_s9_10)) (mem g_s88_90 (perm g_s86_88)) (subset g_s89_91 g_s10_11) (mem g_s90_92 g_s10_11) (not (mem g_s90_92 g_s89_91)) (mem g_s91_93 (|+->| NAT g_s10_11)) (mem g_s91_93 (perm g_s89_91)) (subset g_s92_94 g_s11_12) (mem g_s93_95 g_s11_12) (not (mem g_s93_95 g_s92_94)) (mem g_s94_96 (|+->| NAT g_s11_12)) (mem g_s94_96 (perm g_s92_94)) (subset g_s95_97 g_s12_13) (mem g_s96_98 g_s12_13) (not (mem g_s96_98 g_s95_97)) (mem g_s97_99 (|+->| NAT g_s12_13)) (mem g_s97_99 (perm g_s95_97)) (subset g_s98_101 g_s99_100) (not (mem g_s100_102 g_s98_101)) (= g_s98_101 (SET (mapplet g_s103_105 (mapplet g_s102_104 g_s101_103)))) (subset g_s104_106 g_s18_19) (mem g_s105_107 g_s18_19) (not (mem g_s105_107 g_s104_106)) (mem g_s106_108 (|+->| NAT g_s18_19)) (mem g_s106_108 (perm g_s104_106)) (subset g_s107_109 g_s19_20) (mem g_s108_110 g_s19_20) (not (mem g_s108_110 g_s107_109)) (mem g_s109_111 (|+->| NAT g_s19_20)) (mem g_s109_111 (perm g_s107_109)) (subset g_s110_112 g_s20_21) (mem g_s111_113 g_s20_21) (not (mem g_s111_113 g_s110_112)) (mem g_s112_114 (|+->| NAT g_s20_21)) (mem g_s112_114 (perm g_s110_112)) (subset g_s113_115 g_s21_22) (mem g_s114_116 g_s21_22) (not (mem g_s114_116 g_s113_115)) (mem g_s115_117 (|+->| NAT g_s21_22)) (mem g_s115_117 (perm g_s113_115)) (subset g_s116_118 g_s22_23) (mem g_s117_119 g_s22_23) (not (mem g_s117_119 g_s116_118)) (mem g_s118_120 (|+->| NAT g_s22_23)) (mem g_s118_120 (perm g_s116_118)) (subset g_s119_121 g_s23_24) (mem g_s120_122 g_s23_24) (not (mem g_s120_122 g_s119_121)) (mem g_s121_123 (|+->| NAT g_s23_24)) (mem g_s121_123 (perm g_s119_121)) (subset g_s122_124 g_s24_25) (mem g_s123_125 g_s24_25) (not (mem g_s123_125 g_s122_124)) (mem g_s124_126 (|+->| NAT g_s24_25)) (mem g_s124_126 (perm g_s122_124)) (subset g_s125_127 g_s25_26) (mem g_s126_128 g_s25_26) (not (mem g_s126_128 g_s125_127)) (mem g_s127_129 (|+->| NAT g_s25_26)) (mem g_s127_129 (perm g_s125_127)) (= (card g_s125_127) g_s128_130) (subset g_s129_131 g_s26_27) (mem g_s130_132 g_s26_27) (not (mem g_s130_132 g_s129_131)) (mem g_s131_133 (|+->| NAT g_s26_27)) (mem g_s131_133 (perm g_s129_131)) (subset g_s132_134 g_s27_28) (mem g_s133_135 g_s27_28) (not (mem g_s133_135 g_s132_134)) (mem g_s134_136 (|+->| NAT g_s27_28)) (mem g_s134_136 (perm g_s132_134)) (= (card g_s132_134) g_s135_137) (subset g_s136_138 g_s28_29) (mem g_s137_139 g_s28_29) (not (mem g_s137_139 g_s136_138)) (mem g_s138_140 (|+->| NAT g_s28_29)) (mem g_s138_140 (perm g_s136_138)) (subset g_s139_141 g_s29_30) (mem g_s140_142 g_s29_30) (not (mem g_s140_142 g_s139_141)) (mem g_s141_143 (|+->| NAT g_s29_30)) (mem g_s141_143 (perm g_s139_141)) (subset g_s142_144 g_s33_34) (mem g_s143_145 g_s33_34) (not (mem g_s143_145 g_s142_144)) (mem g_s144_146 (|+->| NAT g_s33_34)) (mem g_s144_146 (perm g_s142_144)) (subset g_s145_147 g_s34_35) (mem g_s146_148 g_s34_35) (not (mem g_s146_148 g_s145_147)) (mem g_s147_149 (|+->| NAT g_s34_35)) (mem g_s147_149 (perm g_s145_147)) (subset g_s148_150 g_s35_36) (mem g_s149_151 g_s35_36) (not (mem g_s149_151 g_s148_150)) (mem g_s150_152 (|+->| NAT g_s35_36)) (mem g_s150_152 (perm g_s148_150)) (subset g_s151_153 g_s36_37) (mem g_s152_154 g_s36_37) (not (mem g_s152_154 g_s151_153)) (mem g_s153_155 (|+->| NAT g_s36_37)) (mem g_s153_155 (perm g_s151_153)) (subset g_s154_156 g_s37_38) (mem g_s155_157 g_s37_38) (not (mem g_s155_157 g_s154_156)) (mem g_s156_158 (|+->| NAT g_s37_38)) (mem g_s156_158 (perm g_s154_156)) (subset g_s157_159 g_s38_39) (mem g_s158_160 g_s38_39) (not (mem g_s158_160 g_s157_159)) (mem g_s159_161 (|+->| NAT g_s38_39)) (mem g_s159_161 (perm g_s157_159)) (subset g_s160_162 g_s39_40) (mem g_s161_163 g_s39_40) (not (mem g_s161_163 g_s160_162)) (mem g_s162_164 (|+->| NAT g_s39_40)) (mem g_s162_164 (perm g_s160_162)) (subset g_s163_165 g_s40_41) (mem g_s164_166 g_s40_41) (not (mem g_s164_166 g_s163_165)) (mem g_s165_167 (|+->| NAT g_s40_41)) (mem g_s165_167 (perm g_s163_165)) (subset g_s166_168 g_s41_42) (mem g_s167_169 g_s41_42) (not (mem g_s167_169 g_s166_168)) (mem g_s168_170 (|+->| NAT g_s41_42)) (mem g_s168_170 (perm g_s166_168)) (subset g_s169_171 g_s42_43) (mem g_s170_172 g_s42_43) (not (mem g_s170_172 g_s169_171)) (mem g_s171_173 (|+->| NAT g_s42_43)) (mem g_s171_173 (perm g_s169_171)) (subset g_s172_174 g_s43_44) (mem g_s173_175 g_s43_44) (not (mem g_s173_175 g_s172_174)) (subset g_s174_176 g_s44_45) (mem g_s175_177 g_s44_45) (not (mem g_s175_177 g_s174_176)) (mem g_s176_178 (|+->| NAT g_s44_45)) (mem g_s176_178 (perm g_s174_176)) (subset g_s177_179 g_s45_46) (mem g_s178_180 g_s45_46) (not (mem g_s178_180 g_s177_179)) (mem g_s179_181 (|+->| NAT g_s45_46)) (mem g_s179_181 (perm g_s177_179))))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (subset g_s180_182 g_s77_79) (subset g_s181_183 g_s104_106) (subset g_s182_184 g_s104_106) (subset g_s183_185 g_s110_112) (mem g_s184_186 (|+->| g_s110_112 g_s48_49)) (subset g_s185_187 g_s63_65) (subset g_s186_188 g_s119_121)))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s180$1_189 (POW g_s77_79)))
(define-fun lh_2 () Bool (mem g_s181$1_190 (POW g_s104_106)))
(define-fun lh_3 () Bool (mem g_s182$1_191 (POW g_s104_106)))
(define-fun lh_4 () Bool (mem g_s183$1_192 (POW g_s110_112)))
(define-fun lh_5 () Bool (mem g_s184$1_193 (|+->| g_s110_112 g_s48_49)))
(define-fun lh_6 () Bool (mem g_s185$1_194 (POW g_s63_65)))
(define-fun lh_7 () Bool (mem g_s186$1_195 (POW g_s119_121)))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (subset g_s185$1_194 g_s63_65))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (subset g_s180$1_189 g_s77_79))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (subset g_s181$1_190 g_s104_106))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (subset g_s182$1_191 g_s104_106))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (subset g_s183$1_192 g_s110_112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (subset g_s186$1_195 g_s119_121))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s190_196 g_s6_7))
(assert (mem g_s190_196 g_s77_79))
(define-fun lh_1 () Bool (mem g_s180$1_189 (POW g_s77_79)))
; PO 1 in group 1
(assert (not (=> lh_1 (subset g_s180$1_189 g_s77_79))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s192_197 g_s18_19))
(assert (mem g_s192_197 g_s104_106))
(define-fun lh_1 () Bool (mem g_s181$1_190 (POW g_s104_106)))
; PO 1 in group 2
(assert (not (=> lh_1 (subset g_s181$1_190 g_s104_106))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s192_197 g_s18_19))
(assert (mem g_s192_197 g_s104_106))
(define-fun lh_1 () Bool (mem g_s182$1_191 (POW g_s104_106)))
; PO 1 in group 3
(assert (not (=> lh_1 (subset g_s182$1_191 g_s104_106))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s195_198 g_s20_21))
(assert (mem g_s195_198 g_s110_112))
(define-fun lh_1 () Bool (mem g_s183$1_192 (POW g_s110_112)))
; PO 1 in group 4
(assert (not (=> lh_1 (subset g_s183$1_192 g_s110_112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s197_199 g_s2_3))
(assert (mem g_s197_199 g_s63_65))
(define-fun lh_1 () Bool (mem g_s185$1_194 (POW g_s63_65)))
; PO 1 in group 5
(assert (not (=> lh_1 (subset g_s185$1_194 g_s63_65))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s199_200 g_s23_24))
(assert (mem g_s199_200 g_s119_121))
(define-fun lh_1 () Bool (mem g_s186$1_195 (POW g_s119_121)))
; PO 1 in group 6
(assert (not (=> lh_1 (subset g_s186$1_195 g_s119_121))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s195_198 g_s20_21))
(assert (mem g_s195_198 g_s110_112))
(define-fun lh_1 () Bool (mem g_s195_198 (dom g_s184_186)))
(define-fun lh_2 () Bool (mem g_s201$1_201 g_s46_48))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2) (mem g_s184_186 (|+->| (dom g_s184_186) (ran g_s184_186))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s195_198 g_s20_21))
(assert (mem g_s195_198 g_s110_112))
(assert (mem g_s195_198 (dom g_s184_186)))
(define-fun lh_1 () Bool (mem g_s201$1_201 g_s46_48))
; PO 1 in group 8
(assert (not (=> lh_1 (mem g_s184_186 (|+->| (dom g_s184_186) (ran g_s184_186))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)