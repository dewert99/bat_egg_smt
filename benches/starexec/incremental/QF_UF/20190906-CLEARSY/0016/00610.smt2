(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e141 () U)
(declare-fun e256 () U)
(declare-fun e258 () U)
(declare-fun e260 () U)
(declare-fun e262 () U)
(declare-fun e264 () U)
(declare-fun e266 () U)
(declare-fun e268 () U)
(declare-fun e270 () U)
(declare-fun e272 () U)
(declare-fun e274 () U)
(declare-fun e276 () U)
(declare-fun e278 () U)
(declare-fun e280 () U)
(declare-fun e282 () U)
(declare-fun e284 () U)
(declare-fun e286 () U)
(declare-fun e288 () U)
(declare-fun e290 () U)
(declare-fun e292 () U)
(declare-fun e294 () U)
(declare-fun e296 () U)
(declare-fun e298 () U)
(declare-fun e300 () U)
(declare-fun e302 () U)
(declare-fun e304 () U)
(declare-fun e306 () U)
(declare-fun e308 () U)
(declare-fun e310 () U)
(declare-fun e312 () U)
(declare-fun e314 () U)
(declare-fun e316 () U)
(declare-fun e318 () U)
(declare-fun e320 () U)
(declare-fun e322 () U)
(declare-fun e324 () U)
(declare-fun e326 () U)
(declare-fun e328 () U)
(declare-fun e330 () U)
(declare-fun e332 () U)
(declare-fun e334 () U)
(declare-fun e336 () U)
(declare-fun e338 () U)
(declare-fun e340 () U)
(declare-fun e342 () U)
(declare-fun e344 () U)
(declare-fun e346 () U)
(declare-fun e348 () U)
(declare-fun e350 () U)
(declare-fun e352 () U)
(declare-fun e354 () U)
(declare-fun e356 () U)
(declare-fun e358 () U)
(declare-fun e360 () U)
(declare-fun e362 () U)
(declare-fun e364 () U)
(declare-fun e366 () U)
(declare-fun e368 () U)
(declare-fun e370 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_143 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_144 () U)
(declare-fun g_s143_145 () U)
(declare-fun g_s144_146 () U)
(declare-fun g_s145_147 () U)
(declare-fun g_s146_148 () U)
(declare-fun g_s147_149 () U)
(declare-fun g_s148_150 () U)
(declare-fun g_s149_151 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_152 () U)
(declare-fun g_s151_153 () U)
(declare-fun g_s152_154 () U)
(declare-fun g_s153_155 () U)
(declare-fun g_s154_156 () U)
(declare-fun g_s155_157 () U)
(declare-fun g_s156_158 () U)
(declare-fun g_s157_159 () U)
(declare-fun g_s158_160 () U)
(declare-fun g_s159_161 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_162 () U)
(declare-fun g_s161_163 () U)
(declare-fun g_s162_164 () U)
(declare-fun g_s163_165 () U)
(declare-fun g_s164_166 () U)
(declare-fun g_s165_167 () U)
(declare-fun g_s166_168 () U)
(declare-fun g_s167_169 () U)
(declare-fun g_s168_170 () U)
(declare-fun g_s169_171 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_172 () U)
(declare-fun g_s171_173 () U)
(declare-fun g_s172_174 () U)
(declare-fun g_s173_175 () U)
(declare-fun g_s174_176 () U)
(declare-fun g_s175_177 () U)
(declare-fun g_s176_178 () U)
(declare-fun g_s177_179 () U)
(declare-fun g_s178_180 () U)
(declare-fun g_s179_181 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_182 () U)
(declare-fun g_s181_183 () U)
(declare-fun g_s182_184 () U)
(declare-fun g_s183_185 () U)
(declare-fun g_s184_186 () U)
(declare-fun g_s185_187 () U)
(declare-fun g_s186_188 () U)
(declare-fun g_s187_189 () U)
(declare-fun g_s188_190 () U)
(declare-fun g_s189_191 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_192 () U)
(declare-fun g_s191_193 () U)
(declare-fun g_s192_194 () U)
(declare-fun g_s193_195 () U)
(declare-fun g_s194_196 () U)
(declare-fun g_s195_197 () U)
(declare-fun g_s196_198 () U)
(declare-fun g_s197_199 () U)
(declare-fun g_s198_200 () U)
(declare-fun g_s199_201 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_202 () U)
(declare-fun g_s201_203 () U)
(declare-fun g_s202_204 () U)
(declare-fun g_s203_205 () U)
(declare-fun g_s204_206 () U)
(declare-fun g_s205_207 () U)
(declare-fun g_s206_208 () U)
(declare-fun g_s207_209 () U)
(declare-fun g_s208_210 () U)
(declare-fun g_s209_211 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_212 () U)
(declare-fun g_s211_213 () U)
(declare-fun g_s212_214 () U)
(declare-fun g_s213_215 () U)
(declare-fun g_s214_216 () U)
(declare-fun g_s215_217 () U)
(declare-fun g_s216_218 () U)
(declare-fun g_s217_219 () U)
(declare-fun g_s218_220 () U)
(declare-fun g_s219_221 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_222 () U)
(declare-fun g_s221_223 () U)
(declare-fun g_s222_224 () U)
(declare-fun g_s223_225 () U)
(declare-fun g_s224_226 () U)
(declare-fun g_s225_227 () U)
(declare-fun g_s226_228 () U)
(declare-fun g_s227_229 () U)
(declare-fun g_s228_230 () U)
(declare-fun g_s229_232 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_231 () U)
(declare-fun g_s231_233 () U)
(declare-fun g_s232_234 () U)
(declare-fun g_s233_235 () U)
(declare-fun g_s234_236 () U)
(declare-fun g_s235_237 () U)
(declare-fun g_s236_238 () U)
(declare-fun g_s237_239 () U)
(declare-fun g_s238_240 () U)
(declare-fun g_s239_241 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_242 () U)
(declare-fun g_s241_243 () U)
(declare-fun g_s242_244 () U)
(declare-fun g_s243_245 () U)
(declare-fun g_s244_246 () U)
(declare-fun g_s245_247 () U)
(declare-fun g_s246_248 () U)
(declare-fun g_s247_249 () U)
(declare-fun g_s248_250 () U)
(declare-fun g_s249_251 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_252 () U)
(declare-fun g_s251_253 () U)
(declare-fun g_s252_254 () U)
(declare-fun g_s253_255 () U)
(declare-fun g_s254_257 () U)
(declare-fun g_s255_259 () U)
(declare-fun g_s256_261 () U)
(declare-fun g_s257_263 () U)
(declare-fun g_s258_265 () U)
(declare-fun g_s259_267 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_269 () U)
(declare-fun g_s261_271 () U)
(declare-fun g_s262_273 () U)
(declare-fun g_s263_275 () U)
(declare-fun g_s264_277 () U)
(declare-fun g_s265_279 () U)
(declare-fun g_s266_281 () U)
(declare-fun g_s267_283 () U)
(declare-fun g_s268_285 () U)
(declare-fun g_s269_287 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_289 () U)
(declare-fun g_s271_291 () U)
(declare-fun g_s272_293 () U)
(declare-fun g_s273_295 () U)
(declare-fun g_s274_297 () U)
(declare-fun g_s275_299 () U)
(declare-fun g_s276_301 () U)
(declare-fun g_s277_303 () U)
(declare-fun g_s278_305 () U)
(declare-fun g_s279_307 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_309 () U)
(declare-fun g_s281_311 () U)
(declare-fun g_s282_313 () U)
(declare-fun g_s283_315 () U)
(declare-fun g_s284_317 () U)
(declare-fun g_s285_319 () U)
(declare-fun g_s286_321 () U)
(declare-fun g_s287_323 () U)
(declare-fun g_s288_325 () U)
(declare-fun g_s289_327 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_329 () U)
(declare-fun g_s291_331 () U)
(declare-fun g_s292_333 () U)
(declare-fun g_s293_335 () U)
(declare-fun g_s294_337 () U)
(declare-fun g_s295_339 () U)
(declare-fun g_s296_341 () U)
(declare-fun g_s297_343 () U)
(declare-fun g_s298_345 () U)
(declare-fun g_s299_347 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_349 () U)
(declare-fun g_s301_351 () U)
(declare-fun g_s302_353 () U)
(declare-fun g_s303_355 () U)
(declare-fun g_s304_357 () U)
(declare-fun g_s305_359 () U)
(declare-fun g_s306_361 () U)
(declare-fun g_s307_363 () U)
(declare-fun g_s308_365 () U)
(declare-fun g_s309_367 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_369 () U)
(declare-fun g_s311_371 () U)
(declare-fun g_s312_372 () U)
(declare-fun g_s313_373 () U)
(declare-fun g_s314_374 () U)
(declare-fun g_s315_375 () U)
(declare-fun g_s316_376 () U)
(declare-fun g_s317_377 () U)
(declare-fun g_s318_378 () U)
(declare-fun g_s319_379 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_380 () U)
(declare-fun g_s321_381 () U)
(declare-fun g_s322_382 () U)
(declare-fun g_s323_383 () U)
(declare-fun g_s324_384 () U)
(declare-fun g_s325_385 () U)
(declare-fun g_s326_386 () U)
(declare-fun g_s327_387 () U)
(declare-fun g_s328_388 () U)
(declare-fun g_s329_389 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_390 () U)
(declare-fun g_s331_391 () U)
(declare-fun g_s332_392 () U)
(declare-fun g_s333_393 () U)
(declare-fun g_s334_394 () U)
(declare-fun g_s335_395 () U)
(declare-fun g_s336_396 () U)
(declare-fun g_s337_397 () U)
(declare-fun g_s338_398 () U)
(declare-fun g_s339_399 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_400 () U)
(declare-fun g_s341_401 () U)
(declare-fun g_s342_402 () U)
(declare-fun g_s343_403 () U)
(declare-fun g_s344_404 () U)
(declare-fun g_s345_405 () U)
(declare-fun g_s346_406 () U)
(declare-fun g_s347_407 () U)
(declare-fun g_s348_408 () U)
(declare-fun g_s349_409 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_410 () U)
(declare-fun g_s351_411 () U)
(declare-fun g_s352_412 () U)
(declare-fun g_s353_413 () U)
(declare-fun g_s354_414 () U)
(declare-fun g_s355_415 () U)
(declare-fun g_s356_416 () U)
(declare-fun g_s357_417 () U)
(declare-fun g_s358_418 () U)
(declare-fun g_s359_419 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_420 () U)
(declare-fun g_s361_421 () U)
(declare-fun g_s362_422 () U)
(declare-fun g_s363_423 () U)
(declare-fun g_s364_424 () U)
(declare-fun g_s365_425 () U)
(declare-fun g_s366_426 () U)
(declare-fun g_s367_427 () U)
(declare-fun g_s368_428 () U)
(declare-fun g_s369_429 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_430 () U)
(declare-fun g_s371_431 () U)
(declare-fun g_s372_432 () U)
(declare-fun g_s373_433 () U)
(declare-fun g_s374_434 () U)
(declare-fun g_s375_435 () U)
(declare-fun g_s376_436 () U)
(declare-fun g_s377_437 () U)
(declare-fun g_s378_438 () U)
(declare-fun g_s379_439 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_440 () U)
(declare-fun g_s381_441 () U)
(declare-fun g_s382_442 () U)
(declare-fun g_s383_443 () U)
(declare-fun g_s384_444 () U)
(declare-fun g_s385_445 () U)
(declare-fun g_s386_446 () U)
(declare-fun g_s387_447 () U)
(declare-fun g_s388_448 () U)
(declare-fun g_s389_449 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_450 () U)
(declare-fun g_s391_451 () U)
(declare-fun g_s392_452 () U)
(declare-fun g_s393_453 () U)
(declare-fun g_s394_454 () U)
(declare-fun g_s395_455 () U)
(declare-fun g_s396_456 () U)
(declare-fun g_s397_457 () U)
(declare-fun g_s398_458 () U)
(declare-fun g_s399_459 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_460 () U)
(declare-fun g_s401_461 () U)
(declare-fun g_s402_462 () U)
(declare-fun g_s403_463 () U)
(declare-fun g_s404_464 () U)
(declare-fun g_s405_465 () U)
(declare-fun g_s406_466 () U)
(declare-fun g_s407_467 () U)
(declare-fun g_s408_468 () U)
(declare-fun g_s409_469 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_470 () U)
(declare-fun g_s411_471 () U)
(declare-fun g_s412_472 () U)
(declare-fun g_s413_473 () U)
(declare-fun g_s414_474 () U)
(declare-fun g_s415_475 () U)
(declare-fun g_s416_476 () U)
(declare-fun g_s417_477 () U)
(declare-fun g_s418_478 () U)
(declare-fun g_s419_479 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_480 () U)
(declare-fun g_s421_481 () U)
(declare-fun g_s422_482 () U)
(declare-fun g_s423_483 () U)
(declare-fun g_s424_484 () U)
(declare-fun g_s425_485 () U)
(declare-fun g_s426_486 () U)
(declare-fun g_s427_487 () U)
(declare-fun g_s428_488 () U)
(declare-fun g_s429_489 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430_490 () U)
(declare-fun g_s431_491 () U)
(declare-fun g_s432_492 () U)
(declare-fun g_s433_493 () U)
(declare-fun g_s434_494 () U)
(declare-fun g_s435_495 () U)
(declare-fun g_s436_496 () U)
(declare-fun g_s437_497 () U)
(declare-fun g_s438_498 () U)
(declare-fun g_s439_499 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s440_500 () U)
(declare-fun g_s441_501 () U)
(declare-fun g_s442_502 () U)
(declare-fun g_s443_503 () U)
(declare-fun g_s444_504 () U)
(declare-fun g_s445_505 () U)
(declare-fun g_s446_506 () U)
(declare-fun g_s447_507 () U)
(declare-fun g_s448_508 () U)
(declare-fun g_s449_509 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s450_510 () U)
(declare-fun g_s451_511 () U)
(declare-fun g_s452_512 () U)
(declare-fun g_s453_513 () U)
(declare-fun g_s454_514 () U)
(declare-fun g_s455_515 () U)
(declare-fun g_s456_516 () U)
(declare-fun g_s457_517 () U)
(declare-fun g_s458_518 () U)
(declare-fun g_s459_519 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s460_520 () U)
(declare-fun g_s461_521 () U)
(declare-fun g_s462_522 () U)
(declare-fun g_s463_523 () U)
(declare-fun g_s464_524 () U)
(declare-fun g_s465_525 () U)
(declare-fun g_s466_526 () U)
(declare-fun g_s467_527 () U)
(declare-fun g_s468_528 () U)
(declare-fun g_s469_529 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s470_530 () U)
(declare-fun g_s471_531 () U)
(declare-fun g_s472_532 () U)
(declare-fun g_s473_533 () U)
(declare-fun g_s474_534 () U)
(declare-fun g_s475_535 () U)
(declare-fun g_s476_536 () U)
(declare-fun g_s477_537 () U)
(declare-fun g_s478_538 () U)
(declare-fun g_s479_539 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s480_540 () U)
(declare-fun g_s481_541 () U)
(declare-fun g_s482_542 () U)
(declare-fun g_s483_543 () U)
(declare-fun g_s484_544 () U)
(declare-fun g_s485_545 () U)
(declare-fun g_s486_546 () U)
(declare-fun g_s487_547 () U)
(declare-fun g_s488_548 () U)
(declare-fun g_s489_549 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s490_550 () U)
(declare-fun g_s491_551 () U)
(declare-fun g_s492_552 () U)
(declare-fun g_s493_553 () U)
(declare-fun g_s494_554 () U)
(declare-fun g_s495_555 () U)
(declare-fun g_s496_556 () U)
(declare-fun g_s497_557 () U)
(declare-fun g_s498_558 () U)
(declare-fun g_s499_559 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s500_560 () U)
(declare-fun g_s501_561 () U)
(declare-fun g_s502_562 () U)
(declare-fun g_s503_563 () U)
(declare-fun g_s504_564 () U)
(declare-fun g_s505_565 () U)
(declare-fun g_s506_566 () U)
(declare-fun g_s507_567 () U)
(declare-fun g_s508_568 () U)
(declare-fun g_s509_569 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s510_570 () U)
(declare-fun g_s511_571 () U)
(declare-fun g_s512_572 () U)
(declare-fun g_s513_573 () U)
(declare-fun g_s514_574 () U)
(declare-fun g_s515_575 () U)
(declare-fun g_s516_576 () U)
(declare-fun g_s517_577 () U)
(declare-fun g_s518_578 () U)
(declare-fun g_s519_579 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s520_580 () U)
(declare-fun g_s521_581 () U)
(declare-fun g_s522_582 () U)
(declare-fun g_s523_583 () U)
(declare-fun g_s524_584 () U)
(declare-fun g_s525_585 () U)
(declare-fun g_s526_586 () U)
(declare-fun g_s527_587 () U)
(declare-fun g_s528_588 () U)
(declare-fun g_s529_589 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s530_590 () U)
(declare-fun g_s531_591 () U)
(declare-fun g_s532_592 () U)
(declare-fun g_s533_593 () U)
(declare-fun g_s534_594 () U)
(declare-fun g_s535_595 () U)
(declare-fun g_s536_596 () U)
(declare-fun g_s537_597 () U)
(declare-fun g_s538_598 () U)
(declare-fun g_s539_599 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s540_600 () U)
(declare-fun g_s541_601 () U)
(declare-fun g_s542_602 () U)
(declare-fun g_s543_603 () U)
(declare-fun g_s544_604 () U)
(declare-fun g_s545_605 () U)
(declare-fun g_s546_606 () U)
(declare-fun g_s547_607 () U)
(declare-fun g_s548_608 () U)
(declare-fun g_s549_609 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s550_610 () U)
(declare-fun g_s551_611 () U)
(declare-fun g_s552_612 () U)
(declare-fun g_s553_613 () U)
(declare-fun g_s554_614 () U)
(declare-fun g_s555_615 () U)
(declare-fun g_s556_616 () U)
(declare-fun g_s557_617 () U)
(declare-fun g_s558_618 () U)
(declare-fun g_s559_619 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s560_620 () U)
(declare-fun g_s561_621 () U)
(declare-fun g_s562_622 () U)
(declare-fun g_s563_623 () U)
(declare-fun g_s564_624 () U)
(declare-fun g_s565_625 () U)
(declare-fun g_s566_626 () U)
(declare-fun g_s567_627 () U)
(declare-fun g_s568_628 () U)
(declare-fun g_s569_629 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s570_630 () U)
(declare-fun g_s571_631 () U)
(declare-fun g_s572_632 () U)
(declare-fun g_s573_633 () U)
(declare-fun g_s574_634 () U)
(declare-fun g_s575_635 () U)
(declare-fun g_s576_636 () U)
(declare-fun g_s577_637 () U)
(declare-fun g_s578_638 () U)
(declare-fun g_s579_639 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s580_640 () U)
(declare-fun g_s581_641 () U)
(declare-fun g_s582_642 () U)
(declare-fun g_s583_643 () U)
(declare-fun g_s584_644 () U)
(declare-fun g_s585_645 () U)
(declare-fun g_s586_646 () U)
(declare-fun g_s587_647 () U)
(declare-fun g_s588_648 () U)
(declare-fun g_s589_649 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s590_650 () U)
(declare-fun g_s591_651 () U)
(declare-fun g_s592_652 () U)
(declare-fun g_s593_653 () U)
(declare-fun g_s594_654 () U)
(declare-fun g_s595_655 () U)
(declare-fun g_s596_656 () U)
(declare-fun g_s597_657 () U)
(declare-fun g_s598_658 () U)
(declare-fun g_s599_659 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s600_660 () U)
(declare-fun g_s601_661 () U)
(declare-fun g_s602_662 () U)
(declare-fun g_s603_663 () U)
(declare-fun g_s604_664 () U)
(declare-fun g_s605_665 () U)
(declare-fun g_s606_666 () U)
(declare-fun g_s607_667 () U)
(declare-fun g_s608_668 () U)
(declare-fun g_s609_669 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s610_670 () U)
(declare-fun g_s611_671 () U)
(declare-fun g_s612_672 () U)
(declare-fun g_s613_673 () U)
(declare-fun g_s614_674 () U)
(declare-fun g_s615_675 () U)
(declare-fun g_s616_676 () U)
(declare-fun g_s617_677 () U)
(declare-fun g_s618_678 () U)
(declare-fun g_s619_679 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s620_680 () U)
(declare-fun g_s621_681 () U)
(declare-fun g_s622_682 () U)
(declare-fun g_s623_683 () U)
(declare-fun g_s624_684 () U)
(declare-fun g_s625_685 () U)
(declare-fun g_s626_686 () U)
(declare-fun g_s627_687 () U)
(declare-fun g_s628_688 () U)
(declare-fun g_s629_689 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s630_690 () U)
(declare-fun g_s631_691 () U)
(declare-fun g_s632_692 () U)
(declare-fun g_s633_693 () U)
(declare-fun g_s634_694 () U)
(declare-fun g_s635_695 () U)
(declare-fun g_s636_696 () U)
(declare-fun g_s637_697 () U)
(declare-fun g_s638_698 () U)
(declare-fun g_s639_699 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s640_700 () U)
(declare-fun g_s641_701 () U)
(declare-fun g_s642_702 () U)
(declare-fun g_s643_703 () U)
(declare-fun g_s644_704 () U)
(declare-fun g_s645_705 () U)
(declare-fun g_s646_706 () U)
(declare-fun g_s647_707 () U)
(declare-fun g_s648_708 () U)
(declare-fun g_s649_709 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s650_710 () U)
(declare-fun g_s651_711 () U)
(declare-fun g_s652_712 () U)
(declare-fun g_s653_713 () U)
(declare-fun g_s654_714 () U)
(declare-fun g_s655_715 () U)
(declare-fun g_s656_716 () U)
(declare-fun g_s657_717 () U)
(declare-fun g_s658_718 () U)
(declare-fun g_s659_719 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s660_720 () U)
(declare-fun g_s661_721 () U)
(declare-fun g_s662_722 () U)
(declare-fun g_s663_723 () U)
(declare-fun g_s664_724 () U)
(declare-fun g_s665_725 () U)
(declare-fun g_s666_726 () U)
(declare-fun g_s667_727 () U)
(declare-fun g_s668_728 () U)
(declare-fun g_s669_729 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s670_730 () U)
(declare-fun g_s671_731 () U)
(declare-fun g_s672_732 () U)
(declare-fun g_s673_733 () U)
(declare-fun g_s674_734 () U)
(declare-fun g_s675_735 () U)
(declare-fun g_s676_736 () U)
(declare-fun g_s677_737 () U)
(declare-fun g_s678_738 () U)
(declare-fun g_s679_739 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s680_740 () U)
(declare-fun g_s681_741 () U)
(declare-fun g_s682_742 () U)
(declare-fun g_s683_743 () U)
(declare-fun g_s684_744 () U)
(declare-fun g_s685_745 () U)
(declare-fun g_s686_746 () U)
(declare-fun g_s687_747 () U)
(declare-fun g_s688_748 () U)
(declare-fun g_s689_749 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s690_750 () U)
(declare-fun g_s691_751 () U)
(declare-fun g_s692_752 () U)
(declare-fun g_s693_753 () U)
(declare-fun g_s694_754 () U)
(declare-fun g_s695_755 () U)
(declare-fun g_s696_756 () U)
(declare-fun g_s697_757 () U)
(declare-fun g_s698_758 () U)
(declare-fun g_s699_759 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s700_760 () U)
(declare-fun g_s701_761 () U)
(declare-fun g_s702_762 () U)
(declare-fun g_s703_763 () U)
(declare-fun g_s704_764 () U)
(declare-fun g_s705_765 () U)
(declare-fun g_s706_766 () U)
(declare-fun g_s707_767 () U)
(declare-fun g_s708_768 () U)
(declare-fun g_s709_769 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s710_770 () U)
(declare-fun g_s711_771 () U)
(declare-fun g_s712_772 () U)
(declare-fun g_s713_773 () U)
(declare-fun g_s714_774 () U)
(declare-fun g_s715_775 () U)
(declare-fun g_s716_776 () U)
(declare-fun g_s717_777 () U)
(declare-fun g_s718_778 () U)
(declare-fun g_s719_779 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s720_780 () U)
(declare-fun g_s721_781 () U)
(declare-fun g_s722_782 () U)
(declare-fun g_s723_783 () U)
(declare-fun g_s724_784 () U)
(declare-fun g_s725_785 () U)
(declare-fun g_s726_786 () U)
(declare-fun g_s727_787 () U)
(declare-fun g_s728_788 () U)
(declare-fun g_s729_789 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s730_790 () U)
(declare-fun g_s731_791 () U)
(declare-fun g_s732_792 () U)
(declare-fun g_s733_793 () U)
(declare-fun g_s734_794 () U)
(declare-fun g_s735_795 () U)
(declare-fun g_s736_796 () U)
(declare-fun g_s737_797 () U)
(declare-fun g_s738_798 () U)
(declare-fun g_s739_799 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s740_800 () U)
(declare-fun g_s741_801 () U)
(declare-fun g_s742_802 () U)
(declare-fun g_s743_803 () U)
(declare-fun g_s744_804 () U)
(declare-fun g_s745_805 () U)
(declare-fun g_s746_806 () U)
(declare-fun g_s747_807 () U)
(declare-fun g_s748_808 () U)
(declare-fun g_s749_809 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s750_810 () U)
(declare-fun g_s751_811 () U)
(declare-fun g_s752_812 () U)
(declare-fun g_s753_813 () U)
(declare-fun g_s754_814 () U)
(declare-fun g_s755_815 () U)
(declare-fun g_s756_816 () U)
(declare-fun g_s757_817 () U)
(declare-fun g_s758_818 () U)
(declare-fun g_s759_819 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s760_820 () U)
(declare-fun g_s761_821 () U)
(declare-fun g_s762_822 () U)
(declare-fun g_s763_823 () U)
(declare-fun g_s764_824 () U)
(declare-fun g_s765_825 () U)
(declare-fun g_s766_826 () U)
(declare-fun g_s767_827 () U)
(declare-fun g_s768_828 () U)
(declare-fun g_s769_829 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s770_830 () U)
(declare-fun g_s771_831 () U)
(declare-fun g_s772_832 () U)
(declare-fun g_s773_833 () U)
(declare-fun g_s775$1_840 () U)
(declare-fun g_s775$2_843 () U)
(declare-fun g_s775$3_850 () U)
(declare-fun g_s775$4_857 () U)
(declare-fun g_s775$5_864 () U)
(declare-fun g_s775$6_871 () U)
(declare-fun g_s776$1_835 () U)
(declare-fun g_s776$2_844 () U)
(declare-fun g_s776$3_851 () U)
(declare-fun g_s776$4_858 () U)
(declare-fun g_s776$5_865 () U)
(declare-fun g_s776$6_872 () U)
(declare-fun g_s777$1_836 () U)
(declare-fun g_s777$2_845 () U)
(declare-fun g_s777$3_852 () U)
(declare-fun g_s777$4_859 () U)
(declare-fun g_s777$5_866 () U)
(declare-fun g_s777$6_873 () U)
(declare-fun g_s778$1_837 () U)
(declare-fun g_s778$2_846 () U)
(declare-fun g_s778$3_853 () U)
(declare-fun g_s778$4_860 () U)
(declare-fun g_s778$5_867 () U)
(declare-fun g_s778$6_874 () U)
(declare-fun g_s779$1_838 () U)
(declare-fun g_s779$2_847 () U)
(declare-fun g_s779$3_854 () U)
(declare-fun g_s779$4_861 () U)
(declare-fun g_s779$5_868 () U)
(declare-fun g_s779$6_875 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s780$1_839 () U)
(declare-fun g_s780$2_848 () U)
(declare-fun g_s780$3_855 () U)
(declare-fun g_s780$4_862 () U)
(declare-fun g_s780$5_869 () U)
(declare-fun g_s780$6_876 () U)
(declare-fun g_s784$1_842 () U)
(declare-fun g_s784$2_849 () U)
(declare-fun g_s784$3_856 () U)
(declare-fun g_s784$4_863 () U)
(declare-fun g_s784$5_870 () U)
(declare-fun g_s787_878 () U)
(declare-fun g_s787$1_879 () U)
(declare-fun g_s788_880 () U)
(declare-fun g_s789_881 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s791_882 () U)
(declare-fun g_s791$1_883 () U)
(declare-fun g_s793_884 () U)
(declare-fun g_s793$1_885 () U)
(declare-fun g_s795_886 () U)
(declare-fun g_s795$1_887 () U)
(declare-fun g_s796_888 () U)
(declare-fun g_s798_889 () U)
(declare-fun g_s798$1_890 () U)
(declare-fun g_s799_891 () U)
(declare-fun g_s799$1_892 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s803_893 () U)
(declare-fun g_s803$1_894 () U)
(declare-fun g_s805_895 () U)
(declare-fun g_s805$1_896 () U)
(declare-fun g_s807_897 () U)
(declare-fun g_s807$1_898 () U)
(declare-fun g_s809_899 () U)
(declare-fun g_s809$1_900 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s810_901 () U)
(declare-fun g_s810$1_902 () U)
(declare-fun g_s814_903 () U)
(declare-fun g_s814$1_904 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
(declare-fun e834 () U)
(declare-fun e877 () U)
(declare-fun e841 () U)
(declare-fun e139 () U)
(declare-fun e138 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (= g_s8_9 (SET (mapplet g_s10_11 g_s9_10))) (= g_s11_12 (SET (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 g_s12_13))))) (= g_s16_17 (SET (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 g_s17_18))))) (= g_s21_22 (SET (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 g_s22_23)))))))))) (= g_s31_32 (SET (mapplet g_s34_35 (mapplet g_s33_34 g_s32_33)))) (= g_s35_36 (SET (mapplet g_s37_38 g_s36_37))) (= g_s38_39 (SET (mapplet g_s41_42 (mapplet g_s40_41 g_s39_40)))) (= g_s42_43 (SET (mapplet g_s44_45 g_s43_44))) (= g_s45_46 (SET (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 g_s46_47))))) (= g_s50_51 (SET (mapplet g_s52_53 g_s51_52))) (= g_s53_54 (SET (mapplet g_s56_57 (mapplet g_s55_56 g_s54_55)))) (= g_s57_58 (SET (mapplet g_s60_61 (mapplet g_s59_60 g_s58_59)))) (= g_s61_62 (SET (mapplet g_s63_64 g_s62_63))) (= g_s64_65 (SET (mapplet g_s67_68 (mapplet g_s66_67 g_s65_66)))) (= g_s68_69 (SET (mapplet g_s73_74 (mapplet g_s72_73 (mapplet g_s71_72 (mapplet g_s70_71 g_s69_70)))))) (= g_s74_75 (SET (mapplet g_s77_78 (mapplet g_s76_77 g_s75_76)))) (= g_s78_79 (SET (mapplet g_s81_82 (mapplet g_s80_81 g_s79_80)))) (= g_s82_83 (SET (mapplet g_s85_86 (mapplet g_s84_85 g_s83_84)))) (= g_s86_87 (SET (mapplet g_s89_90 (mapplet g_s88_89 g_s87_88)))) (= g_s90_91 (SET (mapplet g_s93_94 (mapplet g_s92_93 g_s91_92)))) (= g_s94_95 (SET (mapplet g_s101_102 (mapplet g_s100_101 (mapplet g_s99_100 (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 g_s95_96)))))))) (not (= g_s102_103 empty)) (not (= g_s103_104 empty)) (not (= g_s104_105 empty)) (not (= g_s105_106 empty)) (not (= g_s106_107 empty)) (not (= g_s107_108 empty)) (not (= g_s108_109 empty)) (not (= g_s109_110 empty)) (not (= g_s110_111 empty)) (not (= g_s111_112 empty)) (= g_s112_113 (SET (mapplet g_s114_115 g_s113_114))) (not (= g_s115_116 empty)) (not (= g_s116_117 empty)) (not (= g_s117_118 empty)) (not (= g_s118_119 empty)) (not (= g_s119_120 empty)) (not (= g_s120_121 empty)) (not (= g_s121_122 empty)) (not (= g_s122_123 empty)) (not (= g_s123_124 empty)) (not (= g_s124_125 empty)) (not (= g_s125_126 empty)) (not (= g_s126_127 empty)) (not (= g_s127_128 empty)) (not (= g_s128_129 empty)) (not (= g_s129_130 empty)) (not (= g_s130_131 empty)) (not (= g_s131_132 empty)) (not (= g_s132_133 empty)) (not (= g_s133_134 empty)) (not (= g_s134_135 empty)) (not (= g_s135_136 empty)) (mem g_s136_137 (|-->| (set_prod INTEGER NATURAL) INTEGER)) (= g_s136_137 (binary_union e139 e138)) (mem g_s139_140 (|-->| BOOL NAT)) (= g_s139_140 (SET (mapplet (mapplet FALSE e0) (mapplet TRUE e141)))) (= g_s140_143 (interval (iuminus g_s141_142) g_s141_142)) (= g_s142_144 (interval e0 g_s141_142)) (= g_s143_145 (interval e141 g_s141_142)) (subset g_s143_145 g_s142_144) (subset g_s142_144 g_s140_143) (subset g_s142_144 NAT) (subset g_s143_145 NAT1) (subset g_s140_143 INT) (mem g_s144_146 g_s140_143) (mem g_s144_146 g_s142_144) (not (mem g_s144_146 g_s143_145)) (mem g_s145_147 g_s140_143) (not (mem g_s145_147 g_s142_144)) (= g_s146_148 (interval (iuminus g_s141_142) g_s141_142)) (subset g_s146_148 INT) (subset g_s147_149 g_s102_103) (mem g_s148_150 g_s102_103) (mem g_s148_150 g_s147_149) (mem g_s149_151 g_s102_103) (not (mem g_s149_151 g_s147_149)) (mem g_s150_152 (|+->| NAT g_s102_103)) (mem g_s150_152 (perm g_s147_149)) (= (card g_s147_149) g_s151_153) (subset g_s152_154 g_s103_104) (mem g_s153_155 g_s103_104) (mem g_s153_155 g_s152_154) (mem g_s154_156 g_s103_104) (not (mem g_s154_156 g_s152_154)) (mem g_s155_157 (|+->| NAT g_s103_104)) (mem g_s155_157 (perm g_s152_154)) (= (card g_s152_154) g_s156_158) (subset g_s157_159 g_s104_105) (mem g_s158_160 g_s104_105) (not (mem g_s158_160 g_s157_159)) (mem g_s159_161 (|+->| NAT g_s104_105)) (mem g_s159_161 (perm g_s157_159)) (subset g_s160_162 g_s105_106) (mem g_s161_163 g_s105_106) (not (mem g_s161_163 g_s160_162)) (mem g_s162_164 (|+->| NAT g_s105_106)) (mem g_s162_164 (perm g_s160_162)) (subset g_s163_165 g_s106_107) (mem g_s164_166 g_s106_107) (not (mem g_s164_166 g_s163_165)) (mem g_s165_167 (|+->| NAT g_s106_107)) (mem g_s165_167 (perm g_s163_165)) (subset g_s166_168 g_s107_108) (mem g_s167_169 g_s107_108) (not (mem g_s167_169 g_s166_168)) (mem g_s168_170 (|+->| NAT g_s107_108)) (mem g_s168_170 (perm g_s166_168)) (= (card g_s166_168) g_s169_171) (subset g_s170_172 g_s108_109) (mem g_s171_173 g_s108_109) (not (mem g_s171_173 g_s170_172)) (mem g_s172_174 (|+->| NAT g_s108_109)) (mem g_s172_174 (perm g_s170_172)) (subset g_s173_175 g_s109_110) (mem g_s174_176 g_s109_110) (not (mem g_s174_176 g_s173_175)) (mem g_s175_177 (|+->| NAT g_s109_110)) (mem g_s175_177 (perm g_s173_175)) (= (card g_s173_175) g_s176_178) (subset g_s177_179 g_s110_111) (mem g_s178_180 g_s110_111) (not (mem g_s178_180 g_s177_179)) (mem g_s179_181 (|+->| NAT g_s110_111)) (mem g_s179_181 (perm g_s177_179)) (subset g_s180_182 g_s111_112) (mem g_s181_183 g_s111_112) (not (mem g_s181_183 g_s180_182)) (mem g_s182_184 (|+->| NAT g_s111_112)) (mem g_s182_184 (perm g_s180_182)) (subset g_s183_185 g_s115_116) (mem g_s184_186 g_s115_116) (not (mem g_s184_186 g_s183_185)) (mem g_s185_187 (|+->| NAT g_s115_116)) (mem g_s185_187 (perm g_s183_185)) (subset g_s186_188 g_s116_117) (mem g_s187_189 g_s116_117) (not (mem g_s187_189 g_s186_188)) (mem g_s188_190 (|+->| NAT g_s116_117)) (mem g_s188_190 (perm g_s186_188)) (subset g_s189_191 g_s117_118) (mem g_s190_192 g_s117_118) (not (mem g_s190_192 g_s189_191)) (mem g_s191_193 (|+->| NAT g_s117_118)) (mem g_s191_193 (perm g_s189_191)) (subset g_s192_194 g_s118_119) (mem g_s193_195 g_s118_119) (not (mem g_s193_195 g_s192_194)) (mem g_s194_196 (|+->| NAT g_s118_119)) (mem g_s194_196 (perm g_s192_194)) (subset g_s195_197 g_s119_120) (mem g_s196_198 g_s119_120) (not (mem g_s196_198 g_s195_197)) (mem g_s197_199 (|+->| NAT g_s119_120)) (mem g_s197_199 (perm g_s195_197)) (subset g_s198_200 g_s120_121) (mem g_s199_201 g_s120_121) (not (mem g_s199_201 g_s198_200)) (mem g_s200_202 (|+->| NAT g_s120_121)) (mem g_s200_202 (perm g_s198_200)) (subset g_s201_203 g_s121_122) (mem g_s202_204 g_s121_122) (not (mem g_s202_204 g_s201_203)) (mem g_s203_205 (|+->| NAT g_s121_122)) (mem g_s203_205 (perm g_s201_203)) (subset g_s204_206 g_s122_123) (mem g_s205_207 g_s122_123) (not (mem g_s205_207 g_s204_206)) (mem g_s206_208 (|+->| NAT g_s122_123)) (mem g_s206_208 (perm g_s204_206)) (subset g_s207_209 g_s123_124) (mem g_s208_210 g_s123_124) (not (mem g_s208_210 g_s207_209)) (mem g_s209_211 (|+->| NAT g_s123_124)) (mem g_s209_211 (perm g_s207_209)) (subset g_s210_212 g_s124_125) (mem g_s211_213 g_s124_125) (not (mem g_s211_213 g_s210_212)) (mem g_s212_214 (|+->| NAT g_s124_125)) (mem g_s212_214 (perm g_s210_212)) (subset g_s213_215 g_s125_126) (mem g_s214_216 g_s125_126) (not (mem g_s214_216 g_s213_215)) (subset g_s215_217 g_s126_127) (mem g_s216_218 g_s126_127) (not (mem g_s216_218 g_s215_217)) (mem g_s217_219 (|+->| NAT g_s126_127)) (mem g_s217_219 (perm g_s215_217)) (subset g_s218_220 g_s127_128) (mem g_s219_221 g_s127_128) (not (mem g_s219_221 g_s218_220)) (mem g_s220_222 (|+->| NAT g_s127_128)) (mem g_s220_222 (perm g_s218_220)) (subset g_s221_223 g_s128_129) (mem g_s222_224 g_s128_129) (not (mem g_s222_224 g_s221_223)) (subset g_s223_225 g_s129_130) (mem g_s224_226 g_s129_130) (not (mem g_s224_226 g_s223_225)) (subset g_s225_227 g_s130_131) (mem g_s226_228 g_s130_131) (not (mem g_s226_228 g_s225_227)) (subset g_s227_229 g_s131_132) (mem g_s228_230 g_s131_132) (not (mem g_s228_230 g_s227_229)) (subset g_s229_232 g_s230_231) (not (mem g_s231_233 g_s229_232)) (= g_s229_232 (SET (mapplet g_s234_236 (mapplet g_s233_235 g_s232_234)))) (mem g_s235_237 (|+->| g_s227_229 g_s225_227)) (mem g_s236_238 (|+->| g_s225_227 g_s227_229)) (subset g_s237_239 g_s132_133) (mem g_s238_240 g_s132_133) (not (mem g_s238_240 g_s237_239)) (mem g_s239_241 (|+->| NAT g_s132_133)) (mem g_s239_241 (perm g_s237_239)) (subset g_s240_242 g_s133_134) (mem g_s241_243 g_s133_134) (not (mem g_s241_243 g_s240_242)) (mem g_s242_244 (|+->| NAT g_s133_134)) (mem g_s242_244 (perm g_s240_242)) (subset g_s243_245 g_s134_135) (mem g_s244_246 g_s134_135) (not (mem g_s244_246 g_s243_245)) (mem g_s245_247 (|+->| NAT g_s134_135)) (mem g_s245_247 (perm g_s243_245)) (subset g_s246_248 g_s135_136) (mem g_s247_249 g_s135_136) (not (mem g_s247_249 g_s246_248)) (mem g_s248_250 (|+->| NAT g_s135_136)) (mem g_s248_250 (perm g_s246_248)) (mem g_s249_251 (|>->| g_s237_239 g_s152_154))))
(define-fun |def_seext| () Bool (and (= g_s250_252 TRUE) (= g_s251_253 FALSE) (= g_s252_254 e0) (= g_s253_255 e141) (= g_s254_257 e256) (= g_s255_259 e258) (= g_s256_261 e260) (= g_s257_263 e262) (= g_s258_265 e264) (= g_s259_267 e266) (= g_s260_269 e268) (= g_s261_271 e270) (= g_s262_273 e272) (= g_s263_275 e274) (= g_s264_277 e276) (= g_s265_279 e278) (= g_s266_281 e280) (= g_s267_283 e282) (= g_s268_285 e284) (= g_s269_287 e286) (= g_s270_289 e288) (= g_s271_291 e290) (= g_s272_293 e292) (= g_s273_295 e294) (= g_s274_297 e296) (= g_s275_299 e298) (= g_s276_301 e300) (= g_s277_303 e302) (= g_s278_305 e304) (= g_s279_307 e306) (= g_s280_309 e308) (= g_s281_311 e310) (= g_s282_313 e312) (= g_s283_315 e314) (= g_s284_317 e316) (= g_s285_319 e318) (= g_s286_321 e320) (= g_s287_323 e322) (= g_s288_325 e324) (= g_s289_327 e326) (= g_s290_329 e328) (= g_s291_331 e330) (= g_s292_333 e332) (= g_s293_335 e334) (= g_s294_337 e336) (= g_s295_339 e338) (= g_s296_341 e340) (= g_s297_343 e342) (= g_s298_345 e344) (= g_s299_347 e346) (= g_s300_349 e348) (= g_s301_351 e350) (= g_s302_353 e352) (= g_s303_355 e354) (= g_s304_357 e356) (= g_s305_359 e358) (= g_s306_361 e360) (= g_s307_363 e362) (= g_s308_365 e364) (= g_s309_367 e366) (= g_s310_369 e368) (= g_s311_371 e370) (mem g_s312_372 g_s0_1) (mem g_s313_373 g_s0_1) (mem g_s314_374 g_s0_1) (mem g_s315_375 g_s0_1) (mem g_s316_376 g_s0_1) (mem g_s317_377 g_s0_1) (mem g_s318_378 g_s0_1) (mem g_s319_379 g_s0_1) (mem g_s320_380 g_s0_1) (mem g_s321_381 g_s0_1) (mem g_s322_382 g_s0_1) (mem g_s323_383 g_s0_1) (mem g_s324_384 g_s0_1) (mem g_s325_385 g_s0_1) (mem g_s326_386 g_s0_1) (mem g_s327_387 g_s0_1) (mem g_s328_388 g_s0_1) (mem g_s329_389 g_s0_1) (mem g_s330_390 g_s0_1) (mem g_s331_391 g_s0_1) (mem g_s332_392 g_s0_1) (mem g_s333_393 g_s0_1) (mem g_s334_394 g_s0_1) (mem g_s335_395 g_s0_1) (mem g_s336_396 g_s0_1) (mem g_s337_397 g_s0_1) (mem g_s338_398 g_s0_1) (mem g_s339_399 g_s0_1) (mem g_s340_400 g_s0_1) (mem g_s341_401 g_s0_1) (mem g_s342_402 g_s0_1) (mem g_s343_403 g_s0_1) (mem g_s344_404 g_s0_1) (mem g_s345_405 g_s0_1) (mem g_s346_406 g_s0_1) (mem g_s347_407 g_s0_1) (mem g_s348_408 g_s0_1) (mem g_s349_409 g_s0_1) (mem g_s350_410 g_s0_1) (mem g_s351_411 g_s0_1) (mem g_s352_412 g_s0_1) (mem g_s353_413 g_s0_1) (mem g_s354_414 g_s0_1) (mem g_s355_415 g_s0_1) (mem g_s356_416 g_s0_1) (mem g_s357_417 g_s0_1) (mem g_s358_418 g_s0_1) (mem g_s359_419 g_s0_1) (mem g_s360_420 g_s0_1) (mem g_s361_421 g_s0_1) (mem g_s362_422 g_s0_1) (mem g_s363_423 g_s0_1) (mem g_s364_424 g_s0_1) (mem g_s365_425 g_s0_1) (mem g_s366_426 g_s0_1) (mem g_s367_427 g_s0_1) (mem g_s368_428 g_s0_1) (mem g_s369_429 g_s0_1) (mem g_s370_430 g_s0_1) (mem g_s371_431 g_s0_1) (mem g_s372_432 g_s0_1) (mem g_s373_433 g_s0_1) (mem g_s374_434 g_s0_1) (mem g_s375_435 g_s0_1) (mem g_s376_436 g_s0_1) (mem g_s377_437 g_s0_1) (mem g_s378_438 g_s0_1) (mem g_s379_439 g_s0_1) (mem g_s380_440 g_s0_1) (mem g_s381_441 g_s0_1) (mem g_s382_442 g_s0_1) (mem g_s383_443 g_s0_1) (mem g_s384_444 g_s0_1) (mem g_s385_445 g_s0_1) (mem g_s386_446 g_s0_1) (mem g_s387_447 g_s0_1) (mem g_s388_448 g_s0_1) (mem g_s389_449 g_s0_1) (mem g_s390_450 g_s0_1) (mem g_s391_451 g_s0_1) (mem g_s392_452 g_s0_1) (mem g_s393_453 g_s0_1) (mem g_s394_454 g_s0_1) (mem g_s395_455 g_s0_1) (mem g_s396_456 g_s0_1) (mem g_s397_457 g_s0_1) (mem g_s398_458 g_s7_8) (mem g_s399_459 g_s7_8) (mem g_s400_460 g_s7_8) (mem g_s401_461 g_s7_8) (mem g_s402_462 g_s7_8) (mem g_s403_463 g_s7_8) (mem g_s404_464 g_s7_8) (mem g_s405_465 g_s7_8) (mem g_s406_466 g_s7_8) (mem g_s407_467 g_s7_8) (mem g_s408_468 g_s7_8) (mem g_s409_469 g_s7_8) (mem g_s410_470 g_s7_8) (mem g_s411_471 g_s7_8) (mem g_s412_472 g_s7_8) (mem g_s413_473 g_s7_8) (mem g_s414_474 g_s7_8) (mem g_s415_475 g_s7_8) (mem g_s416_476 g_s7_8) (mem g_s417_477 g_s7_8) (mem g_s418_478 g_s7_8) (mem g_s419_479 g_s7_8) (mem g_s420_480 g_s7_8) (mem g_s421_481 g_s7_8) (mem g_s422_482 g_s7_8) (mem g_s423_483 g_s7_8) (mem g_s424_484 g_s7_8) (mem g_s425_485 g_s7_8) (mem g_s426_486 g_s7_8) (mem g_s427_487 g_s7_8) (mem g_s428_488 g_s7_8) (mem g_s429_489 g_s7_8) (mem g_s430_490 g_s7_8) (mem g_s431_491 g_s7_8) (mem g_s432_492 g_s7_8) (mem g_s433_493 g_s7_8) (mem g_s434_494 g_s7_8) (mem g_s435_495 g_s7_8) (mem g_s436_496 g_s7_8) (mem g_s437_497 g_s7_8) (mem g_s438_498 g_s7_8) (mem g_s439_499 g_s7_8) (mem g_s440_500 g_s7_8) (mem g_s441_501 g_s7_8) (mem g_s442_502 g_s7_8) (mem g_s443_503 g_s7_8) (mem g_s444_504 g_s7_8) (mem g_s445_505 g_s7_8) (mem g_s446_506 g_s7_8) (mem g_s447_507 g_s7_8) (mem g_s448_508 g_s7_8) (mem g_s449_509 g_s7_8) (mem g_s450_510 g_s7_8) (mem g_s451_511 g_s7_8) (mem g_s452_512 g_s7_8) (mem g_s453_513 g_s7_8) (mem g_s454_514 g_s7_8) (mem g_s455_515 g_s7_8) (mem g_s456_516 g_s7_8) (mem g_s457_517 g_s7_8) (mem g_s458_518 g_s7_8) (mem g_s459_519 g_s7_8) (mem g_s460_520 g_s7_8) (mem g_s461_521 g_s7_8) (mem g_s462_522 g_s7_8) (mem g_s463_523 g_s7_8) (mem g_s464_524 g_s7_8) (mem g_s465_525 g_s7_8) (mem g_s466_526 g_s7_8) (mem g_s467_527 g_s7_8) (mem g_s468_528 g_s7_8) (mem g_s469_529 g_s7_8) (mem g_s470_530 g_s7_8) (mem g_s471_531 g_s7_8) (mem g_s472_532 g_s7_8) (mem g_s473_533 g_s7_8) (mem g_s474_534 g_s7_8) (mem g_s475_535 g_s7_8) (mem g_s476_536 g_s7_8) (mem g_s477_537 g_s7_8) (mem g_s478_538 g_s7_8) (mem g_s479_539 g_s7_8) (mem g_s480_540 g_s7_8) (mem g_s481_541 g_s7_8) (mem g_s482_542 g_s7_8) (mem g_s483_543 g_s7_8) (mem g_s484_544 g_s7_8) (mem g_s485_545 g_s7_8) (mem g_s486_546 g_s7_8) (mem g_s487_547 g_s7_8) (mem g_s488_548 g_s7_8) (mem g_s489_549 g_s7_8) (mem g_s490_550 g_s7_8) (mem g_s491_551 g_s7_8) (mem g_s492_552 g_s7_8) (mem g_s493_553 g_s7_8) (mem g_s494_554 g_s7_8) (mem g_s495_555 g_s7_8) (mem g_s496_556 g_s7_8) (mem g_s497_557 g_s7_8) (mem g_s498_558 g_s7_8) (mem g_s499_559 g_s7_8) (mem g_s500_560 g_s7_8) (mem g_s501_561 g_s7_8) (mem g_s502_562 g_s7_8) (mem g_s503_563 g_s7_8) (mem g_s504_564 g_s7_8) (mem g_s505_565 g_s7_8) (mem g_s506_566 g_s7_8) (mem g_s507_567 g_s7_8) (mem g_s508_568 g_s7_8) (mem g_s509_569 g_s7_8) (mem g_s510_570 g_s7_8) (mem g_s511_571 g_s7_8) (mem g_s512_572 g_s7_8) (mem g_s513_573 g_s7_8) (mem g_s514_574 g_s7_8) (mem g_s515_575 g_s7_8) (mem g_s516_576 g_s7_8) (mem g_s517_577 g_s7_8) (mem g_s518_578 g_s7_8) (mem g_s519_579 g_s7_8) (mem g_s520_580 g_s7_8) (mem g_s521_581 g_s7_8) (mem g_s522_582 g_s7_8) (mem g_s523_583 g_s7_8) (mem g_s524_584 g_s7_8) (mem g_s525_585 g_s7_8) (mem g_s526_586 g_s7_8) (mem g_s527_587 g_s7_8) (mem g_s528_588 g_s7_8) (mem g_s529_589 g_s7_8) (mem g_s530_590 g_s7_8) (mem g_s531_591 g_s7_8) (mem g_s532_592 g_s7_8) (mem g_s533_593 g_s7_8) (mem g_s534_594 g_s7_8) (mem g_s535_595 g_s7_8) (mem g_s536_596 g_s7_8) (mem g_s537_597 g_s7_8) (mem g_s538_598 g_s7_8) (mem g_s539_599 g_s7_8) (mem g_s540_600 g_s7_8) (mem g_s541_601 g_s7_8) (mem g_s542_602 g_s7_8) (mem g_s543_603 g_s7_8) (mem g_s544_604 g_s7_8) (mem g_s545_605 g_s7_8) (mem g_s546_606 g_s7_8) (mem g_s547_607 g_s7_8) (mem g_s548_608 g_s7_8) (mem g_s549_609 g_s7_8) (mem g_s550_610 g_s7_8) (mem g_s551_611 g_s7_8) (mem g_s552_612 g_s7_8) (mem g_s553_613 g_s7_8) (mem g_s554_614 g_s7_8) (mem g_s555_615 g_s7_8) (mem g_s556_616 g_s7_8) (mem g_s557_617 g_s7_8) (mem g_s558_618 g_s7_8) (mem g_s559_619 g_s7_8) (mem g_s560_620 g_s7_8) (mem g_s561_621 g_s7_8) (mem g_s562_622 g_s7_8) (mem g_s563_623 g_s7_8) (mem g_s564_624 g_s7_8) (mem g_s565_625 g_s7_8) (mem g_s566_626 g_s7_8) (mem g_s567_627 g_s7_8) (mem g_s568_628 g_s7_8) (mem g_s569_629 g_s7_8) (mem g_s570_630 g_s7_8) (mem g_s571_631 g_s7_8) (mem g_s572_632 g_s7_8) (mem g_s573_633 g_s7_8) (mem g_s574_634 g_s7_8) (mem g_s575_635 g_s7_8) (mem g_s576_636 g_s7_8) (mem g_s577_637 g_s7_8) (mem g_s578_638 g_s7_8) (mem g_s579_639 g_s7_8) (mem g_s580_640 g_s7_8) (mem g_s581_641 g_s7_8) (mem g_s582_642 g_s7_8) (mem g_s583_643 g_s7_8) (mem g_s584_644 g_s7_8) (mem g_s585_645 g_s7_8) (mem g_s586_646 g_s7_8) (mem g_s587_647 g_s7_8) (mem g_s588_648 g_s7_8) (mem g_s589_649 g_s7_8) (mem g_s590_650 g_s7_8) (mem g_s591_651 g_s7_8) (mem g_s592_652 g_s7_8) (mem g_s593_653 g_s7_8) (mem g_s594_654 g_s7_8) (mem g_s595_655 g_s7_8) (mem g_s596_656 g_s7_8) (mem g_s597_657 g_s7_8) (mem g_s598_658 g_s7_8) (mem g_s599_659 g_s7_8) (mem g_s600_660 g_s7_8) (mem g_s601_661 g_s7_8) (mem g_s602_662 g_s7_8) (mem g_s603_663 g_s7_8) (mem g_s604_664 g_s7_8) (mem g_s605_665 g_s7_8) (mem g_s606_666 g_s7_8) (mem g_s607_667 g_s7_8) (mem g_s608_668 g_s7_8) (mem g_s609_669 g_s7_8) (mem g_s610_670 g_s7_8) (mem g_s611_671 g_s7_8) (mem g_s612_672 g_s7_8) (mem g_s613_673 g_s7_8) (mem g_s614_674 g_s7_8) (mem g_s615_675 g_s7_8) (mem g_s616_676 g_s7_8) (mem g_s617_677 g_s7_8) (mem g_s618_678 g_s7_8) (mem g_s619_679 g_s7_8) (mem g_s620_680 g_s7_8) (mem g_s621_681 g_s7_8) (mem g_s622_682 g_s7_8) (mem g_s623_683 g_s7_8) (mem g_s624_684 g_s7_8) (mem g_s625_685 g_s7_8) (mem g_s626_686 g_s7_8) (mem g_s627_687 g_s7_8) (mem g_s628_688 g_s7_8) (mem g_s629_689 g_s7_8) (mem g_s630_690 g_s7_8) (mem g_s631_691 g_s7_8) (mem g_s632_692 g_s7_8) (mem g_s633_693 g_s7_8) (mem g_s634_694 g_s7_8) (mem g_s635_695 g_s7_8) (mem g_s636_696 g_s7_8) (mem g_s637_697 g_s7_8) (mem g_s638_698 g_s7_8) (mem g_s639_699 g_s7_8) (mem g_s640_700 g_s7_8) (mem g_s641_701 g_s7_8) (mem g_s642_702 g_s7_8) (mem g_s643_703 g_s7_8) (mem g_s644_704 g_s7_8) (mem g_s645_705 g_s7_8) (mem g_s646_706 g_s7_8) (mem g_s647_707 g_s7_8) (mem g_s648_708 g_s7_8) (mem g_s649_709 g_s7_8) (mem g_s650_710 g_s7_8) (mem g_s651_711 g_s7_8) (mem g_s652_712 g_s7_8) (mem g_s653_713 g_s7_8) (mem g_s654_714 g_s7_8) (mem g_s655_715 g_s7_8) (mem g_s656_716 g_s7_8) (mem g_s657_717 g_s7_8) (mem g_s658_718 g_s7_8) (mem g_s659_719 g_s7_8) (mem g_s660_720 g_s7_8) (mem g_s661_721 g_s7_8) (mem g_s662_722 g_s7_8) (mem g_s663_723 g_s7_8) (mem g_s664_724 g_s7_8) (mem g_s665_725 g_s7_8) (mem g_s666_726 g_s7_8) (mem g_s667_727 g_s7_8) (mem g_s668_728 g_s7_8) (mem g_s669_729 g_s7_8) (mem g_s670_730 g_s7_8) (mem g_s671_731 g_s7_8) (mem g_s672_732 g_s7_8) (mem g_s673_733 g_s7_8) (mem g_s674_734 g_s7_8) (mem g_s675_735 g_s7_8) (mem g_s676_736 g_s7_8) (mem g_s677_737 g_s7_8) (mem g_s678_738 g_s7_8) (mem g_s679_739 g_s7_8) (mem g_s680_740 g_s7_8) (mem g_s681_741 g_s7_8) (mem g_s682_742 g_s7_8) (mem g_s683_743 g_s7_8) (mem g_s684_744 g_s7_8) (mem g_s685_745 g_s7_8) (mem g_s686_746 g_s7_8) (mem g_s687_747 g_s7_8) (mem g_s688_748 g_s7_8) (mem g_s689_749 g_s7_8) (mem g_s690_750 g_s7_8) (mem g_s691_751 g_s7_8) (mem g_s692_752 g_s7_8) (mem g_s693_753 g_s7_8) (mem g_s694_754 g_s7_8) (mem g_s695_755 g_s7_8) (mem g_s696_756 g_s7_8) (mem g_s697_757 g_s7_8) (mem g_s698_758 g_s7_8) (mem g_s699_759 g_s7_8) (mem g_s700_760 g_s7_8) (mem g_s701_761 g_s7_8) (mem g_s702_762 g_s7_8) (mem g_s703_763 g_s7_8) (mem g_s704_764 g_s7_8) (mem g_s705_765 g_s7_8) (mem g_s706_766 g_s7_8) (mem g_s707_767 g_s7_8) (mem g_s708_768 g_s7_8) (mem g_s709_769 g_s7_8) (mem g_s710_770 g_s7_8) (mem g_s711_771 g_s7_8) (mem g_s712_772 g_s7_8) (mem g_s713_773 g_s7_8) (mem g_s714_774 g_s7_8) (mem g_s715_775 g_s7_8) (mem g_s716_776 g_s7_8) (mem g_s717_777 g_s7_8) (mem g_s718_778 g_s7_8) (mem g_s719_779 g_s7_8) (mem g_s720_780 g_s7_8) (mem g_s721_781 g_s7_8) (mem g_s722_782 g_s7_8) (mem g_s723_783 g_s7_8) (mem g_s724_784 g_s7_8) (mem g_s725_785 g_s7_8) (mem g_s726_786 g_s7_8) (mem g_s727_787 g_s7_8) (mem g_s728_788 g_s7_8) (mem g_s729_789 g_s7_8) (mem g_s730_790 g_s7_8) (mem g_s731_791 g_s7_8) (mem g_s732_792 g_s7_8) (mem g_s733_793 g_s7_8) (mem g_s734_794 g_s7_8) (mem g_s735_795 g_s7_8) (mem g_s736_796 g_s7_8) (mem g_s737_797 g_s7_8) (mem g_s738_798 g_s7_8) (mem g_s739_799 g_s7_8) (mem g_s740_800 g_s7_8) (mem g_s741_801 g_s7_8) (mem g_s742_802 g_s7_8) (mem g_s743_803 g_s7_8) (mem g_s744_804 g_s7_8) (mem g_s745_805 g_s7_8) (mem g_s746_806 g_s7_8) (mem g_s747_807 g_s7_8) (mem g_s748_808 g_s7_8) (mem g_s749_809 g_s7_8) (mem g_s750_810 g_s7_8) (mem g_s751_811 g_s7_8) (mem g_s752_812 g_s7_8) (mem g_s753_813 g_s7_8) (mem g_s754_814 g_s7_8) (mem g_s755_815 g_s7_8) (mem g_s756_816 g_s7_8) (mem g_s757_817 g_s7_8) (mem g_s758_818 g_s7_8) (mem g_s759_819 g_s7_8) (mem g_s760_820 g_s7_8) (mem g_s761_821 g_s7_8) (mem g_s762_822 g_s7_8) (mem g_s763_823 g_s7_8) (mem g_s764_824 g_s7_8) (mem g_s765_825 g_s7_8) (mem g_s766_826 g_s7_8) (mem g_s767_827 g_s7_8)))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s768_828 (|-->| g_s237_239 (POW g_s183_185))) (mem g_s769_829 (|+->| g_s237_239 g_s223_225)) (mem g_s770_830 (|+->| g_s237_239 g_s142_144)) (mem g_s771_831 (|+->| g_s237_239 g_s223_225)) (mem g_s772_832 (|+->| g_s237_239 g_s142_144)) (subset g_s773_833 g_s237_239)))
(define-fun |def_inv| () Bool (and (= g_s768_828 e834) (= g_s769_829 (range_restriction (domain_restriction g_s237_239 g_s776$1_835) g_s223_225)) (= g_s770_830 (range_restriction (domain_restriction g_s237_239 g_s777$1_836) g_s142_144)) (= g_s771_831 (range_restriction (domain_restriction g_s237_239 g_s778$1_837) g_s223_225)) (= g_s772_832 (range_restriction (domain_restriction g_s237_239 g_s779$1_838) g_s142_144)) (= g_s773_833 (binary_inter g_s237_239 (image (inverse g_s780$1_839) (SET TRUE))))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s775$1_840 (|-->| (set_prod g_s132_133 g_s115_116) BOOL)) (mem g_s776$1_835 (|-->| g_s132_133 g_s129_130)) (mem g_s777$1_836 (|-->| g_s132_133 g_s140_143)) (mem g_s778$1_837 (|-->| g_s132_133 g_s129_130)) (mem g_s779$1_838 (|-->| g_s132_133 g_s140_143)) (mem g_s780$1_839 (|-->| g_s132_133 BOOL))))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem (set_prod (set_prod g_s132_133 g_s115_116) (SET FALSE)) (|-->| (set_prod g_s132_133 g_s115_116) BOOL)))
(define-fun lh_2 () Bool (mem (set_prod g_s132_133 (SET g_s224_226)) (|-->| g_s132_133 g_s129_130)))
(define-fun lh_3 () Bool (mem (set_prod g_s132_133 (SET g_s145_147)) (|-->| g_s132_133 g_s140_143)))
(define-fun lh_4 () Bool (mem (set_prod g_s132_133 (SET FALSE)) (|-->| g_s132_133 BOOL)))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= empty (binary_inter g_s237_239 (image (inverse (set_prod g_s132_133 (SET FALSE))) (SET TRUE)))))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= empty (range_restriction (domain_restriction g_s237_239 (set_prod g_s132_133 (SET g_s145_147))) g_s142_144)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= empty (range_restriction (domain_restriction g_s237_239 (set_prod g_s132_133 (SET g_s224_226))) g_s223_225)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (set_prod g_s237_239 (SET empty)) e841))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s253_255 NAT))
(define-fun lh_2 () Bool (mem g_s784$1_842 NAT))
(define-fun lh_3 () Bool (mem g_s555_615 g_s7_8))
(define-fun lh_4 () Bool (mem g_s374_434 g_s0_1))
(define-fun lh_5 () Bool (mem g_s337_397 g_s0_1))
(define-fun lh_6 () Bool (mem g_s775$2_843 (|-->| (set_prod g_s132_133 g_s115_116) BOOL)))
(define-fun lh_7 () Bool (mem g_s776$2_844 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_8 () Bool (mem g_s777$2_845 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_9 () Bool (mem g_s778$2_846 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_10 () Bool (mem g_s779$2_847 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_11 () Bool (mem g_s780$2_848 (|-->| g_s132_133 BOOL)))
(define-fun lh_12 () Bool (mem g_s254_257 NAT))
(define-fun lh_13 () Bool (mem g_s784$2_849 NAT))
(define-fun lh_14 () Bool (mem g_s556_616 g_s7_8))
(define-fun lh_15 () Bool (mem g_s775$3_850 (|-->| (set_prod g_s132_133 g_s115_116) BOOL)))
(define-fun lh_16 () Bool (mem g_s776$3_851 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_17 () Bool (mem g_s777$3_852 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_18 () Bool (mem g_s778$3_853 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_19 () Bool (mem g_s779$3_854 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_20 () Bool (mem g_s780$3_855 (|-->| g_s132_133 BOOL)))
(define-fun lh_21 () Bool (mem g_s255_259 NAT))
(define-fun lh_22 () Bool (mem g_s784$3_856 NAT))
(define-fun lh_23 () Bool (mem g_s557_617 g_s7_8))
(define-fun lh_24 () Bool (mem g_s775$4_857 (|-->| (set_prod g_s132_133 g_s115_116) BOOL)))
(define-fun lh_25 () Bool (mem g_s776$4_858 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_26 () Bool (mem g_s777$4_859 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_27 () Bool (mem g_s778$4_860 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_28 () Bool (mem g_s779$4_861 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_29 () Bool (mem g_s780$4_862 (|-->| g_s132_133 BOOL)))
(define-fun lh_30 () Bool (mem g_s256_261 NAT))
(define-fun lh_31 () Bool (mem g_s784$4_863 NAT))
(define-fun lh_32 () Bool (mem g_s558_618 g_s7_8))
(define-fun lh_33 () Bool (mem g_s775$5_864 (|-->| (set_prod g_s132_133 g_s115_116) BOOL)))
(define-fun lh_34 () Bool (mem g_s776$5_865 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_35 () Bool (mem g_s777$5_866 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_36 () Bool (mem g_s778$5_867 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_37 () Bool (mem g_s779$5_868 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_38 () Bool (mem g_s780$5_869 (|-->| g_s132_133 BOOL)))
(define-fun lh_39 () Bool (mem g_s257_263 NAT))
(define-fun lh_40 () Bool (mem g_s784$5_870 NAT))
(define-fun lh_41 () Bool (mem g_s559_619 g_s7_8))
(define-fun lh_42 () Bool (mem g_s775$6_871 (|-->| (set_prod g_s132_133 g_s115_116) BOOL)))
(define-fun lh_43 () Bool (mem g_s776$6_872 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_44 () Bool (mem g_s777$6_873 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_45 () Bool (mem g_s778$6_874 (|-->| g_s132_133 g_s129_130)))
(define-fun lh_46 () Bool (mem g_s779$6_875 (|-->| g_s132_133 g_s140_143)))
(define-fun lh_47 () Bool (mem g_s780$6_876 (|-->| g_s132_133 BOOL)))
; PO 1 in group 1
(push 1)
(assert (not (mem g_s253_255 NAT)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s254_257 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (mem g_s255_259 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29) (mem g_s256_261 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38) (mem g_s257_263 NAT))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem e877 (|-->| g_s237_239 (POW g_s183_185))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s237_239 g_s778$6_874) g_s223_225) (|+->| g_s237_239 g_s223_225)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s237_239 g_s779$6_875) g_s142_144) (|+->| g_s237_239 g_s142_144)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s237_239 g_s777$6_873) g_s142_144) (|+->| g_s237_239 g_s142_144)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem (range_restriction (domain_restriction g_s237_239 g_s776$6_872) g_s223_225) (|+->| g_s237_239 g_s223_225)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (subset (binary_inter g_s237_239 (image (inverse g_s780$6_876) (SET TRUE))) g_s237_239))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s787$1_879 g_s787_878))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem g_s789_881 g_s115_116))
(define-fun lh_4 () Bool (mem g_s789_881 g_s183_185))
; PO 1 in group 2
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s775$1_840 (mapplet g_s788_880 g_s789_881)) (bool (mem g_s789_881 (apply g_s768_828 g_s788_880)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s791$1_883 g_s791_882))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem (apply g_s776$1_835 g_s788_880) g_s129_130))
; PO 1 in group 3
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s776$1_835 g_s788_880) g_s223_225)) (bool (mem g_s788_880 (dom g_s769_829)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s793$1_885 g_s793_884))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem g_s788_880 (dom g_s769_829)))
; PO 1 in group 4
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s776$1_835 g_s788_880) (apply g_s769_829 g_s788_880)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s795$1_887 g_s795_886))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem g_s796_888 g_s129_130))
(define-fun lh_4 () Bool (mem g_s796_888 g_s223_225))
; PO 1 in group 5
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (= g_s796_888 (apply g_s776$1_835 g_s788_880))) (bool (mem (mapplet g_s788_880 g_s796_888) g_s769_829))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s798$1_890 g_s798_889))
(assert (= g_s799$1_892 g_s799_891))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem (apply g_s777$1_836 g_s788_880) g_s140_143))
(define-fun lh_4 () Bool (mem g_s788_880 (dom g_s770_830)))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s777$1_836 g_s788_880) g_s140_143))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s770_830 g_s788_880) g_s140_143))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s777$1_836 g_s788_880) g_s142_144)) (bool (mem g_s788_880 (dom g_s770_830)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s777$1_836 g_s788_880) (apply g_s770_830 g_s788_880)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s798$1_890 g_s798_889))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem (apply g_s777$1_836 g_s788_880) g_s140_143))
; PO 1 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s777$1_836 g_s788_880) g_s140_143))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s777$1_836 g_s788_880) g_s142_144)) (bool (mem g_s788_880 (dom g_s770_830)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s799$1_892 g_s799_891))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem g_s788_880 (dom g_s770_830)))
; PO 1 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (apply g_s770_830 g_s788_880) g_s140_143))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s777$1_836 g_s788_880) (apply g_s770_830 g_s788_880)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s803$1_894 g_s803_893))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem (apply g_s778$1_837 g_s788_880) g_s129_130))
; PO 1 in group 9
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s778$1_837 g_s788_880) g_s223_225)) (bool (mem g_s788_880 (dom g_s771_831)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s805$1_896 g_s805_895))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem g_s788_880 (dom g_s771_831)))
; PO 1 in group 10
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s778$1_837 g_s788_880) (apply g_s771_831 g_s788_880)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s807$1_898 g_s807_897))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem g_s796_888 g_s129_130))
(define-fun lh_4 () Bool (mem g_s796_888 g_s223_225))
; PO 1 in group 11
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (= g_s796_888 (apply g_s778$1_837 g_s788_880))) (bool (mem (mapplet g_s788_880 g_s796_888) g_s771_831))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s809$1_900 g_s809_899))
(assert (= g_s810$1_902 g_s810_901))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem (apply g_s779$1_838 g_s788_880) g_s140_143))
(define-fun lh_4 () Bool (mem g_s788_880 (dom g_s772_832)))
; PO 1 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s779$1_838 g_s788_880) g_s140_143))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s772_832 g_s788_880) g_s140_143))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (bool (mem (apply g_s779$1_838 g_s788_880) g_s142_144)) (bool (mem g_s788_880 (dom g_s772_832)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s779$1_838 g_s788_880) (apply g_s772_832 g_s788_880)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s809$1_900 g_s809_899))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem (apply g_s779$1_838 g_s788_880) g_s140_143))
; PO 1 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s779$1_838 g_s788_880) g_s140_143))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s779$1_838 g_s788_880) g_s142_144)) (bool (mem g_s788_880 (dom g_s772_832)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s810$1_902 g_s810_901))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
(define-fun lh_3 () Bool (mem g_s788_880 (dom g_s772_832)))
; PO 1 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (apply g_s772_832 g_s788_880) g_s140_143))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s779$1_838 g_s788_880) (apply g_s772_832 g_s788_880)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s814$1_904 g_s814_903))
(define-fun lh_1 () Bool (mem g_s788_880 g_s132_133))
(define-fun lh_2 () Bool (mem g_s788_880 g_s237_239))
; PO 1 in group 15
(assert (not (=> (and lh_1 lh_2) (= (apply g_s780$1_839 g_s788_880) (bool (mem g_s788_880 g_s773_833))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
(assert (mem g_s789_881 g_s115_116))
(assert (mem g_s789_881 g_s183_185))
; PO 1 in group 16
(push 1)
(assert (not (mem g_s775$1_840 (|+->| (dom g_s775$1_840) (ran g_s775$1_840)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (mem (mapplet g_s788_880 g_s789_881) (dom g_s775$1_840))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
; PO 1 in group 17
(push 1)
(assert (not (mem g_s788_880 (dom g_s776$1_835))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 17
(push 1)
(assert (not (mem g_s776$1_835 (|+->| (dom g_s776$1_835) (ran g_s776$1_835)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
(assert (mem g_s788_880 (dom g_s769_829)))
; PO 1 in group 18
(push 1)
(assert (not (mem g_s788_880 (dom g_s776$1_835))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 18
(push 1)
(assert (not (mem g_s776$1_835 (|+->| (dom g_s776$1_835) (ran g_s776$1_835)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
(assert (mem g_s796_888 g_s129_130))
(assert (mem g_s796_888 g_s223_225))
; PO 1 in group 19
(push 1)
(assert (not (mem g_s788_880 (dom g_s776$1_835))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 19
(push 1)
(assert (not (mem g_s776$1_835 (|+->| (dom g_s776$1_835) (ran g_s776$1_835)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
; PO 1 in group 20
(push 1)
(assert (not (mem g_s777$1_836 (|+->| (dom g_s777$1_836) (ran g_s777$1_836)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 20
(push 1)
(assert (not (mem g_s788_880 (dom g_s777$1_836))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
; PO 1 in group 21
(push 1)
(assert (not (mem g_s777$1_836 (|+->| (dom g_s777$1_836) (ran g_s777$1_836)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 21
(push 1)
(assert (not (mem g_s788_880 (dom g_s777$1_836))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
(assert (mem g_s788_880 (dom g_s770_830)))
; PO 1 in group 22
(push 1)
(assert (not (mem g_s777$1_836 (|+->| (dom g_s777$1_836) (ran g_s777$1_836)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 22
(push 1)
(assert (not (mem g_s788_880 (dom g_s777$1_836))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
; PO 1 in group 23
(push 1)
(assert (not (mem g_s778$1_837 (|+->| (dom g_s778$1_837) (ran g_s778$1_837)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 23
(push 1)
(assert (not (mem g_s788_880 (dom g_s778$1_837))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 24 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
(assert (mem g_s788_880 (dom g_s771_831)))
; PO 1 in group 24
(push 1)
(assert (not (mem g_s778$1_837 (|+->| (dom g_s778$1_837) (ran g_s778$1_837)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 24
(push 1)
(assert (not (mem g_s788_880 (dom g_s778$1_837))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 25 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
(assert (mem g_s796_888 g_s129_130))
(assert (mem g_s796_888 g_s223_225))
; PO 1 in group 25
(push 1)
(assert (not (mem g_s778$1_837 (|+->| (dom g_s778$1_837) (ran g_s778$1_837)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 25
(push 1)
(assert (not (mem g_s788_880 (dom g_s778$1_837))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 26 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
; PO 1 in group 26
(push 1)
(assert (not (mem g_s779$1_838 (|+->| (dom g_s779$1_838) (ran g_s779$1_838)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 26
(push 1)
(assert (not (mem g_s788_880 (dom g_s779$1_838))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 27 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
; PO 1 in group 27
(push 1)
(assert (not (mem g_s779$1_838 (|+->| (dom g_s779$1_838) (ran g_s779$1_838)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 27
(push 1)
(assert (not (mem g_s788_880 (dom g_s779$1_838))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 28 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
(assert (mem g_s788_880 (dom g_s772_832)))
; PO 1 in group 28
(push 1)
(assert (not (mem g_s779$1_838 (|+->| (dom g_s779$1_838) (ran g_s779$1_838)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 28
(push 1)
(assert (not (mem g_s788_880 (dom g_s779$1_838))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 29 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s788_880 g_s132_133))
(assert (mem g_s788_880 g_s237_239))
; PO 1 in group 29
(push 1)
(assert (not (mem g_s780$1_839 (|+->| (dom g_s780$1_839) (ran g_s780$1_839)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 29
(push 1)
(assert (not (mem g_s788_880 (dom g_s780$1_839))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)