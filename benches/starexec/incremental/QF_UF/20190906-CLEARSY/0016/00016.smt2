(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e7 () U)
(declare-fun e32 () U)
(declare-fun e34 () U)
(declare-fun e36 () U)
(declare-fun e38 () U)
(declare-fun e40 () U)
(declare-fun e42 () U)
(declare-fun e44 () U)
(declare-fun e46 () U)
(declare-fun e48 () U)
(declare-fun e50 () U)
(declare-fun e52 () U)
(declare-fun e54 () U)
(declare-fun e56 () U)
(declare-fun e58 () U)
(declare-fun e60 () U)
(declare-fun e62 () U)
(declare-fun e64 () U)
(declare-fun e66 () U)
(declare-fun e68 () U)
(declare-fun e70 () U)
(declare-fun e72 () U)
(declare-fun e74 () U)
(declare-fun e76 () U)
(declare-fun e78 () U)
(declare-fun e80 () U)
(declare-fun e82 () U)
(declare-fun e84 () U)
(declare-fun e86 () U)
(declare-fun e88 () U)
(declare-fun e90 () U)
(declare-fun e92 () U)
(declare-fun e94 () U)
(declare-fun e96 () U)
(declare-fun e98 () U)
(declare-fun e100 () U)
(declare-fun e102 () U)
(declare-fun e104 () U)
(declare-fun e106 () U)
(declare-fun e108 () U)
(declare-fun e110 () U)
(declare-fun e112 () U)
(declare-fun e114 () U)
(declare-fun e116 () U)
(declare-fun e118 () U)
(declare-fun e120 () U)
(declare-fun e122 () U)
(declare-fun e124 () U)
(declare-fun e126 () U)
(declare-fun e128 () U)
(declare-fun e130 () U)
(declare-fun e132 () U)
(declare-fun e134 () U)
(declare-fun e136 () U)
(declare-fun e138 () U)
(declare-fun e140 () U)
(declare-fun e142 () U)
(declare-fun e144 () U)
(declare-fun e146 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_12 () U)
(declare-fun g_s100_158 () U)
(declare-fun g_s100$1_167 () U)
(declare-fun g_s101_159 () U)
(declare-fun g_s101$1_169 () U)
(declare-fun g_s108_160 () U)
(declare-fun g_s108$1_161 () U)
(declare-fun g_s11_13 () U)
(declare-fun g_s110_162 () U)
(declare-fun g_s110$1_163 () U)
(declare-fun g_s113_164 () U)
(declare-fun g_s113$1_165 () U)
(declare-fun g_s114_166 () U)
(declare-fun g_s12_14 () U)
(declare-fun g_s13_15 () U)
(declare-fun g_s14_16 () U)
(declare-fun g_s15_17 () U)
(declare-fun g_s16_18 () U)
(declare-fun g_s17_19 () U)
(declare-fun g_s18_20 () U)
(declare-fun g_s19_21 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_22 () U)
(declare-fun g_s21_23 () U)
(declare-fun g_s22_24 () U)
(declare-fun g_s23_25 () U)
(declare-fun g_s24_26 () U)
(declare-fun g_s25_27 () U)
(declare-fun g_s26_28 () U)
(declare-fun g_s27_29 () U)
(declare-fun g_s28_30 () U)
(declare-fun g_s29_31 () U)
(declare-fun g_s3_5 () U)
(declare-fun g_s30_33 () U)
(declare-fun g_s31_35 () U)
(declare-fun g_s32_37 () U)
(declare-fun g_s33_39 () U)
(declare-fun g_s34_41 () U)
(declare-fun g_s35_43 () U)
(declare-fun g_s36_45 () U)
(declare-fun g_s37_47 () U)
(declare-fun g_s38_49 () U)
(declare-fun g_s39_51 () U)
(declare-fun g_s4_4 () U)
(declare-fun g_s40_53 () U)
(declare-fun g_s41_55 () U)
(declare-fun g_s42_57 () U)
(declare-fun g_s43_59 () U)
(declare-fun g_s44_61 () U)
(declare-fun g_s45_63 () U)
(declare-fun g_s46_65 () U)
(declare-fun g_s47_67 () U)
(declare-fun g_s48_69 () U)
(declare-fun g_s49_71 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_73 () U)
(declare-fun g_s51_75 () U)
(declare-fun g_s52_77 () U)
(declare-fun g_s53_79 () U)
(declare-fun g_s54_81 () U)
(declare-fun g_s55_83 () U)
(declare-fun g_s56_85 () U)
(declare-fun g_s57_87 () U)
(declare-fun g_s58_89 () U)
(declare-fun g_s59_91 () U)
(declare-fun g_s6_8 () U)
(declare-fun g_s60_93 () U)
(declare-fun g_s61_95 () U)
(declare-fun g_s62_97 () U)
(declare-fun g_s63_99 () U)
(declare-fun g_s64_101 () U)
(declare-fun g_s65_103 () U)
(declare-fun g_s66_105 () U)
(declare-fun g_s67_107 () U)
(declare-fun g_s68_109 () U)
(declare-fun g_s69_111 () U)
(declare-fun g_s7_9 () U)
(declare-fun g_s70_113 () U)
(declare-fun g_s71_115 () U)
(declare-fun g_s72_117 () U)
(declare-fun g_s73_119 () U)
(declare-fun g_s74_121 () U)
(declare-fun g_s75_123 () U)
(declare-fun g_s76_125 () U)
(declare-fun g_s77_127 () U)
(declare-fun g_s78_129 () U)
(declare-fun g_s79_131 () U)
(declare-fun g_s8_10 () U)
(declare-fun g_s80_133 () U)
(declare-fun g_s81_135 () U)
(declare-fun g_s82_137 () U)
(declare-fun g_s83_139 () U)
(declare-fun g_s84_141 () U)
(declare-fun g_s85_143 () U)
(declare-fun g_s86_145 () U)
(declare-fun g_s87_147 () U)
(declare-fun g_s88_148 () U)
(declare-fun g_s89_149 () U)
(declare-fun g_s9_11 () U)
(declare-fun g_s90_150 () U)
(declare-fun g_s90$1_152 () U)
(declare-fun g_s91_151 () U)
(declare-fun g_s92$1_153 () U)
(declare-fun g_s93$1_154 () U)
(declare-fun g_s94$1_155 () U)
(declare-fun g_s98_156 () U)
(declare-fun g_s99_157 () U)
(declare-fun g_s99$1_168 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (= g_s3_5 (interval (iuminus g_s4_4) g_s4_4)) (= g_s5_6 (interval e0 g_s4_4)) (= g_s6_8 (interval e7 g_s4_4)) (subset g_s6_8 g_s5_6) (subset g_s5_6 g_s3_5) (subset g_s5_6 NAT) (subset g_s6_8 NAT1) (subset g_s3_5 INT) (mem g_s7_9 g_s3_5) (mem g_s7_9 g_s5_6) (not (mem g_s7_9 g_s6_8)) (mem g_s8_10 g_s3_5) (not (mem g_s8_10 g_s5_6)) (= g_s9_11 (interval (iuminus g_s4_4) g_s4_4)) (subset g_s9_11 INT) (subset g_s10_12 g_s0_1) (mem g_s11_13 g_s0_1) (mem g_s11_13 g_s10_12) (mem g_s12_14 g_s0_1) (not (mem g_s12_14 g_s10_12)) (mem g_s13_15 (|+->| NAT g_s0_1)) (mem g_s13_15 (perm g_s10_12)) (= (card g_s10_12) g_s14_16) (subset g_s15_17 g_s1_2) (mem g_s16_18 g_s1_2) (mem g_s16_18 g_s15_17) (mem g_s17_19 g_s1_2) (not (mem g_s17_19 g_s15_17)) (mem g_s18_20 (|+->| NAT g_s1_2)) (mem g_s18_20 (perm g_s15_17)) (= (card g_s15_17) g_s19_21) (= g_s20_22 (interval e7 g_s4_4)) (subset g_s20_22 g_s5_6) (subset g_s20_22 NAT1) (subset g_s21_23 g_s2_3) (mem g_s22_24 g_s2_3) (mem g_s22_24 g_s21_23) (mem g_s23_25 g_s2_3) (not (mem g_s23_25 g_s21_23)) (mem g_s24_26 (|+->| NAT g_s2_3)) (mem g_s24_26 (perm g_s21_23)) (= (card g_s21_23) g_s25_27)))
(define-fun |def_seext| () Bool (and (= g_s26_28 TRUE) (= g_s27_29 FALSE) (= g_s28_30 e0) (= g_s29_31 e7) (= g_s30_33 e32) (= g_s31_35 e34) (= g_s32_37 e36) (= g_s33_39 e38) (= g_s34_41 e40) (= g_s35_43 e42) (= g_s36_45 e44) (= g_s37_47 e46) (= g_s38_49 e48) (= g_s39_51 e50) (= g_s40_53 e52) (= g_s41_55 e54) (= g_s42_57 e56) (= g_s43_59 e58) (= g_s44_61 e60) (= g_s45_63 e62) (= g_s46_65 e64) (= g_s47_67 e66) (= g_s48_69 e68) (= g_s49_71 e70) (= g_s50_73 e72) (= g_s51_75 e74) (= g_s52_77 e76) (= g_s53_79 e78) (= g_s54_81 e80) (= g_s55_83 e82) (= g_s56_85 e84) (= g_s57_87 e86) (= g_s58_89 e88) (= g_s59_91 e90) (= g_s60_93 e92) (= g_s61_95 e94) (= g_s62_97 e96) (= g_s63_99 e98) (= g_s64_101 e100) (= g_s65_103 e102) (= g_s66_105 e104) (= g_s67_107 e106) (= g_s68_109 e108) (= g_s69_111 e110) (= g_s70_113 e112) (= g_s71_115 e114) (= g_s72_117 e116) (= g_s73_119 e118) (= g_s74_121 e120) (= g_s75_123 e122) (= g_s76_125 e124) (= g_s77_127 e126) (= g_s78_129 e128) (= g_s79_131 e130) (= g_s80_133 e132) (= g_s81_135 e134) (= g_s82_137 e136) (= g_s83_139 e138) (= g_s84_141 e140) (= g_s85_143 e142) (= g_s86_145 e144) (= g_s87_147 e146)))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s88_148 (|+->| g_s21_23 g_s5_6)) (mem g_s89_149 (|+->| g_s21_23 g_s5_6)) (mem g_s90_150 g_s3_5) (subset g_s91_151 g_s21_23)))
(define-fun |def_inv| () Bool (and (= g_s90_150 g_s90$1_152) (mem g_s90$1_152 g_s3_5) (mem g_s92$1_153 (|-->| g_s2_3 g_s3_5)) (= g_s88_148 (range_restriction (domain_restriction g_s21_23 g_s92$1_153) g_s5_6)) (mem g_s93$1_154 (|-->| g_s2_3 g_s3_5)) (= g_s89_149 (range_restriction (domain_restriction g_s21_23 g_s93$1_154) g_s5_6)) (mem g_s94$1_155 (|-->| g_s2_3 BOOL)) (= g_s91_151 (binary_inter g_s21_23 (image (inverse g_s94$1_155) (SET TRUE))))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
; PO 1 in group 0
(push 1)
(assert (not (mem (set_prod g_s2_3 (SET FALSE)) (|-->| g_s2_3 BOOL))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (mem (set_prod g_s2_3 (SET g_s8_10)) (|-->| g_s2_3 g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (= empty (binary_inter g_s21_23 (image (inverse (set_prod g_s2_3 (SET FALSE))) (SET TRUE))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (= empty (range_restriction (domain_restriction g_s21_23 (set_prod g_s2_3 (SET g_s8_10))) g_s5_6))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s99_157 g_s3_5))
(define-fun lh_4 () Bool (mem g_s100_158 g_s3_5))
(define-fun lh_5 () Bool (mem g_s101_159 BOOL))
(define-fun lh_6 () Bool (mem g_s99_157 g_s20_22))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (|<+| g_s92$1_153 (SET (mapplet g_s98_156 g_s99_157))) (|-->| g_s2_3 g_s3_5)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (|<+| g_s88_148 (SET (mapplet g_s98_156 g_s99_157))) (range_restriction (domain_restriction g_s21_23 (|<+| g_s92$1_153 (SET (mapplet g_s98_156 g_s99_157)))) g_s5_6)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s99_157 g_s3_5))
(define-fun lh_4 () Bool (mem g_s100_158 g_s3_5))
(define-fun lh_5 () Bool (mem g_s101_159 BOOL))
(define-fun lh_6 () Bool (not (mem g_s99_157 g_s20_22)))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (|<+| g_s92$1_153 (SET (mapplet g_s98_156 g_s8_10))) (|-->| g_s2_3 g_s3_5)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (domain_subtraction (SET g_s98_156) g_s88_148) (range_restriction (domain_restriction g_s21_23 (|<+| g_s92$1_153 (SET (mapplet g_s98_156 g_s8_10)))) g_s5_6)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s99_157 g_s3_5))
(define-fun lh_4 () Bool (mem g_s100_158 g_s3_5))
(define-fun lh_5 () Bool (mem g_s101_159 BOOL))
(define-fun lh_6 () Bool (mem g_s100_158 g_s20_22))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (|<+| g_s93$1_154 (SET (mapplet g_s98_156 g_s100_158))) (|-->| g_s2_3 g_s3_5)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (|<+| g_s89_149 (SET (mapplet g_s98_156 g_s100_158))) (range_restriction (domain_restriction g_s21_23 (|<+| g_s93$1_154 (SET (mapplet g_s98_156 g_s100_158)))) g_s5_6)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s99_157 g_s3_5))
(define-fun lh_4 () Bool (mem g_s100_158 g_s3_5))
(define-fun lh_5 () Bool (mem g_s101_159 BOOL))
(define-fun lh_6 () Bool (not (mem g_s100_158 g_s20_22)))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (|<+| g_s93$1_154 (SET (mapplet g_s98_156 g_s8_10))) (|-->| g_s2_3 g_s3_5)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (domain_subtraction (SET g_s98_156) g_s89_149) (range_restriction (domain_restriction g_s21_23 (|<+| g_s93$1_154 (SET (mapplet g_s98_156 g_s8_10)))) g_s5_6)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s99_157 g_s3_5))
(define-fun lh_4 () Bool (mem g_s100_158 g_s3_5))
(define-fun lh_5 () Bool (mem g_s101_159 BOOL))
(define-fun lh_6 () Bool (= g_s101_159 TRUE))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (|<+| g_s94$1_155 (SET (mapplet g_s98_156 g_s26_28))) (|-->| g_s2_3 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_union g_s91_151 (SET g_s98_156)) (binary_inter g_s21_23 (image (inverse (|<+| g_s94$1_155 (SET (mapplet g_s98_156 g_s26_28)))) (SET TRUE)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s99_157 g_s3_5))
(define-fun lh_4 () Bool (mem g_s100_158 g_s3_5))
(define-fun lh_5 () Bool (mem g_s101_159 BOOL))
(define-fun lh_6 () Bool (not (= g_s101_159 TRUE)))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (|<+| g_s94$1_155 (SET (mapplet g_s98_156 g_s27_29))) (|-->| g_s2_3 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (set_diff g_s91_151 (SET g_s98_156)) (binary_inter g_s21_23 (image (inverse (|<+| g_s94$1_155 (SET (mapplet g_s98_156 g_s27_29)))) (SET TRUE)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s108$1_161 g_s108_160))
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s99_157 g_s3_5))
(define-fun lh_4 () Bool (mem g_s100_158 g_s3_5))
(define-fun lh_5 () Bool (mem g_s101_159 BOOL))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s101_159 (bool (= g_s101_159 TRUE))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s110$1_163 g_s110_162))
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem (apply g_s92$1_153 g_s98_156) g_s3_5))
; PO 1 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s92$1_153 g_s98_156) g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s92$1_153 g_s98_156) g_s5_6)) (bool (mem g_s98_156 (dom g_s88_148)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s113$1_165 g_s113_164))
(define-fun lh_1 () Bool (mem g_s114_166 g_s2_3))
(define-fun lh_2 () Bool (mem g_s114_166 g_s21_23))
(define-fun lh_3 () Bool (mem (apply g_s93$1_154 g_s114_166) g_s3_5))
; PO 1 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s93$1_154 g_s114_166) g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s93$1_154 g_s114_166) g_s5_6)) (bool (mem g_s114_166 (dom g_s89_149)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s114_166 g_s2_3))
(define-fun lh_2 () Bool (mem g_s114_166 g_s21_23))
(define-fun lh_3 () Bool (mem g_s114_166 (dom g_s89_149)))
(define-fun lh_4 () Bool (= (apply g_s89_149 g_s114_166) (apply g_s93$1_154 g_s114_166)))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s89_149 g_s114_166) (apply g_s93$1_154 g_s114_166)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s89_149 g_s114_166) g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s93$1_154 g_s114_166) g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s108$1_161 g_s108_160))
(define-fun lh_1 () Bool (mem g_s114_166 g_s2_3))
(define-fun lh_2 () Bool (mem g_s114_166 g_s21_23))
(define-fun lh_3 () Bool (mem (apply g_s93$1_154 g_s114_166) g_s3_5))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s93$1_154 g_s114_166) g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s93$1_154 g_s114_166) g_s5_6)) (bool (mem g_s114_166 (dom g_s89_149)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s100$1_167 g_s100_158))
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s98_156 (dom g_s89_149)))
(define-fun lh_4 () Bool (= (apply g_s89_149 g_s98_156) (apply g_s93$1_154 g_s98_156)))
; PO 1 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s89_149 g_s98_156) (apply g_s93$1_154 g_s98_156)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s89_149 g_s98_156) g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s93$1_154 g_s98_156) (apply g_s89_149 g_s98_156)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s113$1_165 g_s113_164))
(define-fun lh_1 () Bool (mem g_s114_166 g_s2_3))
(define-fun lh_2 () Bool (mem g_s114_166 g_s21_23))
(define-fun lh_3 () Bool (mem (apply g_s93$1_154 g_s114_166) g_s3_5))
; PO 1 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (apply g_s93$1_154 g_s114_166) g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (mem (apply g_s93$1_154 g_s114_166) g_s5_6)) (bool (mem g_s114_166 (dom g_s89_149)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s99$1_168 g_s99_157))
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (mem g_s98_156 (dom g_s88_148)))
(define-fun lh_4 () Bool (= (apply g_s88_148 g_s98_156) (apply g_s92$1_153 g_s98_156)))
; PO 1 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (apply g_s88_148 g_s98_156) (apply g_s92$1_153 g_s98_156)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (apply g_s88_148 g_s98_156) g_s3_5))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (apply g_s92$1_153 g_s98_156) (apply g_s88_148 g_s98_156)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s101$1_169 g_s101_159))
(define-fun lh_1 () Bool (mem g_s98_156 g_s2_3))
(define-fun lh_2 () Bool (mem g_s98_156 g_s21_23))
(define-fun lh_3 () Bool (= (apply g_s94$1_155 g_s98_156) TRUE))
(define-fun lh_4 () Bool (=> (= (apply g_s94$1_155 g_s98_156) TRUE) (mem g_s98_156 g_s91_151)))
; PO 1 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s98_156 g_s91_151))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_4) (= (apply g_s94$1_155 g_s98_156) (bool (mem g_s98_156 g_s91_151))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s98_156 g_s2_3))
(assert (mem g_s98_156 g_s21_23))
(define-fun lh_1 () Bool (=> (= (apply g_s94$1_155 g_s98_156) TRUE) (mem g_s98_156 g_s91_151)))
; PO 1 in group 16
(push 1)
(assert (not (mem g_s94$1_155 (|+->| (dom g_s94$1_155) (ran g_s94$1_155)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (mem g_s98_156 (dom g_s94$1_155))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 16
(push 1)
(assert (not (=> lh_1 (mem g_s94$1_155 (|+->| (dom g_s94$1_155) (ran g_s94$1_155))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 16
(push 1)
(assert (not (=> lh_1 (mem g_s98_156 (dom g_s94$1_155)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s98_156 g_s2_3))
(assert (mem g_s98_156 g_s21_23))
(assert (mem g_s98_156 (dom g_s88_148)))
(define-fun lh_1 () Bool (= (apply g_s88_148 g_s98_156) (apply g_s92$1_153 g_s98_156)))
; PO 1 in group 17
(push 1)
(assert (not (mem g_s88_148 (|+->| (dom g_s88_148) (ran g_s88_148)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 17
(push 1)
(assert (not (mem g_s92$1_153 (|+->| (dom g_s92$1_153) (ran g_s92$1_153)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 17
(push 1)
(assert (not (mem g_s98_156 (dom g_s92$1_153))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 17
(push 1)
(assert (not (=> lh_1 (mem g_s92$1_153 (|+->| (dom g_s92$1_153) (ran g_s92$1_153))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 17
(push 1)
(assert (not (=> lh_1 (mem g_s98_156 (dom g_s92$1_153)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s114_166 g_s2_3))
(assert (mem g_s114_166 g_s21_23))
; PO 1 in group 18
(push 1)
(assert (not (mem g_s93$1_154 (|+->| (dom g_s93$1_154) (ran g_s93$1_154)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 18
(push 1)
(assert (not (mem g_s114_166 (dom g_s93$1_154))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s98_156 g_s2_3))
(assert (mem g_s98_156 g_s21_23))
(assert (mem g_s98_156 (dom g_s89_149)))
(define-fun lh_1 () Bool (= (apply g_s89_149 g_s98_156) (apply g_s93$1_154 g_s98_156)))
; PO 1 in group 19
(push 1)
(assert (not (mem g_s89_149 (|+->| (dom g_s89_149) (ran g_s89_149)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 19
(push 1)
(assert (not (mem g_s93$1_154 (|+->| (dom g_s93$1_154) (ran g_s93$1_154)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 19
(push 1)
(assert (not (mem g_s98_156 (dom g_s93$1_154))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 19
(push 1)
(assert (not (=> lh_1 (mem g_s93$1_154 (|+->| (dom g_s93$1_154) (ran g_s93$1_154))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 19
(push 1)
(assert (not (=> lh_1 (mem g_s98_156 (dom g_s93$1_154)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s114_166 g_s2_3))
(assert (mem g_s114_166 g_s21_23))
; PO 1 in group 20
(push 1)
(assert (not (mem g_s93$1_154 (|+->| (dom g_s93$1_154) (ran g_s93$1_154)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 20
(push 1)
(assert (not (mem g_s114_166 (dom g_s93$1_154))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s114_166 g_s2_3))
(assert (mem g_s114_166 g_s21_23))
(assert (mem g_s114_166 (dom g_s89_149)))
(define-fun lh_1 () Bool (= (apply g_s89_149 g_s114_166) (apply g_s93$1_154 g_s114_166)))
; PO 1 in group 21
(push 1)
(assert (not (mem g_s89_149 (|+->| (dom g_s89_149) (ran g_s89_149)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 21
(push 1)
(assert (not (mem g_s93$1_154 (|+->| (dom g_s93$1_154) (ran g_s93$1_154)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 21
(push 1)
(assert (not (mem g_s114_166 (dom g_s93$1_154))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 21
(push 1)
(assert (not (=> lh_1 (mem g_s93$1_154 (|+->| (dom g_s93$1_154) (ran g_s93$1_154))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 21
(push 1)
(assert (not (=> lh_1 (mem g_s114_166 (dom g_s93$1_154)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s114_166 g_s2_3))
(assert (mem g_s114_166 g_s21_23))
; PO 1 in group 22
(push 1)
(assert (not (mem g_s93$1_154 (|+->| (dom g_s93$1_154) (ran g_s93$1_154)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 22
(push 1)
(assert (not (mem g_s114_166 (dom g_s93$1_154))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s98_156 g_s2_3))
(assert (mem g_s98_156 g_s21_23))
; PO 1 in group 23
(push 1)
(assert (not (mem g_s92$1_153 (|+->| (dom g_s92$1_153) (ran g_s92$1_153)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 23
(push 1)
(assert (not (mem g_s98_156 (dom g_s92$1_153))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)