(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_104 () U)
(declare-fun g_s103_103 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_143 () U)
(declare-fun g_s143_145 () U)
(declare-fun g_s144_144 () U)
(declare-fun g_s145_146 () U)
(declare-fun g_s146_147 () U)
(declare-fun g_s147_148 () U)
(declare-fun g_s148_149 () U)
(declare-fun g_s149_150 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_151 () U)
(declare-fun g_s151_152 () U)
(declare-fun g_s152_153 () U)
(declare-fun g_s153_154 () U)
(declare-fun g_s154_155 () U)
(declare-fun g_s155_156 () U)
(declare-fun g_s156_157 () U)
(declare-fun g_s157_158 () U)
(declare-fun g_s158_159 () U)
(declare-fun g_s159_160 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_161 () U)
(declare-fun g_s161_162 () U)
(declare-fun g_s162_163 () U)
(declare-fun g_s163_164 () U)
(declare-fun g_s164_165 () U)
(declare-fun g_s165_166 () U)
(declare-fun g_s166_167 () U)
(declare-fun g_s167_168 () U)
(declare-fun g_s168_169 () U)
(declare-fun g_s169_170 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_171 () U)
(declare-fun g_s171_172 () U)
(declare-fun g_s172_173 () U)
(declare-fun g_s173_174 () U)
(declare-fun g_s174_175 () U)
(declare-fun g_s175_176 () U)
(declare-fun g_s176_177 () U)
(declare-fun g_s177_178 () U)
(declare-fun g_s178_179 () U)
(declare-fun g_s179_180 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_181 () U)
(declare-fun g_s181_182 () U)
(declare-fun g_s182_183 () U)
(declare-fun g_s183_184 () U)
(declare-fun g_s184_185 () U)
(declare-fun g_s185_186 () U)
(declare-fun g_s186_187 () U)
(declare-fun g_s187_188 () U)
(declare-fun g_s188_189 () U)
(declare-fun g_s189_190 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_191 () U)
(declare-fun g_s191_192 () U)
(declare-fun g_s192_194 () U)
(declare-fun g_s193_193 () U)
(declare-fun g_s194_195 () U)
(declare-fun g_s195_196 () U)
(declare-fun g_s196_197 () U)
(declare-fun g_s197_198 () U)
(declare-fun g_s198_199 () U)
(declare-fun g_s199_200 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_201 () U)
(declare-fun g_s201_202 () U)
(declare-fun g_s202_203 () U)
(declare-fun g_s203_204 () U)
(declare-fun g_s204_205 () U)
(declare-fun g_s205_206 () U)
(declare-fun g_s206_207 () U)
(declare-fun g_s207_208 () U)
(declare-fun g_s208_209 () U)
(declare-fun g_s209_210 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_211 () U)
(declare-fun g_s211_212 () U)
(declare-fun g_s212_213 () U)
(declare-fun g_s213_214 () U)
(declare-fun g_s214_215 () U)
(declare-fun g_s215_216 () U)
(declare-fun g_s216_217 () U)
(declare-fun g_s217_218 () U)
(declare-fun g_s218_219 () U)
(declare-fun g_s219_220 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_221 () U)
(declare-fun g_s221_222 () U)
(declare-fun g_s222_223 () U)
(declare-fun g_s223_224 () U)
(declare-fun g_s224_225 () U)
(declare-fun g_s225_226 () U)
(declare-fun g_s226_227 () U)
(declare-fun g_s227_228 () U)
(declare-fun g_s228_229 () U)
(declare-fun g_s229_230 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_231 () U)
(declare-fun g_s231_232 () U)
(declare-fun g_s232_233 () U)
(declare-fun g_s233_234 () U)
(declare-fun g_s234_235 () U)
(declare-fun g_s235_236 () U)
(declare-fun g_s236_237 () U)
(declare-fun g_s237_238 () U)
(declare-fun g_s238_239 () U)
(declare-fun g_s239_240 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_241 () U)
(declare-fun g_s241_242 () U)
(declare-fun g_s242_243 () U)
(declare-fun g_s243_244 () U)
(declare-fun g_s244_245 () U)
(declare-fun g_s245_246 () U)
(declare-fun g_s246_247 () U)
(declare-fun g_s247_248 () U)
(declare-fun g_s248_249 () U)
(declare-fun g_s249_250 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_251 () U)
(declare-fun g_s251_252 () U)
(declare-fun g_s252_253 () U)
(declare-fun g_s253_254 () U)
(declare-fun g_s254_255 () U)
(declare-fun g_s255_256 () U)
(declare-fun g_s256_257 () U)
(declare-fun g_s257_258 () U)
(declare-fun g_s258_259 () U)
(declare-fun g_s259_260 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_261 () U)
(declare-fun g_s261_262 () U)
(declare-fun g_s262_263 () U)
(declare-fun g_s263_264 () U)
(declare-fun g_s264_265 () U)
(declare-fun g_s265_266 () U)
(declare-fun g_s266_267 () U)
(declare-fun g_s267_268 () U)
(declare-fun g_s268_269 () U)
(declare-fun g_s269_270 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_271 () U)
(declare-fun g_s271_272 () U)
(declare-fun g_s272_273 () U)
(declare-fun g_s273_274 () U)
(declare-fun g_s274_275 () U)
(declare-fun g_s275_276 () U)
(declare-fun g_s276_277 () U)
(declare-fun g_s277_278 () U)
(declare-fun g_s278_279 () U)
(declare-fun g_s279_280 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_281 () U)
(declare-fun g_s281_282 () U)
(declare-fun g_s282_283 () U)
(declare-fun g_s283_284 () U)
(declare-fun g_s284_285 () U)
(declare-fun g_s285_286 () U)
(declare-fun g_s286_287 () U)
(declare-fun g_s287_288 () U)
(declare-fun g_s288_289 () U)
(declare-fun g_s289_290 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_291 () U)
(declare-fun g_s291_292 () U)
(declare-fun g_s292_293 () U)
(declare-fun g_s293_294 () U)
(declare-fun g_s294_295 () U)
(declare-fun g_s295_296 () U)
(declare-fun g_s296_297 () U)
(declare-fun g_s297_298 () U)
(declare-fun g_s298_299 () U)
(declare-fun g_s299_300 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s303_301 () U)
(declare-fun g_s306_316 () U)
(declare-fun g_s306_302 () U)
(declare-fun g_s306_304 () U)
(declare-fun g_s309_303 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s314_305 () U)
(declare-fun g_s317_306 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_307 () U)
(declare-fun g_s323_308 () U)
(declare-fun g_s326_309 () U)
(declare-fun g_s329_310 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s332_311 () U)
(declare-fun g_s335_312 () U)
(declare-fun g_s338_313 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s341_314 () U)
(declare-fun g_s344_315 () U)
(declare-fun g_s349_317 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s352_318 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (not (= g_s12_13 empty)) (not (= g_s13_14 empty)) (not (= g_s14_15 empty)) (not (= g_s15_16 empty)) (not (= g_s16_17 empty)) (not (= g_s17_18 empty)) (not (= g_s18_19 empty)) (not (= g_s19_20 empty)) (not (= g_s20_21 empty)) (not (= g_s21_22 empty)) (not (= g_s22_23 empty)) (= g_s23_24 (SET (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 g_s24_25))))) (not (= g_s28_29 empty)) (not (= g_s29_30 empty)) (not (= g_s30_31 empty)) (not (= g_s31_32 empty)) (not (= g_s32_33 empty)) (not (= g_s33_34 empty)) (not (= g_s34_35 empty)) (not (= g_s35_36 empty)) (not (= g_s36_37 empty)) (not (= g_s37_38 empty)) (not (= g_s38_39 empty)) (not (= g_s39_40 empty)) (not (= g_s40_41 empty)) (not (= g_s41_42 empty)) (not (= g_s42_43 empty)) (not (= g_s43_44 empty)) (= g_s44_45 (SET (mapplet g_s47_48 (mapplet g_s46_47 g_s45_46)))) (not (= g_s48_49 empty)) (not (= g_s49_50 empty)) (not (= g_s50_51 empty)) (not (= g_s51_52 empty)) (not (= g_s52_53 empty)) (not (= g_s53_54 empty)) (not (= g_s54_55 empty)) (not (= g_s55_56 empty)) (= g_s56_57 (SET (mapplet g_s58_59 g_s57_58))) (not (= g_s59_60 empty)) (not (= g_s60_61 empty)) (not (= g_s61_62 empty)) (not (= g_s62_63 empty)) (not (= g_s63_64 empty)) (not (= g_s64_65 empty)) (not (= g_s65_66 empty)) (not (= g_s66_67 empty)) (not (= g_s67_68 empty)) (not (= g_s68_69 empty)) (not (= g_s69_70 empty)) (not (= g_s70_71 empty)) (not (= g_s71_72 empty)) (subset g_s72_73 g_s0_1) (mem g_s73_74 g_s0_1) (not (mem g_s73_74 g_s72_73)) (mem g_s74_75 (|+->| NAT g_s0_1)) (mem g_s74_75 (perm g_s72_73)) (subset g_s75_76 g_s1_2) (mem g_s76_77 g_s1_2) (not (mem g_s76_77 g_s75_76)) (mem g_s77_78 (|+->| NAT g_s1_2)) (mem g_s77_78 (perm g_s75_76)) (subset g_s78_79 g_s2_3) (mem g_s79_80 g_s2_3) (not (mem g_s79_80 g_s78_79)) (mem g_s80_81 (|+->| NAT g_s2_3)) (mem g_s80_81 (perm g_s78_79)) (subset g_s81_82 g_s3_4) (mem g_s82_83 g_s3_4) (not (mem g_s82_83 g_s81_82)) (mem g_s83_84 (|+->| NAT g_s3_4)) (mem g_s83_84 (perm g_s81_82)) (subset g_s84_85 g_s4_5) (mem g_s85_86 g_s4_5) (not (mem g_s85_86 g_s84_85)) (mem g_s86_87 (|+->| NAT g_s4_5)) (mem g_s86_87 (perm g_s84_85)) (subset g_s87_88 g_s5_6) (mem g_s88_89 g_s5_6) (not (mem g_s88_89 g_s87_88)) (mem g_s89_90 (|+->| NAT g_s5_6)) (mem g_s89_90 (perm g_s87_88)) (subset g_s90_91 g_s6_7) (mem g_s91_92 g_s6_7) (not (mem g_s91_92 g_s90_91)) (mem g_s92_93 (|+->| NAT g_s6_7)) (mem g_s92_93 (perm g_s90_91)) (subset g_s93_94 g_s7_8) (mem g_s94_95 g_s7_8) (not (mem g_s94_95 g_s93_94)) (mem g_s95_96 (|+->| NAT g_s7_8)) (mem g_s95_96 (perm g_s93_94)) (subset g_s96_97 g_s8_9) (mem g_s97_98 g_s8_9) (not (mem g_s97_98 g_s96_97)) (mem g_s98_99 (|+->| NAT g_s8_9)) (mem g_s98_99 (perm g_s96_97)) (subset g_s99_100 g_s9_10) (mem g_s100_101 g_s9_10) (not (mem g_s100_101 g_s99_100)) (mem g_s101_102 (|+->| NAT g_s9_10)) (mem g_s101_102 (perm g_s99_100)) (mem g_s102_104 (|-->| (set_prod g_s103_103 g_s103_103) g_s103_103)) (subset g_s104_105 g_s10_11) (mem g_s105_106 g_s10_11) (not (mem g_s105_106 g_s104_105)) (mem g_s106_107 (|+->| NAT g_s10_11)) (mem g_s106_107 (perm g_s104_105)) (subset g_s107_108 g_s11_12) (mem g_s108_109 g_s11_12) (not (mem g_s108_109 g_s107_108)) (mem g_s109_110 (|+->| NAT g_s11_12)) (mem g_s109_110 (perm g_s107_108)) (subset g_s110_111 g_s12_13) (mem g_s111_112 g_s12_13) (not (mem g_s111_112 g_s110_111)) (mem g_s112_113 (|+->| NAT g_s12_13)) (mem g_s112_113 (perm g_s110_111)) (subset g_s113_114 g_s13_14) (mem g_s114_115 g_s13_14) (not (mem g_s114_115 g_s113_114)) (mem g_s115_116 (|+->| NAT g_s13_14)) (mem g_s115_116 (perm g_s113_114)) (subset g_s116_117 g_s14_15) (mem g_s117_118 g_s14_15) (not (mem g_s117_118 g_s116_117)) (mem g_s118_119 (|+->| NAT g_s14_15)) (mem g_s118_119 (perm g_s116_117)) (subset g_s119_120 g_s15_16) (mem g_s120_121 g_s15_16) (not (mem g_s120_121 g_s119_120)) (mem g_s121_122 (|+->| NAT g_s15_16)) (mem g_s121_122 (perm g_s119_120)) (subset g_s122_123 g_s16_17) (mem g_s123_124 g_s16_17) (not (mem g_s123_124 g_s122_123)) (mem g_s124_125 (|+->| NAT g_s16_17)) (mem g_s124_125 (perm g_s122_123)) (subset g_s125_126 g_s17_18) (mem g_s126_127 g_s17_18) (not (mem g_s126_127 g_s125_126)) (mem g_s127_128 (|+->| NAT g_s17_18)) (mem g_s127_128 (perm g_s125_126)) (subset g_s128_129 g_s18_19) (mem g_s129_130 g_s18_19) (not (mem g_s129_130 g_s128_129)) (mem g_s130_131 (|+->| NAT g_s18_19)) (mem g_s130_131 (perm g_s128_129)) (subset g_s131_132 g_s19_20) (mem g_s132_133 g_s19_20) (not (mem g_s132_133 g_s131_132)) (mem g_s133_134 (|+->| NAT g_s19_20)) (mem g_s133_134 (perm g_s131_132)) (subset g_s134_135 g_s20_21) (mem g_s135_136 g_s20_21) (not (mem g_s135_136 g_s134_135)) (mem g_s136_137 (|+->| NAT g_s20_21)) (mem g_s136_137 (perm g_s134_135)) (subset g_s137_138 g_s21_22) (mem g_s138_139 g_s21_22) (not (mem g_s138_139 g_s137_138)) (mem g_s139_140 (|+->| NAT g_s21_22)) (mem g_s139_140 (perm g_s137_138)) (subset g_s140_141 g_s22_23) (mem g_s141_142 g_s22_23) (not (mem g_s141_142 g_s140_141)) (mem g_s142_143 (|+->| NAT g_s22_23)) (mem g_s142_143 (perm g_s140_141)) (subset g_s143_145 g_s144_144) (not (mem g_s145_146 g_s143_145)) (= g_s143_145 (SET (mapplet g_s148_149 (mapplet g_s147_148 g_s146_147)))) (subset g_s149_150 g_s28_29) (mem g_s150_151 g_s28_29) (not (mem g_s150_151 g_s149_150)) (mem g_s151_152 (|+->| NAT g_s28_29)) (mem g_s151_152 (perm g_s149_150)) (subset g_s152_153 g_s29_30) (mem g_s153_154 g_s29_30) (not (mem g_s153_154 g_s152_153)) (mem g_s154_155 (|+->| NAT g_s29_30)) (mem g_s154_155 (perm g_s152_153)) (subset g_s155_156 g_s30_31) (mem g_s156_157 g_s30_31) (not (mem g_s156_157 g_s155_156)) (mem g_s157_158 (|+->| NAT g_s30_31)) (mem g_s157_158 (perm g_s155_156)) (subset g_s158_159 g_s31_32) (mem g_s159_160 g_s31_32) (not (mem g_s159_160 g_s158_159)) (mem g_s160_161 (|+->| NAT g_s31_32)) (mem g_s160_161 (perm g_s158_159)) (subset g_s161_162 g_s32_33) (mem g_s162_163 g_s32_33) (not (mem g_s162_163 g_s161_162)) (mem g_s163_164 (|+->| NAT g_s32_33)) (mem g_s163_164 (perm g_s161_162)) (subset g_s164_165 g_s33_34) (mem g_s165_166 g_s33_34) (not (mem g_s165_166 g_s164_165)) (mem g_s166_167 (|+->| NAT g_s33_34)) (mem g_s166_167 (perm g_s164_165)) (subset g_s167_168 g_s34_35) (mem g_s168_169 g_s34_35) (not (mem g_s168_169 g_s167_168)) (mem g_s169_170 (|+->| NAT g_s34_35)) (mem g_s169_170 (perm g_s167_168)) (subset g_s170_171 g_s35_36) (mem g_s171_172 g_s35_36) (not (mem g_s171_172 g_s170_171)) (mem g_s172_173 (|+->| NAT g_s35_36)) (mem g_s172_173 (perm g_s170_171)) (subset g_s173_174 g_s36_37) (mem g_s174_175 g_s36_37) (not (mem g_s174_175 g_s173_174)) (mem g_s175_176 (|+->| NAT g_s36_37)) (mem g_s175_176 (perm g_s173_174)) (subset g_s176_177 g_s37_38) (mem g_s177_178 g_s37_38) (not (mem g_s177_178 g_s176_177)) (subset g_s178_179 g_s38_39) (mem g_s179_180 g_s38_39) (not (mem g_s179_180 g_s178_179)) (mem g_s180_181 (|+->| NAT g_s38_39)) (mem g_s180_181 (perm g_s178_179)) (subset g_s181_182 g_s39_40) (mem g_s182_183 g_s39_40) (not (mem g_s182_183 g_s181_182)) (subset g_s183_184 g_s40_41) (mem g_s184_185 g_s40_41) (not (mem g_s184_185 g_s183_184)) (subset g_s185_186 g_s41_42) (mem g_s186_187 g_s41_42) (not (mem g_s186_187 g_s185_186)) (mem g_s187_188 (|+->| NAT g_s41_42)) (mem g_s187_188 (perm g_s185_186)) (= g_s188_189 INT) (= g_s189_190 NAT) (mem g_s190_191 g_s188_189) (not (mem g_s190_191 g_s189_190)) (mem g_s191_192 g_s188_189) (mem g_s191_192 g_s189_190) (mem g_s192_194 (|>->| g_s185_186 g_s193_193)) (subset g_s194_195 g_s42_43) (mem g_s195_196 g_s42_43) (not (mem g_s195_196 g_s194_195)) (mem g_s196_197 (|+->| NAT g_s42_43)) (mem g_s196_197 (perm g_s194_195)) (subset g_s197_198 g_s43_44) (mem g_s198_199 g_s43_44) (not (mem g_s198_199 g_s197_198)) (mem g_s199_200 (|+->| NAT g_s43_44)) (mem g_s199_200 (perm g_s197_198)) (subset g_s200_201 g_s48_49) (mem g_s201_202 g_s48_49) (not (mem g_s201_202 g_s200_201)) (mem g_s202_203 (|+->| NAT g_s48_49)) (mem g_s202_203 (perm g_s200_201)) (subset g_s203_204 g_s49_50) (mem g_s204_205 g_s49_50) (not (mem g_s204_205 g_s203_204)) (mem g_s205_206 (|+->| NAT g_s49_50)) (mem g_s205_206 (perm g_s203_204)) (subset g_s206_207 g_s50_51) (mem g_s207_208 g_s50_51) (not (mem g_s207_208 g_s206_207)) (mem g_s208_209 (|+->| NAT g_s50_51)) (mem g_s208_209 (perm g_s206_207)) (subset g_s209_210 g_s51_52) (mem g_s210_211 g_s51_52) (not (mem g_s210_211 g_s209_210)) (mem g_s211_212 (|+->| NAT g_s51_52)) (mem g_s211_212 (perm g_s209_210)) (= (card g_s209_210) g_s212_213) (subset g_s213_214 g_s52_53) (mem g_s214_215 g_s52_53) (not (mem g_s214_215 g_s213_214)) (mem g_s215_216 (|+->| NAT g_s52_53)) (mem g_s215_216 (perm g_s213_214)) (subset g_s216_217 g_s53_54) (mem g_s217_218 g_s53_54) (not (mem g_s217_218 g_s216_217)) (mem g_s218_219 (|+->| NAT g_s53_54)) (mem g_s218_219 (perm g_s216_217)) (= (card g_s216_217) g_s219_220) (subset g_s220_221 g_s54_55) (mem g_s221_222 g_s54_55) (not (mem g_s221_222 g_s220_221)) (mem g_s222_223 (|+->| NAT g_s54_55)) (mem g_s222_223 (perm g_s220_221)) (subset g_s223_224 g_s55_56) (mem g_s224_225 g_s55_56) (not (mem g_s224_225 g_s223_224)) (mem g_s225_226 (|+->| NAT g_s55_56)) (mem g_s225_226 (perm g_s223_224)) (subset g_s226_227 g_s59_60) (mem g_s227_228 g_s59_60) (not (mem g_s227_228 g_s226_227)) (mem g_s228_229 (|+->| NAT g_s59_60)) (mem g_s228_229 (perm g_s226_227)) (subset g_s229_230 g_s60_61) (mem g_s230_231 g_s60_61) (not (mem g_s230_231 g_s229_230)) (mem g_s231_232 (|+->| NAT g_s60_61)) (mem g_s231_232 (perm g_s229_230)) (subset g_s232_233 g_s61_62) (mem g_s233_234 g_s61_62) (not (mem g_s233_234 g_s232_233)) (mem g_s234_235 (|+->| NAT g_s61_62)) (mem g_s234_235 (perm g_s232_233)) (subset g_s235_236 g_s62_63) (mem g_s236_237 g_s62_63) (not (mem g_s236_237 g_s235_236)) (mem g_s237_238 (|+->| NAT g_s62_63)) (mem g_s237_238 (perm g_s235_236)) (subset g_s238_239 g_s63_64) (mem g_s239_240 g_s63_64) (not (mem g_s239_240 g_s238_239)) (mem g_s240_241 (|+->| NAT g_s63_64)) (mem g_s240_241 (perm g_s238_239)) (subset g_s241_242 g_s64_65) (mem g_s242_243 g_s64_65) (not (mem g_s242_243 g_s241_242)) (mem g_s243_244 (|+->| NAT g_s64_65)) (mem g_s243_244 (perm g_s241_242)) (subset g_s244_245 g_s65_66) (mem g_s245_246 g_s65_66) (not (mem g_s245_246 g_s244_245)) (mem g_s246_247 (|+->| NAT g_s65_66)) (mem g_s246_247 (perm g_s244_245)) (subset g_s247_248 g_s66_67) (mem g_s248_249 g_s66_67) (not (mem g_s248_249 g_s247_248)) (mem g_s249_250 (|+->| NAT g_s66_67)) (mem g_s249_250 (perm g_s247_248)) (subset g_s250_251 g_s67_68) (mem g_s251_252 g_s67_68) (not (mem g_s251_252 g_s250_251)) (mem g_s252_253 (|+->| NAT g_s67_68)) (mem g_s252_253 (perm g_s250_251)) (subset g_s253_254 g_s68_69) (mem g_s254_255 g_s68_69) (not (mem g_s254_255 g_s253_254)) (mem g_s255_256 (|+->| NAT g_s68_69)) (mem g_s255_256 (perm g_s253_254)) (subset g_s256_257 g_s69_70) (mem g_s257_258 g_s69_70) (not (mem g_s257_258 g_s256_257)) (subset g_s258_259 g_s70_71) (mem g_s259_260 g_s70_71) (not (mem g_s259_260 g_s258_259)) (mem g_s260_261 (|+->| NAT g_s70_71)) (mem g_s260_261 (perm g_s258_259)) (subset g_s261_262 g_s71_72) (mem g_s262_263 g_s71_72) (not (mem g_s262_263 g_s261_262)) (mem g_s263_264 (|+->| NAT g_s71_72)) (mem g_s263_264 (perm g_s261_262))))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (subset g_s264_265 g_s203_204) (subset g_s265_266 g_s203_204) (= (binary_inter g_s265_266 g_s264_265) empty) (subset g_s266_267 g_s164_165) (subset g_s267_268 g_s164_165) (= (binary_inter g_s267_268 g_s266_267) empty) (subset g_s268_269 g_s167_168) (subset g_s269_270 g_s167_168) (= (binary_inter g_s269_270 g_s268_269) empty) (subset g_s270_271 g_s173_174) (subset g_s271_272 g_s173_174) (= (binary_inter g_s271_272 g_s270_271) empty) (subset g_s272_273 g_s149_150) (subset g_s273_274 g_s149_150) (= (binary_inter g_s273_274 g_s272_273) empty) (subset g_s274_275 g_s155_156) (subset g_s275_276 g_s155_156) (= (binary_inter g_s275_276 g_s274_275) empty) (subset g_s276_277 g_s122_123) (subset g_s277_278 g_s122_123) (= (binary_inter g_s277_278 g_s276_277) empty) (subset g_s278_279 g_s104_105) (subset g_s279_280 g_s104_105) (= (binary_inter g_s279_280 g_s278_279) empty) (subset g_s280_281 g_s84_85) (subset g_s281_282 g_s84_85) (= (binary_inter g_s281_282 g_s280_281) empty) (subset g_s282_283 g_s128_129) (subset g_s283_284 g_s128_129) (= (binary_inter g_s283_284 g_s282_283) empty) (subset g_s284_285 g_s116_117) (subset g_s285_286 g_s116_117) (= (binary_inter g_s285_286 g_s284_285) empty) (subset g_s286_287 g_s72_73) (subset g_s287_288 g_s72_73) (= (binary_inter g_s287_288 g_s286_287) empty) (subset g_s288_289 g_s90_91) (subset g_s289_290 g_s90_91) (= (binary_inter g_s289_290 g_s288_289) empty) (subset g_s290_291 g_s244_245) (subset g_s291_292 g_s244_245) (= (binary_inter g_s291_292 g_s290_291) empty) (subset g_s292_293 g_s200_201) (subset g_s293_294 g_s200_201) (= (binary_inter g_s293_294 g_s292_293) empty) (subset g_s294_295 g_s161_162) (subset g_s295_296 g_s161_162) (= (binary_inter g_s295_296 g_s294_295) empty) (subset g_s296_297 g_s229_230) (subset g_s297_298 g_s229_230) (= (binary_inter g_s297_298 g_s296_297) empty) (subset g_s298_299 g_s197_198) (subset g_s299_300 g_s197_198) (= (binary_inter g_s299_300 g_s298_299) empty)))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 0
(push 1)
(assert (not (subset empty g_s203_204)))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (subset g_s203_204 g_s203_204)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (= (binary_inter empty g_s203_204) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s264_265 empty)))
(define-fun lh_1 () Bool (mem g_s303_301 g_s49_50))
(define-fun lh_2 () Bool (mem g_s303_301 g_s203_204))
(define-fun lh_3 () Bool (mem g_s303_301 g_s264_265))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s264_265 (SET g_s303_301)) g_s203_204))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s265_266 (SET g_s303_301)) g_s203_204))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s265_266 (SET g_s303_301)) (set_diff g_s264_265 (SET g_s303_301))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 2
(push 1)
(assert (not (subset empty g_s164_165)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (subset g_s164_165 g_s164_165)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (= (binary_inter empty g_s164_165) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s266_267 empty)))
(define-fun lh_1 () Bool (mem g_s306_302 g_s33_34))
(define-fun lh_2 () Bool (mem g_s306_302 g_s164_165))
(define-fun lh_3 () Bool (mem g_s306_302 g_s266_267))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s266_267 (SET g_s306_302)) g_s164_165))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s267_268 (SET g_s306_302)) g_s164_165))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s267_268 (SET g_s306_302)) (set_diff g_s266_267 (SET g_s306_302))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 4
(push 1)
(assert (not (subset empty g_s167_168)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (subset g_s167_168 g_s167_168)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (= (binary_inter empty g_s167_168) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s268_269 empty)))
(define-fun lh_1 () Bool (mem g_s309_303 g_s34_35))
(define-fun lh_2 () Bool (mem g_s309_303 g_s167_168))
(define-fun lh_3 () Bool (mem g_s309_303 g_s268_269))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s268_269 (SET g_s309_303)) g_s167_168))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s269_270 (SET g_s309_303)) g_s167_168))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s269_270 (SET g_s309_303)) (set_diff g_s268_269 (SET g_s309_303))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 6
(push 1)
(assert (not (subset empty g_s173_174)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (subset g_s173_174 g_s173_174)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (= (binary_inter empty g_s173_174) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s270_271 empty)))
(define-fun lh_1 () Bool (mem g_s306_304 g_s36_37))
(define-fun lh_2 () Bool (mem g_s306_304 g_s173_174))
(define-fun lh_3 () Bool (mem g_s306_304 g_s270_271))
; PO 1 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s270_271 (SET g_s306_304)) g_s173_174))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s271_272 (SET g_s306_304)) g_s173_174))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s271_272 (SET g_s306_304)) (set_diff g_s270_271 (SET g_s306_304))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 8
(push 1)
(assert (not (subset empty g_s244_245)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (subset g_s244_245 g_s244_245)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 8
(push 1)
(assert (not (= (binary_inter empty g_s244_245) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s290_291 empty)))
(define-fun lh_1 () Bool (mem g_s314_305 g_s65_66))
(define-fun lh_2 () Bool (mem g_s314_305 g_s244_245))
(define-fun lh_3 () Bool (mem g_s314_305 g_s290_291))
; PO 1 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s290_291 (SET g_s314_305)) g_s244_245))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s291_292 (SET g_s314_305)) g_s244_245))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s291_292 (SET g_s314_305)) (set_diff g_s290_291 (SET g_s314_305))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 10
(push 1)
(assert (not (subset empty g_s200_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (subset g_s200_201 g_s200_201)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (= (binary_inter empty g_s200_201) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s292_293 empty)))
(define-fun lh_1 () Bool (mem g_s317_306 g_s48_49))
(define-fun lh_2 () Bool (mem g_s317_306 g_s200_201))
(define-fun lh_3 () Bool (mem g_s317_306 g_s292_293))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s292_293 (SET g_s317_306)) g_s200_201))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s293_294 (SET g_s317_306)) g_s200_201))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s293_294 (SET g_s317_306)) (set_diff g_s292_293 (SET g_s317_306))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 12
(push 1)
(assert (not (subset empty g_s149_150)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (subset g_s149_150 g_s149_150)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 12
(push 1)
(assert (not (= (binary_inter empty g_s149_150) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s272_273 empty)))
(define-fun lh_1 () Bool (mem g_s320_307 g_s28_29))
(define-fun lh_2 () Bool (mem g_s320_307 g_s149_150))
(define-fun lh_3 () Bool (mem g_s320_307 g_s272_273))
; PO 1 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s272_273 (SET g_s320_307)) g_s149_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s273_274 (SET g_s320_307)) g_s149_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s273_274 (SET g_s320_307)) (set_diff g_s272_273 (SET g_s320_307))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 14
(push 1)
(assert (not (subset empty g_s155_156)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (subset g_s155_156 g_s155_156)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 14
(push 1)
(assert (not (= (binary_inter empty g_s155_156) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s274_275 empty)))
(define-fun lh_1 () Bool (mem g_s323_308 g_s30_31))
(define-fun lh_2 () Bool (mem g_s323_308 g_s155_156))
(define-fun lh_3 () Bool (mem g_s323_308 g_s274_275))
; PO 1 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s274_275 (SET g_s323_308)) g_s155_156))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s275_276 (SET g_s323_308)) g_s155_156))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s275_276 (SET g_s323_308)) (set_diff g_s274_275 (SET g_s323_308))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 16
(push 1)
(assert (not (subset empty g_s122_123)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (subset g_s122_123 g_s122_123)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 16
(push 1)
(assert (not (= (binary_inter empty g_s122_123) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s276_277 empty)))
(define-fun lh_1 () Bool (mem g_s326_309 g_s16_17))
(define-fun lh_2 () Bool (mem g_s326_309 g_s122_123))
(define-fun lh_3 () Bool (mem g_s326_309 g_s276_277))
; PO 1 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s276_277 (SET g_s326_309)) g_s122_123))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s277_278 (SET g_s326_309)) g_s122_123))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s277_278 (SET g_s326_309)) (set_diff g_s276_277 (SET g_s326_309))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 18
(push 1)
(assert (not (subset empty g_s104_105)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 18
(push 1)
(assert (not (subset g_s104_105 g_s104_105)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 18
(push 1)
(assert (not (= (binary_inter empty g_s104_105) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s278_279 empty)))
(define-fun lh_1 () Bool (mem g_s329_310 g_s10_11))
(define-fun lh_2 () Bool (mem g_s329_310 g_s104_105))
(define-fun lh_3 () Bool (mem g_s329_310 g_s278_279))
; PO 1 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s278_279 (SET g_s329_310)) g_s104_105))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s279_280 (SET g_s329_310)) g_s104_105))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s279_280 (SET g_s329_310)) (set_diff g_s278_279 (SET g_s329_310))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 20
(push 1)
(assert (not (subset empty g_s84_85)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 20
(push 1)
(assert (not (subset g_s84_85 g_s84_85)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 20
(push 1)
(assert (not (= (binary_inter empty g_s84_85) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s280_281 empty)))
(define-fun lh_1 () Bool (mem g_s332_311 g_s4_5))
(define-fun lh_2 () Bool (mem g_s332_311 g_s84_85))
(define-fun lh_3 () Bool (mem g_s332_311 g_s280_281))
; PO 1 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s280_281 (SET g_s332_311)) g_s84_85))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s281_282 (SET g_s332_311)) g_s84_85))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 21
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s281_282 (SET g_s332_311)) (set_diff g_s280_281 (SET g_s332_311))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 22
(push 1)
(assert (not (subset empty g_s128_129)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 22
(push 1)
(assert (not (subset g_s128_129 g_s128_129)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 22
(push 1)
(assert (not (= (binary_inter empty g_s128_129) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s282_283 empty)))
(define-fun lh_1 () Bool (mem g_s335_312 g_s18_19))
(define-fun lh_2 () Bool (mem g_s335_312 g_s128_129))
(define-fun lh_3 () Bool (mem g_s335_312 g_s282_283))
; PO 1 in group 23
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s282_283 (SET g_s335_312)) g_s128_129))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 23
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s283_284 (SET g_s335_312)) g_s128_129))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 23
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s283_284 (SET g_s335_312)) (set_diff g_s282_283 (SET g_s335_312))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 24 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 24
(push 1)
(assert (not (subset empty g_s116_117)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 24
(push 1)
(assert (not (subset g_s116_117 g_s116_117)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 24
(push 1)
(assert (not (= (binary_inter empty g_s116_117) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 25 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s284_285 empty)))
(define-fun lh_1 () Bool (mem g_s338_313 g_s14_15))
(define-fun lh_2 () Bool (mem g_s338_313 g_s116_117))
(define-fun lh_3 () Bool (mem g_s338_313 g_s284_285))
; PO 1 in group 25
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s284_285 (SET g_s338_313)) g_s116_117))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 25
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s285_286 (SET g_s338_313)) g_s116_117))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 25
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s285_286 (SET g_s338_313)) (set_diff g_s284_285 (SET g_s338_313))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 26 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 26
(push 1)
(assert (not (subset empty g_s72_73)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 26
(push 1)
(assert (not (subset g_s72_73 g_s72_73)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 26
(push 1)
(assert (not (= (binary_inter empty g_s72_73) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 27 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s286_287 empty)))
(define-fun lh_1 () Bool (mem g_s341_314 g_s0_1))
(define-fun lh_2 () Bool (mem g_s341_314 g_s72_73))
(define-fun lh_3 () Bool (mem g_s341_314 g_s286_287))
; PO 1 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s286_287 (SET g_s341_314)) g_s72_73))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s287_288 (SET g_s341_314)) g_s72_73))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s287_288 (SET g_s341_314)) (set_diff g_s286_287 (SET g_s341_314))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 28 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 28
(push 1)
(assert (not (subset empty g_s90_91)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 28
(push 1)
(assert (not (subset g_s90_91 g_s90_91)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 28
(push 1)
(assert (not (= (binary_inter empty g_s90_91) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 29 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s288_289 empty)))
(define-fun lh_1 () Bool (mem g_s344_315 g_s6_7))
(define-fun lh_2 () Bool (mem g_s344_315 g_s90_91))
(define-fun lh_3 () Bool (mem g_s344_315 g_s288_289))
; PO 1 in group 29
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s288_289 (SET g_s344_315)) g_s90_91))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 29
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s289_290 (SET g_s344_315)) g_s90_91))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 29
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s289_290 (SET g_s344_315)) (set_diff g_s288_289 (SET g_s344_315))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 30 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 30
(push 1)
(assert (not (subset empty g_s161_162)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 30
(push 1)
(assert (not (subset g_s161_162 g_s161_162)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 30
(push 1)
(assert (not (= (binary_inter empty g_s161_162) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 31 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s294_295 empty)))
(define-fun lh_1 () Bool (mem g_s306_316 g_s32_33))
(define-fun lh_2 () Bool (mem g_s306_316 g_s161_162))
(define-fun lh_3 () Bool (mem g_s306_316 g_s294_295))
; PO 1 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s294_295 (SET g_s306_316)) g_s161_162))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s295_296 (SET g_s306_316)) g_s161_162))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 31
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s295_296 (SET g_s306_316)) (set_diff g_s294_295 (SET g_s306_316))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 32 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 32
(push 1)
(assert (not (subset empty g_s229_230)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 32
(push 1)
(assert (not (subset g_s229_230 g_s229_230)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 32
(push 1)
(assert (not (= (binary_inter empty g_s229_230) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 33 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s296_297 empty)))
(define-fun lh_1 () Bool (mem g_s349_317 g_s60_61))
(define-fun lh_2 () Bool (mem g_s349_317 g_s229_230))
(define-fun lh_3 () Bool (mem g_s349_317 g_s296_297))
; PO 1 in group 33
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s296_297 (SET g_s349_317)) g_s229_230))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 33
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s297_298 (SET g_s349_317)) g_s229_230))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 33
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s297_298 (SET g_s349_317)) (set_diff g_s296_297 (SET g_s349_317))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 34 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
; PO 1 in group 34
(push 1)
(assert (not (subset empty g_s197_198)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 34
(push 1)
(assert (not (subset g_s197_198 g_s197_198)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 34
(push 1)
(assert (not (= (binary_inter empty g_s197_198) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 35 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (not (= g_s298_299 empty)))
(define-fun lh_1 () Bool (mem g_s352_318 g_s43_44))
(define-fun lh_2 () Bool (mem g_s352_318 g_s197_198))
(define-fun lh_3 () Bool (mem g_s352_318 g_s298_299))
; PO 1 in group 35
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (set_diff g_s298_299 (SET g_s352_318)) g_s197_198))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 35
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (subset (binary_union g_s299_300 (SET g_s352_318)) g_s197_198))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 35
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (binary_inter (binary_union g_s299_300 (SET g_s352_318)) (set_diff g_s298_299 (SET g_s352_318))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)