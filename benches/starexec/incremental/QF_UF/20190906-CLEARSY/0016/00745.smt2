(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e152 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s141_142 () U)
(declare-fun g_s142_143 () U)
(declare-fun g_s143_144 () U)
(declare-fun g_s144_145 () U)
(declare-fun g_s145_146 () U)
(declare-fun g_s146_147 () U)
(declare-fun g_s147_148 () U)
(declare-fun g_s148_150 () U)
(declare-fun g_s149_149 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_151 () U)
(declare-fun g_s151_153 () U)
(declare-fun g_s152_154 () U)
(declare-fun g_s153_155 () U)
(declare-fun g_s154_156 () U)
(declare-fun g_s155_157 () U)
(declare-fun g_s156_158 () U)
(declare-fun g_s157_159 () U)
(declare-fun g_s158_160 () U)
(declare-fun g_s159_161 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_162 () U)
(declare-fun g_s161_163 () U)
(declare-fun g_s162_164 () U)
(declare-fun g_s163_165 () U)
(declare-fun g_s164_166 () U)
(declare-fun g_s165_167 () U)
(declare-fun g_s166_168 () U)
(declare-fun g_s167_169 () U)
(declare-fun g_s168_170 () U)
(declare-fun g_s169_171 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_172 () U)
(declare-fun g_s171_173 () U)
(declare-fun g_s172_174 () U)
(declare-fun g_s173_175 () U)
(declare-fun g_s174_176 () U)
(declare-fun g_s175_177 () U)
(declare-fun g_s176_178 () U)
(declare-fun g_s177_179 () U)
(declare-fun g_s178_180 () U)
(declare-fun g_s179_181 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_182 () U)
(declare-fun g_s181_183 () U)
(declare-fun g_s182_184 () U)
(declare-fun g_s183_185 () U)
(declare-fun g_s184_186 () U)
(declare-fun g_s185_187 () U)
(declare-fun g_s186_188 () U)
(declare-fun g_s187_189 () U)
(declare-fun g_s188_190 () U)
(declare-fun g_s189_191 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_192 () U)
(declare-fun g_s191_193 () U)
(declare-fun g_s192_194 () U)
(declare-fun g_s193_195 () U)
(declare-fun g_s194_196 () U)
(declare-fun g_s195_198 () U)
(declare-fun g_s196_197 () U)
(declare-fun g_s197_199 () U)
(declare-fun g_s198_200 () U)
(declare-fun g_s199_201 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_202 () U)
(declare-fun g_s201_203 () U)
(declare-fun g_s202_204 () U)
(declare-fun g_s203_205 () U)
(declare-fun g_s204_206 () U)
(declare-fun g_s205_207 () U)
(declare-fun g_s206_208 () U)
(declare-fun g_s207_209 () U)
(declare-fun g_s208_210 () U)
(declare-fun g_s209_211 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_212 () U)
(declare-fun g_s211_213 () U)
(declare-fun g_s212_214 () U)
(declare-fun g_s213_215 () U)
(declare-fun g_s214_216 () U)
(declare-fun g_s215_217 () U)
(declare-fun g_s216_218 () U)
(declare-fun g_s217_219 () U)
(declare-fun g_s218_220 () U)
(declare-fun g_s219_221 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_223 () U)
(declare-fun g_s221_222 () U)
(declare-fun g_s222_224 () U)
(declare-fun g_s223_226 () U)
(declare-fun g_s224_225 () U)
(declare-fun g_s225_227 () U)
(declare-fun g_s226_228 () U)
(declare-fun g_s227_230 () U)
(declare-fun g_s228_229 () U)
(declare-fun g_s229_231 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_232 () U)
(declare-fun g_s231_233 () U)
(declare-fun g_s232_234 () U)
(declare-fun g_s233_235 () U)
(declare-fun g_s234_236 () U)
(declare-fun g_s235_237 () U)
(declare-fun g_s236_238 () U)
(declare-fun g_s237_239 () U)
(declare-fun g_s238_240 () U)
(declare-fun g_s239_241 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_242 () U)
(declare-fun g_s241_243 () U)
(declare-fun g_s242_244 () U)
(declare-fun g_s243_245 () U)
(declare-fun g_s244_246 () U)
(declare-fun g_s245_247 () U)
(declare-fun g_s246_248 () U)
(declare-fun g_s247_249 () U)
(declare-fun g_s248_250 () U)
(declare-fun g_s249_251 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_252 () U)
(declare-fun g_s251_253 () U)
(declare-fun g_s252_254 () U)
(declare-fun g_s253_255 () U)
(declare-fun g_s254_256 () U)
(declare-fun g_s255_257 () U)
(declare-fun g_s256_258 () U)
(declare-fun g_s257_259 () U)
(declare-fun g_s258_260 () U)
(declare-fun g_s259_261 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_262 () U)
(declare-fun g_s261_263 () U)
(declare-fun g_s262_264 () U)
(declare-fun g_s263_265 () U)
(declare-fun g_s264_266 () U)
(declare-fun g_s265_267 () U)
(declare-fun g_s266_268 () U)
(declare-fun g_s267_269 () U)
(declare-fun g_s268_270 () U)
(declare-fun g_s269_271 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_272 () U)
(declare-fun g_s271_273 () U)
(declare-fun g_s272_274 () U)
(declare-fun g_s273_275 () U)
(declare-fun g_s274_276 () U)
(declare-fun g_s275_277 () U)
(declare-fun g_s276_278 () U)
(declare-fun g_s277_279 () U)
(declare-fun g_s278_281 () U)
(declare-fun g_s279_280 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_282 () U)
(declare-fun g_s281_283 () U)
(declare-fun g_s282_284 () U)
(declare-fun g_s283_285 () U)
(declare-fun g_s284_286 () U)
(declare-fun g_s285_287 () U)
(declare-fun g_s286_288 () U)
(declare-fun g_s287_289 () U)
(declare-fun g_s288_290 () U)
(declare-fun g_s289_291 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_292 () U)
(declare-fun g_s291_293 () U)
(declare-fun g_s292_294 () U)
(declare-fun g_s293_295 () U)
(declare-fun g_s294_296 () U)
(declare-fun g_s295_297 () U)
(declare-fun g_s296_298 () U)
(declare-fun g_s297_299 () U)
(declare-fun g_s298_300 () U)
(declare-fun g_s299_301 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_302 () U)
(declare-fun g_s301_303 () U)
(declare-fun g_s302_304 () U)
(declare-fun g_s303_305 () U)
(declare-fun g_s304_306 () U)
(declare-fun g_s305_307 () U)
(declare-fun g_s306_308 () U)
(declare-fun g_s307_309 () U)
(declare-fun g_s308_310 () U)
(declare-fun g_s309_311 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_312 () U)
(declare-fun g_s311_313 () U)
(declare-fun g_s312_314 () U)
(declare-fun g_s313_315 () U)
(declare-fun g_s314_316 () U)
(declare-fun g_s315_317 () U)
(declare-fun g_s316_318 () U)
(declare-fun g_s317_319 () U)
(declare-fun g_s318_320 () U)
(declare-fun g_s319_321 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_322 () U)
(declare-fun g_s321_323 () U)
(declare-fun g_s322_324 () U)
(declare-fun g_s323_325 () U)
(declare-fun g_s324_326 () U)
(declare-fun g_s325_327 () U)
(declare-fun g_s326_328 () U)
(declare-fun g_s327_329 () U)
(declare-fun g_s328_330 () U)
(declare-fun g_s329_331 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_332 () U)
(declare-fun g_s331_333 () U)
(declare-fun g_s332_334 () U)
(declare-fun g_s333_335 () U)
(declare-fun g_s334_336 () U)
(declare-fun g_s335_337 () U)
(declare-fun g_s336_338 () U)
(declare-fun g_s337_339 () U)
(declare-fun g_s338_340 () U)
(declare-fun g_s339_341 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_342 () U)
(declare-fun g_s341_343 () U)
(declare-fun g_s342_344 () U)
(declare-fun g_s343_345 () U)
(declare-fun g_s344_346 () U)
(declare-fun g_s345_347 () U)
(declare-fun g_s346_348 () U)
(declare-fun g_s347_349 () U)
(declare-fun g_s348_350 () U)
(declare-fun g_s349_351 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_352 () U)
(declare-fun g_s351_353 () U)
(declare-fun g_s352_354 () U)
(declare-fun g_s353_355 () U)
(declare-fun g_s354_356 () U)
(declare-fun g_s355_357 () U)
(declare-fun g_s356_358 () U)
(declare-fun g_s357_359 () U)
(declare-fun g_s358_360 () U)
(declare-fun g_s359_361 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_362 () U)
(declare-fun g_s361_363 () U)
(declare-fun g_s362_364 () U)
(declare-fun g_s363_365 () U)
(declare-fun g_s364_366 () U)
(declare-fun g_s365_367 () U)
(declare-fun g_s366_368 () U)
(declare-fun g_s367_369 () U)
(declare-fun g_s368_370 () U)
(declare-fun g_s369_371 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_372 () U)
(declare-fun g_s370$1_445 () U)
(declare-fun g_s370$2_542 () U)
(declare-fun g_s371_373 () U)
(declare-fun g_s371$1_446 () U)
(declare-fun g_s371$2_545 () U)
(declare-fun g_s372_374 () U)
(declare-fun g_s372$1_454 () U)
(declare-fun g_s373_375 () U)
(declare-fun g_s373$1_470 () U)
(declare-fun g_s374_376 () U)
(declare-fun g_s374$1_434 () U)
(declare-fun g_s375_377 () U)
(declare-fun g_s375$1_435 () U)
(declare-fun g_s376_378 () U)
(declare-fun g_s376$1_436 () U)
(declare-fun g_s377_379 () U)
(declare-fun g_s377$1_437 () U)
(declare-fun g_s378_380 () U)
(declare-fun g_s378$1_443 () U)
(declare-fun g_s379_381 () U)
(declare-fun g_s379$1_433 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_382 () U)
(declare-fun g_s380$1_429 () U)
(declare-fun g_s381_383 () U)
(declare-fun g_s381$1_444 () U)
(declare-fun g_s382_384 () U)
(declare-fun g_s382$1_428 () U)
(declare-fun g_s383_385 () U)
(declare-fun g_s383$1_438 () U)
(declare-fun g_s384_386 () U)
(declare-fun g_s384$1_439 () U)
(declare-fun g_s385_387 () U)
(declare-fun g_s385$1_440 () U)
(declare-fun g_s386_388 () U)
(declare-fun g_s386$1_441 () U)
(declare-fun g_s387_389 () U)
(declare-fun g_s387$1_442 () U)
(declare-fun g_s388_390 () U)
(declare-fun g_s388$1_471 () U)
(declare-fun g_s389_391 () U)
(declare-fun g_s389$1_472 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_392 () U)
(declare-fun g_s390$1_430 () U)
(declare-fun g_s391_393 () U)
(declare-fun g_s391$1_431 () U)
(declare-fun g_s392_394 () U)
(declare-fun g_s392$1_432 () U)
(declare-fun g_s393_395 () U)
(declare-fun g_s393$1_477 () U)
(declare-fun g_s394_396 () U)
(declare-fun g_s394$1_478 () U)
(declare-fun g_s394$2_557 () U)
(declare-fun g_s395_397 () U)
(declare-fun g_s395$1_479 () U)
(declare-fun g_s395$2_558 () U)
(declare-fun g_s396_398 () U)
(declare-fun g_s396$1_480 () U)
(declare-fun g_s397_399 () U)
(declare-fun g_s397$1_483 () U)
(declare-fun g_s398_400 () U)
(declare-fun g_s398$1_481 () U)
(declare-fun g_s399_401 () U)
(declare-fun g_s399$1_482 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_402 () U)
(declare-fun g_s400$1_447 () U)
(declare-fun g_s401_403 () U)
(declare-fun g_s401$1_448 () U)
(declare-fun g_s402_404 () U)
(declare-fun g_s402$1_450 () U)
(declare-fun g_s403_405 () U)
(declare-fun g_s403$1_451 () U)
(declare-fun g_s404_406 () U)
(declare-fun g_s404$1_449 () U)
(declare-fun g_s405_407 () U)
(declare-fun g_s405$1_455 () U)
(declare-fun g_s405$2_548 () U)
(declare-fun g_s406_408 () U)
(declare-fun g_s406$1_456 () U)
(declare-fun g_s407_409 () U)
(declare-fun g_s407$1_457 () U)
(declare-fun g_s408_410 () U)
(declare-fun g_s408$1_458 () U)
(declare-fun g_s409_411 () U)
(declare-fun g_s409$1_459 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_412 () U)
(declare-fun g_s410$1_460 () U)
(declare-fun g_s410$2_549 () U)
(declare-fun g_s411_413 () U)
(declare-fun g_s411$1_461 () U)
(declare-fun g_s411$2_552 () U)
(declare-fun g_s412_414 () U)
(declare-fun g_s412$1_462 () U)
(declare-fun g_s412$2_553 () U)
(declare-fun g_s413_415 () U)
(declare-fun g_s413$1_463 () U)
(declare-fun g_s413$2_554 () U)
(declare-fun g_s414_416 () U)
(declare-fun g_s414$1_464 () U)
(declare-fun g_s415_417 () U)
(declare-fun g_s415$1_465 () U)
(declare-fun g_s416_418 () U)
(declare-fun g_s416$1_466 () U)
(declare-fun g_s417_419 () U)
(declare-fun g_s417$1_473 () U)
(declare-fun g_s418_420 () U)
(declare-fun g_s418$1_467 () U)
(declare-fun g_s419_421 () U)
(declare-fun g_s419$1_468 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_422 () U)
(declare-fun g_s420$1_469 () U)
(declare-fun g_s421_423 () U)
(declare-fun g_s421$1_474 () U)
(declare-fun g_s422_424 () U)
(declare-fun g_s422$1_475 () U)
(declare-fun g_s423_425 () U)
(declare-fun g_s423$1_476 () U)
(declare-fun g_s424_426 () U)
(declare-fun g_s424$1_452 () U)
(declare-fun g_s425_427 () U)
(declare-fun g_s425$1_453 () U)
(declare-fun g_s426$1_484 () U)
(declare-fun g_s426$2_612 () U)
(declare-fun g_s427$1_485 () U)
(declare-fun g_s427$2_616 () U)
(declare-fun g_s428$1_486 () U)
(declare-fun g_s428$2_610 () U)
(declare-fun g_s429$1_487 () U)
(declare-fun g_s429$2_618 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430$1_488 () U)
(declare-fun g_s430$2_614 () U)
(declare-fun g_s431$1_489 () U)
(declare-fun g_s431$2_546 () U)
(declare-fun g_s432$1_490 () U)
(declare-fun g_s432$2_550 () U)
(declare-fun g_s433$1_491 () U)
(declare-fun g_s433$2_606 () U)
(declare-fun g_s434$1_492 () U)
(declare-fun g_s434$2_620 () U)
(declare-fun g_s435$1_493 () U)
(declare-fun g_s435$2_555 () U)
(declare-fun g_s436$1_494 () U)
(declare-fun g_s436$2_609 () U)
(declare-fun g_s437$1_495 () U)
(declare-fun g_s437$2_608 () U)
(declare-fun g_s438$1_496 () U)
(declare-fun g_s438$2_539 () U)
(declare-fun g_s438$3_605 () U)
(declare-fun g_s438$4_607 () U)
(declare-fun g_s438$5_611 () U)
(declare-fun g_s438$6_613 () U)
(declare-fun g_s438$7_615 () U)
(declare-fun g_s438$8_617 () U)
(declare-fun g_s438$9_619 () U)
(declare-fun g_s438$10_621 () U)
(declare-fun g_s438$11_622 () U)
(declare-fun g_s438$12_624 () U)
(declare-fun g_s438$13_626 () U)
(declare-fun g_s438$14_628 () U)
(declare-fun g_s439$1_497 () U)
(declare-fun g_s439$2_540 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s440$1_498 () U)
(declare-fun g_s440$2_543 () U)
(declare-fun g_s441$1_499 () U)
(declare-fun g_s441$2_623 () U)
(declare-fun g_s442$1_500 () U)
(declare-fun g_s442$2_627 () U)
(declare-fun g_s443$1_501 () U)
(declare-fun g_s443$2_625 () U)
(declare-fun g_s444$1_502 () U)
(declare-fun g_s444$2_629 () U)
(declare-fun g_s445$1_503 () U)
(declare-fun g_s446$1_504 () U)
(declare-fun g_s447$1_505 () U)
(declare-fun g_s448$1_506 () U)
(declare-fun g_s449$1_507 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s450$1_508 () U)
(declare-fun g_s451$1_509 () U)
(declare-fun g_s452$1_510 () U)
(declare-fun g_s453$1_511 () U)
(declare-fun g_s454$1_512 () U)
(declare-fun g_s455$1_513 () U)
(declare-fun g_s456$1_514 () U)
(declare-fun g_s457$1_515 () U)
(declare-fun g_s458$1_516 () U)
(declare-fun g_s459$1_517 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s460$1_518 () U)
(declare-fun g_s461$1_519 () U)
(declare-fun g_s462$1_520 () U)
(declare-fun g_s463$1_521 () U)
(declare-fun g_s464$1_522 () U)
(declare-fun g_s465$1_523 () U)
(declare-fun g_s466$1_524 () U)
(declare-fun g_s467$1_525 () U)
(declare-fun g_s468$1_526 () U)
(declare-fun g_s469$1_527 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s470$1_528 () U)
(declare-fun g_s471$1_529 () U)
(declare-fun g_s472$1_530 () U)
(declare-fun g_s473$1_531 () U)
(declare-fun g_s474$1_532 () U)
(declare-fun g_s475$1_533 () U)
(declare-fun g_s476$1_534 () U)
(declare-fun g_s477$1_535 () U)
(declare-fun g_s478$1_536 () U)
(declare-fun g_s479$1_537 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s480$1_538 () U)
(declare-fun g_s482_541 () U)
(declare-fun g_s489_544 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s491_547 () U)
(declare-fun g_s493_551 () U)
(declare-fun g_s495_556 () U)
(declare-fun g_s497_559 () U)
(declare-fun g_s497$1_560 () U)
(declare-fun g_s498_561 () U)
(declare-fun g_s498$1_562 () U)
(declare-fun g_s498$2_564 () U)
(declare-fun g_s499_563 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s503_565 () U)
(declare-fun g_s503$1_566 () U)
(declare-fun g_s504_567 () U)
(declare-fun g_s504$1_568 () U)
(declare-fun g_s504$2_569 () U)
(declare-fun g_s507_570 () U)
(declare-fun g_s507$1_571 () U)
(declare-fun g_s508_572 () U)
(declare-fun g_s508$1_573 () U)
(declare-fun g_s508$2_575 () U)
(declare-fun g_s509_574 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s512_576 () U)
(declare-fun g_s512$1_577 () U)
(declare-fun g_s513_578 () U)
(declare-fun g_s513$1_579 () U)
(declare-fun g_s513$2_580 () U)
(declare-fun g_s516_581 () U)
(declare-fun g_s516$1_582 () U)
(declare-fun g_s517_583 () U)
(declare-fun g_s517$1_584 () U)
(declare-fun g_s517$2_585 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s520_586 () U)
(declare-fun g_s520$1_587 () U)
(declare-fun g_s521_588 () U)
(declare-fun g_s521$1_589 () U)
(declare-fun g_s521$2_590 () U)
(declare-fun g_s524_591 () U)
(declare-fun g_s524$1_592 () U)
(declare-fun g_s525_593 () U)
(declare-fun g_s525$1_594 () U)
(declare-fun g_s525$2_596 () U)
(declare-fun g_s526_595 () U)
(declare-fun g_s529_597 () U)
(declare-fun g_s529$1_598 () U)
(declare-fun g_s529$2_600 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s530_599 () U)
(declare-fun g_s532_601 () U)
(declare-fun g_s532$1_602 () U)
(declare-fun g_s534_603 () U)
(declare-fun g_s537_604 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s545_630 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s556_631 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (= g_s2_3 (SET (mapplet g_s6_7 (mapplet g_s5_6 (mapplet g_s4_5 g_s3_4))))) (= g_s7_8 (SET (mapplet g_s11_12 (mapplet g_s10_11 (mapplet g_s9_10 g_s8_9))))) (= g_s12_13 (SET (mapplet g_s15_16 (mapplet g_s14_15 g_s13_14)))) (= g_s16_17 (SET (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 g_s17_18))))) (= g_s21_22 (SET (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 g_s22_23))))) (= g_s26_27 (SET (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 g_s27_28))))) (= g_s31_32 (SET (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 g_s32_33))))) (= g_s36_37 (SET (mapplet g_s39_40 (mapplet g_s38_39 g_s37_38)))) (= g_s40_41 (SET (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 g_s41_42))))) (= g_s45_46 (SET (mapplet g_s48_49 (mapplet g_s47_48 g_s46_47)))) (= g_s49_50 (SET (mapplet g_s52_53 (mapplet g_s51_52 g_s50_51)))) (= g_s53_54 (SET (mapplet g_s60_61 (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 g_s54_55)))))))) (= g_s61_62 (SET (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 g_s62_63))))) (= g_s66_67 (SET (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 g_s67_68))))) (not (= g_s71_72 empty)) (not (= g_s72_73 empty)) (not (= g_s73_74 empty)) (not (= g_s74_75 empty)) (not (= g_s75_76 empty)) (not (= g_s76_77 empty)) (not (= g_s77_78 empty)) (not (= g_s78_79 empty)) (not (= g_s79_80 empty)) (not (= g_s80_81 empty)) (not (= g_s81_82 empty)) (not (= g_s82_83 empty)) (not (= g_s83_84 empty)) (not (= g_s84_85 empty)) (not (= g_s85_86 empty)) (not (= g_s86_87 empty)) (not (= g_s87_88 empty)) (not (= g_s88_89 empty)) (not (= g_s89_90 empty)) (not (= g_s90_91 empty)) (not (= g_s91_92 empty)) (not (= g_s92_93 empty)) (not (= g_s93_94 empty)) (= g_s94_95 (SET (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 g_s95_96))))) (not (= g_s99_100 empty)) (not (= g_s100_101 empty)) (not (= g_s101_102 empty)) (not (= g_s102_103 empty)) (not (= g_s103_104 empty)) (not (= g_s104_105 empty)) (not (= g_s105_106 empty)) (not (= g_s106_107 empty)) (not (= g_s107_108 empty)) (not (= g_s108_109 empty)) (= g_s109_110 (SET (mapplet g_s112_113 (mapplet g_s111_112 g_s110_111)))) (not (= g_s113_114 empty)) (not (= g_s114_115 empty)) (not (= g_s115_116 empty)) (not (= g_s116_117 empty)) (not (= g_s117_118 empty)) (not (= g_s118_119 empty)) (not (= g_s119_120 empty)) (= g_s120_121 (SET (mapplet g_s123_124 (mapplet g_s122_123 g_s121_122)))) (not (= g_s124_125 empty)) (not (= g_s125_126 empty)) (not (= g_s126_127 empty)) (not (= g_s127_128 empty)) (not (= g_s128_129 empty)) (not (= g_s129_130 empty)) (not (= g_s130_131 empty)) (not (= g_s131_132 empty)) (= g_s132_133 (SET (mapplet g_s134_135 g_s133_134))) (not (= g_s135_136 empty)) (not (= g_s136_137 empty)) (not (= g_s137_138 empty)) (not (= g_s138_139 empty)) (not (= g_s139_140 empty)) (not (= g_s140_141 empty)) (not (= g_s141_142 empty)) (not (= g_s142_143 empty)) (not (= g_s143_144 empty)) (not (= g_s144_145 empty)) (not (= g_s145_146 empty)) (not (= g_s146_147 empty)) (not (= g_s147_148 empty)) (= g_s148_150 (interval (iuminus g_s149_149) g_s149_149)) (= g_s150_151 (interval e0 g_s149_149)) (= g_s151_153 (interval e152 g_s149_149)) (subset g_s151_153 g_s150_151) (subset g_s150_151 g_s148_150) (subset g_s150_151 NAT) (subset g_s151_153 NAT1) (subset g_s148_150 INT) (mem g_s152_154 g_s148_150) (mem g_s152_154 g_s150_151) (not (mem g_s152_154 g_s151_153)) (mem g_s153_155 g_s148_150) (not (mem g_s153_155 g_s150_151)) (= g_s154_156 (interval (iuminus g_s149_149) g_s149_149)) (subset g_s154_156 INT) (subset g_s155_157 g_s0_1) (mem g_s156_158 g_s0_1) (mem g_s156_158 g_s155_157) (mem g_s157_159 g_s0_1) (not (mem g_s157_159 g_s155_157)) (mem g_s158_160 (|+->| NAT g_s0_1)) (mem g_s158_160 (perm g_s155_157)) (= (card g_s155_157) g_s159_161) (subset g_s160_162 g_s1_2) (mem g_s161_163 g_s1_2) (mem g_s161_163 g_s160_162) (mem g_s162_164 g_s1_2) (not (mem g_s162_164 g_s160_162)) (mem g_s163_165 (|+->| NAT g_s1_2)) (mem g_s163_165 (perm g_s160_162)) (= (card g_s160_162) g_s164_166) (subset g_s165_167 g_s71_72) (mem g_s166_168 g_s71_72) (not (mem g_s166_168 g_s165_167)) (mem g_s167_169 (|+->| NAT g_s71_72)) (mem g_s167_169 (perm g_s165_167)) (subset g_s168_170 g_s72_73) (mem g_s169_171 g_s72_73) (not (mem g_s169_171 g_s168_170)) (mem g_s170_172 (|+->| NAT g_s72_73)) (mem g_s170_172 (perm g_s168_170)) (subset g_s171_173 g_s73_74) (mem g_s172_174 g_s73_74) (not (mem g_s172_174 g_s171_173)) (mem g_s173_175 (|+->| NAT g_s73_74)) (mem g_s173_175 (perm g_s171_173)) (subset g_s174_176 g_s74_75) (mem g_s175_177 g_s74_75) (not (mem g_s175_177 g_s174_176)) (mem g_s176_178 (|+->| NAT g_s74_75)) (mem g_s176_178 (perm g_s174_176)) (subset g_s177_179 g_s75_76) (mem g_s178_180 g_s75_76) (not (mem g_s178_180 g_s177_179)) (mem g_s179_181 (|+->| NAT g_s75_76)) (mem g_s179_181 (perm g_s177_179)) (subset g_s180_182 g_s76_77) (mem g_s181_183 g_s76_77) (not (mem g_s181_183 g_s180_182)) (mem g_s182_184 (|+->| NAT g_s76_77)) (mem g_s182_184 (perm g_s180_182)) (subset g_s183_185 g_s77_78) (mem g_s184_186 g_s77_78) (not (mem g_s184_186 g_s183_185)) (mem g_s185_187 (|+->| NAT g_s77_78)) (mem g_s185_187 (perm g_s183_185)) (subset g_s186_188 g_s78_79) (mem g_s187_189 g_s78_79) (not (mem g_s187_189 g_s186_188)) (mem g_s188_190 (|+->| NAT g_s78_79)) (mem g_s188_190 (perm g_s186_188)) (subset g_s189_191 g_s79_80) (mem g_s190_192 g_s79_80) (not (mem g_s190_192 g_s189_191)) (mem g_s191_193 (|+->| NAT g_s79_80)) (mem g_s191_193 (perm g_s189_191)) (subset g_s192_194 g_s80_81) (mem g_s193_195 g_s80_81) (not (mem g_s193_195 g_s192_194)) (mem g_s194_196 (|+->| NAT g_s80_81)) (mem g_s194_196 (perm g_s192_194)) (mem g_s195_198 (|-->| (set_prod g_s196_197 g_s196_197) g_s196_197)) (subset g_s197_199 g_s81_82) (mem g_s198_200 g_s81_82) (not (mem g_s198_200 g_s197_199)) (mem g_s199_201 (|+->| NAT g_s81_82)) (mem g_s199_201 (perm g_s197_199)) (subset g_s200_202 g_s82_83) (mem g_s201_203 g_s82_83) (not (mem g_s201_203 g_s200_202)) (mem g_s202_204 (|+->| NAT g_s82_83)) (mem g_s202_204 (perm g_s200_202)) (subset g_s203_205 g_s83_84) (mem g_s204_206 g_s83_84) (not (mem g_s204_206 g_s203_205)) (mem g_s205_207 (|+->| NAT g_s83_84)) (mem g_s205_207 (perm g_s203_205)) (subset g_s206_208 g_s84_85) (mem g_s207_209 g_s84_85) (not (mem g_s207_209 g_s206_208)) (mem g_s208_210 (|+->| NAT g_s84_85)) (mem g_s208_210 (perm g_s206_208)) (subset g_s209_211 g_s85_86) (mem g_s210_212 g_s85_86) (not (mem g_s210_212 g_s209_211)) (mem g_s211_213 (|+->| NAT g_s85_86)) (mem g_s211_213 (perm g_s209_211)) (subset g_s212_214 g_s86_87) (mem g_s213_215 g_s86_87) (not (mem g_s213_215 g_s212_214)) (mem g_s214_216 (|+->| NAT g_s86_87)) (mem g_s214_216 (perm g_s212_214)) (= g_s215_217 NATURAL) (mem g_s216_218 g_s154_156) (= g_s216_218 e0) (subset g_s217_219 g_s7_8) (not (mem g_s8_9 g_s217_219)) (= g_s217_219 (SET (mapplet g_s11_12 g_s10_11))) (subset g_s218_220 g_s7_8) (not (mem g_s8_9 g_s218_220)) (= g_s218_220 (SET (mapplet g_s11_12 (mapplet g_s10_11 g_s9_10)))) (mem g_s219_221 (|>->>| g_s217_219 g_s217_219)) (= (binary_inter g_s219_221 (id g_s217_219)) empty) (mem g_s220_223 (|>->| g_s221_222 g_s7_8)) (not (mem (apply g_s220_223 g_s222_224) g_s217_219)) (mem g_s223_226 (|>->>| g_s224_225 (set_diff g_s7_8 (SET g_s9_10)))) (mem g_s225_227 (|>->>| (set_diff g_s7_8 (SET g_s9_10)) g_s224_225)) (= g_s223_226 (inverse g_s225_227)) (not (mem (apply g_s223_226 g_s226_228) g_s217_219)) (mem g_s227_230 (|-->| g_s228_229 g_s221_222)) (= (apply g_s227_230 g_s229_231) g_s222_224) (subset g_s230_232 g_s87_88) (mem g_s231_233 g_s87_88) (not (mem g_s231_233 g_s230_232)) (mem g_s232_234 (|+->| NAT g_s87_88)) (mem g_s232_234 (perm g_s230_232)) (subset g_s233_235 g_s88_89) (mem g_s234_236 g_s88_89) (not (mem g_s234_236 g_s233_235)) (mem g_s235_237 (|+->| NAT g_s88_89)) (mem g_s235_237 (perm g_s233_235)) (subset g_s236_238 g_s89_90) (mem g_s237_239 g_s89_90) (not (mem g_s237_239 g_s236_238)) (mem g_s238_240 (|+->| NAT g_s89_90)) (mem g_s238_240 (perm g_s236_238)) (subset g_s239_241 g_s90_91) (mem g_s240_242 g_s90_91) (not (mem g_s240_242 g_s239_241)) (mem g_s241_243 (|+->| NAT g_s90_91)) (mem g_s241_243 (perm g_s239_241)) (subset g_s242_244 g_s91_92) (mem g_s243_245 g_s91_92) (not (mem g_s243_245 g_s242_244)) (mem g_s244_246 (|+->| NAT g_s91_92)) (mem g_s244_246 (perm g_s242_244)) (subset g_s245_247 g_s92_93) (mem g_s246_248 g_s92_93) (not (mem g_s246_248 g_s245_247)) (mem g_s247_249 (|+->| NAT g_s92_93)) (mem g_s247_249 (perm g_s245_247)) (subset g_s248_250 g_s93_94) (mem g_s249_251 g_s93_94) (not (mem g_s249_251 g_s248_250)) (mem g_s250_252 (|+->| NAT g_s93_94)) (mem g_s250_252 (perm g_s248_250)) (subset g_s251_253 g_s40_41) (not (mem g_s41_42 g_s251_253)) (= g_s251_253 (SET (mapplet g_s44_45 (mapplet g_s43_44 g_s42_43)))) (subset g_s252_254 g_s99_100) (mem g_s253_255 g_s99_100) (not (mem g_s253_255 g_s252_254)) (mem g_s254_256 (|+->| NAT g_s99_100)) (mem g_s254_256 (perm g_s252_254)) (subset g_s255_257 g_s100_101) (mem g_s256_258 g_s100_101) (not (mem g_s256_258 g_s255_257)) (mem g_s257_259 (|+->| NAT g_s100_101)) (mem g_s257_259 (perm g_s255_257)) (subset g_s258_260 g_s101_102) (mem g_s259_261 g_s101_102) (not (mem g_s259_261 g_s258_260)) (mem g_s260_262 (|+->| NAT g_s101_102)) (mem g_s260_262 (perm g_s258_260)) (subset g_s261_263 g_s102_103) (mem g_s262_264 g_s102_103) (not (mem g_s262_264 g_s261_263)) (mem g_s263_265 (|+->| NAT g_s102_103)) (mem g_s263_265 (perm g_s261_263)) (subset g_s264_266 g_s103_104) (mem g_s265_267 g_s103_104) (not (mem g_s265_267 g_s264_266)) (mem g_s266_268 (|+->| NAT g_s103_104)) (mem g_s266_268 (perm g_s264_266)) (subset g_s267_269 g_s104_105) (mem g_s268_270 g_s104_105) (not (mem g_s268_270 g_s267_269)) (subset g_s269_271 g_s105_106) (mem g_s270_272 g_s105_106) (not (mem g_s270_272 g_s269_271)) (subset g_s271_273 g_s106_107) (mem g_s272_274 g_s106_107) (not (mem g_s272_274 g_s271_273)) (mem g_s273_275 (|+->| NAT g_s106_107)) (mem g_s273_275 (perm g_s271_273)) (= g_s274_276 INT) (= g_s275_277 NAT) (mem g_s276_278 g_s274_276) (not (mem g_s276_278 g_s275_277)) (mem g_s277_279 g_s274_276) (mem g_s277_279 g_s275_277) (mem g_s278_281 (|>->| g_s271_273 g_s279_280)) (subset g_s280_282 g_s107_108) (mem g_s281_283 g_s107_108) (not (mem g_s281_283 g_s280_282)) (mem g_s282_284 (|+->| NAT g_s107_108)) (mem g_s282_284 (perm g_s280_282)) (subset g_s283_285 g_s108_109) (mem g_s284_286 g_s108_109) (not (mem g_s284_286 g_s283_285)) (mem g_s285_287 (|+->| NAT g_s108_109)) (mem g_s285_287 (perm g_s283_285)) (subset g_s286_288 g_s113_114) (mem g_s287_289 g_s113_114) (not (mem g_s287_289 g_s286_288)) (mem g_s288_290 (|+->| NAT g_s113_114)) (mem g_s288_290 (perm g_s286_288)) (subset g_s289_291 g_s114_115) (mem g_s290_292 g_s114_115) (not (mem g_s290_292 g_s289_291)) (mem g_s291_293 (|+->| NAT g_s114_115)) (mem g_s291_293 (perm g_s289_291)) (subset g_s292_294 g_s115_116) (mem g_s293_295 g_s115_116) (not (mem g_s293_295 g_s292_294)) (mem g_s294_296 (|+->| NAT g_s115_116)) (mem g_s294_296 (perm g_s292_294)) (subset g_s295_297 g_s116_117) (mem g_s296_298 g_s116_117) (not (mem g_s296_298 g_s295_297)) (mem g_s297_299 (|+->| NAT g_s116_117)) (mem g_s297_299 (perm g_s295_297)) (subset g_s298_300 g_s117_118) (mem g_s299_301 g_s117_118) (not (mem g_s299_301 g_s298_300)) (subset g_s300_302 g_s118_119) (mem g_s301_303 g_s118_119) (not (mem g_s301_303 g_s300_302)) (mem g_s302_304 (|+->| NAT g_s118_119)) (mem g_s302_304 (perm g_s300_302)) (subset g_s303_305 g_s119_120) (mem g_s304_306 g_s119_120) (not (mem g_s304_306 g_s303_305)) (mem g_s305_307 (|+->| NAT g_s119_120)) (mem g_s305_307 (perm g_s303_305)) (subset g_s306_308 g_s124_125) (mem g_s307_309 g_s124_125) (not (mem g_s307_309 g_s306_308)) (mem g_s308_310 (|+->| NAT g_s124_125)) (mem g_s308_310 (perm g_s306_308)) (subset g_s309_311 g_s125_126) (mem g_s310_312 g_s125_126) (not (mem g_s310_312 g_s309_311)) (mem g_s311_313 (|+->| NAT g_s125_126)) (mem g_s311_313 (perm g_s309_311)) (subset g_s312_314 g_s126_127) (mem g_s313_315 g_s126_127) (not (mem g_s313_315 g_s312_314)) (mem g_s314_316 (|+->| NAT g_s126_127)) (mem g_s314_316 (perm g_s312_314)) (subset g_s315_317 g_s127_128) (mem g_s316_318 g_s127_128) (not (mem g_s316_318 g_s315_317)) (mem g_s317_319 (|+->| NAT g_s127_128)) (mem g_s317_319 (perm g_s315_317)) (= (card g_s315_317) g_s318_320) (subset g_s319_321 g_s128_129) (mem g_s320_322 g_s128_129) (not (mem g_s320_322 g_s319_321)) (mem g_s321_323 (|+->| NAT g_s128_129)) (mem g_s321_323 (perm g_s319_321)) (subset g_s322_324 g_s129_130) (mem g_s323_325 g_s129_130) (not (mem g_s323_325 g_s322_324)) (mem g_s324_326 (|+->| NAT g_s129_130)) (mem g_s324_326 (perm g_s322_324)) (= (card g_s322_324) g_s325_327) (subset g_s326_328 g_s130_131) (mem g_s327_329 g_s130_131) (not (mem g_s327_329 g_s326_328)) (mem g_s328_330 (|+->| NAT g_s130_131)) (mem g_s328_330 (perm g_s326_328)) (subset g_s329_331 g_s131_132) (mem g_s330_332 g_s131_132) (not (mem g_s330_332 g_s329_331)) (mem g_s331_333 (|+->| NAT g_s131_132)) (mem g_s331_333 (perm g_s329_331)) (subset g_s332_334 g_s135_136) (mem g_s333_335 g_s135_136) (not (mem g_s333_335 g_s332_334)) (mem g_s334_336 (|+->| NAT g_s135_136)) (mem g_s334_336 (perm g_s332_334)) (subset g_s335_337 g_s136_137) (mem g_s336_338 g_s136_137) (not (mem g_s336_338 g_s335_337)) (mem g_s337_339 (|+->| NAT g_s136_137)) (mem g_s337_339 (perm g_s335_337)) (subset g_s338_340 g_s137_138) (mem g_s339_341 g_s137_138) (not (mem g_s339_341 g_s338_340)) (mem g_s340_342 (|+->| NAT g_s137_138)) (mem g_s340_342 (perm g_s338_340)) (subset g_s341_343 g_s138_139) (mem g_s342_344 g_s138_139) (not (mem g_s342_344 g_s341_343)) (mem g_s343_345 (|+->| NAT g_s138_139)) (mem g_s343_345 (perm g_s341_343)) (subset g_s344_346 g_s139_140) (mem g_s345_347 g_s139_140) (not (mem g_s345_347 g_s344_346)) (mem g_s346_348 (|+->| NAT g_s139_140)) (mem g_s346_348 (perm g_s344_346)) (subset g_s347_349 g_s140_141) (mem g_s348_350 g_s140_141) (not (mem g_s348_350 g_s347_349)) (mem g_s349_351 (|+->| NAT g_s140_141)) (mem g_s349_351 (perm g_s347_349)) (subset g_s350_352 g_s141_142) (mem g_s351_353 g_s141_142) (not (mem g_s351_353 g_s350_352)) (mem g_s352_354 (|+->| NAT g_s141_142)) (mem g_s352_354 (perm g_s350_352)) (subset g_s353_355 g_s142_143) (mem g_s354_356 g_s142_143) (not (mem g_s354_356 g_s353_355)) (mem g_s355_357 (|+->| NAT g_s142_143)) (mem g_s355_357 (perm g_s353_355)) (subset g_s356_358 g_s143_144) (mem g_s357_359 g_s143_144) (not (mem g_s357_359 g_s356_358)) (mem g_s358_360 (|+->| NAT g_s143_144)) (mem g_s358_360 (perm g_s356_358)) (subset g_s359_361 g_s144_145) (mem g_s360_362 g_s144_145) (not (mem g_s360_362 g_s359_361)) (mem g_s361_363 (|+->| NAT g_s144_145)) (mem g_s361_363 (perm g_s359_361)) (subset g_s362_364 g_s145_146) (mem g_s363_365 g_s145_146) (not (mem g_s363_365 g_s362_364)) (subset g_s364_366 g_s146_147) (mem g_s365_367 g_s146_147) (not (mem g_s365_367 g_s364_366)) (mem g_s366_368 (|+->| NAT g_s146_147)) (mem g_s366_368 (perm g_s364_366)) (subset g_s367_369 g_s147_148) (mem g_s368_370 g_s147_148) (not (mem g_s368_370 g_s367_369)) (mem g_s369_371 (|+->| NAT g_s147_148)) (mem g_s369_371 (perm g_s367_369))))
(define-fun |def_seext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (subset g_s370_372 g_s350_352) (subset g_s371_373 g_s306_308) (subset g_s372_374 g_s264_266) (subset g_s373_375 g_s236_238) (subset g_s374_376 g_s183_185) (subset g_s375_377 g_s183_185) (mem g_s376_378 (|+->| g_s183_185 g_s150_151)) (mem g_s377_379 (|+->| g_s183_185 g_s150_151)) (mem g_s378_380 (|-->| g_s165_167 g_s12_13)) (subset g_s379_381 g_s209_211) (subset g_s380_382 g_s230_232) (subset g_s381_383 g_s230_232) (mem g_s382_384 (|<->| g_s177_179 g_s217_219)) (mem g_s383_385 (|+->| g_s177_179 g_s150_151)) (mem g_s384_386 (|+->| g_s177_179 g_s150_151)) (mem g_s385_387 (|+->| g_s177_179 g_s150_151)) (mem g_s386_388 (|+->| g_s177_179 g_s150_151)) (mem g_s387_389 (|<->| g_s177_179 g_s217_219)) (subset g_s388_390 g_s177_179) (subset g_s389_391 g_s177_179) (subset g_s390_392 g_s197_199) (subset g_s391_393 g_s197_199) (subset g_s392_394 g_s197_199) (subset g_s393_395 g_s230_232) (subset g_s394_396 g_s252_254) (subset g_s395_397 g_s252_254) (subset g_s396_398 g_s258_260) (subset g_s397_399 g_s309_311) (mem g_s398_400 (|+->| g_s258_260 g_s150_151)) (subset g_s399_401 g_s183_185) (subset g_s400_402 g_s283_285) (subset g_s401_403 g_s283_285) (subset g_s402_404 g_s230_232) (subset g_s403_405 g_s335_337) (mem g_s404_406 (|-->| g_s283_285 g_s26_27)) (subset g_s405_407 g_s236_238) (subset g_s406_408 g_s264_266) (subset g_s407_409 g_s236_238) (subset g_s408_410 g_s236_238) (subset g_s409_411 g_s295_297) (mem g_s410_412 BOOL) (subset g_s411_413 g_s286_288) (subset g_s412_414 g_s286_288) (mem g_s413_415 (|+->| g_s286_288 g_s150_151)) (subset g_s414_416 g_s295_297) (subset g_s415_417 g_s295_297) (subset g_s416_418 g_s295_297) (subset g_s417_419 g_s295_297) (subset g_s418_420 g_s295_297) (subset g_s419_421 g_s295_297) (mem g_s420_422 (|+->| g_s295_297 g_s150_151)) (mem g_s421_423 (|+->| g_s303_305 g_s154_156)) (subset g_s422_424 g_s289_291) (subset g_s423_425 g_s289_291) (subset g_s424_426 g_s264_266) (subset g_s425_427 g_s264_266)))
(define-fun |def_inv| () Bool (and (= g_s382_384 g_s382$1_428) (= g_s380_382 g_s380$1_429) (= g_s390_392 g_s390$1_430) (= g_s391_393 g_s391$1_431) (= g_s392_394 g_s392$1_432) (= g_s379_381 g_s379$1_433) (= g_s374_376 g_s374$1_434) (= g_s375_377 g_s375$1_435) (= g_s376_378 g_s376$1_436) (= g_s377_379 g_s377$1_437) (= g_s383_385 g_s383$1_438) (= g_s384_386 g_s384$1_439) (= g_s385_387 g_s385$1_440) (= g_s386_388 g_s386$1_441) (= g_s387_389 g_s387$1_442) (= g_s378_380 g_s378$1_443) (= g_s381_383 g_s381$1_444) (= g_s370_372 g_s370$1_445) (= g_s371_373 g_s371$1_446) (= g_s400_402 g_s400$1_447) (= g_s401_403 g_s401$1_448) (= g_s404_406 g_s404$1_449) (= g_s402_404 g_s402$1_450) (= g_s403_405 g_s403$1_451) (= g_s424_426 g_s424$1_452) (= g_s425_427 g_s425$1_453) (= g_s372_374 g_s372$1_454) (= g_s405_407 g_s405$1_455) (= g_s406_408 g_s406$1_456) (= g_s407_409 g_s407$1_457) (= g_s408_410 g_s408$1_458) (= g_s409_411 g_s409$1_459) (= g_s410_412 g_s410$1_460) (= g_s411_413 g_s411$1_461) (= g_s412_414 g_s412$1_462) (= g_s413_415 g_s413$1_463) (= g_s414_416 g_s414$1_464) (= g_s415_417 g_s415$1_465) (= g_s416_418 g_s416$1_466) (= g_s418_420 g_s418$1_467) (= g_s419_421 g_s419$1_468) (= g_s420_422 g_s420$1_469) (= g_s373_375 g_s373$1_470) (= g_s388_390 g_s388$1_471) (= g_s389_391 g_s389$1_472) (= g_s417_419 g_s417$1_473) (= g_s421_423 g_s421$1_474) (= g_s422_424 g_s422$1_475) (= g_s423_425 g_s423$1_476) (= g_s393_395 g_s393$1_477) (= g_s394_396 g_s394$1_478) (= g_s395_397 g_s395$1_479) (= g_s396_398 g_s396$1_480) (= g_s398_400 g_s398$1_481) (= g_s399_401 g_s399$1_482) (= g_s397_399 g_s397$1_483) (mem g_s426$1_484 g_s71_72) (mem g_s427$1_485 g_s75_76) (mem g_s428$1_486 g_s77_78) (mem g_s429$1_487 g_s81_82) (mem g_s430$1_488 g_s85_86) (mem g_s431$1_489 g_s89_90) (mem g_s432$1_490 g_s113_114) (mem g_s433$1_491 g_s116_117) (mem g_s434$1_492 g_s87_88) (mem g_s435$1_493 g_s99_100) (mem g_s436$1_494 g_s101_102) (mem g_s437$1_495 g_s114_115) (mem g_s438$1_496 BOOL) (mem g_s439$1_497 g_s141_142) (mem g_s440$1_498 g_s124_125) (mem g_s441$1_499 g_s108_109) (mem g_s442$1_500 g_s136_137) (mem g_s443$1_501 g_s103_104) (mem g_s444$1_502 g_s125_126)))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool (and (mem g_s378$1_443 (|-->| g_s165_167 g_s12_13)) (subset g_s379$1_433 g_s209_211) (subset g_s370$1_445 g_s350_352) (subset g_s371$1_446 g_s306_308) (subset g_s402$1_450 g_s230_232) (subset g_s403$1_451 g_s335_337) (subset g_s372$1_454 g_s264_266) (subset g_s373$1_470 g_s236_238) (subset g_s374$1_434 g_s183_185) (mem g_s376$1_436 (|+->| g_s183_185 g_s150_151)) (subset g_s375$1_435 g_s183_185) (mem g_s377$1_437 (|+->| g_s183_185 g_s150_151)) (subset g_s380$1_429 g_s230_232) (subset g_s381$1_444 g_s230_232) (mem g_s383$1_438 (|+->| g_s177_179 g_s150_151)) (mem g_s387$1_442 (|<->| g_s177_179 g_s217_219)) (mem g_s384$1_439 (|+->| g_s177_179 g_s150_151)) (mem g_s387$1_442 (|<->| g_s177_179 g_s217_219)) (mem g_s385$1_440 (|+->| g_s177_179 g_s150_151)) (mem g_s382$1_428 (|<->| g_s177_179 g_s217_219)) (mem g_s386$1_441 (|+->| g_s177_179 g_s150_151)) (mem g_s382$1_428 (|<->| g_s177_179 g_s217_219)) (subset g_s388$1_471 g_s177_179) (subset g_s389$1_472 g_s177_179) (subset g_s390$1_430 g_s197_199) (subset g_s391$1_431 g_s197_199) (subset g_s392$1_432 g_s197_199) (subset g_s400$1_447 g_s283_285) (subset g_s401$1_448 g_s283_285) (mem g_s404$1_449 (|-->| g_s283_285 g_s26_27)) (subset g_s405$1_455 g_s236_238) (subset g_s406$1_456 g_s264_266) (subset g_s407$1_457 g_s236_238) (subset g_s408$1_458 g_s236_238) (subset g_s409$1_459 g_s295_297) (mem g_s410$1_460 BOOL) (subset g_s411$1_461 g_s286_288) (subset g_s412$1_462 g_s286_288) (mem g_s413$1_463 (|+->| g_s286_288 g_s150_151)) (subset g_s414$1_464 g_s295_297) (subset g_s415$1_465 g_s295_297) (subset g_s416$1_466 g_s295_297) (subset g_s418$1_467 g_s295_297) (subset g_s419$1_468 g_s295_297) (mem g_s420$1_469 (|+->| g_s295_297 g_s150_151)) (subset g_s417$1_473 g_s295_297) (mem g_s421$1_474 (|+->| g_s303_305 g_s154_156)) (subset g_s422$1_475 g_s289_291) (subset g_s423$1_476 g_s289_291) (subset g_s424$1_452 g_s264_266) (subset g_s425$1_453 g_s264_266) (subset g_s393$1_477 g_s230_232) (subset g_s394$1_478 g_s252_254) (subset g_s395$1_479 g_s252_254) (subset g_s396$1_480 g_s258_260) (mem g_s398$1_481 (|+->| g_s258_260 g_s150_151)) (subset g_s399$1_482 g_s183_185) (subset g_s397$1_483 g_s309_311) (subset g_s445$1_503 g_s309_311) (subset g_s446$1_504 g_s309_311) (= (binary_inter g_s446$1_504 g_s445$1_503) empty) (subset g_s447$1_505 g_s286_288) (subset g_s448$1_506 g_s286_288) (= (binary_inter g_s448$1_506 g_s447$1_505) empty) (subset g_s449$1_507 g_s289_291) (subset g_s450$1_508 g_s289_291) (= (binary_inter g_s450$1_508 g_s449$1_507) empty) (subset g_s451$1_509 g_s295_297) (subset g_s452$1_510 g_s295_297) (= (binary_inter g_s452$1_510 g_s451$1_509) empty) (subset g_s453$1_511 g_s252_254) (subset g_s454$1_512 g_s252_254) (= (binary_inter g_s454$1_512 g_s453$1_511) empty) (subset g_s455$1_513 g_s258_260) (subset g_s456$1_514 g_s258_260) (= (binary_inter g_s456$1_514 g_s455$1_513) empty) (subset g_s457$1_515 g_s230_232) (subset g_s458$1_516 g_s230_232) (= (binary_inter g_s458$1_516 g_s457$1_515) empty) (subset g_s459$1_517 g_s197_199) (subset g_s460$1_518 g_s197_199) (= (binary_inter g_s460$1_518 g_s459$1_517) empty) (subset g_s461$1_519 g_s177_179) (subset g_s462$1_520 g_s177_179) (= (binary_inter g_s462$1_520 g_s461$1_519) empty) (subset g_s463$1_521 g_s236_238) (subset g_s464$1_522 g_s236_238) (= (binary_inter g_s464$1_522 g_s463$1_521) empty) (subset g_s465$1_523 g_s209_211) (subset g_s466$1_524 g_s209_211) (= (binary_inter g_s466$1_524 g_s465$1_523) empty) (subset g_s467$1_525 g_s165_167) (subset g_s468$1_526 g_s165_167) (= (binary_inter g_s468$1_526 g_s467$1_525) empty) (subset g_s469$1_527 g_s183_185) (subset g_s470$1_528 g_s183_185) (= (binary_inter g_s470$1_528 g_s469$1_527) empty) (subset g_s471$1_529 g_s350_352) (subset g_s472$1_530 g_s350_352) (= (binary_inter g_s472$1_530 g_s471$1_529) empty) (subset g_s473$1_531 g_s306_308) (subset g_s474$1_532 g_s306_308) (= (binary_inter g_s474$1_532 g_s473$1_531) empty) (subset g_s475$1_533 g_s264_266) (subset g_s476$1_534 g_s264_266) (= (binary_inter g_s476$1_534 g_s475$1_533) empty) (subset g_s477$1_535 g_s335_337) (subset g_s478$1_536 g_s335_337) (= (binary_inter g_s478$1_536 g_s477$1_535) empty) (subset g_s479$1_537 g_s283_285) (subset g_s480$1_538 g_s283_285) (= (binary_inter g_s480$1_538 g_s479$1_537) empty)))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_2 () Bool (mem g_s439$2_540 g_s141_142))
(define-fun lh_3 () Bool (subset g_s350_352 g_s350_352))
(define-fun lh_4 () Bool (subset empty g_s350_352))
(define-fun lh_5 () Bool (= (binary_union empty g_s350_352) g_s350_352))
(define-fun lh_6 () Bool (= (binary_inter empty g_s350_352) empty))
(define-fun lh_7 () Bool (= g_s438$2_539 (bool (not (= g_s350_352 empty)))))
(define-fun lh_8 () Bool (= g_s438$2_539 TRUE))
(define-fun lh_9 () Bool (not (= g_s350_352 empty)))
(define-fun lh_10 () Bool (mem g_s482_541 g_s141_142))
(define-fun lh_11 () Bool (mem g_s482_541 g_s350_352))
(define-fun lh_12 () Bool (subset g_s370$2_542 g_s350_352))
; PO 1 in group 0
(push 1)
(assert (not (subset empty g_s350_352)))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (subset g_s350_352 g_s350_352)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (= (binary_inter empty g_s350_352) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (= (binary_union empty g_s350_352) g_s350_352)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (|<=i| e0 (card g_s350_352)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (not (= g_s350_352 empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (subset (set_diff g_s350_352 (SET g_s482_541)) g_s350_352))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (subset (binary_union empty (SET g_s482_541)) g_s350_352))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (bool (not (= g_s350_352 (SET g_s482_541)))) (bool (not (= (set_diff g_s350_352 (SET g_s482_541)) empty)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (binary_inter (binary_union empty (SET g_s482_541)) (set_diff g_s350_352 (SET g_s482_541))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (binary_union (binary_union empty (SET g_s482_541)) (set_diff g_s350_352 (SET g_s482_541))) g_s350_352))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (|<i| (card (set_diff g_s350_352 (SET g_s482_541))) (card g_s350_352)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_2 () Bool (mem g_s440$2_543 g_s124_125))
(define-fun lh_3 () Bool (subset g_s306_308 g_s306_308))
(define-fun lh_4 () Bool (subset empty g_s306_308))
(define-fun lh_5 () Bool (= (binary_union empty g_s306_308) g_s306_308))
(define-fun lh_6 () Bool (= (binary_inter empty g_s306_308) empty))
(define-fun lh_7 () Bool (= g_s438$2_539 (bool (not (= g_s306_308 empty)))))
(define-fun lh_8 () Bool (= g_s438$2_539 TRUE))
(define-fun lh_9 () Bool (not (= g_s306_308 empty)))
(define-fun lh_10 () Bool (mem g_s489_544 g_s124_125))
(define-fun lh_11 () Bool (mem g_s489_544 g_s306_308))
(define-fun lh_12 () Bool (subset g_s371$2_545 g_s306_308))
; PO 1 in group 1
(push 1)
(assert (not (subset empty g_s306_308)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (subset g_s306_308 g_s306_308)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (= (binary_inter empty g_s306_308) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (= (binary_union empty g_s306_308) g_s306_308)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (|<=i| e0 (card g_s306_308)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (not (= g_s306_308 empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (subset (set_diff g_s306_308 (SET g_s489_544)) g_s306_308))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (subset (binary_union empty (SET g_s489_544)) g_s306_308))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (bool (not (= g_s306_308 (SET g_s489_544)))) (bool (not (= (set_diff g_s306_308 (SET g_s489_544)) empty)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (binary_inter (binary_union empty (SET g_s489_544)) (set_diff g_s306_308 (SET g_s489_544))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (binary_union (binary_union empty (SET g_s489_544)) (set_diff g_s306_308 (SET g_s489_544))) g_s306_308))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (|<i| (card (set_diff g_s306_308 (SET g_s489_544))) (card g_s306_308)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_2 () Bool (mem g_s431$2_546 g_s89_90))
(define-fun lh_3 () Bool (subset g_s236_238 g_s236_238))
(define-fun lh_4 () Bool (subset empty g_s236_238))
(define-fun lh_5 () Bool (= (binary_union empty g_s236_238) g_s236_238))
(define-fun lh_6 () Bool (= (binary_inter empty g_s236_238) empty))
(define-fun lh_7 () Bool (= g_s438$2_539 (bool (not (= g_s236_238 empty)))))
(define-fun lh_8 () Bool (= g_s438$2_539 TRUE))
(define-fun lh_9 () Bool (not (= g_s236_238 empty)))
(define-fun lh_10 () Bool (mem g_s491_547 g_s89_90))
(define-fun lh_11 () Bool (mem g_s491_547 g_s236_238))
(define-fun lh_12 () Bool (subset g_s405$2_548 g_s236_238))
; PO 1 in group 2
(push 1)
(assert (not (subset empty g_s236_238)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (subset g_s236_238 g_s236_238)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (= (binary_inter empty g_s236_238) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (= (binary_union empty g_s236_238) g_s236_238)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (|<=i| e0 (card g_s236_238)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (not (= g_s236_238 empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (subset (set_diff g_s236_238 (SET g_s491_547)) g_s236_238))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (subset (binary_union empty (SET g_s491_547)) g_s236_238))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (bool (not (= g_s236_238 (SET g_s491_547)))) (bool (not (= (set_diff g_s236_238 (SET g_s491_547)) empty)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (binary_inter (binary_union empty (SET g_s491_547)) (set_diff g_s236_238 (SET g_s491_547))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (= (binary_union (binary_union empty (SET g_s491_547)) (set_diff g_s236_238 (SET g_s491_547))) g_s236_238))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (|<i| (card (set_diff g_s236_238 (SET g_s491_547))) (card g_s236_238)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s410$2_549 BOOL))
(define-fun lh_2 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_3 () Bool (mem g_s432$2_550 g_s113_114))
(define-fun lh_4 () Bool (subset g_s286_288 g_s286_288))
(define-fun lh_5 () Bool (subset empty g_s286_288))
(define-fun lh_6 () Bool (= (binary_union empty g_s286_288) g_s286_288))
(define-fun lh_7 () Bool (= (binary_inter empty g_s286_288) empty))
(define-fun lh_8 () Bool (= g_s438$2_539 (bool (not (= g_s286_288 empty)))))
(define-fun lh_9 () Bool (= g_s438$2_539 TRUE))
(define-fun lh_10 () Bool (not (= g_s286_288 empty)))
(define-fun lh_11 () Bool (mem g_s493_551 g_s113_114))
(define-fun lh_12 () Bool (mem g_s493_551 g_s286_288))
(define-fun lh_13 () Bool (subset g_s411$2_552 g_s286_288))
(define-fun lh_14 () Bool (subset g_s412$2_553 g_s286_288))
(define-fun lh_15 () Bool (mem g_s413$2_554 (|+->| g_s286_288 g_s150_151)))
; PO 1 in group 3
(push 1)
(assert (not (=> lh_1 (subset empty g_s286_288))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> lh_1 (subset g_s286_288 g_s286_288))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> lh_1 (= (binary_inter empty g_s286_288) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (=> lh_1 (= (binary_union empty g_s286_288) g_s286_288))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (|<=i| e0 (card g_s286_288)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (not (= g_s286_288 empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (subset (set_diff g_s286_288 (SET g_s493_551)) g_s286_288))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (subset (binary_union empty (SET g_s493_551)) g_s286_288))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (= (bool (not (= g_s286_288 (SET g_s493_551)))) (bool (not (= (set_diff g_s286_288 (SET g_s493_551)) empty)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (= (binary_inter (binary_union empty (SET g_s493_551)) (set_diff g_s286_288 (SET g_s493_551))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (= (binary_union (binary_union empty (SET g_s493_551)) (set_diff g_s286_288 (SET g_s493_551))) g_s286_288))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (|<i| (card (set_diff g_s286_288 (SET g_s493_551))) (card g_s286_288)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_2 () Bool (mem g_s435$2_555 g_s99_100))
(define-fun lh_3 () Bool (subset g_s252_254 g_s252_254))
(define-fun lh_4 () Bool (subset empty g_s252_254))
(define-fun lh_5 () Bool (= (binary_union empty g_s252_254) g_s252_254))
(define-fun lh_6 () Bool (= (binary_inter empty g_s252_254) empty))
(define-fun lh_7 () Bool (= g_s438$2_539 (bool (not (= g_s252_254 empty)))))
(define-fun lh_8 () Bool (= g_s438$2_539 TRUE))
(define-fun lh_9 () Bool (not (= g_s252_254 empty)))
(define-fun lh_10 () Bool (mem g_s495_556 g_s99_100))
(define-fun lh_11 () Bool (mem g_s495_556 g_s252_254))
(define-fun lh_12 () Bool (mem g_s394$2_557 (POW g_s252_254)))
(define-fun lh_13 () Bool (mem g_s395$2_558 (POW g_s252_254)))
; PO 1 in group 4
(push 1)
(assert (not (subset empty g_s252_254)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (subset g_s252_254 g_s252_254)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (= (binary_inter empty g_s252_254) empty)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 4
(push 1)
(assert (not (= (binary_union empty g_s252_254) g_s252_254)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (|<=i| e0 (card g_s252_254)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (not (= g_s252_254 empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (subset (set_diff g_s252_254 (SET g_s495_556)) g_s252_254))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (subset (binary_union empty (SET g_s495_556)) g_s252_254))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (= (bool (not (= g_s252_254 (SET g_s495_556)))) (bool (not (= (set_diff g_s252_254 (SET g_s495_556)) empty)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (= (binary_inter (binary_union empty (SET g_s495_556)) (set_diff g_s252_254 (SET g_s495_556))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (= (binary_union (binary_union empty (SET g_s495_556)) (set_diff g_s252_254 (SET g_s495_556))) g_s252_254))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (|<i| (card (set_diff g_s252_254 (SET g_s495_556))) (card g_s252_254)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s497$1_560 g_s497_559))
(assert (= g_s498$1_562 g_s498_561))
(define-fun lh_1 () Bool (mem g_s499_563 g_s77_78))
(define-fun lh_2 () Bool (mem g_s499_563 g_s183_185))
(define-fun lh_3 () Bool (mem g_s499_563 (dom g_s376$1_436)))
(define-fun lh_4 () Bool (mem g_s498$2_564 g_s148_150))
(define-fun lh_5 () Bool (= g_s498$2_564 (apply g_s376$1_436 g_s499_563)))
; PO 1 in group 5
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s376$1_436 g_s499_563) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s498$1_562 g_s498_561))
(define-fun lh_1 () Bool (mem g_s499_563 g_s77_78))
(define-fun lh_2 () Bool (mem g_s499_563 g_s183_185))
(define-fun lh_3 () Bool (mem g_s499_563 (dom g_s376$1_436)))
(define-fun lh_4 () Bool (mem g_s498$2_564 g_s148_150))
(define-fun lh_5 () Bool (= g_s498$2_564 (apply g_s376$1_436 g_s499_563)))
; PO 1 in group 6
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s376$1_436 g_s499_563) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s503$1_566 g_s503_565))
(assert (= g_s504$1_568 g_s504_567))
(define-fun lh_1 () Bool (mem g_s499_563 g_s77_78))
(define-fun lh_2 () Bool (mem g_s499_563 g_s183_185))
(define-fun lh_3 () Bool (mem g_s499_563 (dom g_s377$1_437)))
(define-fun lh_4 () Bool (mem g_s504$2_569 g_s148_150))
(define-fun lh_5 () Bool (= g_s504$2_569 (apply g_s377$1_437 g_s499_563)))
; PO 1 in group 7
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s377$1_437 g_s499_563) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s504$1_568 g_s504_567))
(define-fun lh_1 () Bool (mem g_s499_563 g_s77_78))
(define-fun lh_2 () Bool (mem g_s499_563 g_s183_185))
(define-fun lh_3 () Bool (mem g_s499_563 (dom g_s377$1_437)))
(define-fun lh_4 () Bool (mem g_s504$2_569 g_s148_150))
(define-fun lh_5 () Bool (= g_s504$2_569 (apply g_s377$1_437 g_s499_563)))
; PO 1 in group 8
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s377$1_437 g_s499_563) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s507$1_571 g_s507_570))
(assert (= g_s508$1_573 g_s508_572))
(define-fun lh_1 () Bool (mem g_s509_574 g_s75_76))
(define-fun lh_2 () Bool (mem g_s509_574 g_s177_179))
(define-fun lh_3 () Bool (mem g_s509_574 (dom g_s383$1_438)))
(define-fun lh_4 () Bool (mem g_s508$2_575 g_s148_150))
(define-fun lh_5 () Bool (= g_s508$2_575 (apply g_s383$1_438 g_s509_574)))
; PO 1 in group 9
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s383$1_438 g_s509_574) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s508$1_573 g_s508_572))
(define-fun lh_1 () Bool (mem g_s509_574 g_s75_76))
(define-fun lh_2 () Bool (mem g_s509_574 g_s177_179))
(define-fun lh_3 () Bool (mem g_s509_574 (dom g_s383$1_438)))
(define-fun lh_4 () Bool (mem g_s508$2_575 g_s148_150))
(define-fun lh_5 () Bool (= g_s508$2_575 (apply g_s383$1_438 g_s509_574)))
; PO 1 in group 10
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s383$1_438 g_s509_574) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s512$1_577 g_s512_576))
(assert (= g_s513$1_579 g_s513_578))
(define-fun lh_1 () Bool (mem g_s509_574 g_s75_76))
(define-fun lh_2 () Bool (mem g_s509_574 g_s177_179))
(define-fun lh_3 () Bool (mem g_s509_574 (dom g_s384$1_439)))
(define-fun lh_4 () Bool (mem g_s513$2_580 g_s148_150))
(define-fun lh_5 () Bool (= g_s513$2_580 (apply g_s384$1_439 g_s509_574)))
; PO 1 in group 11
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s384$1_439 g_s509_574) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s513$1_579 g_s513_578))
(define-fun lh_1 () Bool (mem g_s509_574 g_s75_76))
(define-fun lh_2 () Bool (mem g_s509_574 g_s177_179))
(define-fun lh_3 () Bool (mem g_s509_574 (dom g_s384$1_439)))
(define-fun lh_4 () Bool (mem g_s513$2_580 g_s148_150))
(define-fun lh_5 () Bool (= g_s513$2_580 (apply g_s384$1_439 g_s509_574)))
; PO 1 in group 12
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s384$1_439 g_s509_574) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s516$1_582 g_s516_581))
(assert (= g_s517$1_584 g_s517_583))
(define-fun lh_1 () Bool (mem g_s509_574 g_s75_76))
(define-fun lh_2 () Bool (mem g_s509_574 g_s177_179))
(define-fun lh_3 () Bool (mem g_s509_574 (dom g_s385$1_440)))
(define-fun lh_4 () Bool (mem g_s517$2_585 g_s148_150))
(define-fun lh_5 () Bool (= g_s517$2_585 (apply g_s385$1_440 g_s509_574)))
; PO 1 in group 13
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s385$1_440 g_s509_574) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s517$1_584 g_s517_583))
(define-fun lh_1 () Bool (mem g_s509_574 g_s75_76))
(define-fun lh_2 () Bool (mem g_s509_574 g_s177_179))
(define-fun lh_3 () Bool (mem g_s509_574 (dom g_s385$1_440)))
(define-fun lh_4 () Bool (mem g_s517$2_585 g_s148_150))
(define-fun lh_5 () Bool (= g_s517$2_585 (apply g_s385$1_440 g_s509_574)))
; PO 1 in group 14
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s385$1_440 g_s509_574) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s520$1_587 g_s520_586))
(assert (= g_s521$1_589 g_s521_588))
(define-fun lh_1 () Bool (mem g_s509_574 g_s75_76))
(define-fun lh_2 () Bool (mem g_s509_574 g_s177_179))
(define-fun lh_3 () Bool (mem g_s509_574 (dom g_s386$1_441)))
(define-fun lh_4 () Bool (mem g_s521$2_590 g_s148_150))
(define-fun lh_5 () Bool (= g_s521$2_590 (apply g_s386$1_441 g_s509_574)))
; PO 1 in group 15
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s386$1_441 g_s509_574) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s521$1_589 g_s521_588))
(define-fun lh_1 () Bool (mem g_s509_574 g_s75_76))
(define-fun lh_2 () Bool (mem g_s509_574 g_s177_179))
(define-fun lh_3 () Bool (mem g_s509_574 (dom g_s386$1_441)))
(define-fun lh_4 () Bool (mem g_s521$2_590 g_s148_150))
(define-fun lh_5 () Bool (= g_s521$2_590 (apply g_s386$1_441 g_s509_574)))
; PO 1 in group 16
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s386$1_441 g_s509_574) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s524$1_592 g_s524_591))
(assert (= g_s525$1_594 g_s525_593))
(define-fun lh_1 () Bool (mem g_s526_595 g_s101_102))
(define-fun lh_2 () Bool (mem g_s526_595 g_s258_260))
(define-fun lh_3 () Bool (mem g_s526_595 (dom g_s398$1_481)))
(define-fun lh_4 () Bool (mem g_s525$2_596 g_s148_150))
(define-fun lh_5 () Bool (= g_s525$2_596 (apply g_s398$1_481 g_s526_595)))
; PO 1 in group 17
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s398$1_481 g_s526_595) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s525$1_594 g_s525_593))
(define-fun lh_1 () Bool (mem g_s526_595 g_s101_102))
(define-fun lh_2 () Bool (mem g_s526_595 g_s258_260))
(define-fun lh_3 () Bool (mem g_s526_595 (dom g_s398$1_481)))
(define-fun lh_4 () Bool (mem g_s525$2_596 g_s148_150))
(define-fun lh_5 () Bool (= g_s525$2_596 (apply g_s398$1_481 g_s526_595)))
; PO 1 in group 18
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s398$1_481 g_s526_595) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s529$1_598 g_s529_597))
(define-fun lh_1 () Bool (mem g_s530_599 g_s113_114))
(define-fun lh_2 () Bool (mem g_s530_599 g_s286_288))
(define-fun lh_3 () Bool (mem g_s530_599 (dom g_s413$1_463)))
(define-fun lh_4 () Bool (mem g_s529$2_600 g_s148_150))
(define-fun lh_5 () Bool (= g_s529$2_600 (apply g_s413$1_463 g_s530_599)))
; PO 1 in group 19
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s413$1_463 g_s530_599) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s532$1_602 g_s532_601))
(assert (= g_s529$1_598 g_s529_597))
(define-fun lh_1 () Bool (mem g_s530_599 g_s113_114))
(define-fun lh_2 () Bool (mem g_s530_599 g_s286_288))
(define-fun lh_3 () Bool (mem g_s530_599 (dom g_s413$1_463)))
(define-fun lh_4 () Bool (mem g_s529$2_600 g_s148_150))
(define-fun lh_5 () Bool (= g_s529$2_600 (apply g_s413$1_463 g_s530_599)))
; PO 1 in group 20
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s413$1_463 g_s530_599) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s532$1_602 g_s532_601))
(assert (= g_s529$1_598 g_s529_597))
(define-fun lh_1 () Bool (mem g_s534_603 g_s116_117))
(define-fun lh_2 () Bool (mem g_s534_603 g_s295_297))
(define-fun lh_3 () Bool (mem g_s534_603 (dom g_s420$1_469)))
(define-fun lh_4 () Bool (mem g_s529$2_600 g_s148_150))
(define-fun lh_5 () Bool (= g_s529$2_600 (apply g_s420$1_469 g_s534_603)))
; PO 1 in group 21
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s420$1_469 g_s534_603) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s529$1_598 g_s529_597))
(define-fun lh_1 () Bool (mem g_s534_603 g_s116_117))
(define-fun lh_2 () Bool (mem g_s534_603 g_s295_297))
(define-fun lh_3 () Bool (mem g_s534_603 (dom g_s420$1_469)))
(define-fun lh_4 () Bool (mem g_s529$2_600 g_s148_150))
(define-fun lh_5 () Bool (= g_s529$2_600 (apply g_s420$1_469 g_s534_603)))
; PO 1 in group 22
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s420$1_469 g_s534_603) g_s148_150))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s532$1_602 g_s532_601))
(assert (= g_s529$1_598 g_s529_597))
(define-fun lh_1 () Bool (mem g_s537_604 g_s119_120))
(define-fun lh_2 () Bool (mem g_s537_604 g_s303_305))
(define-fun lh_3 () Bool (mem g_s537_604 (dom g_s421$1_474)))
(define-fun lh_4 () Bool (mem g_s529$2_600 g_s154_156))
(define-fun lh_5 () Bool (= g_s529$2_600 (apply g_s421$1_474 g_s537_604)))
; PO 1 in group 23
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (apply g_s421$1_474 g_s537_604) g_s154_156))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 24 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_2 () Bool (mem g_s439$2_540 g_s141_142))
(define-fun lh_3 () Bool (subset g_s350_352 g_s350_352))
(define-fun lh_4 () Bool (subset empty g_s350_352))
(define-fun lh_5 () Bool (= (binary_union empty g_s350_352) g_s350_352))
(define-fun lh_6 () Bool (= (binary_inter empty g_s350_352) empty))
(define-fun lh_7 () Bool (= g_s438$2_539 (bool (not (= g_s350_352 empty)))))
; PO 1 in group 24
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s350_352 (FIN g_s350_352)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 25 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_2 () Bool (mem g_s440$2_543 g_s124_125))
(define-fun lh_3 () Bool (subset g_s306_308 g_s306_308))
(define-fun lh_4 () Bool (subset empty g_s306_308))
(define-fun lh_5 () Bool (= (binary_union empty g_s306_308) g_s306_308))
(define-fun lh_6 () Bool (= (binary_inter empty g_s306_308) empty))
(define-fun lh_7 () Bool (= g_s438$2_539 (bool (not (= g_s306_308 empty)))))
; PO 1 in group 25
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s306_308 (FIN g_s306_308)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 26 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_2 () Bool (mem g_s431$2_546 g_s89_90))
(define-fun lh_3 () Bool (subset g_s236_238 g_s236_238))
(define-fun lh_4 () Bool (subset empty g_s236_238))
(define-fun lh_5 () Bool (= (binary_union empty g_s236_238) g_s236_238))
(define-fun lh_6 () Bool (= (binary_inter empty g_s236_238) empty))
(define-fun lh_7 () Bool (= g_s438$2_539 (bool (not (= g_s236_238 empty)))))
; PO 1 in group 26
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s236_238 (FIN g_s236_238)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 27 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s410$2_549 BOOL))
(define-fun lh_2 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_3 () Bool (mem g_s432$2_550 g_s113_114))
(define-fun lh_4 () Bool (subset g_s286_288 g_s286_288))
(define-fun lh_5 () Bool (subset empty g_s286_288))
(define-fun lh_6 () Bool (= (binary_union empty g_s286_288) g_s286_288))
(define-fun lh_7 () Bool (= (binary_inter empty g_s286_288) empty))
(define-fun lh_8 () Bool (= g_s438$2_539 (bool (not (= g_s286_288 empty)))))
(define-fun lh_9 () Bool (not (= g_s438$2_539 TRUE)))
(define-fun lh_10 () Bool (mem g_s438$3_605 BOOL))
(define-fun lh_11 () Bool (mem g_s433$2_606 g_s116_117))
(define-fun lh_12 () Bool (subset g_s295_297 g_s295_297))
(define-fun lh_13 () Bool (subset empty g_s295_297))
(define-fun lh_14 () Bool (= (binary_union empty g_s295_297) g_s295_297))
(define-fun lh_15 () Bool (= (binary_inter empty g_s295_297) empty))
(define-fun lh_16 () Bool (= g_s438$3_605 (bool (not (= g_s295_297 empty)))))
(define-fun lh_17 () Bool (not (= g_s438$3_605 TRUE)))
(define-fun lh_18 () Bool (mem g_s438$4_607 BOOL))
(define-fun lh_19 () Bool (mem g_s437$2_608 g_s114_115))
(define-fun lh_20 () Bool (subset g_s289_291 g_s289_291))
(define-fun lh_21 () Bool (subset empty g_s289_291))
(define-fun lh_22 () Bool (= (binary_union empty g_s289_291) g_s289_291))
(define-fun lh_23 () Bool (= (binary_inter empty g_s289_291) empty))
(define-fun lh_24 () Bool (= g_s438$4_607 (bool (not (= g_s289_291 empty)))))
; PO 1 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s286_288 (FIN g_s286_288)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s295_297 (FIN g_s295_297)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 27
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24) (mem g_s289_291 (FIN g_s289_291)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 28 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s438$2_539 BOOL))
(define-fun lh_2 () Bool (mem g_s435$2_555 g_s99_100))
(define-fun lh_3 () Bool (subset g_s252_254 g_s252_254))
(define-fun lh_4 () Bool (subset empty g_s252_254))
(define-fun lh_5 () Bool (= (binary_union empty g_s252_254) g_s252_254))
(define-fun lh_6 () Bool (= (binary_inter empty g_s252_254) empty))
(define-fun lh_7 () Bool (= g_s438$2_539 (bool (not (= g_s252_254 empty)))))
(define-fun lh_8 () Bool (not (= g_s438$2_539 TRUE)))
(define-fun lh_9 () Bool (mem g_s438$3_605 BOOL))
(define-fun lh_10 () Bool (mem g_s436$2_609 g_s101_102))
(define-fun lh_11 () Bool (subset g_s258_260 g_s258_260))
(define-fun lh_12 () Bool (subset empty g_s258_260))
(define-fun lh_13 () Bool (= (binary_union empty g_s258_260) g_s258_260))
(define-fun lh_14 () Bool (= (binary_inter empty g_s258_260) empty))
(define-fun lh_15 () Bool (= g_s438$3_605 (bool (not (= g_s258_260 empty)))))
(define-fun lh_16 () Bool (not (= g_s438$3_605 TRUE)))
(define-fun lh_17 () Bool (mem g_s438$4_607 BOOL))
(define-fun lh_18 () Bool (mem g_s428$2_610 g_s77_78))
(define-fun lh_19 () Bool (subset g_s183_185 g_s183_185))
(define-fun lh_20 () Bool (subset empty g_s183_185))
(define-fun lh_21 () Bool (= (binary_union empty g_s183_185) g_s183_185))
(define-fun lh_22 () Bool (= (binary_inter empty g_s183_185) empty))
(define-fun lh_23 () Bool (= g_s438$4_607 (bool (not (= g_s183_185 empty)))))
(define-fun lh_24 () Bool (not (= g_s438$4_607 TRUE)))
(define-fun lh_25 () Bool (mem g_s438$5_611 BOOL))
(define-fun lh_26 () Bool (mem g_s426$2_612 g_s71_72))
(define-fun lh_27 () Bool (subset g_s165_167 g_s165_167))
(define-fun lh_28 () Bool (subset empty g_s165_167))
(define-fun lh_29 () Bool (= (binary_union empty g_s165_167) g_s165_167))
(define-fun lh_30 () Bool (= (binary_inter empty g_s165_167) empty))
(define-fun lh_31 () Bool (= g_s438$5_611 (bool (not (= g_s165_167 empty)))))
(define-fun lh_32 () Bool (not (= g_s438$5_611 TRUE)))
(define-fun lh_33 () Bool (mem g_s438$6_613 BOOL))
(define-fun lh_34 () Bool (mem g_s430$2_614 g_s85_86))
(define-fun lh_35 () Bool (subset g_s209_211 g_s209_211))
(define-fun lh_36 () Bool (subset empty g_s209_211))
(define-fun lh_37 () Bool (= (binary_union empty g_s209_211) g_s209_211))
(define-fun lh_38 () Bool (= (binary_inter empty g_s209_211) empty))
(define-fun lh_39 () Bool (= g_s438$6_613 (bool (not (= g_s209_211 empty)))))
(define-fun lh_40 () Bool (not (= g_s438$6_613 TRUE)))
(define-fun lh_41 () Bool (mem g_s438$7_615 BOOL))
(define-fun lh_42 () Bool (mem g_s427$2_616 g_s75_76))
(define-fun lh_43 () Bool (subset g_s177_179 g_s177_179))
(define-fun lh_44 () Bool (subset empty g_s177_179))
(define-fun lh_45 () Bool (= (binary_union empty g_s177_179) g_s177_179))
(define-fun lh_46 () Bool (= (binary_inter empty g_s177_179) empty))
(define-fun lh_47 () Bool (= g_s438$7_615 (bool (not (= g_s177_179 empty)))))
(define-fun lh_48 () Bool (not (= g_s438$7_615 TRUE)))
(define-fun lh_49 () Bool (mem g_s438$8_617 BOOL))
(define-fun lh_50 () Bool (mem g_s429$2_618 g_s81_82))
(define-fun lh_51 () Bool (subset g_s197_199 g_s197_199))
(define-fun lh_52 () Bool (subset empty g_s197_199))
(define-fun lh_53 () Bool (= (binary_union empty g_s197_199) g_s197_199))
(define-fun lh_54 () Bool (= (binary_inter empty g_s197_199) empty))
(define-fun lh_55 () Bool (= g_s438$8_617 (bool (not (= g_s197_199 empty)))))
(define-fun lh_56 () Bool (not (= g_s438$8_617 TRUE)))
(define-fun lh_57 () Bool (mem g_s438$9_619 BOOL))
(define-fun lh_58 () Bool (mem g_s434$2_620 g_s87_88))
(define-fun lh_59 () Bool (subset g_s230_232 g_s230_232))
(define-fun lh_60 () Bool (subset empty g_s230_232))
(define-fun lh_61 () Bool (= (binary_union empty g_s230_232) g_s230_232))
(define-fun lh_62 () Bool (= (binary_inter empty g_s230_232) empty))
(define-fun lh_63 () Bool (= g_s438$9_619 (bool (not (= g_s230_232 empty)))))
(define-fun lh_64 () Bool (not (= g_s438$9_619 TRUE)))
(define-fun lh_65 () Bool (mem g_s438$10_621 BOOL))
(define-fun lh_66 () Bool (mem g_s431$2_546 g_s89_90))
(define-fun lh_67 () Bool (subset g_s236_238 g_s236_238))
(define-fun lh_68 () Bool (subset empty g_s236_238))
(define-fun lh_69 () Bool (= (binary_union empty g_s236_238) g_s236_238))
(define-fun lh_70 () Bool (= (binary_inter empty g_s236_238) empty))
(define-fun lh_71 () Bool (= g_s438$10_621 (bool (not (= g_s236_238 empty)))))
(define-fun lh_72 () Bool (not (= g_s438$10_621 TRUE)))
(define-fun lh_73 () Bool (mem g_s438$11_622 BOOL))
(define-fun lh_74 () Bool (mem g_s441$2_623 g_s108_109))
(define-fun lh_75 () Bool (subset g_s283_285 g_s283_285))
(define-fun lh_76 () Bool (subset empty g_s283_285))
(define-fun lh_77 () Bool (= (binary_union empty g_s283_285) g_s283_285))
(define-fun lh_78 () Bool (= (binary_inter empty g_s283_285) empty))
(define-fun lh_79 () Bool (= g_s438$11_622 (bool (not (= g_s283_285 empty)))))
(define-fun lh_80 () Bool (not (= g_s438$11_622 TRUE)))
(define-fun lh_81 () Bool (mem g_s438$12_624 BOOL))
(define-fun lh_82 () Bool (mem g_s443$2_625 g_s103_104))
(define-fun lh_83 () Bool (subset g_s264_266 g_s264_266))
(define-fun lh_84 () Bool (subset empty g_s264_266))
(define-fun lh_85 () Bool (= (binary_union empty g_s264_266) g_s264_266))
(define-fun lh_86 () Bool (= (binary_inter empty g_s264_266) empty))
(define-fun lh_87 () Bool (= g_s438$12_624 (bool (not (= g_s264_266 empty)))))
(define-fun lh_88 () Bool (not (= g_s438$12_624 TRUE)))
(define-fun lh_89 () Bool (mem g_s438$13_626 BOOL))
(define-fun lh_90 () Bool (mem g_s442$2_627 g_s136_137))
(define-fun lh_91 () Bool (subset g_s335_337 g_s335_337))
(define-fun lh_92 () Bool (subset empty g_s335_337))
(define-fun lh_93 () Bool (= (binary_union empty g_s335_337) g_s335_337))
(define-fun lh_94 () Bool (= (binary_inter empty g_s335_337) empty))
(define-fun lh_95 () Bool (= g_s438$13_626 (bool (not (= g_s335_337 empty)))))
(define-fun lh_96 () Bool (not (= g_s438$13_626 TRUE)))
(define-fun lh_97 () Bool (mem g_s438$14_628 BOOL))
(define-fun lh_98 () Bool (mem g_s444$2_629 g_s125_126))
(define-fun lh_99 () Bool (subset g_s309_311 g_s309_311))
(define-fun lh_100 () Bool (subset empty g_s309_311))
(define-fun lh_101 () Bool (= (binary_union empty g_s309_311) g_s309_311))
(define-fun lh_102 () Bool (= (binary_inter empty g_s309_311) empty))
(define-fun lh_103 () Bool (= g_s438$14_628 (bool (not (= g_s309_311 empty)))))
; PO 1 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s252_254 (FIN g_s252_254)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15) (mem g_s258_260 (FIN g_s258_260)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23) (mem g_s183_185 (FIN g_s183_185)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31) (mem g_s165_167 (FIN g_s165_167)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39) (mem g_s209_211 (FIN g_s209_211)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47) (mem g_s177_179 (FIN g_s177_179)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55) (mem g_s197_199 (FIN g_s197_199)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63) (mem g_s230_232 (FIN g_s230_232)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71) (mem g_s236_238 (FIN g_s236_238)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79) (mem g_s283_285 (FIN g_s283_285)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87) (mem g_s264_266 (FIN g_s264_266)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95) (mem g_s335_337 (FIN g_s335_337)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 28
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103) (mem g_s309_311 (FIN g_s309_311)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 29 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s545_630 g_s108_109))
(assert (mem g_s545_630 g_s283_285))
(assert (mem g_s545_630 g_s108_109))
(assert (mem g_s545_630 g_s283_285))
; PO 1 in group 29
(push 1)
(assert (not (mem g_s404$1_449 (|+->| (dom g_s404$1_449) (ran g_s404$1_449)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 29
(push 1)
(assert (not (mem g_s545_630 (dom g_s404$1_449))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 30 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s499_563 g_s77_78))
(assert (mem g_s499_563 g_s183_185))
(assert (mem g_s499_563 (dom g_s376_378)))
(assert (mem g_s499_563 g_s77_78))
(assert (mem g_s499_563 g_s183_185))
(assert (mem g_s499_563 (dom g_s376$1_436)))
(define-fun lh_1 () Bool (mem g_s498$2_564 g_s148_150))
; PO 1 in group 30
(assert (not (=> lh_1 (mem g_s376$1_436 (|+->| (dom g_s376$1_436) (ran g_s376$1_436))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 31 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s499_563 g_s77_78))
(assert (mem g_s499_563 g_s183_185))
(assert (mem g_s499_563 (dom g_s377_379)))
(assert (mem g_s499_563 g_s77_78))
(assert (mem g_s499_563 g_s183_185))
(assert (mem g_s499_563 (dom g_s377$1_437)))
(define-fun lh_1 () Bool (mem g_s504$2_569 g_s148_150))
; PO 1 in group 31
(assert (not (=> lh_1 (mem g_s377$1_437 (|+->| (dom g_s377$1_437) (ran g_s377$1_437))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 32 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 (dom g_s385_387)))
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 (dom g_s385$1_440)))
(define-fun lh_1 () Bool (mem g_s517$2_585 g_s148_150))
; PO 1 in group 32
(assert (not (=> lh_1 (mem g_s385$1_440 (|+->| (dom g_s385$1_440) (ran g_s385$1_440))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 33 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 (dom g_s386_388)))
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 (dom g_s386$1_441)))
(define-fun lh_1 () Bool (mem g_s521$2_590 g_s148_150))
; PO 1 in group 33
(assert (not (=> lh_1 (mem g_s386$1_441 (|+->| (dom g_s386$1_441) (ran g_s386$1_441))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 34 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s534_603 g_s116_117))
(assert (mem g_s534_603 g_s295_297))
(assert (mem g_s534_603 (dom g_s420_422)))
(assert (mem g_s534_603 g_s116_117))
(assert (mem g_s534_603 g_s295_297))
(assert (mem g_s534_603 (dom g_s420$1_469)))
(define-fun lh_1 () Bool (mem g_s529$2_600 g_s148_150))
; PO 1 in group 34
(assert (not (=> lh_1 (mem g_s420$1_469 (|+->| (dom g_s420$1_469) (ran g_s420$1_469))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 35 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s530_599 g_s113_114))
(assert (mem g_s530_599 g_s286_288))
(assert (mem g_s530_599 (dom g_s413_415)))
(assert (mem g_s530_599 g_s113_114))
(assert (mem g_s530_599 g_s286_288))
(assert (mem g_s530_599 (dom g_s413$1_463)))
(define-fun lh_1 () Bool (mem g_s529$2_600 g_s148_150))
; PO 1 in group 35
(assert (not (=> lh_1 (mem g_s413$1_463 (|+->| (dom g_s413$1_463) (ran g_s413$1_463))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 36 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 (dom g_s383_385)))
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 (dom g_s383$1_438)))
(define-fun lh_1 () Bool (mem g_s508$2_575 g_s148_150))
; PO 1 in group 36
(assert (not (=> lh_1 (mem g_s383$1_438 (|+->| (dom g_s383$1_438) (ran g_s383$1_438))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 37 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 (dom g_s384_386)))
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 (dom g_s384$1_439)))
(define-fun lh_1 () Bool (mem g_s513$2_580 g_s148_150))
; PO 1 in group 37
(assert (not (=> lh_1 (mem g_s384$1_439 (|+->| (dom g_s384$1_439) (ran g_s384$1_439))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 38 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s526_595 g_s101_102))
(assert (mem g_s526_595 g_s258_260))
(assert (mem g_s526_595 (dom g_s398_400)))
(assert (mem g_s526_595 g_s101_102))
(assert (mem g_s526_595 g_s258_260))
(assert (mem g_s526_595 (dom g_s398$1_481)))
(define-fun lh_1 () Bool (mem g_s525$2_596 g_s148_150))
; PO 1 in group 38
(assert (not (=> lh_1 (mem g_s398$1_481 (|+->| (dom g_s398$1_481) (ran g_s398$1_481))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 39 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s556_631 g_s71_72))
(assert (mem g_s556_631 g_s165_167))
(assert (mem g_s556_631 g_s71_72))
(assert (mem g_s556_631 g_s165_167))
; PO 1 in group 39
(push 1)
(assert (not (mem g_s556_631 (dom g_s378$1_443))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 39
(push 1)
(assert (not (mem g_s378$1_443 (|+->| (dom g_s378$1_443) (ran g_s378$1_443)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 40 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s499_563 g_s77_78))
(assert (mem g_s499_563 g_s183_185))
(assert (mem g_s499_563 g_s77_78))
(assert (mem g_s499_563 g_s183_185))
(define-fun lh_1 () Bool (mem g_s499_563 (dom g_s376$1_436)))
(define-fun lh_2 () Bool (mem g_s498$2_564 g_s148_150))
; PO 1 in group 40
(assert (not (=> (and lh_1 lh_2) (mem g_s376$1_436 (|+->| (dom g_s376$1_436) (ran g_s376$1_436))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 41 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s499_563 g_s77_78))
(assert (mem g_s499_563 g_s183_185))
(assert (mem g_s499_563 g_s77_78))
(assert (mem g_s499_563 g_s183_185))
(define-fun lh_1 () Bool (mem g_s499_563 (dom g_s377$1_437)))
(define-fun lh_2 () Bool (mem g_s504$2_569 g_s148_150))
; PO 1 in group 41
(assert (not (=> (and lh_1 lh_2) (mem g_s377$1_437 (|+->| (dom g_s377$1_437) (ran g_s377$1_437))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 42 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(define-fun lh_1 () Bool (mem g_s509_574 (dom g_s385$1_440)))
(define-fun lh_2 () Bool (mem g_s517$2_585 g_s148_150))
; PO 1 in group 42
(assert (not (=> (and lh_1 lh_2) (mem g_s385$1_440 (|+->| (dom g_s385$1_440) (ran g_s385$1_440))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 43 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(define-fun lh_1 () Bool (mem g_s509_574 (dom g_s386$1_441)))
(define-fun lh_2 () Bool (mem g_s521$2_590 g_s148_150))
; PO 1 in group 43
(assert (not (=> (and lh_1 lh_2) (mem g_s386$1_441 (|+->| (dom g_s386$1_441) (ran g_s386$1_441))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 44 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s534_603 g_s116_117))
(assert (mem g_s534_603 g_s295_297))
(assert (mem g_s534_603 g_s116_117))
(assert (mem g_s534_603 g_s295_297))
(define-fun lh_1 () Bool (mem g_s534_603 (dom g_s420$1_469)))
(define-fun lh_2 () Bool (mem g_s529$2_600 g_s148_150))
; PO 1 in group 44
(assert (not (=> (and lh_1 lh_2) (mem g_s420$1_469 (|+->| (dom g_s420$1_469) (ran g_s420$1_469))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 45 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s530_599 g_s113_114))
(assert (mem g_s530_599 g_s286_288))
(assert (mem g_s530_599 g_s113_114))
(assert (mem g_s530_599 g_s286_288))
(define-fun lh_1 () Bool (mem g_s530_599 (dom g_s413$1_463)))
(define-fun lh_2 () Bool (mem g_s529$2_600 g_s148_150))
; PO 1 in group 45
(assert (not (=> (and lh_1 lh_2) (mem g_s413$1_463 (|+->| (dom g_s413$1_463) (ran g_s413$1_463))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 46 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(define-fun lh_1 () Bool (mem g_s509_574 (dom g_s383$1_438)))
(define-fun lh_2 () Bool (mem g_s508$2_575 g_s148_150))
; PO 1 in group 46
(assert (not (=> (and lh_1 lh_2) (mem g_s383$1_438 (|+->| (dom g_s383$1_438) (ran g_s383$1_438))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 47 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(assert (mem g_s509_574 g_s75_76))
(assert (mem g_s509_574 g_s177_179))
(define-fun lh_1 () Bool (mem g_s509_574 (dom g_s384$1_439)))
(define-fun lh_2 () Bool (mem g_s513$2_580 g_s148_150))
; PO 1 in group 47
(assert (not (=> (and lh_1 lh_2) (mem g_s384$1_439 (|+->| (dom g_s384$1_439) (ran g_s384$1_439))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 48 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s526_595 g_s101_102))
(assert (mem g_s526_595 g_s258_260))
(assert (mem g_s526_595 g_s101_102))
(assert (mem g_s526_595 g_s258_260))
(define-fun lh_1 () Bool (mem g_s526_595 (dom g_s398$1_481)))
(define-fun lh_2 () Bool (mem g_s525$2_596 g_s148_150))
; PO 1 in group 48
(assert (not (=> (and lh_1 lh_2) (mem g_s398$1_481 (|+->| (dom g_s398$1_481) (ran g_s398$1_481))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 49 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s537_604 g_s119_120))
(assert (mem g_s537_604 g_s303_305))
(assert (mem g_s537_604 g_s119_120))
(assert (mem g_s537_604 g_s303_305))
(define-fun lh_1 () Bool (mem g_s537_604 (dom g_s421$1_474)))
(define-fun lh_2 () Bool (mem g_s529$2_600 g_s154_156))
; PO 1 in group 49
(assert (not (=> (and lh_1 lh_2) (mem g_s421$1_474 (|+->| (dom g_s421$1_474) (ran g_s421$1_474))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)