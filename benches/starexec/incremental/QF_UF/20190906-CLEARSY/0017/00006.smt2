(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: Event-B
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e112 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s100$1_140 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s101$1_128 () U)
(declare-fun g_s101$2_162 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s102$1_127 () U)
(declare-fun g_s102$2_161 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s103$1_129 () U)
(declare-fun g_s103$2_163 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s104$1_135 () U)
(declare-fun g_s104$2_160 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s105$1_136 () U)
(declare-fun g_s105$2_155 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s106$1_137 () U)
(declare-fun g_s106$2_157 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s107$1_138 () U)
(declare-fun g_s107$2_171 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s108$1_139 () U)
(declare-fun g_s108$2_172 () U)
(declare-fun g_s109_113 () U)
(declare-fun g_s109$1_122 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_114 () U)
(declare-fun g_s110$1_132 () U)
(declare-fun g_s110$2_180 () U)
(declare-fun g_s111_111 () U)
(declare-fun g_s111$1_123 () U)
(declare-fun g_s111$2_153 () U)
(declare-fun g_s112_110 () U)
(declare-fun g_s112$1_133 () U)
(declare-fun g_s112$2_154 () U)
(declare-fun g_s113_115 () U)
(declare-fun g_s114_116 () U)
(declare-fun g_s114$1_126 () U)
(declare-fun g_s114$2_182 () U)
(declare-fun g_s115_117 () U)
(declare-fun g_s115$1_134 () U)
(declare-fun g_s116_118 () U)
(declare-fun g_s116$1_124 () U)
(declare-fun g_s116$2_158 () U)
(declare-fun g_s117_119 () U)
(declare-fun g_s117$1_125 () U)
(declare-fun g_s117$2_159 () U)
(declare-fun g_s118_120 () U)
(declare-fun g_s118$1_130 () U)
(declare-fun g_s118$2_173 () U)
(declare-fun g_s119_121 () U)
(declare-fun g_s119$1_131 () U)
(declare-fun g_s119$2_174 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120$1_141 () U)
(declare-fun g_s120$2_169 () U)
(declare-fun g_s121$1_142 () U)
(declare-fun g_s121$2_165 () U)
(declare-fun g_s122$1_143 () U)
(declare-fun g_s122$2_156 () U)
(declare-fun g_s123$1_144 () U)
(declare-fun g_s123$2_166 () U)
(declare-fun g_s124$1_145 () U)
(declare-fun g_s124$2_167 () U)
(declare-fun g_s125$1_146 () U)
(declare-fun g_s125$2_168 () U)
(declare-fun g_s126$1_147 () U)
(declare-fun g_s127$1_148 () U)
(declare-fun g_s127$2_175 () U)
(declare-fun g_s128$1_149 () U)
(declare-fun g_s128$2_176 () U)
(declare-fun g_s129$1_150 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130$1_151 () U)
(declare-fun g_s130$2_164 () U)
(declare-fun g_s131$1_152 () U)
(declare-fun g_s131$2_170 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s141_177 () U)
(declare-fun g_s142_178 () U)
(declare-fun g_s143_179 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_181 () U)
(declare-fun g_s152_183 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_7 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_6 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_9 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_8 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun e100 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool true)
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool (and (= g_s0_1 (SET (mapplet g_s4_5 (mapplet g_s3_4 (mapplet g_s2_3 g_s1_2))))) (subset g_s5_7 g_s6_6) (= g_s5_7 (set_diff g_s7_9 (SET g_s8_8)))))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool (and (= g_s9_10 (SET (mapplet g_s12_13 (mapplet g_s11_12 g_s10_11)))) (= g_s13_14 (SET (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 g_s14_15)))))))) (= g_s21_22 (SET (mapplet g_s24_25 (mapplet g_s23_24 g_s22_23)))) (= g_s6_6 (SET (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 (mapplet g_s53_54 (mapplet g_s52_53 (mapplet g_s8_8 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 g_s25_26))))))))))))))))))))))))))))))))))))) (= g_s60_61 (SET (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 (mapplet g_s62_63 g_s61_62)))))) (not (= g_s66_67 empty)) (= g_s67_68 (SET (mapplet g_s70_71 (mapplet g_s69_70 g_s68_69)))) (= g_s71_72 (SET (mapplet g_s74_75 (mapplet g_s73_74 g_s72_73)))) (= g_s75_76 (SET (mapplet g_s77_78 g_s76_77))) (= g_s78_79 (SET (mapplet g_s81_82 (mapplet g_s80_81 g_s79_80)))) (= g_s82_83 (SET (mapplet g_s86_87 (mapplet g_s85_86 (mapplet g_s84_85 g_s83_84))))) (subset g_s7_9 g_s6_6) (= g_s7_9 (set_diff g_s87_88 (SET g_s52_53))) (mem g_s88_89 (|-->| g_s66_67 BOOL)) (mem g_s89_90 (|+->| g_s66_67 g_s13_14)) (mem g_s90_91 (|-->| (set_prod g_s66_67 g_s13_14) BOOL)) (subset g_s91_92 g_s6_6) (subset g_s92_93 g_s6_6) (subset g_s87_88 g_s6_6) (subset g_s93_94 g_s6_6) (subset g_s94_95 g_s6_6) (subset g_s95_96 g_s6_6) (= g_s91_92 (SET (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 g_s34_35)))))) (= g_s92_93 (SET (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 g_s42_43)))))) (= g_s87_88 (set_diff (apply g_s96_97 g_s61_62) (binary_union g_s91_92 g_s92_93))) (= g_s93_94 (SET (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 g_s55_56))))) (= g_s94_95 (set_diff (apply g_s96_97 g_s63_64) g_s93_94)) (= g_s95_96 (apply g_s96_97 g_s64_65)) (mem g_s97_98 (|-->>| g_s66_67 g_s6_6)) (mem g_s98_99 (|+->| g_s66_67 g_s67_68)) (= (dom g_s98_99) e100) (= (ran g_s98_99) g_s67_68) (mem g_s96_97 (|-->| g_s60_61 (POW g_s6_6))) (= g_s96_97 (SET (mapplet (mapplet g_s65_66 empty) (mapplet (mapplet g_s64_65 (SET (mapplet g_s41_42 g_s40_41))) (mapplet (mapplet g_s63_64 (SET (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 (mapplet g_s53_54 g_s25_26)))))))) (mapplet (mapplet g_s62_63 empty) (mapplet g_s61_62 (SET (mapplet g_s52_53 (mapplet g_s8_8 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 g_s25_26))))))))))))))))))))))))))))))))))))))
(define-fun |def_abs| () Bool (and (mem g_s100_101 g_s9_10) (=> (not (= g_s100_101 g_s12_13)) (and (= g_s101_102 g_s80_81) (= g_s102_103 g_s80_81) (= g_s103_104 g_s80_81))) (mem g_s104_105 g_s21_22) (or (= g_s105_106 g_s72_73) (= g_s105_106 g_s73_74)) (mem g_s106_107 BOOL) (mem g_s107_108 BOOL) (mem g_s108_109 BOOL) (=> (and (= g_s109_113 e112) (or (= g_s110_114 g_s61_62) (= g_s110_114 g_s63_64) (= g_s110_114 g_s64_65))) (= (apply g_s97_98 g_s111_111) g_s112_110)) (= g_s113_115 (apply (SET (mapplet (mapplet TRUE g_s105_106) (mapplet FALSE g_s74_75))) (bool (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE))))) (=> (= g_s114_116 TRUE) (and (= g_s102_103 g_s80_81) (= g_s101_102 g_s80_81) (= g_s103_104 g_s80_81))) (mem g_s110_114 g_s60_61) (mem g_s112_110 g_s6_6) (mem g_s115_117 g_s6_6) (=> (and (= g_s109_113 e112) (or (= g_s110_114 g_s61_62) (= g_s110_114 g_s63_64) (= g_s110_114 g_s64_65))) (= (apply g_s97_98 g_s111_111) g_s112_110)) (=> (= g_s102_103 g_s80_81) (not (= g_s110_114 g_s65_66))) (mem g_s109_113 INTEGER) (and (|>=i| g_s109_113 e0) (|<=i| g_s109_113 e112)) (mem g_s111_111 g_s66_67) (mem g_s116_118 g_s75_76) (mem g_s117_119 g_s75_76) (mem g_s114_116 BOOL) (mem g_s113_115 g_s71_72) (mem g_s102_103 g_s78_79) (mem g_s101_102 g_s78_79) (mem g_s103_104 g_s78_79) (mem g_s118_120 g_s82_83) (mem g_s119_121 BOOL) (=> (= g_s114_116 TRUE) (= g_s101_102 g_s80_81)) (=> (= g_s114_116 TRUE) (= g_s102_103 g_s80_81)) (=> (= g_s114_116 TRUE) (= g_s103_104 g_s80_81)) (not (or (= g_s102_103 g_s81_82) (= g_s101_102 g_s81_82) (= g_s103_104 g_s81_82))) (=> (not (= g_s113_115 g_s72_73)) (not (= g_s118_120 g_s83_84))) (=> (not (= g_s113_115 g_s72_73)) (not (= g_s118_120 g_s84_85))) (=> (not (= g_s113_115 g_s73_74)) (not (= g_s118_120 g_s85_86))) (=> (= g_s116_118 g_s77_78) (not (= g_s118_120 g_s83_84))) (=> (= g_s116_118 g_s77_78) (not (= g_s118_120 g_s84_85))) (=> (= g_s117_119 g_s77_78) (not (= g_s118_120 g_s85_86))) (=> (and (= g_s114_116 TRUE) (not (= g_s113_115 g_s73_74))) (not (= g_s118_120 g_s85_86))) (= g_s7_9 (SET (mapplet g_s8_8 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 g_s25_26))))))))))))))))))) (= g_s87_88 (SET (mapplet g_s52_53 (mapplet g_s8_8 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 g_s25_26)))))))))))))))))))) (= g_s94_95 (SET (mapplet g_s54_55 (mapplet g_s53_54 g_s25_26)))) (= g_s95_96 (SET (mapplet g_s41_42 g_s40_41))) (= (bool (= g_s113_115 g_s72_73)) (bool (and (= g_s104_105 g_s23_24) (= g_s105_106 g_s72_73) (= g_s106_107 TRUE)))) (= (bool (= g_s113_115 g_s73_74)) (bool (and (= g_s104_105 g_s23_24) (= g_s105_106 g_s73_74) (= g_s106_107 TRUE)))) (= (bool (= g_s113_115 g_s74_75)) (bool (not (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE))))) (= (apply g_s96_97 g_s61_62) (SET (mapplet g_s52_53 (mapplet g_s8_8 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 g_s25_26)))))))))))))))))))))))))))))) (= (apply g_s96_97 g_s62_63) empty) (= (apply g_s96_97 g_s63_64) (SET (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 (mapplet g_s53_54 g_s25_26)))))))) (= (apply g_s96_97 g_s64_65) (SET (mapplet g_s41_42 g_s40_41))) (= (apply g_s96_97 g_s65_66) empty) (=> (= g_s114_116 TRUE) (and (= g_s101_102 g_s80_81) (= g_s102_103 g_s80_81) (= g_s103_104 g_s80_81)))))
(define-fun |def_inv| () Bool (and (= g_s109_113 g_s109$1_122) (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s118_120 g_s118$1_130) (= g_s119_121 g_s119$1_131) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s115_117 g_s115$1_134) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s107_108 g_s107$1_138) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))
(define-fun |def_ass| () Bool  (= g_s5_7 (SET (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s39_40 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 g_s25_26)))))))))))))))))))
(define-fun |def_sets| () Bool  (= g_s0_1 (SET (mapplet g_s4_5 (mapplet g_s3_4 (mapplet g_s2_3 g_s1_2))))))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
; PO 1 in group 0
(assert (not (= g_s5_7 (SET (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s39_40 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 g_s25_26))))))))))))))))))))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s111$2_153 g_s66_67))
(define-fun lh_2 () Bool (mem g_s112$2_154 g_s6_6))
(define-fun lh_3 () Bool (or (= g_s105$2_155 g_s72_73) (= g_s105$2_155 g_s73_74)))
(define-fun lh_4 () Bool (mem g_s122$2_156 BOOL))
; PO 1 in group 1
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (SET (mapplet (mapplet g_s70_71 TRUE) (mapplet (mapplet g_s69_70 FALSE) (mapplet g_s68_69 TRUE)))) (|-->| g_s67_68 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s61_62))
(define-fun lh_3 () Bool (mem g_s112$1_133 g_s5_7))
(define-fun lh_4 () Bool (= g_s116_118 g_s77_78))
(define-fun lh_5 () Bool (= g_s117_119 g_s77_78))
(define-fun lh_6 () Bool (not (= g_s102_103 g_s79_80)))
(define-fun lh_7 () Bool (not (= g_s101_102 g_s79_80)))
(define-fun lh_8 () Bool (not (= g_s103_104 g_s79_80)))
(define-fun lh_9 () Bool (= g_s114_116 TRUE))
(define-fun lh_10 () Bool (= g_s107_108 FALSE))
(define-fun lh_11 () Bool (= g_s108_109 FALSE))
(define-fun lh_12 () Bool (mem g_s106$2_157 BOOL))
(define-fun lh_13 () Bool (mem g_s116$2_158 g_s75_76))
(define-fun lh_14 () Bool (=> (= g_s116$1_124 g_s77_78) (= g_s116$2_158 g_s77_78)))
(define-fun lh_15 () Bool (mem g_s117$2_159 g_s75_76))
(define-fun lh_16 () Bool (=> (= g_s117$1_125 g_s77_78) (= g_s117$2_159 g_s77_78)))
(define-fun lh_17 () Bool (mem g_s104$2_160 g_s21_22))
(define-fun lh_18 () Bool (or (= g_s105$2_155 g_s72_73) (= g_s105$2_155 g_s73_74)))
(define-fun lh_19 () Bool (=> (and (= g_s106$1_137 FALSE) (not (= g_s130$1_151 g_s23_24))) (= g_s106$2_157 FALSE)))
(define-fun lh_20 () Bool (mem g_s102$2_161 g_s78_79))
(define-fun lh_21 () Bool (mem g_s101$2_162 g_s78_79))
(define-fun lh_22 () Bool (mem g_s103$2_163 g_s78_79))
(define-fun lh_23 () Bool (=> (not (= g_s102$1_127 g_s79_80)) (= g_s102$2_161 g_s102$1_127)))
(define-fun lh_24 () Bool (=> (not (= g_s101$1_128 g_s79_80)) (= g_s101$2_162 g_s101$1_128)))
(define-fun lh_25 () Bool (=> (not (= g_s103$1_129 g_s79_80)) (= g_s103$2_163 g_s103$1_129)))
(define-fun lh_26 () Bool (=> (= g_s114$1_126 TRUE) (and (= g_s101$2_162 g_s80_81) (= g_s102$2_161 g_s80_81) (= g_s103$2_163 g_s80_81))))
(define-fun lh_27 () Bool (not (or (= g_s102$2_161 g_s81_82) (= g_s101$2_162 g_s81_82) (= g_s103$2_163 g_s81_82))))
(define-fun lh_28 () Bool (mem g_s130$2_164 g_s21_22))
(define-fun lh_29 () Bool (=> (= g_s130$1_151 g_s24_25) (= g_s130$2_164 g_s24_25)))
(define-fun lh_30 () Bool (=> (not (= g_s130$1_151 g_s22_23)) (not (= g_s130$2_164 g_s22_23))))
(define-fun lh_31 () Bool (mem g_s121$2_165 BOOL))
(define-fun lh_32 () Bool (=> (= g_s121$1_142 TRUE) (= g_s121$2_165 TRUE)))
(define-fun lh_33 () Bool (mem g_s123$2_166 BOOL))
(define-fun lh_34 () Bool (=> (= g_s123$1_144 TRUE) (= g_s123$2_166 TRUE)))
(define-fun lh_35 () Bool (mem g_s124$2_167 BOOL))
(define-fun lh_36 () Bool (=> (= g_s124$1_145 TRUE) (= g_s124$2_167 TRUE)))
(define-fun lh_37 () Bool (mem g_s125$2_168 BOOL))
(define-fun lh_38 () Bool (=> (= g_s125$1_146 TRUE) (= g_s125$2_168 TRUE)))
(define-fun lh_39 () Bool (mem g_s122$2_156 BOOL))
(define-fun lh_40 () Bool (mem g_s120$2_169 (|-->| g_s67_68 BOOL)))
(define-fun lh_41 () Bool (mem g_s131$2_170 BOOL))
(define-fun lh_42 () Bool (mem g_s107$2_171 BOOL))
(define-fun lh_43 () Bool (=> (= g_s107$1_138 FALSE) (= g_s107$2_171 FALSE)))
(define-fun lh_44 () Bool (mem g_s108$2_172 BOOL))
(define-fun lh_45 () Bool (=> (= g_s108$1_139 FALSE) (= g_s108$2_172 FALSE)))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (or (= g_s105$1_136 g_s72_73) (= g_s105$1_136 g_s73_74)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s112_110 g_s7_9))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= FALSE g_s107$1_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= FALSE g_s108$1_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= g_s22_23 g_s104$1_135))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= g_s112_110 g_s59_60))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (not (or (= g_s102$1_127 g_s81_82) (= g_s101$1_128 g_s81_82) (= g_s103$1_129 g_s81_82))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9) (= g_s101$1_128 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_7) (= g_s101$1_128 g_s101_102))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= g_s116$1_124 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_5) (= g_s117$1_125 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_10) (= g_s107$1_138 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_11) (= g_s108$1_139 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9) (= g_s103$1_129 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_8) (= g_s103$1_129 g_s103_104))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9) (= g_s102$1_127 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_6) (= g_s102$1_127 g_s102_103))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (or (= g_s105$1_136 g_s72_73) (= g_s105$1_136 g_s73_74)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 21 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s112_110 g_s7_9))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 22 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s106_107 g_s106$2_157))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 23 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 24 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s116_118 g_s116$2_158))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 25 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s117_119 g_s117$2_159))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 26 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s112_110 g_s59_60))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 27 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s104_105 g_s22_23))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 28 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 29 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16) (not (or (= g_s102$1_127 g_s81_82) (= g_s101$1_128 g_s81_82) (= g_s103$1_129 g_s81_82))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 30 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s101$1_128 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 31 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_7 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s101$1_128 g_s101_102))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 32 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s116$2_158 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 33 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_5 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s117$2_159 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 34 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s103$1_129 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 35 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_8 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s103$1_129 g_s103_104))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 36 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s102$1_127 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 37 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_6 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s102$1_127 g_s102_103))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 38 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (mem g_s112_110 g_s7_9))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 39 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= FALSE g_s107$2_171))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 40 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= FALSE g_s108$2_172))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 41 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s22_23 g_s104$2_160))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 42 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s59_60 g_s112$1_133))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 43 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s106_107 g_s106$2_157))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 44 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 45 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s101_102 g_s101$2_162))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 46 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s105_106 g_s105$2_155))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 47 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s116_118 g_s116$2_158))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 48 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s117_119 g_s117$2_159))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 49 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s107_108 g_s107$2_171))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 50 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s108_109 g_s108$2_172))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 51 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s103_104 g_s103$2_163))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 52 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s104_105 g_s104$2_160))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 53 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 54 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s102_103 g_s102$2_161))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 55 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s101$2_162 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 56 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_7 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s101$2_162 g_s101_102))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 57 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s116$2_158 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 58 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_5 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s117$2_159 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 59 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_10 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s107$2_171 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 60 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s108$2_172 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 61 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s103$2_163 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 62 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_8 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s103$2_163 g_s103_104))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 63 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s102$2_161 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 64 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_6 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45) (= g_s102$2_161 g_s102_103))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s61_62))
(define-fun lh_3 () Bool (mem g_s112$1_133 g_s91_92))
(define-fun lh_4 () Bool (mem g_s106$2_157 BOOL))
(define-fun lh_5 () Bool (mem g_s116$2_158 g_s75_76))
(define-fun lh_6 () Bool (=> (= g_s116$1_124 g_s77_78) (= g_s116$2_158 g_s77_78)))
(define-fun lh_7 () Bool (mem g_s117$2_159 g_s75_76))
(define-fun lh_8 () Bool (=> (= g_s117$1_125 g_s77_78) (= g_s117$2_159 g_s77_78)))
(define-fun lh_9 () Bool (= g_s104$1_135 g_s23_24))
(define-fun lh_10 () Bool (= g_s106$1_137 TRUE))
(define-fun lh_11 () Bool (= g_s105$1_136 g_s72_73))
(define-fun lh_12 () Bool (= g_s116$1_124 g_s76_77))
(define-fun lh_13 () Bool (or (= g_s118$2_173 g_s83_84) (= g_s118$2_173 g_s84_85) (= g_s118$2_173 g_s86_87)))
(define-fun lh_14 () Bool (mem g_s119$2_174 BOOL))
(define-fun lh_15 () Bool (mem g_s107$2_171 BOOL))
(define-fun lh_16 () Bool (mem g_s120$2_169 (|-->| g_s67_68 BOOL)))
(define-fun lh_17 () Bool (not (and (= g_s105$1_136 g_s72_73) (= g_s116$1_124 g_s76_77))))
(define-fun lh_18 () Bool (= g_s105$1_136 g_s73_74))
(define-fun lh_19 () Bool (= g_s117$1_125 g_s76_77))
(define-fun lh_20 () Bool (or (= g_s118$2_173 g_s85_86) (= g_s118$2_173 g_s86_87)))
(define-fun lh_21 () Bool (not (and (= g_s105$1_136 g_s73_74) (= g_s117$1_125 g_s76_77))))
(define-fun lh_22 () Bool (not (and (= g_s104$1_135 g_s23_24) (= g_s106$1_137 TRUE))))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (or (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s107_108 g_s107$1_138) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)) (and (mem g_s106$1_137 BOOL) (and (and (mem g_s116$1_124 g_s75_76) (=> (= g_s116_118 g_s77_78) (= g_s116$1_124 g_s77_78))) (and (and (mem g_s117$1_125 g_s75_76) (=> (= g_s117_119 g_s77_78) (= g_s117$1_125 g_s77_78))) (and (= g_s111_111 g_s111$1_123) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s22_23 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= FALSE g_s107$1_138) (= FALSE g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))) (and (=> (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE)) (and (=> (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77)) (and (or (= g_s86_87 g_s83_84) (= g_s86_87 g_s84_85) (= g_s86_87 g_s86_87)) (and (mem FALSE BOOL) (and (mem g_s107$1_138 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s59_60) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77))) (and (=> (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77)) (and (or (= g_s86_87 g_s85_86) (= g_s86_87 g_s86_87)) (and (mem FALSE BOOL) (and (mem g_s107$1_138 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s59_60) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77))) (and (mem FALSE BOOL) (and (mem g_s107$1_138 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s59_60) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))) (=> (not (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE))) (and (mem FALSE BOOL) (and (mem g_s107$1_138 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s59_60) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s112_110 g_s91_92))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_14 lh_15 lh_16 lh_22) (or (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= FALSE g_s119$2_174) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s59_60 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s107_108 g_s107$2_171) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)) (and (mem g_s106$1_137 BOOL) (and (and (mem g_s116$1_124 g_s75_76) (=> (= g_s116_118 g_s77_78) (= g_s116$1_124 g_s77_78))) (and (and (mem g_s117$1_125 g_s75_76) (=> (= g_s117_119 g_s77_78) (= g_s117$1_125 g_s77_78))) (and (= g_s111_111 g_s111$1_123) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= FALSE g_s119$2_174) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s59_60 g_s112$1_133) (= g_s22_23 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= FALSE g_s107$2_171) (= FALSE g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))) (and (=> (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE)) (and (=> (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77)) (and (or (= g_s86_87 g_s83_84) (= g_s86_87 g_s84_85) (= g_s86_87 g_s86_87)) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77))) (and (=> (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77)) (and (or (= g_s86_87 g_s85_86) (= g_s86_87 g_s86_87)) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77))) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))) (=> (not (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE))) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_14 lh_15 lh_16 lh_22) (mem g_s112_110 g_s91_92))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_14 lh_15 lh_16 lh_22) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_14 lh_15 lh_16 lh_22) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (or (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$2_158) (= g_s117_119 g_s117$2_159) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s22_23) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$2_157) (= g_s107_108 FALSE) (= g_s108_109 FALSE) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)) (and (mem g_s106$2_157 BOOL) (and (and (mem g_s116$2_158 g_s75_76) (=> (= g_s116_118 g_s77_78) (= g_s116$2_158 g_s77_78))) (and (and (mem g_s117$2_159 g_s75_76) (=> (= g_s117_119 g_s77_78) (= g_s117$2_159 g_s77_78))) (and (= g_s111_111 g_s111$1_123) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s105_106 g_s105$1_136) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))) (and (=> (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE)) (and (=> (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77)) (and (or (= g_s86_87 g_s83_84) (= g_s86_87 g_s84_85) (= g_s86_87 g_s86_87)) (and (mem FALSE BOOL) (and (mem FALSE BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$2_158) (= g_s117_119 g_s117$2_159) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s59_60) (= g_s104_105 g_s22_23) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$2_157) (= g_s108_109 FALSE) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77))) (and (=> (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77)) (and (or (= g_s86_87 g_s85_86) (= g_s86_87 g_s86_87)) (and (mem FALSE BOOL) (and (mem FALSE BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$2_158) (= g_s117_119 g_s117$2_159) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s59_60) (= g_s104_105 g_s22_23) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$2_157) (= g_s108_109 FALSE) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77))) (and (mem FALSE BOOL) (and (mem FALSE BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$2_158) (= g_s117_119 g_s117$2_159) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s59_60) (= g_s104_105 g_s22_23) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$2_157) (= g_s108_109 FALSE) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))) (=> (not (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE))) (and (mem FALSE BOOL) (and (mem FALSE BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$2_158) (= g_s117_119 g_s117$2_159) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s59_60) (= g_s104_105 g_s22_23) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$2_157) (= g_s108_109 FALSE) (= g_s100_101 g_s100$1_140) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$1_141 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s112_110 g_s91_92))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_14 lh_15 lh_16 lh_17 lh_21) (or (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= FALSE g_s119$2_174) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s59_60 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s107_108 g_s107$2_171) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)) (and (mem g_s106$1_137 BOOL) (and (and (mem g_s116$1_124 g_s75_76) (=> (= g_s116_118 g_s77_78) (= g_s116$1_124 g_s77_78))) (and (and (mem g_s117$1_125 g_s75_76) (=> (= g_s117_119 g_s77_78) (= g_s117$1_125 g_s77_78))) (and (= g_s111_111 g_s111$1_123) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= FALSE g_s119$2_174) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s59_60 g_s112$1_133) (= g_s22_23 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= FALSE g_s107$2_171) (= FALSE g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))) (and (=> (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE)) (and (=> (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77)) (and (or (= g_s86_87 g_s83_84) (= g_s86_87 g_s84_85) (= g_s86_87 g_s86_87)) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77))) (and (=> (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77)) (and (or (= g_s86_87 g_s85_86) (= g_s86_87 g_s86_87)) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77))) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))) (=> (not (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE))) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_14 lh_15 lh_16 lh_17 lh_21) (mem g_s112_110 g_s91_92))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_14 lh_15 lh_16 lh_17 lh_21) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_14 lh_15 lh_16 lh_17 lh_21) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (or (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s86_87 g_s118$2_173) (= FALSE g_s119$2_174) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s59_60 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s107_108 g_s107$2_171) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)) (and (mem g_s106$1_137 BOOL) (and (and (mem g_s116$1_124 g_s75_76) (=> (= g_s116_118 g_s77_78) (= g_s116$1_124 g_s77_78))) (and (and (mem g_s117$1_125 g_s75_76) (=> (= g_s117_119 g_s77_78) (= g_s117$1_125 g_s77_78))) (and (= g_s111_111 g_s111$1_123) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s86_87 g_s118$2_173) (= FALSE g_s119$2_174) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s59_60 g_s112$1_133) (= g_s22_23 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= FALSE g_s107$2_171) (= FALSE g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))) (and (=> (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE)) (and (=> (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77)) (and (or (= g_s118$2_173 g_s83_84) (= g_s118$2_173 g_s84_85) (= g_s118$2_173 g_s86_87)) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77))) (and (=> (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77)) (and (or (= g_s118$2_173 g_s85_86) (= g_s118$2_173 g_s86_87)) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77))) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s86_87 g_s118$2_173) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))) (=> (not (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE))) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s86_87 g_s118$2_173) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (mem g_s112_110 g_s91_92))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 21 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (or (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s86_87 g_s118$2_173) (= FALSE g_s119$2_174) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s59_60 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s107_108 g_s107$2_171) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)) (and (mem g_s106$1_137 BOOL) (and (and (mem g_s116$1_124 g_s75_76) (=> (= g_s116_118 g_s77_78) (= g_s116$1_124 g_s77_78))) (and (and (mem g_s117$1_125 g_s75_76) (=> (= g_s117_119 g_s77_78) (= g_s117$1_125 g_s77_78))) (and (= g_s111_111 g_s111$1_123) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s86_87 g_s118$2_173) (= FALSE g_s119$2_174) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s59_60 g_s112$1_133) (= g_s22_23 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= FALSE g_s107$2_171) (= FALSE g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))) (and (=> (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE)) (and (=> (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77)) (and (or (= g_s118$2_173 g_s83_84) (= g_s118$2_173 g_s84_85) (= g_s118$2_173 g_s86_87)) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s72_73) (= g_s116_118 g_s76_77))) (and (=> (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77)) (and (or (= g_s118$2_173 g_s85_86) (= g_s118$2_173 g_s86_87)) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL)))))) (=> (not (and (= g_s105_106 g_s73_74) (= g_s117_119 g_s76_77))) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s86_87 g_s118$2_173) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))) (=> (not (and (= g_s104_105 g_s23_24) (= g_s106_107 TRUE))) (and (mem g_s119$2_174 BOOL) (and (mem g_s107$2_171 BOOL) (and (= g_s111_111 g_s111$1_123) (= g_s116_118 g_s116$1_124) (= g_s117_119 g_s117$1_125) (= g_s114_116 g_s114$1_126) (= g_s102_103 g_s102$1_127) (= g_s101_102 g_s101$1_128) (= g_s103_104 g_s103$1_129) (= g_s86_87 g_s118$2_173) (= g_s110_114 g_s110$1_132) (= g_s112_110 g_s112$1_133) (= g_s112_110 g_s112$1_133) (= g_s104_105 g_s104$1_135) (= g_s105_106 g_s105$1_136) (= g_s106_107 g_s106$1_137) (= g_s108_109 g_s108$1_139) (= g_s100_101 g_s100$1_140) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s121$1_142 BOOL) (mem g_s122$1_143 BOOL) (mem g_s123$1_144 BOOL) (mem g_s124$1_145 BOOL) (mem g_s125$1_146 BOOL) (mem g_s120$2_169 (|-->| g_s67_68 BOOL)) (mem g_s126$1_147 BOOL) (mem g_s127$1_148 BOOL) (mem g_s128$1_149 BOOL) (mem g_s129$1_150 BOOL) (mem g_s130$1_151 g_s21_22) (mem g_s131$1_152 BOOL))))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 22 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (mem g_s112_110 g_s91_92))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 23 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 24 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_9 lh_10 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s61_62))
(define-fun lh_3 () Bool (= g_s112$1_133 g_s8_8))
(define-fun lh_4 () Bool (= (apply g_s88_89 g_s111$1_123) TRUE))
(define-fun lh_5 () Bool (= g_s106$1_137 TRUE))
(define-fun lh_6 () Bool (= g_s104$1_135 g_s23_24))
(define-fun lh_7 () Bool (= g_s105$1_136 g_s73_74))
(define-fun lh_8 () Bool (= (apply g_s90_91 (mapplet g_s111$1_123 g_s19_20)) TRUE))
(define-fun lh_9 () Bool (= g_s121$1_142 TRUE))
(define-fun lh_10 () Bool (= g_s123$1_144 TRUE))
(define-fun lh_11 () Bool (= g_s124$1_145 TRUE))
(define-fun lh_12 () Bool (= g_s125$1_146 TRUE))
(define-fun lh_13 () Bool (= (apply g_s120$1_141 g_s68_69) FALSE))
(define-fun lh_14 () Bool (= (apply g_s120$1_141 g_s69_70) FALSE))
(define-fun lh_15 () Bool (= (apply g_s120$1_141 g_s70_71) FALSE))
(define-fun lh_16 () Bool (mem g_s127$2_175 BOOL))
(define-fun lh_17 () Bool (mem g_s128$2_176 BOOL))
(define-fun lh_18 () Bool (= g_s116_118 g_s77_78))
(define-fun lh_19 () Bool (= g_s117_119 g_s77_78))
(define-fun lh_20 () Bool (not (= g_s102_103 g_s79_80)))
(define-fun lh_21 () Bool (not (= g_s101_102 g_s79_80)))
(define-fun lh_22 () Bool (not (= g_s103_104 g_s79_80)))
(define-fun lh_23 () Bool (= g_s114_116 TRUE))
(define-fun lh_24 () Bool (= g_s107_108 FALSE))
(define-fun lh_25 () Bool (= g_s108_109 FALSE))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (or (= g_s105$1_136 g_s72_73) (= g_s105$1_136 g_s73_74)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s112_110 g_s7_9))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= FALSE g_s107$1_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= FALSE g_s108$1_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s22_23 g_s104$1_135))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s59_60 g_s8_8))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s112_110 g_s8_8))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (not (or (= g_s102$1_127 g_s81_82) (= g_s101$1_128 g_s81_82) (= g_s103$1_129 g_s81_82))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_23) (= g_s101$1_128 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_21) (= g_s101$1_128 g_s101_102))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (= g_s116$1_124 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_19) (= g_s117$1_125 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_24) (= g_s107$1_138 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_25) (= g_s108$1_139 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_23) (= g_s103$1_129 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_22) (= g_s103$1_129 g_s103_104))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_23) (= g_s102$1_127 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_20) (= g_s102$1_127 g_s102_103))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s61_62))
(define-fun lh_3 () Bool (= g_s112$1_133 g_s8_8))
(define-fun lh_4 () Bool (not (and (= (apply g_s88_89 g_s111$1_123) TRUE) (= g_s106$1_137 TRUE) (= g_s104$1_135 g_s23_24) (= g_s105$1_136 g_s73_74) (= (apply g_s90_91 (mapplet g_s111$1_123 g_s19_20)) TRUE) (= g_s121$1_142 TRUE) (= g_s123$1_144 TRUE) (= g_s124$1_145 TRUE) (= g_s125$1_146 TRUE) (= (apply g_s120$1_141 g_s68_69) FALSE) (= (apply g_s120$1_141 g_s69_70) FALSE) (= (apply g_s120$1_141 g_s70_71) FALSE))))
(define-fun lh_5 () Bool (= g_s116_118 g_s77_78))
(define-fun lh_6 () Bool (= g_s117_119 g_s77_78))
(define-fun lh_7 () Bool (not (= g_s102_103 g_s79_80)))
(define-fun lh_8 () Bool (not (= g_s101_102 g_s79_80)))
(define-fun lh_9 () Bool (not (= g_s103_104 g_s79_80)))
(define-fun lh_10 () Bool (= g_s114_116 TRUE))
(define-fun lh_11 () Bool (= g_s107_108 FALSE))
(define-fun lh_12 () Bool (= g_s108_109 FALSE))
(define-fun lh_13 () Bool (mem g_s106$2_157 BOOL))
(define-fun lh_14 () Bool (mem g_s116$2_158 g_s75_76))
(define-fun lh_15 () Bool (=> (= g_s116$1_124 g_s77_78) (= g_s116$2_158 g_s77_78)))
(define-fun lh_16 () Bool (mem g_s117$2_159 g_s75_76))
(define-fun lh_17 () Bool (=> (= g_s117$1_125 g_s77_78) (= g_s117$2_159 g_s77_78)))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (or (= g_s105$1_136 g_s72_73) (= g_s105$1_136 g_s73_74)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s112_110 g_s7_9))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= FALSE g_s107$1_138))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= FALSE g_s108$1_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= g_s22_23 g_s104$1_135))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= g_s112_110 g_s59_60))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (not (or (= g_s102$1_127 g_s81_82) (= g_s101$1_128 g_s81_82) (= g_s103$1_129 g_s81_82))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_10) (= g_s101$1_128 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_8) (= g_s101$1_128 g_s101_102))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s116$1_124 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_6) (= g_s117$1_125 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_11) (= g_s107$1_138 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_12) (= g_s108$1_139 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_10) (= g_s103$1_129 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_9) (= g_s103$1_129 g_s103_104))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_10) (= g_s102$1_127 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= g_s102$1_127 g_s102_103))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (or (= g_s105$1_136 g_s72_73) (= g_s105$1_136 g_s73_74)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 21 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s112_110 g_s7_9))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 22 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s106_107 g_s106$2_157))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 23 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 24 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s116_118 g_s116$2_158))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 25 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s117_119 g_s117$2_159))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 26 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s112_110 g_s59_60))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 27 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s104_105 g_s22_23))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 28 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 29 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_13 lh_14 lh_15 lh_16 lh_17) (not (or (= g_s102$1_127 g_s81_82) (= g_s101$1_128 g_s81_82) (= g_s103$1_129 g_s81_82))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 30 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_10 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s101$1_128 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 31 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_8 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s101$1_128 g_s101_102))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 32 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s116$2_158 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 33 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_6 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s117$2_159 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 34 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_10 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s103$1_129 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 35 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_9 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s103$1_129 g_s103_104))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 36 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_10 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s102$1_127 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 37 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7 lh_13 lh_14 lh_15 lh_16 lh_17) (= g_s102$1_127 g_s102_103))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s141_177 BOOL))
(define-fun lh_2 () Bool (mem g_s142_178 BOOL))
(define-fun lh_3 () Bool (mem g_s143_179 g_s0_1))
(define-fun lh_4 () Bool (mem g_s116$2_158 g_s75_76))
(define-fun lh_5 () Bool (=> (= g_s116$1_124 g_s77_78) (= g_s116$2_158 g_s77_78)))
(define-fun lh_6 () Bool (mem g_s117$2_159 g_s75_76))
(define-fun lh_7 () Bool (=> (= g_s117$1_125 g_s77_78) (= g_s117$2_159 g_s77_78)))
(define-fun lh_8 () Bool (or (= g_s141_177 TRUE) (or (and (= g_s100$1_140 g_s11_12) (= g_s142_178 FALSE)) (= g_s143_179 g_s4_5)) (and (= g_s142_178 TRUE) (= g_s143_179 g_s4_5)) (and (= g_s142_178 TRUE) (= g_s110$1_132 g_s62_63) (= g_s143_179 g_s3_4) (= g_s127$1_148 FALSE))))
(define-fun lh_9 () Bool (= g_s116_118 g_s77_78))
(define-fun lh_10 () Bool (= g_s117_119 g_s77_78))
(define-fun lh_11 () Bool (= g_s114_116 TRUE))
(define-fun lh_12 () Bool (= g_s114$1_126 TRUE))
(define-fun lh_13 () Bool (= g_s102_103 g_s80_81))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_13) (not (= g_s110$1_132 g_s65_66)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_11) (= g_s114$1_126 TRUE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_12) (= g_s101_102 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s116$2_158 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_10) (= g_s117$2_159 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_12) (= g_s103_104 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_12) (= g_s102_103 g_s80_81))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s62_63))
(define-fun lh_3 () Bool (= g_s116_118 g_s77_78))
(define-fun lh_4 () Bool (= g_s117_119 g_s77_78))
(define-fun lh_5 () Bool (mem g_s106$2_157 BOOL))
(define-fun lh_6 () Bool (or (= g_s110$2_180 g_s63_64) (= g_s110$2_180 g_s64_65)))
(define-fun lh_7 () Bool (mem g_s116$2_158 g_s75_76))
(define-fun lh_8 () Bool (=> (= g_s116$1_124 g_s77_78) (= g_s116$2_158 g_s77_78)))
(define-fun lh_9 () Bool (mem g_s117$2_159 g_s75_76))
(define-fun lh_10 () Bool (=> (= g_s117$1_125 g_s77_78) (= g_s117$2_159 g_s77_78)))
; PO 1 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2) (or (= g_s110$1_132 g_s63_64) (= g_s110$1_132 g_s64_65)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2) (= FALSE g_s108$1_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s22_23 g_s104$1_135))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s110_114 g_s62_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s108_109 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= g_s116$1_124 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_4) (= g_s117$1_125 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s106_107 g_s106$2_157))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s110_114 g_s62_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s110_114 g_s110$2_180))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s116_118 g_s116$2_158))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s117_119 g_s117$2_159))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s108_109 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s104_105 g_s22_23))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s116$2_158 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (= g_s117$2_159 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s65_66))
(define-fun lh_3 () Bool (= g_s116_118 g_s77_78))
(define-fun lh_4 () Bool (= g_s117_119 g_s77_78))
(define-fun lh_5 () Bool (mem g_s106$2_157 BOOL))
(define-fun lh_6 () Bool (mem g_s116$2_158 g_s75_76))
(define-fun lh_7 () Bool (=> (= g_s116$1_124 g_s77_78) (= g_s116$2_158 g_s77_78)))
(define-fun lh_8 () Bool (mem g_s117$2_159 g_s75_76))
(define-fun lh_9 () Bool (=> (= g_s117$1_125 g_s77_78) (= g_s117$2_159 g_s77_78)))
; PO 1 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2) (= FALSE g_s108$1_139))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s61_62 g_s110$1_132))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s22_23 g_s104$1_135))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s110_114 g_s65_66))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s108_109 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= g_s116$1_124 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_4) (= g_s117$1_125 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s106_107 g_s106$2_157))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s110_114 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s110_114 g_s65_66))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s116_118 g_s116$2_158))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s117_119 g_s117$2_159))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s108_109 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s104_105 g_s22_23))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s109_113 e112))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s116$2_158 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (= g_s117$2_159 g_s77_78))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s61_62))
(define-fun lh_3 () Bool (= g_s112$1_133 g_s8_8))
(define-fun lh_4 () Bool (= (apply g_s88_89 g_s111$1_123) TRUE))
(define-fun lh_5 () Bool (= g_s106$1_137 TRUE))
(define-fun lh_6 () Bool (= g_s104$1_135 g_s23_24))
(define-fun lh_7 () Bool (= g_s105$1_136 g_s73_74))
(define-fun lh_8 () Bool (= (apply g_s90_91 (mapplet g_s111$1_123 g_s19_20)) TRUE))
(define-fun lh_9 () Bool (= g_s121$1_142 TRUE))
(define-fun lh_10 () Bool (= g_s123$1_144 TRUE))
(define-fun lh_11 () Bool (= g_s124$1_145 TRUE))
(define-fun lh_12 () Bool (= g_s125$1_146 TRUE))
(define-fun lh_13 () Bool (= (apply g_s120$1_141 g_s68_69) FALSE))
(define-fun lh_14 () Bool (= (apply g_s120$1_141 g_s69_70) FALSE))
; PO 1 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s88_89 (|+->| (dom g_s88_89) (ran g_s88_89))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s111$1_123 (dom g_s88_89)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s90_91 (|+->| (dom g_s90_91) (ran g_s90_91))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (mapplet g_s111$1_123 g_s19_20) (dom g_s90_91)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s68_69 (dom g_s120$1_141)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s120$1_141 (|+->| (dom g_s120$1_141) (ran g_s120$1_141))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s69_70 (dom g_s120$1_141)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s120$1_141 (|+->| (dom g_s120$1_141) (ran g_s120$1_141))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (mem g_s70_71 (dom g_s120$1_141)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (mem g_s120$1_141 (|+->| (dom g_s120$1_141) (ran g_s120$1_141))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s61_62))
(define-fun lh_3 () Bool (= g_s112$1_133 g_s8_8))
(define-fun lh_4 () Bool (= (apply g_s88_89 g_s111$1_123) TRUE))
(define-fun lh_5 () Bool (= g_s106$1_137 TRUE))
(define-fun lh_6 () Bool (= g_s104$1_135 g_s23_24))
(define-fun lh_7 () Bool (= g_s105$1_136 g_s73_74))
(define-fun lh_8 () Bool (= (apply g_s90_91 (mapplet g_s111$1_123 g_s19_20)) TRUE))
(define-fun lh_9 () Bool (= g_s121$1_142 TRUE))
(define-fun lh_10 () Bool (= g_s123$1_144 TRUE))
(define-fun lh_11 () Bool (= g_s124$1_145 TRUE))
(define-fun lh_12 () Bool (= g_s125$1_146 TRUE))
(define-fun lh_13 () Bool (= (apply g_s120$1_141 g_s68_69) FALSE))
(define-fun lh_14 () Bool (= (apply g_s120$1_141 g_s69_70) FALSE))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s88_89 (|+->| (dom g_s88_89) (ran g_s88_89))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s111$1_123 (dom g_s88_89)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s90_91 (|+->| (dom g_s90_91) (ran g_s90_91))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (mapplet g_s111$1_123 g_s19_20) (dom g_s90_91)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s68_69 (dom g_s120$1_141)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s120$1_141 (|+->| (dom g_s120$1_141) (ran g_s120$1_141))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s69_70 (dom g_s120$1_141)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13) (mem g_s120$1_141 (|+->| (dom g_s120$1_141) (ran g_s120$1_141))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (mem g_s70_71 (dom g_s120$1_141)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14) (mem g_s120$1_141 (|+->| (dom g_s120$1_141) (ran g_s120$1_141))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s141_177 BOOL))
(define-fun lh_2 () Bool (mem g_s142_178 BOOL))
(define-fun lh_3 () Bool (mem g_s143_179 g_s0_1))
(define-fun lh_4 () Bool (not (or (= g_s141_177 TRUE) (or (and (= g_s100$1_140 g_s11_12) (= g_s142_178 FALSE)) (= g_s143_179 g_s4_5)) (and (= g_s142_178 TRUE) (= g_s143_179 g_s4_5)) (and (= g_s142_178 TRUE) (= g_s110$1_132 g_s62_63) (= g_s143_179 g_s3_4) (= g_s127$1_148 FALSE)))))
(define-fun lh_5 () Bool (mem g_s150_181 g_s60_61))
(define-fun lh_6 () Bool (=> (= g_s100$1_140 g_s11_12) (= g_s150_181 g_s63_64)))
(define-fun lh_7 () Bool (=> (not (= g_s100$1_140 g_s11_12)) (and (=> (= g_s142_178 TRUE) (and (=> (= g_s143_179 g_s1_2) (= g_s150_181 g_s63_64)) (=> (= g_s143_179 g_s2_3) (= g_s150_181 g_s64_65)) (=> (= g_s143_179 g_s3_4) (= g_s150_181 g_s61_62)))) (=> (= g_s142_178 FALSE) (and (=> (= g_s110$1_132 g_s61_62) (and (=> (= g_s126$1_147 TRUE) (= g_s150_181 g_s62_63)) (=> (= g_s126$1_147 FALSE) (= g_s150_181 g_s61_62)))) (=> (= g_s110$1_132 g_s62_63) (and (=> (and (= g_s128$1_149 TRUE) (= g_s129$1_150 TRUE)) (= g_s150_181 g_s61_62)) (=> (not (and (= g_s128$1_149 TRUE) (= g_s129$1_150 TRUE))) (= g_s150_181 g_s62_63)))) (=> (= g_s110$1_132 g_s65_66) (and (=> (= g_s129$1_150 TRUE) (= g_s150_181 g_s61_62)) (=> (= g_s129$1_150 FALSE) (= g_s150_181 g_s65_66)))) (=> (= g_s110$1_132 g_s63_64) (= g_s150_181 g_s63_64)) (=> (= g_s110$1_132 g_s64_65) (= g_s150_181 g_s64_65)))))))
(define-fun lh_8 () Bool (mem g_s114$2_182 BOOL))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem (bool (and (= g_s142_178 FALSE) (= g_s110$1_132 g_s61_62) (= g_s126$1_147 TRUE) (= g_s100$1_140 g_s10_11))) (dom (SET (mapplet (mapplet FALSE g_s114$1_126) (mapplet TRUE TRUE))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem (SET (mapplet (mapplet FALSE g_s114$1_126) (mapplet TRUE TRUE))) (|+->| (dom (SET (mapplet (mapplet FALSE g_s114$1_126) (mapplet TRUE TRUE)))) (ran (SET (mapplet (mapplet FALSE g_s114$1_126) (mapplet TRUE TRUE)))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s152_183 g_s66_67))
(define-fun lh_2 () Bool (= g_s109$1_122 e0))
(define-fun lh_3 () Bool (or (= g_s110$1_132 g_s61_62) (= g_s110$1_132 g_s63_64) (= g_s110$1_132 g_s64_65)))
; PO 1 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s97_98 (|+->| (dom g_s97_98) (ran g_s97_98))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s152_183 (dom g_s97_98)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s61_62))
(define-fun lh_3 () Bool (= g_s112$1_133 g_s52_53))
(define-fun lh_4 () Bool (= (apply g_s88_89 g_s111$1_123) TRUE))
(define-fun lh_5 () Bool (= g_s104$1_135 g_s23_24))
(define-fun lh_6 () Bool (= g_s105$1_136 g_s72_73))
(define-fun lh_7 () Bool (= g_s100$1_140 g_s12_13))
; PO 1 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s88_89 (|+->| (dom g_s88_89) (ran g_s88_89))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s111$1_123 (dom g_s88_89)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s90_91 (|+->| (dom g_s90_91) (ran g_s90_91))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (mapplet g_s111$1_123 g_s19_20) (dom g_s90_91)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s61_62))
(define-fun lh_3 () Bool (= g_s112$1_133 g_s52_53))
(define-fun lh_4 () Bool (= (apply g_s88_89 g_s111$1_123) TRUE))
(define-fun lh_5 () Bool (= g_s104$1_135 g_s23_24))
(define-fun lh_6 () Bool (= g_s105$1_136 g_s72_73))
(define-fun lh_7 () Bool (= g_s100$1_140 g_s12_13))
; PO 1 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s88_89 (|+->| (dom g_s88_89) (ran g_s88_89))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s111$1_123 (dom g_s88_89)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s90_91 (|+->| (dom g_s90_91) (ran g_s90_91))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem (mapplet g_s111$1_123 g_s19_20) (dom g_s90_91)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (or (= g_s110$1_132 g_s61_62) (= g_s110$1_132 g_s63_64) (= g_s110$1_132 g_s64_65)))
; PO 1 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s96_97 (|+->| (dom g_s96_97) (ran g_s96_97))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s110$1_132 (dom g_s96_97)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (or (= g_s110$1_132 g_s61_62) (= g_s110$1_132 g_s63_64) (= g_s110$1_132 g_s64_65)))
; PO 1 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s96_97 (|+->| (dom g_s96_97) (ran g_s96_97))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s110$1_132 (dom g_s96_97)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s109$1_122 e112))
(define-fun lh_2 () Bool (= g_s110$1_132 g_s64_65))
; PO 1 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s96_97 (|+->| (dom g_s96_97) (ran g_s96_97))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s64_65 (dom g_s96_97)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)