(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: Event-B
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e77 () U)
(declare-fun e101 () U)
(declare-fun g_s0_2 () U)
(declare-fun g_s1_1 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_103 () U)
(declare-fun g_s100$1_130 () U)
(declare-fun g_s101_104 () U)
(declare-fun g_s101$1_128 () U)
(declare-fun g_s102_105 () U)
(declare-fun g_s102$1_139 () U)
(declare-fun g_s102$2_164 () U)
(declare-fun g_s103_107 () U)
(declare-fun g_s104_106 () U)
(declare-fun g_s104$1_132 () U)
(declare-fun g_s105_108 () U)
(declare-fun g_s106_109 () U)
(declare-fun g_s107_110 () U)
(declare-fun g_s107$1_137 () U)
(declare-fun g_s108_111 () U)
(declare-fun g_s108$1_138 () U)
(declare-fun g_s108$2_163 () U)
(declare-fun g_s109_112 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_113 () U)
(declare-fun g_s111_114 () U)
(declare-fun g_s112_115 () U)
(declare-fun g_s112$1_133 () U)
(declare-fun g_s113_116 () U)
(declare-fun g_s113$1_134 () U)
(declare-fun g_s114_117 () U)
(declare-fun g_s114$1_135 () U)
(declare-fun g_s115_118 () U)
(declare-fun g_s115$1_136 () U)
(declare-fun g_s116_119 () U)
(declare-fun g_s117_120 () U)
(declare-fun g_s118_121 () U)
(declare-fun g_s119_122 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_123 () U)
(declare-fun g_s121_124 () U)
(declare-fun g_s121$1_129 () U)
(declare-fun g_s122_125 () U)
(declare-fun g_s122$1_131 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_45 () U)
(declare-fun g_s44_44 () U)
(declare-fun g_s45_47 () U)
(declare-fun g_s46_46 () U)
(declare-fun g_s47_49 () U)
(declare-fun g_s48_48 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_81 () U)
(declare-fun g_s77_80 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_78 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_82 () U)
(declare-fun g_s80$1_148 () U)
(declare-fun g_s80$2_161 () U)
(declare-fun g_s81_83 () U)
(declare-fun g_s81$1_149 () U)
(declare-fun g_s81$2_162 () U)
(declare-fun g_s82_84 () U)
(declare-fun g_s82$1_150 () U)
(declare-fun g_s82$2_160 () U)
(declare-fun g_s83_85 () U)
(declare-fun g_s84_86 () U)
(declare-fun g_s85_87 () U)
(declare-fun g_s86_88 () U)
(declare-fun g_s86$1_147 () U)
(declare-fun g_s87_89 () U)
(declare-fun g_s87$1_140 () U)
(declare-fun g_s87$2_158 () U)
(declare-fun g_s88_90 () U)
(declare-fun g_s88$1_141 () U)
(declare-fun g_s88$2_159 () U)
(declare-fun g_s89_91 () U)
(declare-fun g_s89$1_142 () U)
(declare-fun g_s89$2_151 () U)
(declare-fun g_s89$3_156 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_92 () U)
(declare-fun g_s90$1_143 () U)
(declare-fun g_s90$2_152 () U)
(declare-fun g_s90$3_157 () U)
(declare-fun g_s91_93 () U)
(declare-fun g_s91$1_144 () U)
(declare-fun g_s91$2_153 () U)
(declare-fun g_s92_94 () U)
(declare-fun g_s92$1_145 () U)
(declare-fun g_s92$2_154 () U)
(declare-fun g_s93_95 () U)
(declare-fun g_s93$1_146 () U)
(declare-fun g_s93$2_155 () U)
(declare-fun g_s94_96 () U)
(declare-fun g_s95_97 () U)
(declare-fun g_s96_98 () U)
(declare-fun g_s97_99 () U)
(declare-fun g_s98_102 () U)
(declare-fun g_s98$1_126 () U)
(declare-fun g_s99_100 () U)
(declare-fun g_s99$1_127 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool true)
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool (and (subset g_s0_2 g_s1_1) (subset g_s2_3 g_s1_1) (subset g_s3_4 g_s1_1) (subset g_s4_5 g_s1_1) (subset g_s5_6 g_s1_1) (subset g_s6_7 g_s1_1) (subset g_s7_8 g_s1_1) (mem g_s8_9 g_s1_1) (= g_s9_10 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union g_s0_2 g_s2_3) g_s3_4) g_s4_5) g_s5_6) g_s6_7) g_s7_8) (SET g_s8_9))) (subset g_s2_3 (set_diff g_s9_10 g_s0_2)) (subset g_s3_4 (set_diff g_s9_10 (binary_union g_s0_2 g_s2_3))) (subset g_s4_5 (set_diff g_s9_10 (binary_union (binary_union g_s0_2 g_s2_3) g_s3_4))) (subset g_s5_6 (set_diff g_s9_10 (binary_union (binary_union (binary_union g_s0_2 g_s2_3) g_s3_4) g_s4_5))) (subset g_s6_7 (set_diff g_s9_10 (binary_union (binary_union (binary_union (binary_union g_s0_2 g_s2_3) g_s3_4) g_s4_5) g_s5_6))) (subset g_s7_8 (set_diff g_s9_10 (binary_union (binary_union (binary_union (binary_union (binary_union g_s0_2 g_s2_3) g_s3_4) g_s4_5) g_s5_6) g_s6_7))) (mem g_s8_9 (set_diff g_s9_10 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union g_s0_2 g_s2_3) g_s3_4) g_s4_5) g_s5_6) g_s6_7) g_s7_8)))))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool (and (= g_s10_11 (SET (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 g_s11_12))))))))))) (not (= g_s21_22 empty)) (= g_s22_23 (SET (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 g_s23_24)))))))) (not (= g_s1_1 empty)) (not (= g_s30_31 empty)) (not (= g_s31_32 empty)) (not (= g_s32_33 empty)) (mem g_s33_34 (|<->| g_s1_1 g_s1_1)) (mem g_s34_35 (|<->| g_s1_1 g_s1_1)) (mem g_s35_36 (|<->| g_s21_22 g_s1_1)) (mem g_s36_37 (|<->| g_s21_22 g_s1_1)) (mem g_s37_38 (|<->| g_s21_22 BOOL)) (subset g_s34_35 g_s33_34) (= g_s38_39 (binary_inter (composition g_s35_36 g_s33_34) (composition g_s36_37 (inverse g_s33_34)))) (= g_s39_40 (binary_inter (composition g_s35_36 g_s34_35) (composition g_s36_37 (inverse g_s33_34)))) (= g_s40_41 (image (inverse g_s37_38) (SET TRUE))) (mem g_s35_36 (|-->| g_s21_22 g_s1_1)) (mem g_s36_37 (|-->| g_s21_22 g_s1_1)) (mem g_s37_38 (|-->| g_s21_22 BOOL)) (mem g_s38_39 (|<->| g_s21_22 g_s1_1)) (mem g_s39_40 (|<->| g_s21_22 g_s1_1)) (mem g_s41_42 (|<->| g_s21_22 g_s30_31)) (mem g_s42_43 (|<->| g_s21_22 g_s32_33)) (subset g_s40_41 g_s21_22) (= g_s43_45 (image (ran (domain_restriction g_s40_41 (|><| g_s42_43 (|><| g_s38_39 g_s41_42)))) (SET g_s44_44))) (= g_s45_47 (image (ran (domain_restriction g_s40_41 (|><| g_s42_43 (|><| g_s38_39 g_s41_42)))) (SET g_s46_46))) (= g_s47_49 (image (ran (domain_restriction g_s40_41 (|><| g_s42_43 (|><| g_s38_39 g_s41_42)))) (SET g_s48_48))) (= g_s49_50 (image (ran (domain_restriction g_s40_41 (|><| g_s42_43 (|><| g_s39_40 g_s41_42)))) (SET g_s48_48))) (subset g_s39_40 g_s38_39) (mem g_s41_42 (|-->| g_s21_22 g_s30_31)) (subset (ran g_s42_43) (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44)))) (mem g_s47_49 (|<->| g_s1_1 g_s30_31)) (mem g_s49_50 (|<->| g_s1_1 g_s30_31)) (subset g_s50_51 g_s30_31) (= g_s51_52 (set_prod (set_diff (dom g_s47_49) (dom (range_subtraction (|><| g_s47_49 g_s47_49) (id g_s30_31)))) g_s30_31)) (subset g_s49_50 g_s47_49) (mem g_s52_53 g_s30_31) (subset g_s43_45 (set_prod g_s1_1 g_s30_31)) (subset g_s45_47 (set_prod g_s1_1 g_s30_31)) (not (= g_s52_53 g_s53_54)) (= g_s54_55 (binary_union g_s43_45 (composition g_s43_45 (set_prod (SET g_s52_53) g_s30_31)))) (= g_s55_56 (binary_union g_s45_47 (composition g_s45_47 (set_prod (SET g_s52_53) g_s30_31)))) (mem g_s56_57 g_s31_32) (mem g_s53_54 g_s30_31) (subset g_s57_58 g_s1_1) (subset g_s58_59 g_s1_1) (subset g_s9_10 g_s1_1) (subset g_s59_60 g_s1_1) (mem g_s60_61 g_s1_1) (mem g_s61_62 g_s1_1) (mem g_s62_63 g_s1_1) (mem g_s63_64 g_s1_1) (subset g_s54_55 (set_prod g_s1_1 g_s30_31)) (subset g_s55_56 (set_prod g_s1_1 g_s30_31)) (subset g_s51_52 (set_prod g_s1_1 g_s30_31)) (subset g_s64_65 g_s30_31) (subset g_s58_59 g_s57_58) (subset g_s9_10 (set_diff g_s1_1 g_s57_58)) (subset g_s59_60 (set_diff g_s1_1 (binary_union g_s57_58 g_s9_10))) (mem g_s60_61 (set_diff g_s1_1 (binary_union (binary_union (binary_union g_s57_58 g_s9_10) g_s59_60) (SET (mapplet g_s63_64 (mapplet g_s62_63 g_s61_62)))))) (mem g_s61_62 (set_diff g_s1_1 (binary_union (binary_union (binary_union g_s57_58 g_s9_10) g_s59_60) (SET (mapplet g_s63_64 (mapplet g_s62_63 g_s60_61)))))) (mem g_s62_63 (set_diff g_s1_1 (binary_union (binary_union (binary_union g_s57_58 g_s9_10) g_s59_60) (SET (mapplet g_s63_64 (mapplet g_s61_62 g_s60_61)))))) (mem g_s63_64 (set_diff g_s1_1 (binary_union (binary_union (binary_union g_s57_58 g_s9_10) g_s59_60) (SET (mapplet g_s62_63 (mapplet g_s61_62 g_s60_61)))))) (= g_s1_1 (binary_union (binary_union (binary_union g_s57_58 g_s9_10) g_s59_60) (SET (mapplet g_s63_64 (mapplet g_s62_63 (mapplet g_s61_62 g_s60_61)))))) (= g_s65_66 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (domain_restriction g_s57_58 g_s54_55) (set_prod g_s59_60 g_s64_65)) (set_prod (SET (mapplet g_s61_62 g_s60_61)) g_s64_65)) (set_prod g_s9_10 (SET g_s53_54))) (set_prod g_s58_59 g_s30_31)) (set_prod (SET g_s62_63) g_s30_31)) (SET (mapplet g_s63_64 g_s53_54)))) (= g_s66_67 (binary_union (set_prod (binary_union (binary_union (domain_restriction g_s57_58 g_s55_56) (set_prod g_s59_60 g_s64_65)) (SET (mapplet g_s63_64 g_s53_54))) g_s31_32) (set_prod (set_prod (SET (mapplet g_s61_62 g_s60_61)) g_s64_65) (SET g_s56_57)))) (= g_s67_68 (domain_restriction g_s57_58 g_s51_52)) (mem g_s68_69 INTEGER) (= g_s69_70 (set_prod g_s1_1 g_s30_31)) (= g_s70_71 (set_prod g_s1_1 g_s30_31)) (|<i| e0 g_s68_69) (subset g_s71_72 (set_prod (set_prod INTEGER g_s22_23) INTEGER)) (subset g_s72_73 (set_prod (set_prod INTEGER g_s22_23) INTEGER)) (subset g_s73_74 (set_prod (set_prod INTEGER g_s22_23) INTEGER)) (subset g_s74_75 (set_prod (set_prod INTEGER g_s22_23) INTEGER)) (subset g_s75_76 (set_prod (set_prod INTEGER g_s22_23) INTEGER)) (= g_s71_72 (set_prod (set_prod (SET e0) (SET (mapplet g_s24_25 (mapplet g_s26_27 (mapplet g_s28_29 (mapplet g_s27_28 g_s23_24)))))) (SET e0))) (= g_s72_73 (set_prod (set_prod (SET e0) (SET (mapplet g_s25_26 g_s29_30))) (SET e77))) (= g_s73_74 (set_prod (set_prod (SET e77) (SET g_s24_25)) (SET e0))) (= g_s74_75 (set_prod (set_prod (SET e77) (SET (mapplet g_s25_26 (mapplet g_s29_30 (mapplet g_s26_27 (mapplet g_s28_29 (mapplet g_s27_28 g_s23_24))))))) (SET e77))) (= g_s75_76 (binary_union (binary_union (binary_union g_s71_72 g_s72_73) g_s73_74) g_s74_75)) (subset g_s65_66 (set_prod g_s1_1 g_s30_31)) (subset g_s66_67 (set_prod (set_prod g_s1_1 g_s30_31) g_s31_32)) (subset g_s67_68 (set_prod g_s1_1 g_s30_31)) (subset g_s69_70 (set_prod g_s1_1 g_s30_31)) (subset g_s70_71 (set_prod g_s1_1 g_s30_31)) (= g_s76_81 (binary_union (binary_union (binary_union (binary_union (binary_union (set_prod (set_prod g_s65_66 g_s31_32) (SET g_s44_44)) (set_prod g_s66_67 (SET g_s46_46))) (set_prod (set_prod g_s67_68 g_s31_32) (SET g_s48_48))) (set_prod (set_prod g_s69_70 g_s31_32) (SET g_s77_80))) (set_prod (set_prod g_s70_71 g_s31_32) (SET g_s78_79))) (set_prod (set_prod (set_prod g_s1_1 g_s30_31) g_s31_32) (SET g_s79_78)))) (subset g_s76_81 (set_prod (set_prod (set_prod g_s1_1 g_s30_31) g_s31_32) g_s32_33)) (mem g_s44_44 g_s32_33) (mem g_s46_46 g_s32_33) (mem g_s48_48 g_s32_33) (mem g_s77_80 g_s32_33) (mem g_s78_79 g_s32_33) (mem g_s79_78 g_s32_33) (not (mem g_s44_44 (SET (mapplet g_s79_78 (mapplet g_s78_79 (mapplet g_s77_80 (mapplet g_s48_48 g_s46_46))))))) (not (mem g_s46_46 (SET (mapplet g_s79_78 (mapplet g_s78_79 (mapplet g_s77_80 (mapplet g_s48_48 g_s44_44))))))) (not (mem g_s48_48 (SET (mapplet g_s79_78 (mapplet g_s78_79 (mapplet g_s77_80 (mapplet g_s46_46 g_s44_44))))))) (not (mem g_s77_80 (SET (mapplet g_s79_78 (mapplet g_s78_79 (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))) (not (mem g_s78_79 (SET (mapplet g_s79_78 (mapplet g_s77_80 (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))) (not (mem g_s79_78 (SET (mapplet g_s78_79 (mapplet g_s77_80 (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44)))))))))
(define-fun |def_abs| () Bool (and (mem g_s80_82 (|<->| g_s21_22 g_s1_1)) (mem g_s81_83 (|<->| g_s21_22 g_s1_1)) (mem g_s82_84 (|<->| g_s21_22 BOOL)) (= g_s83_85 (binary_inter (composition g_s80_82 g_s33_34) (composition g_s81_83 (inverse g_s33_34)))) (= g_s84_86 (binary_inter (composition g_s80_82 g_s34_35) (composition g_s81_83 (inverse g_s33_34)))) (= g_s85_87 (image (inverse g_s82_84) (SET TRUE))) (mem g_s80_82 (|-->| g_s21_22 g_s1_1)) (mem g_s81_83 (|-->| g_s21_22 g_s1_1)) (mem g_s82_84 (|-->| g_s21_22 BOOL)) (subset g_s86_88 g_s10_11) (mem g_s83_85 (|<->| g_s21_22 g_s1_1)) (mem g_s84_86 (|<->| g_s21_22 g_s1_1)) (mem g_s87_89 (|<->| g_s21_22 g_s30_31)) (mem g_s88_90 (|<->| g_s21_22 g_s32_33)) (subset g_s85_87 g_s21_22) (subset g_s89_91 g_s21_22) (subset g_s90_92 g_s21_22) (subset g_s91_93 g_s30_31) (subset g_s92_94 g_s21_22) (subset g_s93_95 g_s21_22) (= g_s94_96 (image (ran (domain_restriction g_s85_87 (|><| g_s88_90 (|><| g_s83_85 g_s87_89)))) (SET g_s44_44))) (= g_s95_97 (image (ran (domain_restriction g_s85_87 (|><| g_s88_90 (|><| g_s83_85 g_s87_89)))) (SET g_s46_46))) (= g_s96_98 (image (ran (domain_restriction g_s85_87 (|><| g_s88_90 (|><| g_s83_85 g_s87_89)))) (SET g_s48_48))) (= g_s97_99 (image (ran (domain_restriction g_s85_87 (|><| g_s88_90 (|><| g_s84_86 g_s87_89)))) (SET g_s48_48))) (subset g_s84_86 g_s83_85) (mem g_s87_89 (|-->| g_s21_22 g_s30_31)) (subset (ran g_s88_90) (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44)))) (=> (= g_s98_102 e101) (= g_s89_91 (binary_inter g_s85_87 (image (inverse g_s83_85) (SET g_s99_100))))) (=> (= g_s98_102 e101) (= g_s90_92 (binary_inter (binary_inter g_s85_87 (image (inverse g_s83_85) (SET g_s99_100))) (image (inverse g_s88_90) (SET g_s100_103))))) (=> (= g_s98_102 e101) (= g_s91_93 (image g_s87_89 g_s90_92))) (=> (= g_s98_102 e101) (= g_s92_94 (binary_inter (binary_inter g_s85_87 (image (inverse g_s84_86) (SET g_s99_100))) (image (inverse g_s88_90) (SET g_s100_103))))) (=> (= g_s98_102 e101) (= g_s93_95 (binary_inter (binary_inter (binary_inter g_s85_87 (image (inverse g_s83_85) (SET g_s99_100))) (image (inverse g_s88_90) (SET g_s100_103))) (image (inverse g_s87_89) (SET (mapplet g_s52_53 g_s101_104)))))) (mem g_s96_98 (|<->| g_s1_1 g_s30_31)) (mem g_s97_99 (|<->| g_s1_1 g_s30_31)) (subset g_s102_105 g_s30_31) (= g_s103_107 (set_prod (set_diff (dom (binary_union g_s97_99 (range_subtraction g_s96_98 (image (set_prod (SET e0) (set_diff g_s102_105 (SET g_s101_104))) (SET g_s104_106))))) (dom (range_subtraction (|><| g_s96_98 g_s96_98) (id g_s30_31)))) g_s30_31)) (subset g_s97_99 g_s96_98) (subset g_s94_96 (set_prod g_s1_1 g_s30_31)) (subset g_s95_97 (set_prod g_s1_1 g_s30_31)) (= g_s105_108 (binary_union g_s94_96 (composition g_s94_96 (set_prod (SET g_s52_53) g_s30_31)))) (= g_s106_109 (binary_union g_s95_97 (composition g_s95_97 (set_prod (SET g_s52_53) g_s30_31)))) (subset g_s105_108 (set_prod g_s1_1 g_s30_31)) (subset g_s106_109 (set_prod g_s1_1 g_s30_31)) (subset g_s103_107 (set_prod g_s1_1 g_s30_31)) (mem g_s107_110 BOOL) (subset g_s108_111 g_s30_31) (= g_s109_112 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (domain_restriction g_s57_58 g_s105_108) (set_prod g_s59_60 g_s108_111)) (set_prod (SET (mapplet g_s61_62 g_s60_61)) g_s108_111)) (set_prod g_s9_10 (SET g_s53_54))) (dom (range_restriction (set_prod (set_prod g_s58_59 g_s30_31) (SET e77)) (SET g_s104_106)))) (set_prod (SET g_s62_63) g_s30_31)) (SET (mapplet g_s63_64 g_s53_54)))) (= g_s110_113 (binary_union (set_prod (binary_union (binary_union (binary_union (domain_restriction g_s57_58 g_s106_109) (set_prod g_s59_60 g_s108_111)) (dom (range_restriction (set_prod (set_prod g_s9_10 (SET g_s53_54)) (SET FALSE)) (SET g_s107_110)))) (SET (mapplet g_s63_64 g_s53_54))) g_s31_32) (set_prod (set_prod (SET (mapplet g_s61_62 g_s60_61)) g_s108_111) (SET g_s56_57)))) (= g_s111_114 (domain_restriction g_s57_58 g_s103_107)) (mem g_s112_115 g_s30_31) (mem g_s113_116 INTEGER) (mem g_s114_117 (|<->| INTEGER g_s30_31)) (mem g_s115_118 (|<->| INTEGER g_s30_31)) (= g_s116_119 (dom (range_subtraction (set_prod (set_prod g_s1_1 g_s30_31) (SET (mapplet g_s68_69 e0))) (SET (mapplet g_s113_116 g_s104_106))))) (= g_s117_120 (dom (range_subtraction (set_prod (set_prod g_s1_1 g_s30_31) (SET (mapplet e0 e0))) (SET (mapplet g_s113_116 g_s104_106))))) (and (|>=i| g_s113_116 e0) (|<=i| g_s113_116 g_s68_69)) (mem g_s114_117 (|-->| (interval e77 g_s68_69) g_s30_31)) (mem g_s115_118 (|-->| (interval e77 g_s68_69) g_s30_31)) (mem g_s118_121 INTEGER) (mem g_s119_122 g_s22_23) (mem g_s104_106 INTEGER) (mem (mapplet (mapplet g_s118_121 g_s119_122) g_s104_106) g_s75_76) (subset g_s109_112 (set_prod g_s1_1 g_s30_31)) (subset g_s110_113 (set_prod (set_prod g_s1_1 g_s30_31) g_s31_32)) (subset g_s111_114 (set_prod g_s1_1 g_s30_31)) (subset g_s116_119 (set_prod g_s1_1 g_s30_31)) (subset g_s117_120 (set_prod g_s1_1 g_s30_31)) (= g_s120_123 (binary_union (binary_union (binary_union (binary_union (binary_union (set_prod (set_prod g_s109_112 g_s31_32) (SET g_s44_44)) (set_prod g_s110_113 (SET g_s46_46))) (set_prod (set_prod g_s111_114 g_s31_32) (SET g_s48_48))) (set_prod (set_prod g_s116_119 g_s31_32) (SET g_s77_80))) (set_prod (set_prod g_s117_120 g_s31_32) (SET g_s78_79))) (set_prod (set_prod (set_prod g_s1_1 g_s30_31) g_s31_32) (SET g_s79_78)))) (mem g_s98_102 INTEGER) (mem g_s99_100 g_s1_1) (mem g_s101_104 g_s30_31) (mem g_s121_124 g_s31_32) (mem g_s100_103 g_s32_33) (mem g_s122_125 BOOL) (subset g_s120_123 (set_prod (set_prod (set_prod g_s1_1 g_s30_31) g_s31_32) g_s32_33)) (=> (and (= g_s98_102 e101) (= g_s100_103 g_s48_48)) (= g_s91_93 (image g_s96_98 (SET g_s99_100)))) (=> (and (= g_s98_102 e101) (= g_s100_103 g_s48_48)) (= (image g_s87_89 g_s92_94) (image g_s97_99 (SET g_s99_100)))) (=> (= g_s98_102 e101) (= g_s90_92 (binary_inter g_s89_91 (image (inverse g_s88_90) (SET g_s100_103))))) (= (binary_union g_s49_50 (range_subtraction g_s47_49 (image (set_prod (SET e0) (set_diff g_s50_51 (SET g_s53_54))) (SET e77)))) g_s47_49) (= (binary_union g_s97_99 (range_subtraction g_s96_98 (image (set_prod (SET e0) (set_diff g_s102_105 (SET g_s101_104))) (SET e0)))) (binary_union g_s97_99 (range_subtraction g_s96_98 (set_diff g_s102_105 (SET g_s101_104))))) (= (binary_union g_s97_99 (range_subtraction g_s96_98 (image (set_prod (SET e0) (set_diff g_s102_105 (SET g_s101_104))) (SET e77)))) g_s96_98) (mem g_s75_76 (|-->| (set_prod (SET (mapplet e77 e0)) g_s22_23) (SET (mapplet e77 e0)))) (or (= g_s104_106 e0) (= g_s104_106 e77))))
(define-fun |def_inv| () Bool (and (= g_s98_102 g_s98$1_126) (= g_s99_100 g_s99$1_127) (= g_s101_104 g_s101$1_128) (= g_s121_124 g_s121$1_129) (= g_s100_103 g_s100$1_130) (= g_s122_125 g_s122$1_131) (= g_s104_106 g_s104$1_132) (= g_s112_115 g_s112$1_133) (= g_s113_116 g_s113$1_134) (= g_s114_117 g_s114$1_135) (= g_s115_118 g_s115$1_136) (= g_s107_110 g_s107$1_137) (= g_s108_111 g_s108$1_138) (= g_s102_105 g_s102$1_139) (= g_s87_89 g_s87$1_140) (= g_s88_90 g_s88$1_141) (= g_s89_91 g_s89$1_142) (= g_s90_92 g_s90$1_143) (= g_s91_93 g_s91$1_144) (= g_s92_94 g_s92$1_145) (= g_s93_95 g_s93$1_146) (= g_s86_88 g_s86$1_147) (= g_s80_82 g_s80$1_148) (= g_s81_83 g_s81$1_149) (= g_s82_84 g_s82$1_150)))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e77))
(define-fun lh_2 () Bool (= g_s89$2_151 (binary_inter (binary_inter (image (inverse g_s82$1_150) (SET TRUE)) (image (inverse (composition g_s80$1_148 g_s33_34)) (SET g_s99$1_127))) (image (inverse (composition g_s81$1_149 (inverse g_s33_34))) (SET g_s99$1_127)))))
(define-fun lh_3 () Bool (= g_s90$2_152 (binary_inter g_s89$2_151 (image (inverse g_s88$1_141) (SET g_s100$1_130)))))
(define-fun lh_4 () Bool (= g_s91$2_153 (image g_s87$1_140 g_s90$2_152)))
(define-fun lh_5 () Bool (= g_s92$2_154 (binary_inter g_s90$2_152 (image (inverse (composition g_s80$1_148 g_s34_35)) (SET g_s99$1_127)))))
(define-fun lh_6 () Bool (= g_s93$2_155 (binary_inter g_s90$2_152 (image (inverse g_s87$1_140) (SET (mapplet g_s52_53 g_s101$1_128))))))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s98_102 e77))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s89$3_156 (image (inverse g_s88_90) (SET g_s100_103))) g_s90$2_152))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s89$3_156 (image (inverse g_s88_90) (SET g_s100_103))) (binary_inter (binary_inter (binary_inter (image (inverse g_s82_84) (SET TRUE)) (image (inverse (composition g_s80_82 g_s33_34)) (SET g_s99_100))) (image (inverse (composition g_s81_83 (inverse g_s33_34))) (SET g_s99_100))) (image (inverse g_s88_90) (SET g_s100_103)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s90$3_157 (image (inverse g_s87_89) (SET (mapplet g_s52_53 g_s101_104)))) g_s93$2_155))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s90$3_157 (image (inverse g_s87_89) (SET (mapplet g_s52_53 g_s101_104)))) (binary_inter (binary_inter g_s89$3_156 (image (inverse g_s88_90) (SET g_s100_103))) (image (inverse g_s87_89) (SET (mapplet g_s52_53 g_s101_104))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s90$3_157 (image (inverse (composition g_s80_82 g_s34_35)) (SET g_s99_100))) g_s92$2_154))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s90$3_157 (image (inverse (composition g_s80_82 g_s34_35)) (SET g_s99_100))) (binary_inter (binary_inter g_s89$3_156 (image (inverse g_s88_90) (SET g_s100_103))) (image (inverse (composition g_s80_82 g_s34_35)) (SET g_s99_100)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter (binary_inter (image (inverse g_s82_84) (SET TRUE)) (image (inverse (composition g_s80_82 g_s33_34)) (SET g_s99_100))) (image (inverse (composition g_s81_83 (inverse g_s33_34))) (SET g_s99_100))) g_s89$2_151))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (image g_s87_89 g_s90$3_157) g_s91$2_153))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (image g_s87_89 g_s90$3_157) (image g_s87_89 (binary_inter g_s89$3_156 (image (inverse g_s88_90) (SET g_s100_103))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (mem g_s99$1_127 g_s0_2))
(define-fun lh_4 () Bool (= g_s101$1_128 g_s53_54))
(define-fun lh_5 () Bool (= g_s107$1_137 FALSE))
(define-fun lh_6 () Bool (mem g_s87$2_158 (|-->| g_s21_22 g_s30_31)))
(define-fun lh_7 () Bool (mem g_s88$2_159 (|<->| g_s21_22 (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))
(define-fun lh_8 () Bool (mem g_s82$2_160 (|-->| g_s21_22 BOOL)))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s99_100 g_s9_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s81$1_149 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (mem g_s80$1_148 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s101_104 g_s53_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s107_110 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (mem g_s99$1_127 g_s2_3))
(define-fun lh_4 () Bool (= g_s101$1_128 g_s53_54))
(define-fun lh_5 () Bool (= g_s107$1_137 FALSE))
(define-fun lh_6 () Bool (mem g_s80$2_161 (|-->| g_s21_22 g_s1_1)))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s99_100 g_s9_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s87$1_140 (|-->| g_s21_22 g_s30_31)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s81$1_149 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s82$1_150 (|-->| g_s21_22 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s88$1_141 (|<->| g_s21_22 (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s101_104 g_s53_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s107_110 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (mem g_s99$1_127 g_s3_4))
(define-fun lh_4 () Bool (= g_s101$1_128 g_s53_54))
(define-fun lh_5 () Bool (= g_s107$1_137 FALSE))
(define-fun lh_6 () Bool (mem g_s80$2_161 (|-->| g_s21_22 g_s1_1)))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s99_100 g_s9_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s87$1_140 (|-->| g_s21_22 g_s30_31)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s81$1_149 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s82$1_150 (|-->| g_s21_22 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s88$1_141 (|<->| g_s21_22 (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s101_104 g_s53_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s107_110 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (mem g_s99$1_127 g_s4_5))
(define-fun lh_4 () Bool (= g_s101$1_128 g_s53_54))
(define-fun lh_5 () Bool (= g_s107$1_137 FALSE))
(define-fun lh_6 () Bool (mem g_s80$2_161 (|-->| g_s21_22 g_s1_1)))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s99_100 g_s9_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s87$1_140 (|-->| g_s21_22 g_s30_31)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s81$1_149 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s82$1_150 (|-->| g_s21_22 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s88$1_141 (|<->| g_s21_22 (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s101_104 g_s53_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s107_110 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (mem g_s99$1_127 g_s5_6))
(define-fun lh_4 () Bool (= g_s101$1_128 g_s53_54))
(define-fun lh_5 () Bool (= g_s107$1_137 FALSE))
(define-fun lh_6 () Bool (mem g_s81$2_162 (|-->| g_s21_22 g_s1_1)))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s99_100 g_s9_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s87$1_140 (|-->| g_s21_22 g_s30_31)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s82$1_150 (|-->| g_s21_22 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s80$1_148 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s88$1_141 (|<->| g_s21_22 (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s101_104 g_s53_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s107_110 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (mem g_s99$1_127 g_s6_7))
(define-fun lh_4 () Bool (= g_s101$1_128 g_s53_54))
(define-fun lh_5 () Bool (= g_s107$1_137 FALSE))
(define-fun lh_6 () Bool (mem g_s81$2_162 (|-->| g_s21_22 g_s1_1)))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s99_100 g_s9_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s87$1_140 (|-->| g_s21_22 g_s30_31)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s82$1_150 (|-->| g_s21_22 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s80$1_148 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s88$1_141 (|<->| g_s21_22 (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s101_104 g_s53_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s107_110 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (mem g_s99$1_127 g_s7_8))
(define-fun lh_4 () Bool (= g_s101$1_128 g_s53_54))
(define-fun lh_5 () Bool (= g_s107$1_137 FALSE))
(define-fun lh_6 () Bool (mem g_s81$2_162 (|-->| g_s21_22 g_s1_1)))
; PO 1 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s99_100 g_s9_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s87$1_140 (|-->| g_s21_22 g_s30_31)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s82$1_150 (|-->| g_s21_22 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s80$1_148 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s88$1_141 (|<->| g_s21_22 (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s101_104 g_s53_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s107_110 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (= g_s99$1_127 g_s8_9))
(define-fun lh_4 () Bool (= g_s101$1_128 g_s53_54))
(define-fun lh_5 () Bool (= g_s107$1_137 FALSE))
(define-fun lh_6 () Bool (mem g_s108$2_163 (POW g_s30_31)))
(define-fun lh_7 () Bool (mem g_s102$2_164 (POW g_s30_31)))
; PO 1 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s99_100 g_s9_10))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s87$1_140 (|-->| g_s21_22 g_s30_31)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s81$1_149 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s82$1_150 (|-->| g_s21_22 BOOL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s80$1_148 (|-->| g_s21_22 g_s1_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s88$1_141 (|<->| g_s21_22 (SET (mapplet g_s48_48 (mapplet g_s46_46 g_s44_44))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s101_104 g_s53_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s107_110 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (= g_s99$1_127 g_s60_61))
(define-fun lh_4 () Bool (mem g_s101$1_128 g_s108$1_138))
(define-fun lh_5 () Bool (= g_s121$1_129 g_s56_57))
; PO 1 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (or (= g_s99_100 g_s60_61) (= g_s99_100 g_s61_62)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s101_104 g_s108_111))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (set_diff g_s86$1_147 (SET (mapplet g_s11_12 (mapplet g_s12_13 (mapplet g_s13_14 (mapplet g_s14_15 (mapplet g_s15_16 (mapplet g_s16_17 (mapplet g_s17_18 g_s18_19))))))))) (POW g_s86_88)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s121_124 g_s56_57))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 9
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s46_46))
(define-fun lh_3 () Bool (= g_s99$1_127 g_s61_62))
(define-fun lh_4 () Bool (mem g_s101$1_128 g_s108$1_138))
(define-fun lh_5 () Bool (= g_s121$1_129 g_s56_57))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (or (= g_s99_100 g_s60_61) (= g_s99_100 g_s61_62)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s101_104 g_s108_111))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem (set_diff g_s86$1_147 (SET (mapplet g_s19_20 g_s20_21))) (POW g_s86_88)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s121_124 g_s56_57))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s98_102 e101))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s100_103 g_s46_46))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s98$1_126 e101))
(define-fun lh_2 () Bool (= g_s100$1_130 g_s78_79))
(define-fun lh_3 () Bool (= g_s104$1_132 e0))
(define-fun lh_4 () Bool (|<i| e0 g_s113$1_134))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s113$1_134 (dom g_s114$1_135)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s113$1_134 (dom g_s115$1_136)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s114$1_135 (|+->| (dom g_s114$1_135) (ran g_s114$1_135))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s115$1_136 (|+->| (dom g_s115$1_136) (ran g_s115$1_136))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)