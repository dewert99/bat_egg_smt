(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: Event-B
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e95 () U)
(declare-fun e121 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_102 () U)
(declare-fun g_s101_103 () U)
(declare-fun g_s102_104 () U)
(declare-fun g_s102$1_170 () U)
(declare-fun g_s103_105 () U)
(declare-fun g_s104_106 () U)
(declare-fun g_s105_107 () U)
(declare-fun g_s106_108 () U)
(declare-fun g_s106$1_169 () U)
(declare-fun g_s107_109 () U)
(declare-fun g_s107$1_162 () U)
(declare-fun g_s108_110 () U)
(declare-fun g_s108$1_163 () U)
(declare-fun g_s109_111 () U)
(declare-fun g_s109$1_164 () U)
(declare-fun g_s109$2_177 () U)
(declare-fun g_s109$3_182 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_112 () U)
(declare-fun g_s110$1_165 () U)
(declare-fun g_s110$2_178 () U)
(declare-fun g_s110$3_183 () U)
(declare-fun g_s111_113 () U)
(declare-fun g_s111$1_166 () U)
(declare-fun g_s111$2_179 () U)
(declare-fun g_s112_114 () U)
(declare-fun g_s112$1_167 () U)
(declare-fun g_s112$2_180 () U)
(declare-fun g_s113_115 () U)
(declare-fun g_s113$1_168 () U)
(declare-fun g_s113$2_181 () U)
(declare-fun g_s114_116 () U)
(declare-fun g_s115_117 () U)
(declare-fun g_s116_118 () U)
(declare-fun g_s117_119 () U)
(declare-fun g_s118_122 () U)
(declare-fun g_s118$1_148 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s119$1_149 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_123 () U)
(declare-fun g_s120$1_152 () U)
(declare-fun g_s121_124 () U)
(declare-fun g_s121$1_150 () U)
(declare-fun g_s122_125 () U)
(declare-fun g_s122$1_161 () U)
(declare-fun g_s123_127 () U)
(declare-fun g_s124_126 () U)
(declare-fun g_s124$1_154 () U)
(declare-fun g_s125_128 () U)
(declare-fun g_s126_129 () U)
(declare-fun g_s127_130 () U)
(declare-fun g_s127$1_159 () U)
(declare-fun g_s128_131 () U)
(declare-fun g_s128$1_160 () U)
(declare-fun g_s129_132 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_133 () U)
(declare-fun g_s131_134 () U)
(declare-fun g_s132_135 () U)
(declare-fun g_s132$1_155 () U)
(declare-fun g_s133_136 () U)
(declare-fun g_s133$1_156 () U)
(declare-fun g_s134_137 () U)
(declare-fun g_s134$1_157 () U)
(declare-fun g_s135_138 () U)
(declare-fun g_s135$1_158 () U)
(declare-fun g_s136_139 () U)
(declare-fun g_s137_140 () U)
(declare-fun g_s138_141 () U)
(declare-fun g_s139_142 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_143 () U)
(declare-fun g_s141_144 () U)
(declare-fun g_s141$1_151 () U)
(declare-fun g_s142_145 () U)
(declare-fun g_s142$1_153 () U)
(declare-fun g_s145$1_171 () U)
(declare-fun g_s145$2_184 () U)
(declare-fun g_s146$1_172 () U)
(declare-fun g_s146$2_185 () U)
(declare-fun g_s147$1_173 () U)
(declare-fun g_s147$2_186 () U)
(declare-fun g_s148$1_174 () U)
(declare-fun g_s148$2_187 () U)
(declare-fun g_s149$1_175 () U)
(declare-fun g_s149$2_188 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150$1_176 () U)
(declare-fun g_s150$2_189 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s3_5 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_4 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_7 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_6 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_63 () U)
(declare-fun g_s62_62 () U)
(declare-fun g_s63_65 () U)
(declare-fun g_s64_64 () U)
(declare-fun g_s65_67 () U)
(declare-fun g_s66_66 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_99 () U)
(declare-fun g_s95_98 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_96 () U)
(declare-fun g_s98_100 () U)
(declare-fun g_s99_101 () U)
(declare-fun e146 () U)
(declare-fun e147 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool true)
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty)) (mem g_s3_5 (|<->| (set_prod (set_prod g_s0_1 g_s1_2) g_s2_3) g_s4_4)) (mem g_s5_7 (|<->| g_s6_6 g_s0_1)) (mem g_s7_8 (|<->| g_s6_6 g_s1_2)) (mem g_s8_9 (|<->| g_s6_6 g_s2_3)) (mem g_s9_10 (|<->| g_s6_6 g_s0_1)) (mem g_s10_11 (|<->| g_s6_6 g_s1_2)) (mem g_s11_12 (|<->| g_s6_6 g_s2_3)) (mem g_s3_5 (|-->| (set_prod (set_prod g_s0_1 g_s1_2) g_s2_3) g_s4_4)) (= g_s12_13 (composition (|><| (|><| g_s5_7 g_s7_8) g_s8_9) g_s3_5)) (= g_s13_14 (composition (|><| (|><| g_s9_10 g_s10_11) g_s11_12) g_s3_5)) (mem g_s5_7 (|-->| g_s6_6 g_s0_1)) (mem g_s7_8 (|-->| g_s6_6 g_s1_2)) (mem g_s8_9 (|-->| g_s6_6 g_s2_3)) (mem g_s9_10 (|-->| g_s6_6 g_s0_1)) (mem g_s10_11 (|-->| g_s6_6 g_s1_2)) (mem g_s11_12 (|-->| g_s6_6 g_s2_3))))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool (and (not (= g_s4_4 empty)) (= g_s14_15 (SET (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 g_s15_16))))))))))) (not (= g_s6_6 empty)) (= g_s25_26 (SET (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 g_s26_27)))))))) (not (= g_s33_34 empty)) (not (= g_s34_35 empty)) (not (= g_s35_36 empty)) (not (= g_s36_37 empty)) (mem g_s37_38 (|<->| g_s4_4 g_s4_4)) (mem g_s38_39 (|<->| g_s33_34 g_s4_4)) (mem g_s39_40 (|<->| g_s4_4 g_s33_34)) (mem g_s40_41 (|<->| g_s4_4 g_s33_34)) (mem g_s41_42 (|<->| g_s4_4 g_s33_34)) (mem g_s12_13 (|<->| g_s6_6 g_s4_4)) (mem g_s13_14 (|<->| g_s6_6 g_s4_4)) (= g_s42_43 (composition g_s38_39 g_s41_42)) (= (binary_union g_s43_44 (inverse g_s43_44)) (set_prod g_s33_34 g_s33_34)) (subset (binary_inter g_s37_38 (inverse g_s37_38)) (id g_s4_4)) (mem g_s38_39 (|-->>| g_s33_34 g_s4_4)) (subset (composition (composition (inverse g_s38_39) g_s43_44) g_s38_39) g_s37_38) (mem g_s39_40 (|-->| g_s4_4 g_s33_34)) (subset g_s39_40 (inverse g_s38_39)) (subset (ran (|><| g_s39_40 (inverse g_s38_39))) g_s43_44) (mem g_s40_41 (|-->| g_s4_4 g_s33_34)) (subset g_s40_41 (inverse g_s38_39)) (subset (ran (|><| (inverse g_s38_39) g_s40_41)) g_s43_44) (= g_s44_45 (composition g_s12_13 g_s39_40)) (= g_s45_46 (composition g_s13_14 g_s40_41)) (mem g_s12_13 (|-->| g_s6_6 g_s4_4)) (mem g_s13_14 (|-->| g_s6_6 g_s4_4)) (subset g_s46_47 g_s33_34) (subset g_s47_48 g_s33_34) (subset g_s48_49 g_s33_34) (subset g_s49_50 g_s33_34) (subset g_s50_51 g_s33_34) (subset g_s51_52 g_s33_34) (subset g_s52_53 g_s33_34) (mem g_s53_54 g_s33_34) (= g_s54_55 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union g_s46_47 g_s47_48) g_s48_49) g_s49_50) g_s50_51) g_s51_52) g_s52_53) (SET g_s53_54))) (subset g_s47_48 (set_diff g_s54_55 g_s46_47)) (subset g_s48_49 (set_diff g_s54_55 (binary_union g_s46_47 g_s47_48))) (subset g_s49_50 (set_diff g_s54_55 (binary_union (binary_union g_s46_47 g_s47_48) g_s48_49))) (subset g_s50_51 (set_diff g_s54_55 (binary_union (binary_union (binary_union g_s46_47 g_s47_48) g_s48_49) g_s49_50))) (subset g_s51_52 (set_diff g_s54_55 (binary_union (binary_union (binary_union (binary_union g_s46_47 g_s47_48) g_s48_49) g_s49_50) g_s50_51))) (subset g_s52_53 (set_diff g_s54_55 (binary_union (binary_union (binary_union (binary_union (binary_union g_s46_47 g_s47_48) g_s48_49) g_s49_50) g_s50_51) g_s51_52))) (mem g_s53_54 (set_diff g_s54_55 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union g_s46_47 g_s47_48) g_s48_49) g_s49_50) g_s50_51) g_s51_52) g_s52_53))) (mem g_s43_44 (|<->| g_s33_34 g_s33_34)) (mem g_s42_43 (|<->| g_s33_34 g_s33_34)) (mem g_s44_45 (|<->| g_s6_6 g_s33_34)) (mem g_s45_46 (|<->| g_s6_6 g_s33_34)) (mem g_s55_56 (|<->| g_s6_6 BOOL)) (subset g_s42_43 g_s43_44) (= g_s56_57 (binary_inter (composition g_s44_45 g_s43_44) (composition g_s45_46 (inverse g_s43_44)))) (= g_s57_58 (binary_inter (composition g_s44_45 g_s42_43) (composition g_s45_46 (inverse g_s43_44)))) (= g_s58_59 (image (inverse g_s55_56) (SET TRUE))) (mem g_s44_45 (|-->| g_s6_6 g_s33_34)) (mem g_s45_46 (|-->| g_s6_6 g_s33_34)) (mem g_s55_56 (|-->| g_s6_6 BOOL)) (mem g_s56_57 (|<->| g_s6_6 g_s33_34)) (mem g_s57_58 (|<->| g_s6_6 g_s33_34)) (mem g_s59_60 (|<->| g_s6_6 g_s34_35)) (mem g_s60_61 (|<->| g_s6_6 g_s36_37)) (subset g_s58_59 g_s6_6) (= g_s61_63 (image (ran (domain_restriction g_s58_59 (|><| g_s60_61 (|><| g_s56_57 g_s59_60)))) (SET g_s62_62))) (= g_s63_65 (image (ran (domain_restriction g_s58_59 (|><| g_s60_61 (|><| g_s56_57 g_s59_60)))) (SET g_s64_64))) (= g_s65_67 (image (ran (domain_restriction g_s58_59 (|><| g_s60_61 (|><| g_s56_57 g_s59_60)))) (SET g_s66_66))) (= g_s67_68 (image (ran (domain_restriction g_s58_59 (|><| g_s60_61 (|><| g_s57_58 g_s59_60)))) (SET g_s66_66))) (subset g_s57_58 g_s56_57) (mem g_s59_60 (|-->| g_s6_6 g_s34_35)) (subset (ran g_s60_61) (SET (mapplet g_s66_66 (mapplet g_s64_64 g_s62_62)))) (mem g_s65_67 (|<->| g_s33_34 g_s34_35)) (mem g_s67_68 (|<->| g_s33_34 g_s34_35)) (subset g_s68_69 g_s34_35) (= g_s69_70 (set_prod (set_diff (dom g_s65_67) (dom (range_subtraction (|><| g_s65_67 g_s65_67) (id g_s34_35)))) g_s34_35)) (subset g_s67_68 g_s65_67) (mem g_s70_71 g_s34_35) (subset g_s61_63 (set_prod g_s33_34 g_s34_35)) (subset g_s63_65 (set_prod g_s33_34 g_s34_35)) (not (= g_s70_71 g_s71_72)) (= g_s72_73 (binary_union g_s61_63 (composition g_s61_63 (set_prod (SET g_s70_71) g_s34_35)))) (= g_s73_74 (binary_union g_s63_65 (composition g_s63_65 (set_prod (SET g_s70_71) g_s34_35)))) (mem g_s74_75 g_s35_36) (mem g_s71_72 g_s34_35) (subset g_s75_76 g_s33_34) (subset g_s76_77 g_s33_34) (subset g_s54_55 g_s33_34) (subset g_s77_78 g_s33_34) (mem g_s78_79 g_s33_34) (mem g_s79_80 g_s33_34) (mem g_s80_81 g_s33_34) (mem g_s81_82 g_s33_34) (subset g_s72_73 (set_prod g_s33_34 g_s34_35)) (subset g_s73_74 (set_prod g_s33_34 g_s34_35)) (subset g_s69_70 (set_prod g_s33_34 g_s34_35)) (subset g_s82_83 g_s34_35) (subset g_s76_77 g_s75_76) (subset g_s54_55 (set_diff g_s33_34 g_s75_76)) (subset g_s77_78 (set_diff g_s33_34 (binary_union g_s75_76 g_s54_55))) (mem g_s78_79 (set_diff g_s33_34 (binary_union (binary_union (binary_union g_s75_76 g_s54_55) g_s77_78) (SET (mapplet g_s81_82 (mapplet g_s80_81 g_s79_80)))))) (mem g_s79_80 (set_diff g_s33_34 (binary_union (binary_union (binary_union g_s75_76 g_s54_55) g_s77_78) (SET (mapplet g_s81_82 (mapplet g_s80_81 g_s78_79)))))) (mem g_s80_81 (set_diff g_s33_34 (binary_union (binary_union (binary_union g_s75_76 g_s54_55) g_s77_78) (SET (mapplet g_s81_82 (mapplet g_s79_80 g_s78_79)))))) (mem g_s81_82 (set_diff g_s33_34 (binary_union (binary_union (binary_union g_s75_76 g_s54_55) g_s77_78) (SET (mapplet g_s80_81 (mapplet g_s79_80 g_s78_79)))))) (= g_s33_34 (binary_union (binary_union (binary_union g_s75_76 g_s54_55) g_s77_78) (SET (mapplet g_s81_82 (mapplet g_s80_81 (mapplet g_s79_80 g_s78_79)))))) (= g_s83_84 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (domain_restriction g_s75_76 g_s72_73) (set_prod g_s77_78 g_s82_83)) (set_prod (SET (mapplet g_s79_80 g_s78_79)) g_s82_83)) (set_prod g_s54_55 (SET g_s71_72))) (set_prod g_s76_77 g_s34_35)) (set_prod (SET g_s80_81) g_s34_35)) (SET (mapplet g_s81_82 g_s71_72)))) (= g_s84_85 (binary_union (set_prod (binary_union (binary_union (domain_restriction g_s75_76 g_s73_74) (set_prod g_s77_78 g_s82_83)) (SET (mapplet g_s81_82 g_s71_72))) g_s35_36) (set_prod (set_prod (SET (mapplet g_s79_80 g_s78_79)) g_s82_83) (SET g_s74_75)))) (= g_s85_86 (domain_restriction g_s75_76 g_s69_70)) (mem g_s86_87 INTEGER) (= g_s87_88 (set_prod g_s33_34 g_s34_35)) (= g_s88_89 (set_prod g_s33_34 g_s34_35)) (|<i| e0 g_s86_87) (subset g_s89_90 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (subset g_s90_91 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (subset g_s91_92 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (subset g_s92_93 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (subset g_s93_94 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (= g_s89_90 (set_prod (set_prod (SET e0) (SET (mapplet g_s27_28 (mapplet g_s29_30 (mapplet g_s31_32 (mapplet g_s30_31 g_s26_27)))))) (SET e0))) (= g_s90_91 (set_prod (set_prod (SET e0) (SET (mapplet g_s28_29 g_s32_33))) (SET e95))) (= g_s91_92 (set_prod (set_prod (SET e95) (SET g_s27_28)) (SET e0))) (= g_s92_93 (set_prod (set_prod (SET e95) (SET (mapplet g_s28_29 (mapplet g_s32_33 (mapplet g_s29_30 (mapplet g_s31_32 (mapplet g_s30_31 g_s26_27))))))) (SET e95))) (= g_s93_94 (binary_union (binary_union (binary_union g_s89_90 g_s90_91) g_s91_92) g_s92_93)) (subset g_s83_84 (set_prod g_s33_34 g_s34_35)) (subset g_s84_85 (set_prod (set_prod g_s33_34 g_s34_35) g_s35_36)) (subset g_s85_86 (set_prod g_s33_34 g_s34_35)) (subset g_s87_88 (set_prod g_s33_34 g_s34_35)) (subset g_s88_89 (set_prod g_s33_34 g_s34_35)) (= g_s94_99 (binary_union (binary_union (binary_union (binary_union (binary_union (set_prod (set_prod g_s83_84 g_s35_36) (SET g_s62_62)) (set_prod g_s84_85 (SET g_s64_64))) (set_prod (set_prod g_s85_86 g_s35_36) (SET g_s66_66))) (set_prod (set_prod g_s87_88 g_s35_36) (SET g_s95_98))) (set_prod (set_prod g_s88_89 g_s35_36) (SET g_s96_97))) (set_prod (set_prod (set_prod g_s33_34 g_s34_35) g_s35_36) (SET g_s97_96)))) (subset g_s94_99 (set_prod (set_prod (set_prod g_s33_34 g_s34_35) g_s35_36) g_s36_37)) (mem g_s62_62 g_s36_37) (mem g_s64_64 g_s36_37) (mem g_s66_66 g_s36_37) (mem g_s95_98 g_s36_37) (mem g_s96_97 g_s36_37) (mem g_s97_96 g_s36_37) (not (mem g_s62_62 (SET (mapplet g_s97_96 (mapplet g_s96_97 (mapplet g_s95_98 (mapplet g_s66_66 g_s64_64))))))) (not (mem g_s64_64 (SET (mapplet g_s97_96 (mapplet g_s96_97 (mapplet g_s95_98 (mapplet g_s66_66 g_s62_62))))))) (not (mem g_s66_66 (SET (mapplet g_s97_96 (mapplet g_s96_97 (mapplet g_s95_98 (mapplet g_s64_64 g_s62_62))))))) (not (mem g_s95_98 (SET (mapplet g_s97_96 (mapplet g_s96_97 (mapplet g_s66_66 (mapplet g_s64_64 g_s62_62))))))) (not (mem g_s96_97 (SET (mapplet g_s97_96 (mapplet g_s95_98 (mapplet g_s66_66 (mapplet g_s64_64 g_s62_62))))))) (not (mem g_s97_96 (SET (mapplet g_s96_97 (mapplet g_s95_98 (mapplet g_s66_66 (mapplet g_s64_64 g_s62_62)))))))))
(define-fun |def_abs| () Bool (and (mem g_s98_100 (|<->| g_s6_6 g_s4_4)) (mem g_s99_101 (|<->| g_s6_6 g_s4_4)) (= g_s100_102 (composition g_s98_100 g_s39_40)) (= g_s101_103 (composition g_s99_101 g_s40_41)) (mem g_s98_100 (|-->| g_s6_6 g_s4_4)) (mem g_s99_101 (|-->| g_s6_6 g_s4_4)) (mem g_s100_102 (|<->| g_s6_6 g_s33_34)) (mem g_s101_103 (|<->| g_s6_6 g_s33_34)) (mem g_s102_104 (|<->| g_s6_6 BOOL)) (= g_s103_105 (binary_inter (composition g_s100_102 g_s43_44) (composition g_s101_103 (inverse g_s43_44)))) (= g_s104_106 (binary_inter (composition g_s100_102 g_s42_43) (composition g_s101_103 (inverse g_s43_44)))) (= g_s105_107 (image (inverse g_s102_104) (SET TRUE))) (mem g_s100_102 (|-->| g_s6_6 g_s33_34)) (mem g_s101_103 (|-->| g_s6_6 g_s33_34)) (mem g_s102_104 (|-->| g_s6_6 BOOL)) (subset g_s106_108 g_s14_15) (mem g_s103_105 (|<->| g_s6_6 g_s33_34)) (mem g_s104_106 (|<->| g_s6_6 g_s33_34)) (mem g_s107_109 (|<->| g_s6_6 g_s34_35)) (mem g_s108_110 (|<->| g_s6_6 g_s36_37)) (subset g_s105_107 g_s6_6) (subset g_s109_111 g_s6_6) (subset g_s110_112 g_s6_6) (subset g_s111_113 g_s34_35) (subset g_s112_114 g_s6_6) (subset g_s113_115 g_s6_6) (= g_s114_116 (image (ran (domain_restriction g_s105_107 (|><| g_s108_110 (|><| g_s103_105 g_s107_109)))) (SET g_s62_62))) (= g_s115_117 (image (ran (domain_restriction g_s105_107 (|><| g_s108_110 (|><| g_s103_105 g_s107_109)))) (SET g_s64_64))) (= g_s116_118 (image (ran (domain_restriction g_s105_107 (|><| g_s108_110 (|><| g_s103_105 g_s107_109)))) (SET g_s66_66))) (= g_s117_119 (image (ran (domain_restriction g_s105_107 (|><| g_s108_110 (|><| g_s104_106 g_s107_109)))) (SET g_s66_66))) (subset g_s104_106 g_s103_105) (mem g_s107_109 (|-->| g_s6_6 g_s34_35)) (subset (ran g_s108_110) (SET (mapplet g_s66_66 (mapplet g_s64_64 g_s62_62)))) (=> (= g_s118_122 e121) (= g_s109_111 (binary_inter g_s105_107 (image (inverse g_s103_105) (SET g_s119_120))))) (=> (= g_s118_122 e121) (= g_s110_112 (binary_inter (binary_inter g_s105_107 (image (inverse g_s103_105) (SET g_s119_120))) (image (inverse g_s108_110) (SET g_s120_123))))) (=> (= g_s118_122 e121) (= g_s111_113 (image g_s107_109 g_s110_112))) (=> (= g_s118_122 e121) (= g_s112_114 (binary_inter (binary_inter g_s105_107 (image (inverse g_s104_106) (SET g_s119_120))) (image (inverse g_s108_110) (SET g_s120_123))))) (=> (= g_s118_122 e121) (= g_s113_115 (binary_inter (binary_inter (binary_inter g_s105_107 (image (inverse g_s103_105) (SET g_s119_120))) (image (inverse g_s108_110) (SET g_s120_123))) (image (inverse g_s107_109) (SET (mapplet g_s70_71 g_s121_124)))))) (mem g_s116_118 (|<->| g_s33_34 g_s34_35)) (mem g_s117_119 (|<->| g_s33_34 g_s34_35)) (subset g_s122_125 g_s34_35) (= g_s123_127 (set_prod (set_diff (dom (binary_union g_s117_119 (range_subtraction g_s116_118 (image (set_prod (SET e0) (set_diff g_s122_125 (SET g_s121_124))) (SET g_s124_126))))) (dom (range_subtraction (|><| g_s116_118 g_s116_118) (id g_s34_35)))) g_s34_35)) (subset g_s117_119 g_s116_118) (subset g_s114_116 (set_prod g_s33_34 g_s34_35)) (subset g_s115_117 (set_prod g_s33_34 g_s34_35)) (= g_s125_128 (binary_union g_s114_116 (composition g_s114_116 (set_prod (SET g_s70_71) g_s34_35)))) (= g_s126_129 (binary_union g_s115_117 (composition g_s115_117 (set_prod (SET g_s70_71) g_s34_35)))) (subset g_s125_128 (set_prod g_s33_34 g_s34_35)) (subset g_s126_129 (set_prod g_s33_34 g_s34_35)) (subset g_s123_127 (set_prod g_s33_34 g_s34_35)) (mem g_s127_130 BOOL) (subset g_s128_131 g_s34_35) (= g_s129_132 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (domain_restriction g_s75_76 g_s125_128) (set_prod g_s77_78 g_s128_131)) (set_prod (SET (mapplet g_s79_80 g_s78_79)) g_s128_131)) (set_prod g_s54_55 (SET g_s71_72))) (dom (range_restriction (set_prod (set_prod g_s76_77 g_s34_35) (SET e95)) (SET g_s124_126)))) (set_prod (SET g_s80_81) g_s34_35)) (SET (mapplet g_s81_82 g_s71_72)))) (= g_s130_133 (binary_union (set_prod (binary_union (binary_union (binary_union (domain_restriction g_s75_76 g_s126_129) (set_prod g_s77_78 g_s128_131)) (dom (range_restriction (set_prod (set_prod g_s54_55 (SET g_s71_72)) (SET FALSE)) (SET g_s127_130)))) (SET (mapplet g_s81_82 g_s71_72))) g_s35_36) (set_prod (set_prod (SET (mapplet g_s79_80 g_s78_79)) g_s128_131) (SET g_s74_75)))) (= g_s131_134 (domain_restriction g_s75_76 g_s123_127)) (mem g_s132_135 g_s34_35) (mem g_s133_136 INTEGER) (mem g_s134_137 (|<->| INTEGER g_s34_35)) (mem g_s135_138 (|<->| INTEGER g_s34_35)) (= g_s136_139 (dom (range_subtraction (set_prod (set_prod g_s33_34 g_s34_35) (SET (mapplet g_s86_87 e0))) (SET (mapplet g_s133_136 g_s124_126))))) (= g_s137_140 (dom (range_subtraction (set_prod (set_prod g_s33_34 g_s34_35) (SET (mapplet e0 e0))) (SET (mapplet g_s133_136 g_s124_126))))) (and (|>=i| g_s133_136 e0) (|<=i| g_s133_136 g_s86_87)) (mem g_s134_137 (|-->| (interval e95 g_s86_87) g_s34_35)) (mem g_s135_138 (|-->| (interval e95 g_s86_87) g_s34_35)) (mem g_s138_141 INTEGER) (mem g_s139_142 g_s25_26) (mem g_s124_126 INTEGER) (mem (mapplet (mapplet g_s138_141 g_s139_142) g_s124_126) g_s93_94) (subset g_s129_132 (set_prod g_s33_34 g_s34_35)) (subset g_s130_133 (set_prod (set_prod g_s33_34 g_s34_35) g_s35_36)) (subset g_s131_134 (set_prod g_s33_34 g_s34_35)) (subset g_s136_139 (set_prod g_s33_34 g_s34_35)) (subset g_s137_140 (set_prod g_s33_34 g_s34_35)) (= g_s140_143 (binary_union (binary_union (binary_union (binary_union (binary_union (set_prod (set_prod g_s129_132 g_s35_36) (SET g_s62_62)) (set_prod g_s130_133 (SET g_s64_64))) (set_prod (set_prod g_s131_134 g_s35_36) (SET g_s66_66))) (set_prod (set_prod g_s136_139 g_s35_36) (SET g_s95_98))) (set_prod (set_prod g_s137_140 g_s35_36) (SET g_s96_97))) (set_prod (set_prod (set_prod g_s33_34 g_s34_35) g_s35_36) (SET g_s97_96)))) (mem g_s118_122 INTEGER) (mem g_s119_120 g_s33_34) (mem g_s121_124 g_s34_35) (mem g_s141_144 g_s35_36) (mem g_s120_123 g_s36_37) (mem g_s142_145 BOOL) (subset g_s140_143 (set_prod (set_prod (set_prod g_s33_34 g_s34_35) g_s35_36) g_s36_37)) (= (composition g_s39_40 g_s43_44) (composition (composition (composition g_s39_40 g_s38_39) g_s37_38) (inverse g_s38_39))) (= (composition g_s40_41 (inverse g_s43_44)) (composition (composition (composition g_s40_41 g_s38_39) (inverse g_s37_38)) (inverse g_s38_39))) (subset (ran g_s39_40) e146) (subset (ran g_s40_41) e147) (= g_s12_13 (composition g_s44_45 g_s38_39)) (= g_s13_14 (composition g_s45_46 g_s38_39)) (= g_s98_100 (composition g_s100_102 g_s38_39)) (= g_s99_101 (composition g_s101_103 g_s38_39)) (= (composition (composition g_s98_100 g_s37_38) (inverse g_s38_39)) (composition g_s100_102 g_s43_44)) (= (composition (composition g_s99_101 (inverse g_s37_38)) (inverse g_s38_39)) (composition g_s101_103 (inverse g_s43_44))) (=> (and (= g_s118_122 e121) (= g_s120_123 g_s66_66)) (= g_s111_113 (image g_s116_118 (SET g_s119_120)))) (=> (and (= g_s118_122 e121) (= g_s120_123 g_s66_66)) (= (image g_s107_109 g_s112_114) (image g_s117_119 (SET g_s119_120)))) (=> (= g_s118_122 e121) (= g_s110_112 (binary_inter g_s109_111 (image (inverse g_s108_110) (SET g_s120_123))))) (= (binary_union g_s67_68 (range_subtraction g_s65_67 (image (set_prod (SET e0) (set_diff g_s68_69 (SET g_s71_72))) (SET e95)))) g_s65_67) (= (binary_union g_s117_119 (range_subtraction g_s116_118 (image (set_prod (SET e0) (set_diff g_s122_125 (SET g_s121_124))) (SET e0)))) (binary_union g_s117_119 (range_subtraction g_s116_118 (set_diff g_s122_125 (SET g_s121_124))))) (= (binary_union g_s117_119 (range_subtraction g_s116_118 (image (set_prod (SET e0) (set_diff g_s122_125 (SET g_s121_124))) (SET e95)))) g_s116_118) (mem g_s93_94 (|-->| (set_prod (SET (mapplet e95 e0)) g_s25_26) (SET (mapplet e95 e0)))) (or (= g_s124_126 e0) (= g_s124_126 e95))))
(define-fun |def_inv| () Bool (and (= g_s118_122 g_s118$1_148) (= g_s119_120 g_s119$1_149) (= g_s121_124 g_s121$1_150) (= g_s141_144 g_s141$1_151) (= g_s120_123 g_s120$1_152) (= g_s142_145 g_s142$1_153) (= g_s124_126 g_s124$1_154) (= g_s132_135 g_s132$1_155) (= g_s133_136 g_s133$1_156) (= g_s134_137 g_s134$1_157) (= g_s135_138 g_s135$1_158) (= g_s127_130 g_s127$1_159) (= g_s128_131 g_s128$1_160) (= g_s122_125 g_s122$1_161) (= g_s107_109 g_s107$1_162) (= g_s108_110 g_s108$1_163) (= g_s109_111 g_s109$1_164) (= g_s110_112 g_s110$1_165) (= g_s111_113 g_s111$1_166) (= g_s112_114 g_s112$1_167) (= g_s113_115 g_s113$1_168) (= g_s106_108 g_s106$1_169) (= g_s102_104 g_s102$1_170) (mem g_s145$1_171 (|<->| g_s6_6 g_s0_1)) (mem g_s146$1_172 (|<->| g_s6_6 g_s1_2)) (mem g_s147$1_173 (|<->| g_s6_6 g_s2_3)) (mem g_s148$1_174 (|<->| g_s6_6 g_s0_1)) (mem g_s149$1_175 (|<->| g_s6_6 g_s1_2)) (mem g_s150$1_176 (|<->| g_s6_6 g_s2_3)) (= g_s98_100 (composition (|><| (|><| g_s145$1_171 g_s146$1_172) g_s147$1_173) g_s3_5)) (= g_s99_101 (composition (|><| (|><| g_s148$1_174 g_s149$1_175) g_s150$1_176) g_s3_5)) (mem g_s145$1_171 (|-->| g_s6_6 g_s0_1)) (mem g_s146$1_172 (|-->| g_s6_6 g_s1_2)) (mem g_s147$1_173 (|-->| g_s6_6 g_s2_3)) (mem g_s148$1_174 (|-->| g_s6_6 g_s0_1)) (mem g_s149$1_175 (|-->| g_s6_6 g_s1_2)) (mem g_s150$1_176 (|-->| g_s6_6 g_s2_3))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool (and (not (= g_s0_1 empty)) (not (= g_s1_2 empty)) (not (= g_s2_3 empty))))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s118$1_148 e95))
(define-fun lh_2 () Bool (= g_s109$2_177 (binary_inter (binary_inter (image (inverse g_s102$1_170) (SET TRUE)) (image (inverse (composition (composition (composition (|><| (|><| g_s145$1_171 g_s146$1_172) g_s147$1_173) g_s3_5) g_s37_38) (inverse g_s38_39))) (SET g_s119$1_149))) (image (inverse (composition (composition (composition (|><| (|><| g_s148$1_174 g_s149$1_175) g_s150$1_176) g_s3_5) (inverse g_s37_38)) (inverse g_s38_39))) (SET g_s119$1_149)))))
(define-fun lh_3 () Bool (= g_s110$2_178 (binary_inter g_s109$2_177 (image (inverse g_s108$1_163) (SET g_s120$1_152)))))
(define-fun lh_4 () Bool (= g_s111$2_179 (image g_s107$1_162 g_s110$2_178)))
(define-fun lh_5 () Bool (= g_s112$2_180 (binary_inter g_s110$2_178 (image (inverse (composition (composition (|><| (|><| g_s145$1_171 g_s146$1_172) g_s147$1_173) g_s3_5) g_s41_42)) (SET g_s119$1_149)))))
(define-fun lh_6 () Bool (= g_s113$2_181 (binary_inter g_s110$2_178 (image (inverse g_s107$1_162) (SET (mapplet g_s70_71 g_s121$1_150))))))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s118_122 e95))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s109$3_182 (image (inverse g_s108_110) (SET g_s120_123))) g_s110$2_178))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s109$3_182 (image (inverse g_s108_110) (SET g_s120_123))) (binary_inter (binary_inter (binary_inter (image (inverse g_s102_104) (SET TRUE)) (image (inverse (composition (composition g_s98_100 g_s37_38) (inverse g_s38_39))) (SET g_s119_120))) (image (inverse (composition (composition g_s99_101 (inverse g_s37_38)) (inverse g_s38_39))) (SET g_s119_120))) (image (inverse g_s108_110) (SET g_s120_123)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s110$3_183 (image (inverse g_s107_109) (SET (mapplet g_s70_71 g_s121_124)))) g_s113$2_181))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s110$3_183 (image (inverse g_s107_109) (SET (mapplet g_s70_71 g_s121_124)))) (binary_inter (binary_inter g_s109$3_182 (image (inverse g_s108_110) (SET g_s120_123))) (image (inverse g_s107_109) (SET (mapplet g_s70_71 g_s121_124))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s110$3_183 (image (inverse (composition g_s98_100 g_s41_42)) (SET g_s119_120))) g_s112$2_180))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s110$3_183 (image (inverse (composition g_s98_100 g_s41_42)) (SET g_s119_120))) (binary_inter (binary_inter g_s109$3_182 (image (inverse g_s108_110) (SET g_s120_123))) (image (inverse (composition g_s98_100 g_s41_42)) (SET g_s119_120)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter (binary_inter (image (inverse g_s102_104) (SET TRUE)) (image (inverse (composition (composition g_s98_100 g_s37_38) (inverse g_s38_39))) (SET g_s119_120))) (image (inverse (composition (composition g_s99_101 (inverse g_s37_38)) (inverse g_s38_39))) (SET g_s119_120))) g_s109$2_177))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (image g_s107_109 g_s110$3_183) g_s111$2_179))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (image g_s107_109 g_s110$3_183) (image g_s107_109 (binary_inter g_s109$3_182 (image (inverse g_s108_110) (SET g_s120_123))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s118$1_148 e121))
(define-fun lh_2 () Bool (= g_s120$1_152 g_s64_64))
(define-fun lh_3 () Bool (mem g_s119$1_149 g_s47_48))
(define-fun lh_4 () Bool (= g_s121$1_150 g_s71_72))
(define-fun lh_5 () Bool (= g_s127$1_159 FALSE))
(define-fun lh_6 () Bool (mem g_s145$2_184 (|-->| g_s6_6 g_s0_1)))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s119_120 g_s47_48))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s145$2_184 (|<->| g_s6_6 g_s0_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition (|><| (|><| g_s145$2_184 g_s146$1_172) g_s147$1_173) g_s3_5) (|-->| g_s6_6 g_s4_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s121_124 g_s71_72))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s127_130 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s118_122 e121))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s120_123 g_s64_64))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s118$1_148 e121))
(define-fun lh_2 () Bool (= g_s120$1_152 g_s64_64))
(define-fun lh_3 () Bool (mem g_s119$1_149 g_s48_49))
(define-fun lh_4 () Bool (= g_s121$1_150 g_s71_72))
(define-fun lh_5 () Bool (= g_s127$1_159 FALSE))
(define-fun lh_6 () Bool (mem g_s146$2_185 (|-->| g_s6_6 g_s1_2)))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s119_120 g_s48_49))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s146$2_185 (|<->| g_s6_6 g_s1_2)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition (|><| (|><| g_s145$1_171 g_s146$2_185) g_s147$1_173) g_s3_5) (|-->| g_s6_6 g_s4_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s121_124 g_s71_72))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s127_130 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s118_122 e121))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s120_123 g_s64_64))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s118$1_148 e121))
(define-fun lh_2 () Bool (= g_s120$1_152 g_s64_64))
(define-fun lh_3 () Bool (mem g_s119$1_149 g_s49_50))
(define-fun lh_4 () Bool (= g_s121$1_150 g_s71_72))
(define-fun lh_5 () Bool (= g_s127$1_159 FALSE))
(define-fun lh_6 () Bool (mem g_s147$2_186 (|-->| g_s6_6 g_s2_3)))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s119_120 g_s49_50))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s147$2_186 (|<->| g_s6_6 g_s2_3)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition (|><| (|><| g_s145$1_171 g_s146$1_172) g_s147$2_186) g_s3_5) (|-->| g_s6_6 g_s4_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s121_124 g_s71_72))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s127_130 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s118_122 e121))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s120_123 g_s64_64))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s118$1_148 e121))
(define-fun lh_2 () Bool (= g_s120$1_152 g_s64_64))
(define-fun lh_3 () Bool (mem g_s119$1_149 g_s50_51))
(define-fun lh_4 () Bool (= g_s121$1_150 g_s71_72))
(define-fun lh_5 () Bool (= g_s127$1_159 FALSE))
(define-fun lh_6 () Bool (mem g_s148$2_187 (|-->| g_s6_6 g_s0_1)))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s119_120 g_s50_51))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s148$2_187 (|<->| g_s6_6 g_s0_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition (|><| (|><| g_s148$2_187 g_s149$1_175) g_s150$1_176) g_s3_5) (|-->| g_s6_6 g_s4_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s121_124 g_s71_72))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s127_130 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s118_122 e121))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s120_123 g_s64_64))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s118$1_148 e121))
(define-fun lh_2 () Bool (= g_s120$1_152 g_s64_64))
(define-fun lh_3 () Bool (mem g_s119$1_149 g_s51_52))
(define-fun lh_4 () Bool (= g_s121$1_150 g_s71_72))
(define-fun lh_5 () Bool (= g_s127$1_159 FALSE))
(define-fun lh_6 () Bool (mem g_s149$2_188 (|-->| g_s6_6 g_s1_2)))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s119_120 g_s51_52))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s149$2_188 (|<->| g_s6_6 g_s1_2)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition (|><| (|><| g_s148$1_174 g_s149$2_188) g_s150$1_176) g_s3_5) (|-->| g_s6_6 g_s4_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s121_124 g_s71_72))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s127_130 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s118_122 e121))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s120_123 g_s64_64))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s118$1_148 e121))
(define-fun lh_2 () Bool (= g_s120$1_152 g_s64_64))
(define-fun lh_3 () Bool (mem g_s119$1_149 g_s52_53))
(define-fun lh_4 () Bool (= g_s121$1_150 g_s71_72))
(define-fun lh_5 () Bool (= g_s127$1_159 FALSE))
(define-fun lh_6 () Bool (mem g_s150$2_189 (|-->| g_s6_6 g_s2_3)))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s119_120 g_s52_53))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s150$2_189 (|<->| g_s6_6 g_s2_3)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition (|><| (|><| g_s148$1_174 g_s149$1_175) g_s150$2_189) g_s3_5) (|-->| g_s6_6 g_s4_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s121_124 g_s71_72))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s127_130 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s118_122 e121))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s120_123 g_s64_64))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s118$1_148 e121))
(define-fun lh_2 () Bool (= g_s120$1_152 g_s96_97))
(define-fun lh_3 () Bool (= g_s124$1_154 e0))
(define-fun lh_4 () Bool (|<i| e0 g_s133$1_156))
; PO 1 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s133$1_156 (dom g_s134$1_157)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s133$1_156 (dom g_s135$1_158)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s134$1_157 (|+->| (dom g_s134$1_157) (ran g_s134$1_157))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 7
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s135$1_158 (|+->| (dom g_s135$1_158) (ran g_s135$1_158))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)