(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: Event-B
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e85 () U)
(declare-fun e109 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_102 () U)
(declare-fun g_s100$1_153 () U)
(declare-fun g_s100$2_164 () U)
(declare-fun g_s101_103 () U)
(declare-fun g_s101$1_154 () U)
(declare-fun g_s101$2_165 () U)
(declare-fun g_s102_104 () U)
(declare-fun g_s103_105 () U)
(declare-fun g_s104_106 () U)
(declare-fun g_s105_107 () U)
(declare-fun g_s106_110 () U)
(declare-fun g_s106$1_134 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s107$1_135 () U)
(declare-fun g_s108_111 () U)
(declare-fun g_s108$1_138 () U)
(declare-fun g_s109_112 () U)
(declare-fun g_s109$1_136 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_113 () U)
(declare-fun g_s110$1_147 () U)
(declare-fun g_s111_115 () U)
(declare-fun g_s112_114 () U)
(declare-fun g_s112$1_140 () U)
(declare-fun g_s113_116 () U)
(declare-fun g_s114_117 () U)
(declare-fun g_s115_118 () U)
(declare-fun g_s115$1_145 () U)
(declare-fun g_s116_119 () U)
(declare-fun g_s116$1_146 () U)
(declare-fun g_s117_120 () U)
(declare-fun g_s118_121 () U)
(declare-fun g_s119_122 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_123 () U)
(declare-fun g_s120$1_141 () U)
(declare-fun g_s121_124 () U)
(declare-fun g_s121$1_142 () U)
(declare-fun g_s122_125 () U)
(declare-fun g_s122$1_143 () U)
(declare-fun g_s123_126 () U)
(declare-fun g_s123$1_144 () U)
(declare-fun g_s124_127 () U)
(declare-fun g_s125_128 () U)
(declare-fun g_s126_129 () U)
(declare-fun g_s127_130 () U)
(declare-fun g_s128_131 () U)
(declare-fun g_s129_132 () U)
(declare-fun g_s129$1_137 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_133 () U)
(declare-fun g_s130$1_139 () U)
(declare-fun g_s131$1_157 () U)
(declare-fun g_s131$2_168 () U)
(declare-fun g_s132$1_158 () U)
(declare-fun g_s132$2_169 () U)
(declare-fun g_s133_170 () U)
(declare-fun g_s134_171 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s2_4 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s3_3 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_53 () U)
(declare-fun g_s52_52 () U)
(declare-fun g_s53_55 () U)
(declare-fun g_s54_54 () U)
(declare-fun g_s55_57 () U)
(declare-fun g_s56_56 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_9 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_8 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_89 () U)
(declare-fun g_s85_88 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_86 () U)
(declare-fun g_s88_90 () U)
(declare-fun g_s89_91 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_92 () U)
(declare-fun g_s90$1_156 () U)
(declare-fun g_s91_93 () U)
(declare-fun g_s92_94 () U)
(declare-fun g_s93_95 () U)
(declare-fun g_s94_96 () U)
(declare-fun g_s94$1_155 () U)
(declare-fun g_s95_97 () U)
(declare-fun g_s95$1_148 () U)
(declare-fun g_s96_98 () U)
(declare-fun g_s96$1_149 () U)
(declare-fun g_s97_99 () U)
(declare-fun g_s97$1_150 () U)
(declare-fun g_s97$2_161 () U)
(declare-fun g_s97$3_166 () U)
(declare-fun g_s98_100 () U)
(declare-fun g_s98$1_151 () U)
(declare-fun g_s98$2_162 () U)
(declare-fun g_s98$3_167 () U)
(declare-fun g_s99_101 () U)
(declare-fun g_s99$1_152 () U)
(declare-fun g_s99$2_163 () U)
(declare-fun e159 () U)
(declare-fun e160 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool true)
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool (and (not (= g_s0_1 empty)) (mem g_s1_2 (|<->| g_s0_1 g_s0_1)) (mem g_s2_4 (|<->| g_s3_3 g_s0_1)) (mem g_s4_5 (|<->| g_s0_1 g_s3_3)) (mem g_s5_6 (|<->| g_s0_1 g_s3_3)) (mem g_s6_7 (|<->| g_s0_1 g_s3_3)) (mem g_s7_9 (|<->| g_s8_8 g_s0_1)) (mem g_s9_10 (|<->| g_s8_8 g_s0_1)) (= g_s10_11 (composition g_s2_4 g_s6_7)) (= (binary_union g_s11_12 (inverse g_s11_12)) (set_prod g_s3_3 g_s3_3)) (subset (binary_inter g_s1_2 (inverse g_s1_2)) (id g_s0_1)) (mem g_s2_4 (|-->>| g_s3_3 g_s0_1)) (subset (composition (composition (inverse g_s2_4) g_s11_12) g_s2_4) g_s1_2) (mem g_s4_5 (|-->| g_s0_1 g_s3_3)) (subset g_s4_5 (inverse g_s2_4)) (subset (ran (|><| g_s4_5 (inverse g_s2_4))) g_s11_12) (mem g_s5_6 (|-->| g_s0_1 g_s3_3)) (subset g_s5_6 (inverse g_s2_4)) (subset (ran (|><| (inverse g_s2_4) g_s5_6)) g_s11_12) (= g_s12_13 (composition g_s7_9 g_s4_5)) (= g_s13_14 (composition g_s9_10 g_s5_6)) (mem g_s7_9 (|-->| g_s8_8 g_s0_1)) (mem g_s9_10 (|-->| g_s8_8 g_s0_1))))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool (and (= g_s14_15 (SET (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 (mapplet g_s19_20 (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 g_s15_16))))))))))) (not (= g_s8_8 empty)) (= g_s25_26 (SET (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 g_s26_27)))))))) (not (= g_s3_3 empty)) (not (= g_s33_34 empty)) (not (= g_s34_35 empty)) (not (= g_s35_36 empty)) (subset g_s36_37 g_s3_3) (subset g_s37_38 g_s3_3) (subset g_s38_39 g_s3_3) (subset g_s39_40 g_s3_3) (subset g_s40_41 g_s3_3) (subset g_s41_42 g_s3_3) (subset g_s42_43 g_s3_3) (mem g_s43_44 g_s3_3) (= g_s44_45 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union g_s36_37 g_s37_38) g_s38_39) g_s39_40) g_s40_41) g_s41_42) g_s42_43) (SET g_s43_44))) (subset g_s37_38 (set_diff g_s44_45 g_s36_37)) (subset g_s38_39 (set_diff g_s44_45 (binary_union g_s36_37 g_s37_38))) (subset g_s39_40 (set_diff g_s44_45 (binary_union (binary_union g_s36_37 g_s37_38) g_s38_39))) (subset g_s40_41 (set_diff g_s44_45 (binary_union (binary_union (binary_union g_s36_37 g_s37_38) g_s38_39) g_s39_40))) (subset g_s41_42 (set_diff g_s44_45 (binary_union (binary_union (binary_union (binary_union g_s36_37 g_s37_38) g_s38_39) g_s39_40) g_s40_41))) (subset g_s42_43 (set_diff g_s44_45 (binary_union (binary_union (binary_union (binary_union (binary_union g_s36_37 g_s37_38) g_s38_39) g_s39_40) g_s40_41) g_s41_42))) (mem g_s43_44 (set_diff g_s44_45 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union g_s36_37 g_s37_38) g_s38_39) g_s39_40) g_s40_41) g_s41_42) g_s42_43))) (mem g_s11_12 (|<->| g_s3_3 g_s3_3)) (mem g_s10_11 (|<->| g_s3_3 g_s3_3)) (mem g_s12_13 (|<->| g_s8_8 g_s3_3)) (mem g_s13_14 (|<->| g_s8_8 g_s3_3)) (mem g_s45_46 (|<->| g_s8_8 BOOL)) (subset g_s10_11 g_s11_12) (= g_s46_47 (binary_inter (composition g_s12_13 g_s11_12) (composition g_s13_14 (inverse g_s11_12)))) (= g_s47_48 (binary_inter (composition g_s12_13 g_s10_11) (composition g_s13_14 (inverse g_s11_12)))) (= g_s48_49 (image (inverse g_s45_46) (SET TRUE))) (mem g_s12_13 (|-->| g_s8_8 g_s3_3)) (mem g_s13_14 (|-->| g_s8_8 g_s3_3)) (mem g_s45_46 (|-->| g_s8_8 BOOL)) (mem g_s46_47 (|<->| g_s8_8 g_s3_3)) (mem g_s47_48 (|<->| g_s8_8 g_s3_3)) (mem g_s49_50 (|<->| g_s8_8 g_s33_34)) (mem g_s50_51 (|<->| g_s8_8 g_s35_36)) (subset g_s48_49 g_s8_8) (= g_s51_53 (image (ran (domain_restriction g_s48_49 (|><| g_s50_51 (|><| g_s46_47 g_s49_50)))) (SET g_s52_52))) (= g_s53_55 (image (ran (domain_restriction g_s48_49 (|><| g_s50_51 (|><| g_s46_47 g_s49_50)))) (SET g_s54_54))) (= g_s55_57 (image (ran (domain_restriction g_s48_49 (|><| g_s50_51 (|><| g_s46_47 g_s49_50)))) (SET g_s56_56))) (= g_s57_58 (image (ran (domain_restriction g_s48_49 (|><| g_s50_51 (|><| g_s47_48 g_s49_50)))) (SET g_s56_56))) (subset g_s47_48 g_s46_47) (mem g_s49_50 (|-->| g_s8_8 g_s33_34)) (subset (ran g_s50_51) (SET (mapplet g_s56_56 (mapplet g_s54_54 g_s52_52)))) (mem g_s55_57 (|<->| g_s3_3 g_s33_34)) (mem g_s57_58 (|<->| g_s3_3 g_s33_34)) (subset g_s58_59 g_s33_34) (= g_s59_60 (set_prod (set_diff (dom g_s55_57) (dom (range_subtraction (|><| g_s55_57 g_s55_57) (id g_s33_34)))) g_s33_34)) (subset g_s57_58 g_s55_57) (mem g_s60_61 g_s33_34) (subset g_s51_53 (set_prod g_s3_3 g_s33_34)) (subset g_s53_55 (set_prod g_s3_3 g_s33_34)) (not (= g_s60_61 g_s61_62)) (= g_s62_63 (binary_union g_s51_53 (composition g_s51_53 (set_prod (SET g_s60_61) g_s33_34)))) (= g_s63_64 (binary_union g_s53_55 (composition g_s53_55 (set_prod (SET g_s60_61) g_s33_34)))) (mem g_s64_65 g_s34_35) (mem g_s61_62 g_s33_34) (subset g_s65_66 g_s3_3) (subset g_s66_67 g_s3_3) (subset g_s44_45 g_s3_3) (subset g_s67_68 g_s3_3) (mem g_s68_69 g_s3_3) (mem g_s69_70 g_s3_3) (mem g_s70_71 g_s3_3) (mem g_s71_72 g_s3_3) (subset g_s62_63 (set_prod g_s3_3 g_s33_34)) (subset g_s63_64 (set_prod g_s3_3 g_s33_34)) (subset g_s59_60 (set_prod g_s3_3 g_s33_34)) (subset g_s72_73 g_s33_34) (subset g_s66_67 g_s65_66) (subset g_s44_45 (set_diff g_s3_3 g_s65_66)) (subset g_s67_68 (set_diff g_s3_3 (binary_union g_s65_66 g_s44_45))) (mem g_s68_69 (set_diff g_s3_3 (binary_union (binary_union (binary_union g_s65_66 g_s44_45) g_s67_68) (SET (mapplet g_s71_72 (mapplet g_s70_71 g_s69_70)))))) (mem g_s69_70 (set_diff g_s3_3 (binary_union (binary_union (binary_union g_s65_66 g_s44_45) g_s67_68) (SET (mapplet g_s71_72 (mapplet g_s70_71 g_s68_69)))))) (mem g_s70_71 (set_diff g_s3_3 (binary_union (binary_union (binary_union g_s65_66 g_s44_45) g_s67_68) (SET (mapplet g_s71_72 (mapplet g_s69_70 g_s68_69)))))) (mem g_s71_72 (set_diff g_s3_3 (binary_union (binary_union (binary_union g_s65_66 g_s44_45) g_s67_68) (SET (mapplet g_s70_71 (mapplet g_s69_70 g_s68_69)))))) (= g_s3_3 (binary_union (binary_union (binary_union g_s65_66 g_s44_45) g_s67_68) (SET (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 g_s68_69)))))) (= g_s73_74 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (domain_restriction g_s65_66 g_s62_63) (set_prod g_s67_68 g_s72_73)) (set_prod (SET (mapplet g_s69_70 g_s68_69)) g_s72_73)) (set_prod g_s44_45 (SET g_s61_62))) (set_prod g_s66_67 g_s33_34)) (set_prod (SET g_s70_71) g_s33_34)) (SET (mapplet g_s71_72 g_s61_62)))) (= g_s74_75 (binary_union (set_prod (binary_union (binary_union (domain_restriction g_s65_66 g_s63_64) (set_prod g_s67_68 g_s72_73)) (SET (mapplet g_s71_72 g_s61_62))) g_s34_35) (set_prod (set_prod (SET (mapplet g_s69_70 g_s68_69)) g_s72_73) (SET g_s64_65)))) (= g_s75_76 (domain_restriction g_s65_66 g_s59_60)) (mem g_s76_77 INTEGER) (= g_s77_78 (set_prod g_s3_3 g_s33_34)) (= g_s78_79 (set_prod g_s3_3 g_s33_34)) (|<i| e0 g_s76_77) (subset g_s79_80 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (subset g_s80_81 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (subset g_s81_82 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (subset g_s82_83 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (subset g_s83_84 (set_prod (set_prod INTEGER g_s25_26) INTEGER)) (= g_s79_80 (set_prod (set_prod (SET e0) (SET (mapplet g_s27_28 (mapplet g_s29_30 (mapplet g_s31_32 (mapplet g_s30_31 g_s26_27)))))) (SET e0))) (= g_s80_81 (set_prod (set_prod (SET e0) (SET (mapplet g_s28_29 g_s32_33))) (SET e85))) (= g_s81_82 (set_prod (set_prod (SET e85) (SET g_s27_28)) (SET e0))) (= g_s82_83 (set_prod (set_prod (SET e85) (SET (mapplet g_s28_29 (mapplet g_s32_33 (mapplet g_s29_30 (mapplet g_s31_32 (mapplet g_s30_31 g_s26_27))))))) (SET e85))) (= g_s83_84 (binary_union (binary_union (binary_union g_s79_80 g_s80_81) g_s81_82) g_s82_83)) (subset g_s73_74 (set_prod g_s3_3 g_s33_34)) (subset g_s74_75 (set_prod (set_prod g_s3_3 g_s33_34) g_s34_35)) (subset g_s75_76 (set_prod g_s3_3 g_s33_34)) (subset g_s77_78 (set_prod g_s3_3 g_s33_34)) (subset g_s78_79 (set_prod g_s3_3 g_s33_34)) (= g_s84_89 (binary_union (binary_union (binary_union (binary_union (binary_union (set_prod (set_prod g_s73_74 g_s34_35) (SET g_s52_52)) (set_prod g_s74_75 (SET g_s54_54))) (set_prod (set_prod g_s75_76 g_s34_35) (SET g_s56_56))) (set_prod (set_prod g_s77_78 g_s34_35) (SET g_s85_88))) (set_prod (set_prod g_s78_79 g_s34_35) (SET g_s86_87))) (set_prod (set_prod (set_prod g_s3_3 g_s33_34) g_s34_35) (SET g_s87_86)))) (subset g_s84_89 (set_prod (set_prod (set_prod g_s3_3 g_s33_34) g_s34_35) g_s35_36)) (mem g_s52_52 g_s35_36) (mem g_s54_54 g_s35_36) (mem g_s56_56 g_s35_36) (mem g_s85_88 g_s35_36) (mem g_s86_87 g_s35_36) (mem g_s87_86 g_s35_36) (not (mem g_s52_52 (SET (mapplet g_s87_86 (mapplet g_s86_87 (mapplet g_s85_88 (mapplet g_s56_56 g_s54_54))))))) (not (mem g_s54_54 (SET (mapplet g_s87_86 (mapplet g_s86_87 (mapplet g_s85_88 (mapplet g_s56_56 g_s52_52))))))) (not (mem g_s56_56 (SET (mapplet g_s87_86 (mapplet g_s86_87 (mapplet g_s85_88 (mapplet g_s54_54 g_s52_52))))))) (not (mem g_s85_88 (SET (mapplet g_s87_86 (mapplet g_s86_87 (mapplet g_s56_56 (mapplet g_s54_54 g_s52_52))))))) (not (mem g_s86_87 (SET (mapplet g_s87_86 (mapplet g_s85_88 (mapplet g_s56_56 (mapplet g_s54_54 g_s52_52))))))) (not (mem g_s87_86 (SET (mapplet g_s86_87 (mapplet g_s85_88 (mapplet g_s56_56 (mapplet g_s54_54 g_s52_52)))))))))
(define-fun |def_abs| () Bool (and (mem g_s88_90 (|<->| g_s8_8 g_s3_3)) (mem g_s89_91 (|<->| g_s8_8 g_s3_3)) (mem g_s90_92 (|<->| g_s8_8 BOOL)) (= g_s91_93 (binary_inter (composition g_s88_90 g_s11_12) (composition g_s89_91 (inverse g_s11_12)))) (= g_s92_94 (binary_inter (composition g_s88_90 g_s10_11) (composition g_s89_91 (inverse g_s11_12)))) (= g_s93_95 (image (inverse g_s90_92) (SET TRUE))) (mem g_s88_90 (|-->| g_s8_8 g_s3_3)) (mem g_s89_91 (|-->| g_s8_8 g_s3_3)) (mem g_s90_92 (|-->| g_s8_8 BOOL)) (subset g_s94_96 g_s14_15) (mem g_s91_93 (|<->| g_s8_8 g_s3_3)) (mem g_s92_94 (|<->| g_s8_8 g_s3_3)) (mem g_s95_97 (|<->| g_s8_8 g_s33_34)) (mem g_s96_98 (|<->| g_s8_8 g_s35_36)) (subset g_s93_95 g_s8_8) (subset g_s97_99 g_s8_8) (subset g_s98_100 g_s8_8) (subset g_s99_101 g_s33_34) (subset g_s100_102 g_s8_8) (subset g_s101_103 g_s8_8) (= g_s102_104 (image (ran (domain_restriction g_s93_95 (|><| g_s96_98 (|><| g_s91_93 g_s95_97)))) (SET g_s52_52))) (= g_s103_105 (image (ran (domain_restriction g_s93_95 (|><| g_s96_98 (|><| g_s91_93 g_s95_97)))) (SET g_s54_54))) (= g_s104_106 (image (ran (domain_restriction g_s93_95 (|><| g_s96_98 (|><| g_s91_93 g_s95_97)))) (SET g_s56_56))) (= g_s105_107 (image (ran (domain_restriction g_s93_95 (|><| g_s96_98 (|><| g_s92_94 g_s95_97)))) (SET g_s56_56))) (subset g_s92_94 g_s91_93) (mem g_s95_97 (|-->| g_s8_8 g_s33_34)) (subset (ran g_s96_98) (SET (mapplet g_s56_56 (mapplet g_s54_54 g_s52_52)))) (=> (= g_s106_110 e109) (= g_s97_99 (binary_inter g_s93_95 (image (inverse g_s91_93) (SET g_s107_108))))) (=> (= g_s106_110 e109) (= g_s98_100 (binary_inter (binary_inter g_s93_95 (image (inverse g_s91_93) (SET g_s107_108))) (image (inverse g_s96_98) (SET g_s108_111))))) (=> (= g_s106_110 e109) (= g_s99_101 (image g_s95_97 g_s98_100))) (=> (= g_s106_110 e109) (= g_s100_102 (binary_inter (binary_inter g_s93_95 (image (inverse g_s92_94) (SET g_s107_108))) (image (inverse g_s96_98) (SET g_s108_111))))) (=> (= g_s106_110 e109) (= g_s101_103 (binary_inter (binary_inter (binary_inter g_s93_95 (image (inverse g_s91_93) (SET g_s107_108))) (image (inverse g_s96_98) (SET g_s108_111))) (image (inverse g_s95_97) (SET (mapplet g_s60_61 g_s109_112)))))) (mem g_s104_106 (|<->| g_s3_3 g_s33_34)) (mem g_s105_107 (|<->| g_s3_3 g_s33_34)) (subset g_s110_113 g_s33_34) (= g_s111_115 (set_prod (set_diff (dom (binary_union g_s105_107 (range_subtraction g_s104_106 (image (set_prod (SET e0) (set_diff g_s110_113 (SET g_s109_112))) (SET g_s112_114))))) (dom (range_subtraction (|><| g_s104_106 g_s104_106) (id g_s33_34)))) g_s33_34)) (subset g_s105_107 g_s104_106) (subset g_s102_104 (set_prod g_s3_3 g_s33_34)) (subset g_s103_105 (set_prod g_s3_3 g_s33_34)) (= g_s113_116 (binary_union g_s102_104 (composition g_s102_104 (set_prod (SET g_s60_61) g_s33_34)))) (= g_s114_117 (binary_union g_s103_105 (composition g_s103_105 (set_prod (SET g_s60_61) g_s33_34)))) (subset g_s113_116 (set_prod g_s3_3 g_s33_34)) (subset g_s114_117 (set_prod g_s3_3 g_s33_34)) (subset g_s111_115 (set_prod g_s3_3 g_s33_34)) (mem g_s115_118 BOOL) (subset g_s116_119 g_s33_34) (= g_s117_120 (binary_union (binary_union (binary_union (binary_union (binary_union (binary_union (domain_restriction g_s65_66 g_s113_116) (set_prod g_s67_68 g_s116_119)) (set_prod (SET (mapplet g_s69_70 g_s68_69)) g_s116_119)) (set_prod g_s44_45 (SET g_s61_62))) (dom (range_restriction (set_prod (set_prod g_s66_67 g_s33_34) (SET e85)) (SET g_s112_114)))) (set_prod (SET g_s70_71) g_s33_34)) (SET (mapplet g_s71_72 g_s61_62)))) (= g_s118_121 (binary_union (set_prod (binary_union (binary_union (binary_union (domain_restriction g_s65_66 g_s114_117) (set_prod g_s67_68 g_s116_119)) (dom (range_restriction (set_prod (set_prod g_s44_45 (SET g_s61_62)) (SET FALSE)) (SET g_s115_118)))) (SET (mapplet g_s71_72 g_s61_62))) g_s34_35) (set_prod (set_prod (SET (mapplet g_s69_70 g_s68_69)) g_s116_119) (SET g_s64_65)))) (= g_s119_122 (domain_restriction g_s65_66 g_s111_115)) (mem g_s120_123 g_s33_34) (mem g_s121_124 INTEGER) (mem g_s122_125 (|<->| INTEGER g_s33_34)) (mem g_s123_126 (|<->| INTEGER g_s33_34)) (= g_s124_127 (dom (range_subtraction (set_prod (set_prod g_s3_3 g_s33_34) (SET (mapplet g_s76_77 e0))) (SET (mapplet g_s121_124 g_s112_114))))) (= g_s125_128 (dom (range_subtraction (set_prod (set_prod g_s3_3 g_s33_34) (SET (mapplet e0 e0))) (SET (mapplet g_s121_124 g_s112_114))))) (and (|>=i| g_s121_124 e0) (|<=i| g_s121_124 g_s76_77)) (mem g_s122_125 (|-->| (interval e85 g_s76_77) g_s33_34)) (mem g_s123_126 (|-->| (interval e85 g_s76_77) g_s33_34)) (mem g_s126_129 INTEGER) (mem g_s127_130 g_s25_26) (mem g_s112_114 INTEGER) (mem (mapplet (mapplet g_s126_129 g_s127_130) g_s112_114) g_s83_84) (subset g_s117_120 (set_prod g_s3_3 g_s33_34)) (subset g_s118_121 (set_prod (set_prod g_s3_3 g_s33_34) g_s34_35)) (subset g_s119_122 (set_prod g_s3_3 g_s33_34)) (subset g_s124_127 (set_prod g_s3_3 g_s33_34)) (subset g_s125_128 (set_prod g_s3_3 g_s33_34)) (= g_s128_131 (binary_union (binary_union (binary_union (binary_union (binary_union (set_prod (set_prod g_s117_120 g_s34_35) (SET g_s52_52)) (set_prod g_s118_121 (SET g_s54_54))) (set_prod (set_prod g_s119_122 g_s34_35) (SET g_s56_56))) (set_prod (set_prod g_s124_127 g_s34_35) (SET g_s85_88))) (set_prod (set_prod g_s125_128 g_s34_35) (SET g_s86_87))) (set_prod (set_prod (set_prod g_s3_3 g_s33_34) g_s34_35) (SET g_s87_86)))) (mem g_s106_110 INTEGER) (mem g_s107_108 g_s3_3) (mem g_s109_112 g_s33_34) (mem g_s129_132 g_s34_35) (mem g_s108_111 g_s35_36) (mem g_s130_133 BOOL) (subset g_s128_131 (set_prod (set_prod (set_prod g_s3_3 g_s33_34) g_s34_35) g_s35_36)) (=> (and (= g_s106_110 e109) (= g_s108_111 g_s56_56)) (= g_s99_101 (image g_s104_106 (SET g_s107_108)))) (=> (and (= g_s106_110 e109) (= g_s108_111 g_s56_56)) (= (image g_s95_97 g_s100_102) (image g_s105_107 (SET g_s107_108)))) (=> (= g_s106_110 e109) (= g_s98_100 (binary_inter g_s97_99 (image (inverse g_s96_98) (SET g_s108_111))))) (= (binary_union g_s57_58 (range_subtraction g_s55_57 (image (set_prod (SET e0) (set_diff g_s58_59 (SET g_s61_62))) (SET e85)))) g_s55_57) (= (binary_union g_s105_107 (range_subtraction g_s104_106 (image (set_prod (SET e0) (set_diff g_s110_113 (SET g_s109_112))) (SET e0)))) (binary_union g_s105_107 (range_subtraction g_s104_106 (set_diff g_s110_113 (SET g_s109_112))))) (= (binary_union g_s105_107 (range_subtraction g_s104_106 (image (set_prod (SET e0) (set_diff g_s110_113 (SET g_s109_112))) (SET e85)))) g_s104_106) (mem g_s83_84 (|-->| (set_prod (SET (mapplet e85 e0)) g_s25_26) (SET (mapplet e85 e0)))) (or (= g_s112_114 e0) (= g_s112_114 e85))))
(define-fun |def_inv| () Bool (and (= g_s106_110 g_s106$1_134) (= g_s107_108 g_s107$1_135) (= g_s109_112 g_s109$1_136) (= g_s129_132 g_s129$1_137) (= g_s108_111 g_s108$1_138) (= g_s130_133 g_s130$1_139) (= g_s112_114 g_s112$1_140) (= g_s120_123 g_s120$1_141) (= g_s121_124 g_s121$1_142) (= g_s122_125 g_s122$1_143) (= g_s123_126 g_s123$1_144) (= g_s115_118 g_s115$1_145) (= g_s116_119 g_s116$1_146) (= g_s110_113 g_s110$1_147) (= g_s95_97 g_s95$1_148) (= g_s96_98 g_s96$1_149) (= g_s97_99 g_s97$1_150) (= g_s98_100 g_s98$1_151) (= g_s99_101 g_s99$1_152) (= g_s100_102 g_s100$1_153) (= g_s101_103 g_s101$1_154) (= g_s94_96 g_s94$1_155) (= g_s90_92 g_s90$1_156) (mem g_s131$1_157 (|<->| g_s8_8 g_s0_1)) (mem g_s132$1_158 (|<->| g_s8_8 g_s0_1)) (= g_s88_90 (composition g_s131$1_157 g_s4_5)) (= g_s89_91 (composition g_s132$1_158 g_s5_6)) (mem g_s131$1_157 (|-->| g_s8_8 g_s0_1)) (mem g_s132$1_158 (|-->| g_s8_8 g_s0_1))))
(define-fun |def_ass| () Bool (and (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))) (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))) (subset (ran g_s4_5) e159) (subset (ran g_s5_6) e160) (= g_s7_9 (composition g_s12_13 g_s2_4)) (= g_s9_10 (composition g_s13_14 g_s2_4)) (= g_s131$1_157 (composition g_s88_90 g_s2_4)) (= g_s132$1_158 (composition g_s89_91 g_s2_4)) (= (composition (composition g_s131$1_157 g_s1_2) (inverse g_s2_4)) (composition g_s88_90 g_s11_12)) (= (composition (composition g_s132$1_158 (inverse g_s1_2)) (inverse g_s2_4)) (composition g_s89_91 (inverse g_s11_12)))))
(define-fun |def_sets| () Bool  (not (= g_s0_1 empty)))
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
; PO 1 in group 0
(assert (not (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4)))))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
; PO 1 in group 1
(assert (not (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
; PO 1 in group 2
(assert (not (subset (ran g_s4_5) e159)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(assert (subset (ran g_s4_5) e159))
; PO 1 in group 3
(assert (not (subset (ran g_s5_6) e160)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(assert (subset (ran g_s4_5) e159))
(assert (subset (ran g_s5_6) e160))
; PO 1 in group 4
(assert (not (= g_s7_9 (composition g_s12_13 g_s2_4))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(assert (subset (ran g_s4_5) e159))
(assert (subset (ran g_s5_6) e160))
(assert (= g_s7_9 (composition g_s12_13 g_s2_4)))
; PO 1 in group 5
(assert (not (= g_s9_10 (composition g_s13_14 g_s2_4))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(assert (subset (ran g_s4_5) e159))
(assert (subset (ran g_s5_6) e160))
(assert (= g_s7_9 (composition g_s12_13 g_s2_4)))
(assert (= g_s9_10 (composition g_s13_14 g_s2_4)))
; PO 1 in group 6
(assert (not (= g_s131$1_157 (composition g_s88_90 g_s2_4))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(assert (subset (ran g_s4_5) e159))
(assert (subset (ran g_s5_6) e160))
(assert (= g_s7_9 (composition g_s12_13 g_s2_4)))
(assert (= g_s9_10 (composition g_s13_14 g_s2_4)))
(assert (= g_s131$1_157 (composition g_s88_90 g_s2_4)))
; PO 1 in group 7
(assert (not (= g_s132$1_158 (composition g_s89_91 g_s2_4))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(assert (subset (ran g_s4_5) e159))
(assert (subset (ran g_s5_6) e160))
(assert (= g_s7_9 (composition g_s12_13 g_s2_4)))
(assert (= g_s9_10 (composition g_s13_14 g_s2_4)))
(assert (= g_s131$1_157 (composition g_s88_90 g_s2_4)))
(assert (= g_s132$1_158 (composition g_s89_91 g_s2_4)))
; PO 1 in group 8
(assert (not (= (composition (composition g_s131$1_157 g_s1_2) (inverse g_s2_4)) (composition g_s88_90 g_s11_12))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(assert (subset (ran g_s4_5) e159))
(assert (subset (ran g_s5_6) e160))
(assert (= g_s7_9 (composition g_s12_13 g_s2_4)))
(assert (= g_s9_10 (composition g_s13_14 g_s2_4)))
(assert (= g_s131$1_157 (composition g_s88_90 g_s2_4)))
(assert (= g_s132$1_158 (composition g_s89_91 g_s2_4)))
(assert (= (composition (composition g_s131$1_157 g_s1_2) (inverse g_s2_4)) (composition g_s88_90 g_s11_12)))
; PO 1 in group 9
(assert (not (= (composition (composition g_s132$1_158 (inverse g_s1_2)) (inverse g_s2_4)) (composition g_s89_91 (inverse g_s11_12)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s106$1_134 e85))
(define-fun lh_2 () Bool (= g_s97$2_161 (binary_inter (binary_inter (image (inverse g_s90$1_156) (SET TRUE)) (image (inverse (composition (composition g_s131$1_157 g_s1_2) (inverse g_s2_4))) (SET g_s107$1_135))) (image (inverse (composition (composition g_s132$1_158 (inverse g_s1_2)) (inverse g_s2_4))) (SET g_s107$1_135)))))
(define-fun lh_3 () Bool (= g_s98$2_162 (binary_inter g_s97$2_161 (image (inverse g_s96$1_149) (SET g_s108$1_138)))))
(define-fun lh_4 () Bool (= g_s99$2_163 (image g_s95$1_148 g_s98$2_162)))
(define-fun lh_5 () Bool (= g_s100$2_164 (binary_inter g_s98$2_162 (image (inverse (composition g_s131$1_157 g_s6_7)) (SET g_s107$1_135)))))
(define-fun lh_6 () Bool (= g_s101$2_165 (binary_inter g_s98$2_162 (image (inverse g_s95$1_148) (SET (mapplet g_s60_61 g_s109$1_136))))))
; PO 1 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s106_110 e85))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s97$3_166 (image (inverse g_s96_98) (SET g_s108_111))) g_s98$2_162))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s97$3_166 (image (inverse g_s96_98) (SET g_s108_111))) (binary_inter (binary_inter (binary_inter (image (inverse g_s90_92) (SET TRUE)) (image (inverse (composition g_s88_90 g_s11_12)) (SET g_s107_108))) (image (inverse (composition g_s89_91 (inverse g_s11_12))) (SET g_s107_108))) (image (inverse g_s96_98) (SET g_s108_111)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s98$3_167 (image (inverse g_s95_97) (SET (mapplet g_s60_61 g_s109_112)))) g_s101$2_165))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s98$3_167 (image (inverse g_s95_97) (SET (mapplet g_s60_61 g_s109_112)))) (binary_inter (binary_inter g_s97$3_166 (image (inverse g_s96_98) (SET g_s108_111))) (image (inverse g_s95_97) (SET (mapplet g_s60_61 g_s109_112))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s98$3_167 (image (inverse (composition g_s88_90 g_s10_11)) (SET g_s107_108))) g_s100$2_164))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter g_s98$3_167 (image (inverse (composition g_s88_90 g_s10_11)) (SET g_s107_108))) (binary_inter (binary_inter g_s97$3_166 (image (inverse g_s96_98) (SET g_s108_111))) (image (inverse (composition g_s88_90 g_s10_11)) (SET g_s107_108)))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (binary_inter (binary_inter (image (inverse g_s90_92) (SET TRUE)) (image (inverse (composition g_s88_90 g_s11_12)) (SET g_s107_108))) (image (inverse (composition g_s89_91 (inverse g_s11_12))) (SET g_s107_108))) g_s97$2_161))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (image g_s95_97 g_s98$3_167) g_s99$2_163))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 10
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= (image g_s95_97 g_s98$3_167) (image g_s95_97 (binary_inter g_s97$3_166 (image (inverse g_s96_98) (SET g_s108_111))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s106$1_134 e109))
(define-fun lh_2 () Bool (= g_s108$1_138 g_s54_54))
(define-fun lh_3 () Bool (mem g_s107$1_135 g_s37_38))
(define-fun lh_4 () Bool (= g_s109$1_136 g_s61_62))
(define-fun lh_5 () Bool (= g_s115$1_145 FALSE))
(define-fun lh_6 () Bool (mem g_s131$2_168 (|-->| g_s8_8 g_s0_1)))
; PO 1 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s107_108 g_s37_38))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s131$2_168 (|<->| g_s8_8 g_s0_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition g_s131$2_168 g_s4_5) (|-->| g_s8_8 g_s3_3)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s109_112 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s115_118 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s106_110 e109))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 11
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s108_111 g_s54_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s106$1_134 e109))
(define-fun lh_2 () Bool (= g_s108$1_138 g_s54_54))
(define-fun lh_3 () Bool (mem g_s107$1_135 g_s38_39))
(define-fun lh_4 () Bool (= g_s109$1_136 g_s61_62))
(define-fun lh_5 () Bool (= g_s115$1_145 FALSE))
(define-fun lh_6 () Bool (mem g_s131$2_168 (|-->| g_s8_8 g_s0_1)))
; PO 1 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s107_108 g_s38_39))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s131$2_168 (|<->| g_s8_8 g_s0_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition g_s131$2_168 g_s4_5) (|-->| g_s8_8 g_s3_3)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s109_112 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s115_118 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s106_110 e109))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 12
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s108_111 g_s54_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s106$1_134 e109))
(define-fun lh_2 () Bool (= g_s108$1_138 g_s54_54))
(define-fun lh_3 () Bool (mem g_s107$1_135 g_s39_40))
(define-fun lh_4 () Bool (= g_s109$1_136 g_s61_62))
(define-fun lh_5 () Bool (= g_s115$1_145 FALSE))
(define-fun lh_6 () Bool (mem g_s131$2_168 (|-->| g_s8_8 g_s0_1)))
; PO 1 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s107_108 g_s39_40))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s131$2_168 (|<->| g_s8_8 g_s0_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition g_s131$2_168 g_s4_5) (|-->| g_s8_8 g_s3_3)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s109_112 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s115_118 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s106_110 e109))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 13
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s108_111 g_s54_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s106$1_134 e109))
(define-fun lh_2 () Bool (= g_s108$1_138 g_s54_54))
(define-fun lh_3 () Bool (mem g_s107$1_135 g_s40_41))
(define-fun lh_4 () Bool (= g_s109$1_136 g_s61_62))
(define-fun lh_5 () Bool (= g_s115$1_145 FALSE))
(define-fun lh_6 () Bool (mem g_s132$2_169 (|-->| g_s8_8 g_s0_1)))
; PO 1 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s107_108 g_s40_41))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s132$2_169 (|<->| g_s8_8 g_s0_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition g_s132$2_169 g_s5_6) (|-->| g_s8_8 g_s3_3)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s109_112 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s115_118 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s106_110 e109))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 14
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s108_111 g_s54_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s106$1_134 e109))
(define-fun lh_2 () Bool (= g_s108$1_138 g_s54_54))
(define-fun lh_3 () Bool (mem g_s107$1_135 g_s41_42))
(define-fun lh_4 () Bool (= g_s109$1_136 g_s61_62))
(define-fun lh_5 () Bool (= g_s115$1_145 FALSE))
(define-fun lh_6 () Bool (mem g_s132$2_169 (|-->| g_s8_8 g_s0_1)))
; PO 1 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s107_108 g_s41_42))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s132$2_169 (|<->| g_s8_8 g_s0_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition g_s132$2_169 g_s5_6) (|-->| g_s8_8 g_s3_3)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s109_112 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s115_118 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s106_110 e109))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 15
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s108_111 g_s54_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s106$1_134 e109))
(define-fun lh_2 () Bool (= g_s108$1_138 g_s54_54))
(define-fun lh_3 () Bool (mem g_s107$1_135 g_s42_43))
(define-fun lh_4 () Bool (= g_s109$1_136 g_s61_62))
(define-fun lh_5 () Bool (= g_s115$1_145 FALSE))
(define-fun lh_6 () Bool (mem g_s132$2_169 (|-->| g_s8_8 g_s0_1)))
; PO 1 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s107_108 g_s42_43))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s132$2_169 (|<->| g_s8_8 g_s0_1)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem (composition g_s132$2_169 g_s5_6) (|-->| g_s8_8 g_s3_3)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s109_112 g_s61_62))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s115_118 FALSE))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s106_110 e109))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 16
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= g_s108_111 g_s54_54))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(define-fun lh_1 () Bool (mem g_s133_170 g_s3_3))
(define-fun lh_2 () Bool (mem g_s134_171 g_s3_3))
; PO 1 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s133_170 (dom g_s2_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s134_171 (dom g_s2_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 17
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s2_4 (|+->| (dom g_s2_4) (ran g_s2_4))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert (= (composition g_s4_5 g_s11_12) (composition (composition (composition g_s4_5 g_s2_4) g_s1_2) (inverse g_s2_4))))
(assert (= (composition g_s5_6 (inverse g_s11_12)) (composition (composition (composition g_s5_6 g_s2_4) (inverse g_s1_2)) (inverse g_s2_4))))
(assert (subset (ran g_s4_5) e159))
(define-fun lh_1 () Bool (mem g_s133_170 g_s3_3))
(define-fun lh_2 () Bool (mem g_s134_171 g_s3_3))
; PO 1 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s133_170 (dom g_s2_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s134_171 (dom g_s2_4)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s2_4 (|+->| (dom g_s2_4) (ran g_s2_4))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (= g_s106$1_134 e109))
(define-fun lh_2 () Bool (= g_s108$1_138 g_s86_87))
(define-fun lh_3 () Bool (= g_s112$1_140 e0))
(define-fun lh_4 () Bool (|<i| e0 g_s121$1_142))
; PO 1 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s121$1_142 (dom g_s122$1_143)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s121$1_142 (dom g_s123$1_144)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s122$1_143 (|+->| (dom g_s122$1_143) (ran g_s122$1_143))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s123$1_144 (|+->| (dom g_s123$1_144) (ran g_s123$1_144))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)