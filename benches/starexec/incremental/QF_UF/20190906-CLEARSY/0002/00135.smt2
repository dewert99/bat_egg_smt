(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-06
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e16 () U)
(declare-fun e149 () U)
(declare-fun e8 () U)
(declare-fun e163 () U)
(declare-fun e151 () U)
(declare-fun e162 () U)
(declare-fun e10 () U)
(declare-fun e12 () U)
(declare-fun e164 () U)
(declare-fun e150 () U)
(declare-fun e14 () U)
(declare-fun e21 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_15 () U)
(declare-fun g_s100_108 () U)
(declare-fun g_s101_109 () U)
(declare-fun g_s102_110 () U)
(declare-fun g_s103_111 () U)
(declare-fun g_s104_112 () U)
(declare-fun g_s105_113 () U)
(declare-fun g_s106_114 () U)
(declare-fun g_s107_115 () U)
(declare-fun g_s108_116 () U)
(declare-fun g_s109_117 () U)
(declare-fun g_s11_17 () U)
(declare-fun g_s110_118 () U)
(declare-fun g_s111_119 () U)
(declare-fun g_s112_120 () U)
(declare-fun g_s113_121 () U)
(declare-fun g_s114_122 () U)
(declare-fun g_s115_123 () U)
(declare-fun g_s116_124 () U)
(declare-fun g_s117_125 () U)
(declare-fun g_s118_126 () U)
(declare-fun g_s119_127 () U)
(declare-fun g_s12_18 () U)
(declare-fun g_s120_128 () U)
(declare-fun g_s121_129 () U)
(declare-fun g_s122_130 () U)
(declare-fun g_s123_131 () U)
(declare-fun g_s124_132 () U)
(declare-fun g_s125_133 () U)
(declare-fun g_s126_134 () U)
(declare-fun g_s127_135 () U)
(declare-fun g_s128_136 () U)
(declare-fun g_s129_137 () U)
(declare-fun g_s13_19 () U)
(declare-fun g_s130_138 () U)
(declare-fun g_s131_139 () U)
(declare-fun g_s132_140 () U)
(declare-fun g_s133_141 () U)
(declare-fun g_s134_142 () U)
(declare-fun g_s135_143 () U)
(declare-fun g_s136_144 () U)
(declare-fun g_s137_145 () U)
(declare-fun g_s138_146 () U)
(declare-fun g_s139_147 () U)
(declare-fun g_s14_20 () U)
(declare-fun g_s140_148 () U)
(declare-fun g_s141_152 () U)
(declare-fun g_s142_153 () U)
(declare-fun g_s143_154 () U)
(declare-fun g_s144_155 () U)
(declare-fun g_s145_156 () U)
(declare-fun g_s146_157 () U)
(declare-fun g_s147_158 () U)
(declare-fun g_s148_159 () U)
(declare-fun g_s149_160 () U)
(declare-fun g_s15_22 () U)
(declare-fun g_s150_161 () U)
(declare-fun g_s16_23 () U)
(declare-fun g_s17_24 () U)
(declare-fun g_s18_25 () U)
(declare-fun g_s19_26 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_27 () U)
(declare-fun g_s21_28 () U)
(declare-fun g_s24_32 () U)
(declare-fun g_s25_33 () U)
(declare-fun g_s26_34 () U)
(declare-fun g_s27_35 () U)
(declare-fun g_s28_36 () U)
(declare-fun g_s29_37 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_38 () U)
(declare-fun g_s31_39 () U)
(declare-fun g_s32_40 () U)
(declare-fun g_s33_41 () U)
(declare-fun g_s34_42 () U)
(declare-fun g_s35_43 () U)
(declare-fun g_s36_44 () U)
(declare-fun g_s37_45 () U)
(declare-fun g_s38_46 () U)
(declare-fun g_s39_47 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_48 () U)
(declare-fun g_s41_49 () U)
(declare-fun g_s42_50 () U)
(declare-fun g_s43_51 () U)
(declare-fun g_s44_52 () U)
(declare-fun g_s45_53 () U)
(declare-fun g_s46_54 () U)
(declare-fun g_s47_55 () U)
(declare-fun g_s48_56 () U)
(declare-fun g_s49_57 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_58 () U)
(declare-fun g_s51_59 () U)
(declare-fun g_s52_60 () U)
(declare-fun g_s53_61 () U)
(declare-fun g_s54_62 () U)
(declare-fun g_s55_63 () U)
(declare-fun g_s56_64 () U)
(declare-fun g_s57_65 () U)
(declare-fun g_s58_66 () U)
(declare-fun g_s59_67 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_68 () U)
(declare-fun g_s61_69 () U)
(declare-fun g_s62_70 () U)
(declare-fun g_s63_71 () U)
(declare-fun g_s64_72 () U)
(declare-fun g_s65_73 () U)
(declare-fun g_s66_74 () U)
(declare-fun g_s67_75 () U)
(declare-fun g_s68_76 () U)
(declare-fun g_s69_77 () U)
(declare-fun g_s7_9 () U)
(declare-fun g_s70_78 () U)
(declare-fun g_s71_79 () U)
(declare-fun g_s72_80 () U)
(declare-fun g_s73_81 () U)
(declare-fun g_s74_82 () U)
(declare-fun g_s75_83 () U)
(declare-fun g_s76_84 () U)
(declare-fun g_s77_85 () U)
(declare-fun g_s78_86 () U)
(declare-fun g_s79_87 () U)
(declare-fun g_s8_11 () U)
(declare-fun g_s80_88 () U)
(declare-fun g_s81_89 () U)
(declare-fun g_s82_90 () U)
(declare-fun g_s83_91 () U)
(declare-fun g_s84_92 () U)
(declare-fun g_s85_93 () U)
(declare-fun g_s86_94 () U)
(declare-fun g_s87_95 () U)
(declare-fun g_s88_96 () U)
(declare-fun g_s89_97 () U)
(declare-fun g_s9_13 () U)
(declare-fun g_s90_98 () U)
(declare-fun g_s91_99 () U)
(declare-fun g_s92_100 () U)
(declare-fun g_s93_101 () U)
(declare-fun g_s94_102 () U)
(declare-fun g_s95_103 () U)
(declare-fun g_s96_104 () U)
(declare-fun g_s97_105 () U)
(declare-fun g_s98_106 () U)
(declare-fun g_s99_107 () U)
(declare-fun e29 () U)
(declare-fun e30 () U)
(declare-fun e31 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (not (= g_s0_1 empty)) (= g_s1_2 (SET (mapplet g_s6_7 (mapplet g_s5_6 (mapplet g_s4_5 (mapplet g_s3_4 g_s2_3)))))) (= g_s7_9 (interval e0 e8)) (= g_s8_11 (interval e0 e10)) (= g_s9_13 (interval e0 e12)) (= g_s10_15 (interval e0 e14)) (= g_s11_17 (interval e16 e8)) (= g_s12_18 (interval e16 e10)) (= g_s13_19 (interval e16 e12)) (= g_s14_20 (interval e16 e14)) (= g_s15_22 (interval e21 e14)) (= g_s16_23 g_s9_13) (subset g_s17_24 g_s0_1) (mem g_s18_25 g_s0_1) (= g_s17_24 (set_diff g_s0_1 (SET g_s18_25))) (mem g_s19_26 (|-->| (set_prod g_s10_15 g_s10_15) g_s10_15)) (mem g_s20_27 (|-->| (set_prod g_s10_15 g_s10_15) g_s10_15)) (mem g_s21_28 (|-->| (set_prod g_s10_15 g_s14_20) g_s10_15)) (= g_s19_26 e29) (= g_s20_27 e30) (= g_s21_28 e31)))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool (and (mem g_s24_32 g_s8_11) (mem g_s25_33 g_s8_11) (mem g_s26_34 g_s8_11) (mem g_s27_35 g_s7_9) (mem g_s28_36 g_s7_9) (mem g_s29_37 g_s7_9) (mem g_s30_38 g_s8_11) (mem g_s31_39 g_s7_9) (mem g_s32_40 g_s7_9) (mem g_s33_41 g_s8_11) (mem g_s34_42 g_s8_11) (mem g_s35_43 g_s10_15) (mem g_s36_44 g_s8_11) (mem g_s37_45 g_s7_9) (mem g_s38_46 g_s7_9) (mem g_s39_47 g_s10_15) (mem g_s40_48 g_s10_15) (mem g_s41_49 g_s8_11) (mem g_s42_50 g_s8_11) (mem g_s43_51 g_s8_11) (mem g_s44_52 g_s10_15) (mem g_s45_53 g_s8_11) (mem g_s46_54 g_s8_11) (mem g_s47_55 g_s8_11) (mem g_s48_56 g_s8_11) (mem g_s49_57 g_s8_11) (mem g_s50_58 g_s8_11) (mem g_s51_59 g_s8_11) (mem g_s52_60 g_s7_9) (mem g_s53_61 g_s8_11) (mem g_s54_62 g_s7_9) (mem g_s55_63 g_s8_11) (mem g_s56_64 g_s10_15) (mem g_s57_65 g_s8_11) (mem g_s58_66 g_s7_9) (mem g_s59_67 g_s8_11) (mem g_s60_68 g_s8_11) (mem g_s61_69 g_s8_11) (mem g_s62_70 g_s8_11) (mem g_s63_71 g_s8_11) (mem g_s64_72 g_s8_11) (mem g_s65_73 g_s8_11) (mem g_s66_74 g_s8_11) (mem g_s67_75 g_s8_11) (mem g_s68_76 g_s8_11) (mem g_s69_77 g_s8_11) (mem g_s70_78 g_s8_11) (mem g_s71_79 g_s8_11) (= (imax (SET (mapplet g_s46_54 (mapplet g_s45_53 g_s44_52)))) g_s40_48) (mem g_s72_80 g_s10_15) (mem g_s73_81 g_s10_15) (mem g_s74_82 g_s10_15) (mem g_s75_83 g_s10_15) (mem g_s76_84 g_s10_15) (mem g_s77_85 g_s10_15) (mem g_s78_86 g_s10_15) (mem g_s79_87 g_s10_15) (mem g_s80_88 g_s10_15) (mem g_s81_89 g_s10_15) (mem g_s82_90 g_s10_15) (mem g_s83_91 g_s10_15) (mem g_s84_92 g_s10_15) (mem g_s85_93 g_s10_15) (mem g_s86_94 g_s10_15) (mem g_s87_95 g_s10_15) (mem g_s88_96 g_s10_15) (mem g_s89_97 g_s10_15) (mem g_s90_98 g_s10_15) (mem g_s91_99 g_s10_15) (mem g_s92_100 g_s10_15) (mem g_s93_101 g_s10_15) (mem g_s94_102 g_s10_15) (mem g_s95_103 g_s10_15) (mem g_s96_104 g_s10_15) (mem g_s97_105 g_s10_15) (mem g_s98_106 g_s10_15) (mem g_s99_107 g_s10_15) (mem g_s100_108 g_s10_15) (mem g_s101_109 g_s10_15) (mem g_s102_110 g_s10_15) (mem g_s103_111 g_s10_15) (mem g_s104_112 g_s10_15) (mem g_s105_113 g_s10_15) (mem g_s106_114 g_s10_15) (mem g_s107_115 g_s10_15) (mem g_s108_116 g_s10_15) (mem g_s109_117 g_s10_15) (mem g_s110_118 g_s10_15) (mem g_s111_119 g_s10_15) (mem g_s112_120 g_s10_15) (mem g_s113_121 g_s10_15) (mem g_s114_122 g_s10_15) (mem g_s115_123 g_s7_9) (mem g_s116_124 g_s10_15) (mem g_s117_125 g_s10_15) (mem g_s118_126 g_s10_15) (mem g_s119_127 g_s10_15) (mem g_s120_128 g_s10_15) (mem g_s121_129 g_s10_15) (mem g_s122_130 g_s10_15) (mem g_s123_131 g_s10_15) (mem g_s124_132 g_s10_15) (mem g_s125_133 g_s10_15) (mem g_s126_134 g_s10_15) (mem g_s127_135 g_s10_15) (mem g_s128_136 g_s10_15) (mem g_s129_137 g_s10_15) (mem g_s130_138 g_s10_15) (mem g_s131_139 g_s10_15) (mem g_s132_140 g_s10_15) (mem g_s133_141 g_s8_11) (mem g_s134_142 g_s10_15) (mem g_s135_143 g_s8_11) (mem g_s136_144 g_s8_11) (mem g_s137_145 g_s10_15) (mem g_s138_146 g_s8_11) (mem g_s139_147 g_s8_11) (mem g_s140_148 g_s10_15) (= g_s108_116 (imax (SET (mapplet g_s82_90 g_s80_88)))) (= g_s24_32 e8) (= g_s25_33 e8) (= g_s26_34 e149) (= g_s50_58 (|+i| g_s51_59 g_s49_57)) (= g_s65_73 (|+i| g_s63_71 g_s64_72)) (= g_s105_113 e14) (|>i| g_s118_126 g_s119_127) (and (|>=i| g_s124_132 e0) (|<=i| g_s124_132 e150)) (and (|>=i| g_s125_133 e0) (|<=i| g_s125_133 e150)) (|<i| g_s127_135 g_s126_134) (|>i| g_s70_78 e0) (|>i| g_s68_76 e0) (|>i| g_s71_79 e0) (|>i| g_s69_77 e0) (|>i| g_s138_146 e0) (= g_s138_146 e151) (|>i| g_s139_147 e0) (mem g_s141_152 g_s10_15) (mem g_s142_153 g_s10_15) (mem g_s143_154 g_s10_15) (and (|>=i| g_s143_154 e0) (|<=i| g_s143_154 e150)) (mem g_s144_155 g_s10_15) (and (|>=i| g_s144_155 e0) (|<=i| g_s144_155 e150)) (mem g_s145_156 g_s10_15) (and (|>=i| g_s145_156 e0) (|<=i| g_s145_156 e150)) (mem g_s146_157 g_s10_15) (and (|>=i| g_s146_157 e0) (|<=i| g_s146_157 e150)) (mem g_s147_158 g_s10_15) (and (|>=i| g_s147_158 e0) (|<=i| g_s147_158 e150)) (mem g_s148_159 g_s10_15) (and (|>=i| g_s148_159 e0) (|<=i| g_s148_159 e150)) (mem g_s149_160 g_s10_15) (and (|>=i| g_s149_160 e0) (|<=i| g_s149_160 e150)) (mem g_s150_161 g_s10_15) (= g_s150_161 e162) (= g_s107_115 e163) (|<=i| g_s123_131 e164) (and (|>=i| g_s110_118 e0) (|<=i| g_s110_118 e150)) (and (|>=i| g_s116_124 e0) (|<=i| g_s116_124 e150)) (and (|>=i| g_s117_125 e0) (|<=i| g_s117_125 e150)) (and (|>=i| g_s118_126 e0) (|<=i| g_s118_126 e150)) (and (|>=i| g_s119_127 e0) (|<=i| g_s119_127 e150)) (and (|>=i| g_s120_128 e0) (|<=i| g_s120_128 e150)) (and (|>=i| g_s112_120 e0) (|<=i| g_s112_120 e150)) (and (|>=i| g_s113_121 e0) (|<=i| g_s113_121 e150)) (|<=i| g_s72_80 g_s73_81)))
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool true)
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_sets|)
(define-fun lh_1 () Bool (mem g_s24_32 g_s8_11))
(define-fun lh_2 () Bool (mem g_s25_33 g_s8_11))
(define-fun lh_3 () Bool (mem g_s26_34 g_s8_11))
(define-fun lh_4 () Bool (mem g_s27_35 g_s7_9))
(define-fun lh_5 () Bool (mem g_s28_36 g_s7_9))
(define-fun lh_6 () Bool (mem g_s29_37 g_s7_9))
(define-fun lh_7 () Bool (mem g_s30_38 g_s8_11))
(define-fun lh_8 () Bool (mem g_s31_39 g_s7_9))
(define-fun lh_9 () Bool (mem g_s32_40 g_s7_9))
(define-fun lh_10 () Bool (mem g_s33_41 g_s8_11))
(define-fun lh_11 () Bool (mem g_s34_42 g_s8_11))
(define-fun lh_12 () Bool (mem g_s35_43 g_s10_15))
(define-fun lh_13 () Bool (mem g_s36_44 g_s8_11))
(define-fun lh_14 () Bool (mem g_s37_45 g_s7_9))
(define-fun lh_15 () Bool (mem g_s38_46 g_s7_9))
(define-fun lh_16 () Bool (mem g_s39_47 g_s10_15))
(define-fun lh_17 () Bool (mem g_s40_48 g_s10_15))
(define-fun lh_18 () Bool (mem g_s41_49 g_s8_11))
(define-fun lh_19 () Bool (mem g_s42_50 g_s8_11))
(define-fun lh_20 () Bool (mem g_s43_51 g_s8_11))
(define-fun lh_21 () Bool (mem g_s44_52 g_s10_15))
(define-fun lh_22 () Bool (mem g_s45_53 g_s8_11))
(define-fun lh_23 () Bool (mem g_s46_54 g_s8_11))
(define-fun lh_24 () Bool (mem g_s47_55 g_s8_11))
(define-fun lh_25 () Bool (mem g_s48_56 g_s8_11))
(define-fun lh_26 () Bool (mem g_s49_57 g_s8_11))
(define-fun lh_27 () Bool (mem g_s50_58 g_s8_11))
(define-fun lh_28 () Bool (mem g_s51_59 g_s8_11))
(define-fun lh_29 () Bool (mem g_s52_60 g_s7_9))
(define-fun lh_30 () Bool (mem g_s53_61 g_s8_11))
(define-fun lh_31 () Bool (mem g_s54_62 g_s7_9))
(define-fun lh_32 () Bool (mem g_s55_63 g_s8_11))
(define-fun lh_33 () Bool (mem g_s56_64 g_s10_15))
(define-fun lh_34 () Bool (mem g_s57_65 g_s8_11))
(define-fun lh_35 () Bool (mem g_s58_66 g_s7_9))
(define-fun lh_36 () Bool (mem g_s59_67 g_s8_11))
(define-fun lh_37 () Bool (mem g_s60_68 g_s8_11))
(define-fun lh_38 () Bool (mem g_s61_69 g_s8_11))
(define-fun lh_39 () Bool (mem g_s62_70 g_s8_11))
(define-fun lh_40 () Bool (mem g_s63_71 g_s8_11))
(define-fun lh_41 () Bool (mem g_s64_72 g_s8_11))
(define-fun lh_42 () Bool (mem g_s65_73 g_s8_11))
(define-fun lh_43 () Bool (mem g_s66_74 g_s8_11))
(define-fun lh_44 () Bool (mem g_s67_75 g_s8_11))
(define-fun lh_45 () Bool (mem g_s68_76 g_s8_11))
(define-fun lh_46 () Bool (mem g_s69_77 g_s8_11))
(define-fun lh_47 () Bool (mem g_s70_78 g_s8_11))
(define-fun lh_48 () Bool (mem g_s71_79 g_s8_11))
(define-fun lh_49 () Bool (= (imax (SET (mapplet g_s46_54 (mapplet g_s45_53 g_s44_52)))) g_s40_48))
(define-fun lh_50 () Bool (mem g_s72_80 g_s10_15))
(define-fun lh_51 () Bool (mem g_s73_81 g_s10_15))
(define-fun lh_52 () Bool (mem g_s74_82 g_s10_15))
(define-fun lh_53 () Bool (mem g_s75_83 g_s10_15))
(define-fun lh_54 () Bool (mem g_s76_84 g_s10_15))
(define-fun lh_55 () Bool (mem g_s77_85 g_s10_15))
(define-fun lh_56 () Bool (mem g_s78_86 g_s10_15))
(define-fun lh_57 () Bool (mem g_s79_87 g_s10_15))
(define-fun lh_58 () Bool (mem g_s80_88 g_s10_15))
(define-fun lh_59 () Bool (mem g_s81_89 g_s10_15))
(define-fun lh_60 () Bool (mem g_s82_90 g_s10_15))
(define-fun lh_61 () Bool (mem g_s83_91 g_s10_15))
(define-fun lh_62 () Bool (mem g_s84_92 g_s10_15))
(define-fun lh_63 () Bool (mem g_s85_93 g_s10_15))
(define-fun lh_64 () Bool (mem g_s86_94 g_s10_15))
(define-fun lh_65 () Bool (mem g_s87_95 g_s10_15))
(define-fun lh_66 () Bool (mem g_s88_96 g_s10_15))
(define-fun lh_67 () Bool (mem g_s89_97 g_s10_15))
(define-fun lh_68 () Bool (mem g_s90_98 g_s10_15))
(define-fun lh_69 () Bool (mem g_s91_99 g_s10_15))
(define-fun lh_70 () Bool (mem g_s92_100 g_s10_15))
(define-fun lh_71 () Bool (mem g_s93_101 g_s10_15))
(define-fun lh_72 () Bool (mem g_s94_102 g_s10_15))
(define-fun lh_73 () Bool (mem g_s95_103 g_s10_15))
(define-fun lh_74 () Bool (mem g_s96_104 g_s10_15))
(define-fun lh_75 () Bool (mem g_s97_105 g_s10_15))
(define-fun lh_76 () Bool (mem g_s98_106 g_s10_15))
(define-fun lh_77 () Bool (mem g_s99_107 g_s10_15))
(define-fun lh_78 () Bool (mem g_s100_108 g_s10_15))
(define-fun lh_79 () Bool (mem g_s101_109 g_s10_15))
(define-fun lh_80 () Bool (mem g_s102_110 g_s10_15))
(define-fun lh_81 () Bool (mem g_s103_111 g_s10_15))
(define-fun lh_82 () Bool (mem g_s104_112 g_s10_15))
(define-fun lh_83 () Bool (mem g_s105_113 g_s10_15))
(define-fun lh_84 () Bool (mem g_s106_114 g_s10_15))
(define-fun lh_85 () Bool (mem g_s107_115 g_s10_15))
(define-fun lh_86 () Bool (mem g_s108_116 g_s10_15))
(define-fun lh_87 () Bool (mem g_s109_117 g_s10_15))
(define-fun lh_88 () Bool (mem g_s110_118 g_s10_15))
(define-fun lh_89 () Bool (mem g_s111_119 g_s10_15))
(define-fun lh_90 () Bool (mem g_s112_120 g_s10_15))
(define-fun lh_91 () Bool (mem g_s113_121 g_s10_15))
(define-fun lh_92 () Bool (mem g_s114_122 g_s10_15))
(define-fun lh_93 () Bool (mem g_s115_123 g_s7_9))
(define-fun lh_94 () Bool (mem g_s116_124 g_s10_15))
(define-fun lh_95 () Bool (mem g_s117_125 g_s10_15))
(define-fun lh_96 () Bool (mem g_s118_126 g_s10_15))
(define-fun lh_97 () Bool (mem g_s119_127 g_s10_15))
(define-fun lh_98 () Bool (mem g_s120_128 g_s10_15))
(define-fun lh_99 () Bool (mem g_s121_129 g_s10_15))
(define-fun lh_100 () Bool (mem g_s122_130 g_s10_15))
(define-fun lh_101 () Bool (mem g_s123_131 g_s10_15))
(define-fun lh_102 () Bool (mem g_s124_132 g_s10_15))
(define-fun lh_103 () Bool (mem g_s125_133 g_s10_15))
(define-fun lh_104 () Bool (mem g_s126_134 g_s10_15))
(define-fun lh_105 () Bool (mem g_s127_135 g_s10_15))
(define-fun lh_106 () Bool (mem g_s128_136 g_s10_15))
(define-fun lh_107 () Bool (mem g_s129_137 g_s10_15))
(define-fun lh_108 () Bool (mem g_s130_138 g_s10_15))
(define-fun lh_109 () Bool (mem g_s131_139 g_s10_15))
(define-fun lh_110 () Bool (mem g_s132_140 g_s10_15))
(define-fun lh_111 () Bool (mem g_s133_141 g_s8_11))
(define-fun lh_112 () Bool (mem g_s134_142 g_s10_15))
(define-fun lh_113 () Bool (mem g_s135_143 g_s8_11))
(define-fun lh_114 () Bool (mem g_s136_144 g_s8_11))
(define-fun lh_115 () Bool (mem g_s137_145 g_s10_15))
(define-fun lh_116 () Bool (mem g_s138_146 g_s8_11))
(define-fun lh_117 () Bool (mem g_s139_147 g_s8_11))
(define-fun lh_118 () Bool (mem g_s140_148 g_s10_15))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48) (not (= (SET (mapplet g_s46_54 (mapplet g_s45_53 g_s44_52))) empty)))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48) (mem (binary_inter (SET (mapplet g_s46_54 (mapplet g_s45_53 g_s44_52))) NATURAL) (FIN NATURAL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103 lh_104 lh_105 lh_106 lh_107 lh_108 lh_109 lh_110 lh_111 lh_112 lh_113 lh_114 lh_115 lh_116 lh_117 lh_118) (not (= (SET (mapplet g_s82_90 g_s80_88)) empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23 lh_24 lh_25 lh_26 lh_27 lh_28 lh_29 lh_30 lh_31 lh_32 lh_33 lh_34 lh_35 lh_36 lh_37 lh_38 lh_39 lh_40 lh_41 lh_42 lh_43 lh_44 lh_45 lh_46 lh_47 lh_48 lh_49 lh_50 lh_51 lh_52 lh_53 lh_54 lh_55 lh_56 lh_57 lh_58 lh_59 lh_60 lh_61 lh_62 lh_63 lh_64 lh_65 lh_66 lh_67 lh_68 lh_69 lh_70 lh_71 lh_72 lh_73 lh_74 lh_75 lh_76 lh_77 lh_78 lh_79 lh_80 lh_81 lh_82 lh_83 lh_84 lh_85 lh_86 lh_87 lh_88 lh_89 lh_90 lh_91 lh_92 lh_93 lh_94 lh_95 lh_96 lh_97 lh_98 lh_99 lh_100 lh_101 lh_102 lh_103 lh_104 lh_105 lh_106 lh_107 lh_108 lh_109 lh_110 lh_111 lh_112 lh_113 lh_114 lh_115 lh_116 lh_117 lh_118) (mem (binary_inter (SET (mapplet g_s82_90 g_s80_88)) NATURAL) (FIN NATURAL)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)