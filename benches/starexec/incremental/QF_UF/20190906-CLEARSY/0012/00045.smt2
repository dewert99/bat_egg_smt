(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e59 () U)
(declare-fun e0 () U)
(declare-fun e88 () U)
(declare-fun e71 () U)
(declare-fun e218 () U)
(declare-fun e61 () U)
(declare-fun e60 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_106 () U)
(declare-fun g_s101_107 () U)
(declare-fun g_s102_108 () U)
(declare-fun g_s103_109 () U)
(declare-fun g_s104_110 () U)
(declare-fun g_s105_111 () U)
(declare-fun g_s106_112 () U)
(declare-fun g_s107_113 () U)
(declare-fun g_s108_114 () U)
(declare-fun g_s109_115 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_116 () U)
(declare-fun g_s111_117 () U)
(declare-fun g_s112_118 () U)
(declare-fun g_s113_119 () U)
(declare-fun g_s114_120 () U)
(declare-fun g_s115_121 () U)
(declare-fun g_s116_122 () U)
(declare-fun g_s117_123 () U)
(declare-fun g_s118_124 () U)
(declare-fun g_s119_125 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_126 () U)
(declare-fun g_s121_127 () U)
(declare-fun g_s122_128 () U)
(declare-fun g_s123_129 () U)
(declare-fun g_s124_130 () U)
(declare-fun g_s125_131 () U)
(declare-fun g_s126_132 () U)
(declare-fun g_s127_133 () U)
(declare-fun g_s128_134 () U)
(declare-fun g_s129_135 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_136 () U)
(declare-fun g_s131_137 () U)
(declare-fun g_s132_138 () U)
(declare-fun g_s133_139 () U)
(declare-fun g_s134_140 () U)
(declare-fun g_s135_141 () U)
(declare-fun g_s136_142 () U)
(declare-fun g_s137_143 () U)
(declare-fun g_s138_144 () U)
(declare-fun g_s139_145 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_146 () U)
(declare-fun g_s141_147 () U)
(declare-fun g_s142_148 () U)
(declare-fun g_s143_149 () U)
(declare-fun g_s144_150 () U)
(declare-fun g_s145_151 () U)
(declare-fun g_s146_152 () U)
(declare-fun g_s147_153 () U)
(declare-fun g_s148_154 () U)
(declare-fun g_s149_155 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_156 () U)
(declare-fun g_s151_157 () U)
(declare-fun g_s152_158 () U)
(declare-fun g_s153_159 () U)
(declare-fun g_s154_160 () U)
(declare-fun g_s155_161 () U)
(declare-fun g_s156_162 () U)
(declare-fun g_s157_163 () U)
(declare-fun g_s158_164 () U)
(declare-fun g_s159_165 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_166 () U)
(declare-fun g_s161_167 () U)
(declare-fun g_s162_168 () U)
(declare-fun g_s163_169 () U)
(declare-fun g_s164_170 () U)
(declare-fun g_s165_171 () U)
(declare-fun g_s166_172 () U)
(declare-fun g_s167_173 () U)
(declare-fun g_s168_174 () U)
(declare-fun g_s169_175 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_176 () U)
(declare-fun g_s171_177 () U)
(declare-fun g_s172_178 () U)
(declare-fun g_s173_179 () U)
(declare-fun g_s174_180 () U)
(declare-fun g_s175_181 () U)
(declare-fun g_s176_182 () U)
(declare-fun g_s177_183 () U)
(declare-fun g_s178_184 () U)
(declare-fun g_s179_185 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_186 () U)
(declare-fun g_s181_187 () U)
(declare-fun g_s182_188 () U)
(declare-fun g_s183_189 () U)
(declare-fun g_s184_190 () U)
(declare-fun g_s185_191 () U)
(declare-fun g_s186_192 () U)
(declare-fun g_s187_193 () U)
(declare-fun g_s188_194 () U)
(declare-fun g_s189_195 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_196 () U)
(declare-fun g_s191_197 () U)
(declare-fun g_s192_198 () U)
(declare-fun g_s193_199 () U)
(declare-fun g_s194_200 () U)
(declare-fun g_s195_201 () U)
(declare-fun g_s196_202 () U)
(declare-fun g_s197_203 () U)
(declare-fun g_s198_204 () U)
(declare-fun g_s199_205 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_206 () U)
(declare-fun g_s201_207 () U)
(declare-fun g_s202_208 () U)
(declare-fun g_s203_209 () U)
(declare-fun g_s204_210 () U)
(declare-fun g_s205_211 () U)
(declare-fun g_s206_212 () U)
(declare-fun g_s207_213 () U)
(declare-fun g_s208_214 () U)
(declare-fun g_s209_215 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_216 () U)
(declare-fun g_s211_217 () U)
(declare-fun g_s212_219 () U)
(declare-fun g_s213_220 () U)
(declare-fun g_s214_221 () U)
(declare-fun g_s215_222 () U)
(declare-fun g_s216_223 () U)
(declare-fun g_s217_224 () U)
(declare-fun g_s218_225 () U)
(declare-fun g_s219_226 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_227 () U)
(declare-fun g_s221_228 () U)
(declare-fun g_s222_229 () U)
(declare-fun g_s223_230 () U)
(declare-fun g_s224_231 () U)
(declare-fun g_s225_232 () U)
(declare-fun g_s226_233 () U)
(declare-fun g_s227_234 () U)
(declare-fun g_s228_235 () U)
(declare-fun g_s229_236 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_237 () U)
(declare-fun g_s231_238 () U)
(declare-fun g_s232_239 () U)
(declare-fun g_s233_240 () U)
(declare-fun g_s234_241 () U)
(declare-fun g_s235_242 () U)
(declare-fun g_s236_243 () U)
(declare-fun g_s237_244 () U)
(declare-fun g_s238_245 () U)
(declare-fun g_s239_246 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_247 () U)
(declare-fun g_s241_248 () U)
(declare-fun g_s242_249 () U)
(declare-fun g_s243_250 () U)
(declare-fun g_s244_251 () U)
(declare-fun g_s245_252 () U)
(declare-fun g_s246_253 () U)
(declare-fun g_s247_254 () U)
(declare-fun g_s248_255 () U)
(declare-fun g_s249_256 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_257 () U)
(declare-fun g_s251_258 () U)
(declare-fun g_s252_259 () U)
(declare-fun g_s253_260 () U)
(declare-fun g_s254_261 () U)
(declare-fun g_s255_262 () U)
(declare-fun g_s256_263 () U)
(declare-fun g_s257_264 () U)
(declare-fun g_s258_265 () U)
(declare-fun g_s259_266 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_267 () U)
(declare-fun g_s261_268 () U)
(declare-fun g_s262_269 () U)
(declare-fun g_s263_270 () U)
(declare-fun g_s264_271 () U)
(declare-fun g_s265_272 () U)
(declare-fun g_s266_273 () U)
(declare-fun g_s267_274 () U)
(declare-fun g_s268_275 () U)
(declare-fun g_s269_276 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_277 () U)
(declare-fun g_s271_278 () U)
(declare-fun g_s272_279 () U)
(declare-fun g_s273_280 () U)
(declare-fun g_s274_281 () U)
(declare-fun g_s275_282 () U)
(declare-fun g_s276_283 () U)
(declare-fun g_s277_284 () U)
(declare-fun g_s278_285 () U)
(declare-fun g_s279_286 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_287 () U)
(declare-fun g_s281_288 () U)
(declare-fun g_s282_289 () U)
(declare-fun g_s283_290 () U)
(declare-fun g_s284_291 () U)
(declare-fun g_s285_292 () U)
(declare-fun g_s286_293 () U)
(declare-fun g_s287_294 () U)
(declare-fun g_s288_295 () U)
(declare-fun g_s289_296 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_297 () U)
(declare-fun g_s291_298 () U)
(declare-fun g_s292_299 () U)
(declare-fun g_s293_300 () U)
(declare-fun g_s294_301 () U)
(declare-fun g_s295_302 () U)
(declare-fun g_s296_303 () U)
(declare-fun g_s297_304 () U)
(declare-fun g_s298_305 () U)
(declare-fun g_s299_306 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_307 () U)
(declare-fun g_s301_308 () U)
(declare-fun g_s302_309 () U)
(declare-fun g_s303_310 () U)
(declare-fun g_s304_311 () U)
(declare-fun g_s305_312 () U)
(declare-fun g_s306_313 () U)
(declare-fun g_s307_314 () U)
(declare-fun g_s308_315 () U)
(declare-fun g_s309_316 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_317 () U)
(declare-fun g_s311_318 () U)
(declare-fun g_s312_319 () U)
(declare-fun g_s313_320 () U)
(declare-fun g_s314_321 () U)
(declare-fun g_s315_322 () U)
(declare-fun g_s316_323 () U)
(declare-fun g_s317_324 () U)
(declare-fun g_s318_325 () U)
(declare-fun g_s319_326 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_327 () U)
(declare-fun g_s321_328 () U)
(declare-fun g_s322_329 () U)
(declare-fun g_s323_330 () U)
(declare-fun g_s324_331 () U)
(declare-fun g_s325_332 () U)
(declare-fun g_s326_333 () U)
(declare-fun g_s327_334 () U)
(declare-fun g_s328_335 () U)
(declare-fun g_s329_336 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_337 () U)
(declare-fun g_s331_338 () U)
(declare-fun g_s332_339 () U)
(declare-fun g_s332$1_343 () U)
(declare-fun g_s333_340 () U)
(declare-fun g_s333$1_344 () U)
(declare-fun g_s334_341 () U)
(declare-fun g_s335_342 () U)
(declare-fun g_s339_345 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_346 () U)
(declare-fun g_s340$1_347 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_52 () U)
(declare-fun g_s51_51 () U)
(declare-fun g_s52_54 () U)
(declare-fun g_s53_53 () U)
(declare-fun g_s54_56 () U)
(declare-fun g_s55_55 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_62 () U)
(declare-fun g_s59_63 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_64 () U)
(declare-fun g_s61_65 () U)
(declare-fun g_s62_66 () U)
(declare-fun g_s63_67 () U)
(declare-fun g_s64_68 () U)
(declare-fun g_s65_69 () U)
(declare-fun g_s66_70 () U)
(declare-fun g_s67_72 () U)
(declare-fun g_s68_73 () U)
(declare-fun g_s69_74 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_75 () U)
(declare-fun g_s71_76 () U)
(declare-fun g_s72_77 () U)
(declare-fun g_s73_78 () U)
(declare-fun g_s74_79 () U)
(declare-fun g_s75_80 () U)
(declare-fun g_s76_81 () U)
(declare-fun g_s77_82 () U)
(declare-fun g_s78_83 () U)
(declare-fun g_s79_84 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_85 () U)
(declare-fun g_s81_86 () U)
(declare-fun g_s82_87 () U)
(declare-fun g_s83_89 () U)
(declare-fun g_s84_90 () U)
(declare-fun g_s85_91 () U)
(declare-fun g_s86_92 () U)
(declare-fun g_s87_93 () U)
(declare-fun g_s88_94 () U)
(declare-fun g_s89_95 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_96 () U)
(declare-fun g_s91_97 () U)
(declare-fun g_s92_98 () U)
(declare-fun g_s93_99 () U)
(declare-fun g_s94_100 () U)
(declare-fun g_s95_101 () U)
(declare-fun g_s96_102 () U)
(declare-fun g_s97_103 () U)
(declare-fun g_s98_104 () U)
(declare-fun g_s99_105 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s5_6 g_s4_5))) (= g_s6_7 (SET (mapplet g_s8_9 g_s7_8))) (= g_s9_10 (SET (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 g_s10_11)))))))))) (= g_s19_20 (SET (mapplet g_s21_22 g_s20_21))) (= g_s22_23 (SET (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 g_s23_24)))))))))) (= g_s32_33 (SET (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 (mapplet g_s45_46 (mapplet g_s44_45 (mapplet g_s43_44 (mapplet g_s42_43 (mapplet g_s41_42 (mapplet g_s40_41 (mapplet g_s39_40 (mapplet g_s38_39 (mapplet g_s37_38 (mapplet g_s36_37 (mapplet g_s35_36 (mapplet g_s34_35 g_s33_34)))))))))))))))))) (mem g_s50_52 g_s51_51) (mem g_s52_54 g_s53_53) (mem g_s54_56 g_s55_55) (mem g_s56_57 g_s55_55) (mem g_s57_58 g_s55_55) (= g_s50_52 e59) (= g_s52_54 e60) (= g_s54_56 e61) (and (|>=i| g_s56_57 e0) (|<=i| g_s56_57 g_s54_56)) (and (|>=i| g_s57_58 e0) (|<=i| g_s57_58 g_s54_56)) (not (= g_s56_57 g_s57_58)) (= g_s58_62 (SET (mapplet g_s57_58 g_s56_57))) (= g_s59_63 (SET (mapplet (mapplet FALSE g_s57_58) (mapplet TRUE g_s56_57)))) (= g_s51_51 (interval e0 e59)) (= g_s53_53 (interval e0 e60)) (= g_s55_55 (interval e0 e61)) (mem g_s60_64 g_s55_55) (mem g_s61_65 g_s55_55) (mem g_s62_66 g_s53_53) (mem g_s63_67 g_s53_53) (mem g_s64_68 g_s51_51) (mem g_s65_69 g_s51_51) (mem g_s66_70 NATURAL) (|<=i| e71 g_s66_70) (mem g_s67_72 NATURAL) (|<=i| e71 g_s67_72) (mem g_s68_73 NATURAL) (|<=i| e71 g_s68_73) (|<=i| g_s66_70 g_s68_73) (mem g_s69_74 g_s55_55) (mem g_s70_75 g_s55_55) (= g_s70_75 (|+i| g_s69_74 g_s66_70)) (mem g_s71_76 g_s55_55) (= g_s71_76 (|+i| g_s69_74 g_s67_72)) (mem g_s72_77 g_s55_55) (= g_s72_77 (|+i| g_s69_74 g_s68_73)) (mem g_s73_78 g_s53_53) (mem g_s74_79 g_s53_53) (mem g_s75_80 g_s55_55) (|<=i| g_s73_78 g_s74_79) (mem g_s76_81 g_s51_51) (mem g_s77_82 g_s51_51) (mem g_s78_83 g_s51_51) (mem g_s79_84 g_s51_51) (mem g_s80_85 g_s51_51) (mem g_s81_86 g_s55_55) (|<=i| e71 g_s81_86) (mem g_s82_87 g_s55_55) (= g_s82_87 (|-i| g_s81_86 e88)) (mem g_s83_89 NATURAL1) (mem g_s84_90 NATURAL1) (mem g_s85_91 NATURAL1) (mem g_s86_92 NATURAL1) (mem g_s87_93 NATURAL1) (mem g_s88_94 NATURAL1) (mem g_s89_95 NATURAL1) (mem g_s90_96 NATURAL1) (mem g_s91_97 g_s55_55) (mem g_s92_98 g_s55_55) (= g_s92_98 (|+i| g_s91_97 g_s83_89)) (mem g_s93_99 g_s55_55) (mem g_s94_100 g_s55_55) (= g_s94_100 (|+i| g_s93_99 g_s84_90)) (mem g_s95_101 g_s55_55) (= g_s95_101 (|+i| g_s93_99 g_s85_91)) (mem g_s96_102 g_s55_55) (= g_s96_102 (|+i| g_s93_99 g_s86_92)) (mem g_s97_103 g_s55_55) (= g_s97_103 (|+i| g_s93_99 g_s87_93)) (mem g_s98_104 g_s55_55) (= g_s98_104 (|+i| g_s93_99 g_s88_94)) (mem g_s99_105 g_s55_55) (= g_s99_105 (|+i| g_s93_99 g_s89_95)) (mem g_s100_106 g_s55_55) (= g_s100_106 (|+i| g_s93_99 g_s90_96)) (mem g_s101_107 g_s51_51) (mem g_s102_108 g_s51_51) (mem g_s103_109 g_s51_51) (mem g_s104_110 g_s51_51) (mem g_s105_111 g_s51_51) (mem g_s106_112 g_s51_51) (mem g_s107_113 g_s51_51) (mem g_s108_114 g_s51_51) (mem g_s109_115 g_s51_51) (mem g_s110_116 g_s51_51) (mem g_s111_117 g_s51_51) (mem g_s112_118 g_s51_51) (mem g_s113_119 g_s51_51) (mem g_s114_120 g_s51_51) (mem g_s115_121 g_s51_51) (mem g_s116_122 g_s51_51) (mem g_s117_123 g_s51_51) (mem g_s118_124 g_s51_51) (mem g_s119_125 g_s51_51) (mem g_s120_126 g_s55_55) (|<=i| e0 g_s120_126) (|<=i| e71 g_s120_126) (mem g_s121_127 g_s55_55) (= g_s121_127 (|-i| g_s120_126 e88)) (mem g_s122_128 g_s55_55) (mem g_s123_129 g_s55_55) (= g_s123_129 (|-i| g_s122_128 e88)) (mem g_s124_130 g_s55_55) (mem g_s125_131 g_s55_55) (= g_s125_131 (|-i| g_s124_130 e88)) (mem g_s126_132 g_s53_53) (mem g_s127_133 g_s53_53) (mem g_s128_134 g_s53_53) (mem g_s129_135 g_s53_53) (not (= g_s128_134 g_s129_135)) (mem g_s130_136 g_s53_53) (mem g_s131_137 g_s53_53) (mem g_s132_138 g_s53_53) (mem g_s133_139 NATURAL) (= g_s133_139 (|-i| g_s131_137 g_s132_138)) (mem g_s134_140 g_s53_53) (mem g_s135_141 g_s53_53) (mem g_s136_142 g_s53_53) (mem g_s137_143 g_s53_53) (mem g_s138_144 g_s55_55) (mem g_s139_145 g_s55_55) (= g_s139_145 (|-i| g_s138_144 e88)) (= g_s124_130 (|*i| g_s120_126 g_s138_144)) (|<=i| e88 g_s138_144) (|<i| g_s138_144 g_s54_56) (mem g_s140_146 g_s55_55) (mem g_s141_147 g_s55_55) (mem g_s142_148 g_s51_51) (mem g_s143_149 g_s51_51) (mem g_s144_150 g_s51_51) (mem g_s145_151 g_s51_51) (mem g_s146_152 g_s51_51) (mem g_s147_153 g_s51_51) (= g_s147_153 (|-i| g_s146_152 e88)) (mem g_s148_154 g_s51_51) (mem g_s149_155 g_s51_51) (= g_s149_155 (|-i| g_s148_154 e88)) (mem g_s150_156 g_s55_55) (mem g_s151_157 g_s55_55) (mem g_s152_158 g_s51_51) (mem g_s153_159 g_s55_55) (|<=i| g_s153_159 g_s82_87) (mem g_s154_160 g_s55_55) (|<=i| g_s154_160 g_s82_87) (mem g_s155_161 g_s55_55) (|<=i| g_s155_161 g_s151_157) (mem g_s156_162 g_s55_55) (|<=i| g_s156_162 g_s151_157) (mem g_s157_163 g_s55_55) (|<=i| g_s157_163 g_s151_157) (mem g_s158_164 g_s55_55) (|<=i| g_s158_164 g_s151_157) (mem g_s159_165 g_s55_55) (mem g_s160_166 g_s55_55) (mem g_s161_167 g_s55_55) (mem g_s162_168 g_s55_55) (not (= g_s159_165 g_s160_166)) (not (= g_s159_165 g_s161_167)) (not (= g_s159_165 g_s162_168)) (not (= g_s160_166 g_s161_167)) (not (= g_s160_166 g_s162_168)) (not (= g_s161_167 g_s162_168)) (= (interval e0 g_s121_127) (SET (mapplet g_s162_168 (mapplet g_s161_167 (mapplet g_s160_166 g_s159_165))))) (mem g_s163_169 g_s55_55) (= g_s163_169 (|*i| g_s120_126 g_s120_126)) (mem g_s164_170 g_s55_55) (= g_s164_170 (|-i| g_s163_169 e88)) (mem g_s165_171 g_s51_51) (mem g_s166_172 g_s51_51) (mem g_s167_173 g_s51_51) (mem g_s168_174 g_s51_51) (mem g_s169_175 g_s55_55) (mem g_s170_176 g_s55_55) (mem g_s171_177 g_s55_55) (mem g_s172_178 g_s55_55) (mem g_s173_179 g_s55_55) (mem g_s174_180 g_s55_55) (mem g_s175_181 g_s55_55) (mem g_s176_182 g_s55_55) (mem g_s177_183 g_s55_55) (mem g_s178_184 g_s55_55) (= g_s179_185 (SET (mapplet (|+i| g_s161_167 e88) (|+i| g_s160_166 e88)))) (= g_s180_186 (SET (mapplet (|+i| g_s162_168 e88) (|+i| g_s159_165 e88)))) (mem g_s181_187 g_s55_55) (|<i| (|+i| g_s181_187 g_s120_126) g_s54_56) (mem g_s182_188 g_s55_55) (= g_s182_188 (|+i| g_s181_187 g_s120_126)) (mem g_s183_189 g_s55_55) (mem g_s184_190 g_s55_55) (|<i| (|+i| g_s184_190 g_s120_126) g_s54_56) (mem g_s185_191 g_s55_55) (= g_s185_191 (|+i| g_s184_190 g_s120_126)) (mem g_s186_192 g_s55_55) (= g_s186_192 (|-i| g_s185_191 e88)) (mem g_s187_193 g_s55_55) (= g_s187_193 (|-i| g_s185_191 e71)) (mem g_s188_194 g_s55_55) (|<i| (|+i| g_s188_194 g_s120_126) g_s54_56) (mem g_s189_195 g_s55_55) (= g_s189_195 (|+i| g_s188_194 g_s120_126)) (mem g_s190_196 g_s55_55) (= g_s190_196 (|-i| g_s189_195 e88)) (mem g_s191_197 g_s55_55) (= g_s191_197 (|-i| g_s189_195 e71)) (mem g_s192_198 g_s55_55) (mem g_s193_199 g_s55_55) (mem g_s194_200 g_s55_55) (mem g_s195_201 g_s55_55) (mem g_s196_202 NATURAL1) (mem g_s197_203 NATURAL1) (mem g_s198_204 NATURAL1) (mem g_s199_205 g_s55_55) (|<i| g_s199_205 g_s54_56) (= g_s199_205 (|+i| g_s195_201 g_s196_202)) (mem g_s200_206 g_s55_55) (|<i| g_s200_206 g_s54_56) (= g_s200_206 (|+i| g_s195_201 g_s197_203)) (mem g_s201_207 g_s55_55) (|<i| g_s201_207 g_s54_56) (= g_s201_207 (|+i| g_s195_201 g_s198_204)) (mem g_s202_208 g_s55_55) (mem g_s203_209 NATURAL1) (mem g_s204_210 NATURAL1) (mem g_s205_211 NATURAL1) (mem g_s206_212 g_s55_55) (|<i| g_s206_212 g_s54_56) (= g_s206_212 (|+i| g_s202_208 g_s203_209)) (mem g_s207_213 g_s55_55) (|<i| g_s207_213 g_s54_56) (= g_s207_213 (|+i| g_s202_208 g_s204_210)) (mem g_s208_214 g_s55_55) (|<i| g_s208_214 g_s54_56) (= g_s208_214 (|+i| g_s202_208 g_s205_211)) (mem g_s209_215 g_s55_55) (mem g_s210_216 g_s55_55) (mem g_s211_217 g_s55_55) (and (|>=i| g_s211_217 e0) (|<=i| g_s211_217 e218)) (mem g_s212_219 g_s53_53) (|<=i| g_s212_219 g_s52_54) (mem g_s213_220 g_s55_55) (and (|>=i| g_s213_220 e0) (|<=i| g_s213_220 e218)) (mem g_s214_221 g_s55_55) (mem g_s215_222 g_s55_55) (mem g_s216_223 g_s55_55) (mem g_s217_224 NATURAL) (|<=i| e88 g_s217_224) (mem g_s218_225 NATURAL) (|<=i| e88 g_s218_225) (mem g_s219_226 NATURAL) (|<=i| e88 g_s219_226) (mem g_s220_227 NATURAL) (|<=i| e88 g_s220_227) (mem g_s221_228 g_s53_53) (|<=i| g_s221_228 g_s52_54) (mem g_s222_229 g_s55_55) (and (|>=i| g_s222_229 e0) (|<=i| g_s222_229 e218)) (mem g_s223_230 g_s53_53) (|<=i| g_s223_230 g_s52_54) (mem g_s224_231 g_s55_55) (and (|>=i| g_s224_231 e0) (|<=i| g_s224_231 e218)) (mem g_s225_232 g_s53_53) (|<=i| g_s225_232 g_s52_54) (mem g_s226_233 g_s55_55) (and (|>=i| g_s226_233 e0) (|<=i| g_s226_233 e218)) (mem g_s227_234 g_s55_55) (mem g_s228_235 g_s55_55) (and (|>=i| g_s228_235 e0) (|<=i| g_s228_235 e218)) (mem g_s229_236 g_s53_53) (mem g_s230_237 g_s55_55) (mem g_s231_238 g_s53_53) (mem g_s232_239 g_s53_53) (mem g_s233_240 g_s53_53) (mem g_s234_241 g_s53_53) (mem g_s235_242 g_s55_55) (mem g_s236_243 g_s55_55) (= g_s236_243 (|+i| g_s235_242 g_s120_126)) (|<i| g_s236_243 g_s54_56) (mem g_s237_244 g_s55_55) (|<=i| (|+i| g_s237_244 e71) g_s54_56) (mem g_s238_245 g_s55_55) (= g_s238_245 (|+i| g_s237_244 g_s120_126)) (|<i| g_s238_245 g_s54_56) (mem g_s239_246 g_s55_55) (= g_s239_246 (|-i| g_s238_245 e88)) (mem g_s240_247 g_s55_55) (mem g_s241_248 g_s55_55) (= g_s241_248 (|+i| g_s240_247 g_s217_224)) (mem g_s242_249 g_s55_55) (= g_s242_249 (|+i| g_s240_247 g_s218_225)) (mem g_s243_250 g_s55_55) (= g_s243_250 (|+i| g_s240_247 g_s219_226)) (mem g_s244_251 g_s55_55) (= g_s244_251 (|+i| g_s240_247 g_s220_227)) (mem g_s245_252 g_s55_55) (mem g_s246_253 g_s55_55) (mem g_s247_254 g_s55_55) (mem g_s248_255 NATURAL) (mem g_s249_256 NATURAL1) (|<=i| e88 g_s248_255) (= g_s248_255 (|-i| g_s246_253 g_s245_252)) (= g_s249_256 (|-i| g_s247_254 g_s245_252)) (mem g_s250_257 NATURAL) (mem g_s251_258 NATURAL) (mem g_s252_259 NATURAL) (mem g_s253_260 NATURAL) (|<=i| e88 g_s252_259) (mem g_s254_261 g_s55_55) (mem g_s255_262 g_s55_55) (mem g_s256_263 g_s55_55) (mem g_s257_264 g_s55_55) (mem g_s258_265 g_s55_55) (= g_s255_262 (|+i| g_s254_261 g_s250_257)) (= g_s256_263 (|+i| g_s254_261 g_s251_258)) (= g_s257_264 (|+i| g_s254_261 g_s252_259)) (= g_s258_265 (|+i| g_s254_261 g_s253_260)) (mem g_s259_266 g_s55_55) (mem g_s260_267 g_s55_55) (mem g_s261_268 g_s55_55) (mem g_s262_269 NATURAL1) (mem g_s263_270 NATURAL1) (= g_s262_269 (|-i| (|-i| g_s260_267 g_s259_266) e88)) (= g_s263_270 (|-i| (|-i| g_s261_268 g_s259_266) e88)) (mem g_s264_271 g_s51_51) (mem g_s265_272 g_s55_55) (mem g_s266_273 g_s55_55) (mem g_s267_274 NATURAL1) (mem g_s268_275 NATURAL1) (mem g_s269_276 NATURAL1) (= g_s267_274 (|-i| g_s264_271 g_s259_266)) (= g_s268_275 (|-i| g_s265_272 g_s259_266)) (= g_s269_276 (|-i| (|-i| g_s266_273 g_s259_266) e88)) (mem g_s270_277 NATURAL1) (mem g_s271_278 g_s55_55) (mem g_s272_279 g_s55_55) (mem g_s273_280 g_s51_51) (= g_s270_277 (|-i| (|-i| g_s273_280 g_s271_278) e88)) (mem g_s274_281 NATURAL) (mem g_s275_282 NATURAL1) (mem g_s276_283 NATURAL) (mem g_s277_284 NATURAL) (mem g_s278_285 NATURAL) (mem g_s279_286 NATURAL) (mem g_s280_287 NATURAL) (mem g_s281_288 NATURAL) (mem g_s282_289 NATURAL) (mem g_s283_290 NATURAL) (mem g_s284_291 g_s55_55) (|<=i| e88 g_s284_291) (mem g_s285_292 g_s55_55) (= g_s285_292 (|+i| g_s284_291 g_s282_289)) (mem g_s286_293 g_s55_55) (= g_s286_293 (|+i| g_s284_291 g_s283_290)) (mem g_s287_294 g_s55_55) (= g_s287_294 (|+i| g_s284_291 g_s277_284)) (mem g_s288_295 g_s55_55) (= g_s288_295 (|+i| g_s284_291 g_s276_283)) (mem g_s289_296 g_s55_55) (= g_s289_296 (|+i| g_s284_291 g_s278_285)) (mem g_s290_297 g_s55_55) (= g_s290_297 (|+i| g_s284_291 g_s281_288)) (mem g_s291_298 g_s55_55) (= g_s291_298 (|+i| g_s284_291 g_s279_286)) (mem g_s292_299 g_s55_55) (= g_s292_299 (|+i| g_s284_291 g_s280_287)) (mem g_s293_300 g_s51_51) (= g_s293_300 (|+i| g_s284_291 g_s274_281)) (mem g_s294_301 g_s55_55) (= g_s294_301 (|+i| g_s284_291 g_s275_282)) (mem g_s295_302 (|-->| (set_prod g_s22_23 g_s22_23) g_s55_55)) (= g_s296_303 (image (inverse g_s295_302) (SET g_s56_57))) (mem g_s297_304 (|-->| (set_prod g_s22_23 g_s22_23) (set_diff g_s53_53 (SET e60)))) (mem g_s298_305 (|<->| g_s22_23 g_s22_23)) (mem g_s299_306 (|-->| (set_prod g_s22_23 g_s22_23) g_s53_53)) (= g_s299_306 (|<+| g_s297_304 (set_prod g_s298_305 (SET e60)))) (mem g_s296_303 (|<->| g_s22_23 g_s22_23))))
(define-fun |def_seext| () Bool (and (mem g_s300_307 (|-->| (interval e0 g_s150_156) g_s55_55)) (mem g_s301_308 (|-->| (interval e0 g_s151_157) g_s55_55)) (mem g_s302_309 (|-->| (interval e0 g_s121_127) (|-->| (interval e0 g_s123_129) g_s53_53))) (mem g_s303_310 (|-->| (interval e0 g_s121_127) g_s53_53)) (mem g_s304_311 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s305_312 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s306_313 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s307_314 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s308_315 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s309_316 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s310_317 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s311_318 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s312_319 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s313_320 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s314_321 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s315_322 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s316_323 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s317_324 (|-->| (interval e0 g_s121_127) g_s53_53)) (mem g_s318_325 (|-->| (interval e0 g_s121_127) g_s53_53)) (mem g_s319_326 (|-->| (interval e0 g_s121_127) g_s53_53)) (mem g_s320_327 (|-->| (interval e0 g_s121_127) g_s55_55)) (mem g_s59_63 (|+->| BOOL g_s55_55)) (mem g_s59_63 (|+->| BOOL g_s53_53)) (mem g_s59_63 (|+->| BOOL g_s51_51))))
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (subset g_s321_328 (interval e88 g_s120_126)) (subset g_s322_329 (interval e88 g_s120_126)) (subset g_s323_330 (interval e88 g_s120_126)) (mem g_s324_331 (|-->| (interval e88 g_s120_126) g_s55_55)) (mem g_s325_332 (|-->| (interval e88 g_s120_126) g_s55_55)) (mem g_s326_333 (|-->| (interval e88 g_s120_126) g_s55_55)) (mem g_s327_334 (|-->| (interval e88 g_s120_126) g_s55_55)) (subset g_s328_335 (interval e88 g_s120_126)) (subset g_s329_336 (interval e88 g_s120_126)) (subset g_s330_337 (interval e88 g_s120_126)) (subset g_s331_338 (interval e88 g_s120_126)) (mem g_s332_339 (|+->| (interval e88 g_s120_126) g_s53_53)) (mem g_s333_340 (|+->| (interval e88 g_s120_126) g_s53_53)) (subset g_s334_341 (interval e88 g_s120_126)) (mem g_s335_342 (|-->| (interval e0 g_s121_127) g_s53_53))))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s332$1_343 (|+->| (interval e88 g_s120_126) g_s53_53)))
(define-fun lh_2 () Bool (mem g_s333$1_344 (|+->| (interval e88 g_s120_126) g_s53_53)))
; PO 1 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (set_prod (interval e0 g_s121_127) (SET e0)) (|-->| (interval e0 g_s121_127) g_s53_53)))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (set_prod (interval e88 g_s120_126) (SET g_s174_180)) (|-->| (interval e88 g_s120_126) g_s55_55)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (set_prod (interval e88 g_s120_126) (SET g_s171_177)) (|-->| (interval e88 g_s120_126) g_s55_55)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (set_prod (interval e88 g_s120_126) (SET g_s177_183)) (|-->| (interval e88 g_s120_126) g_s55_55)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (=> (and lh_1 lh_2) (subset empty (interval e88 g_s120_126)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
(assert (mem g_s340_346 g_s55_55))
(define-fun lh_1 () Bool (or (= g_s340$1_347 g_s56_57) (= g_s340$1_347 g_s57_58)))
(define-fun lh_2 () Bool (= g_s340$1_347 g_s56_57))
(define-fun lh_3 () Bool (or (= (apply g_s304_311 g_s339_345) g_s56_57) (= (apply g_s304_311 g_s339_345) g_s57_58)))
(define-fun lh_4 () Bool (or (= (apply g_s305_312 g_s339_345) g_s56_57) (= (apply g_s305_312 g_s339_345) g_s57_58)))
(define-fun lh_5 () Bool (or (= (apply g_s306_313 g_s339_345) g_s56_57) (= (apply g_s306_313 g_s339_345) g_s57_58)))
(define-fun lh_6 () Bool (or (= (apply g_s307_314 g_s339_345) g_s56_57) (= (apply g_s307_314 g_s339_345) g_s57_58)))
(define-fun lh_7 () Bool (or (= (apply g_s310_317 g_s339_345) g_s56_57) (= (apply g_s310_317 g_s339_345) g_s57_58)))
(define-fun lh_8 () Bool (or (= (apply g_s320_327 g_s339_345) g_s56_57) (= (apply g_s320_327 g_s339_345) g_s57_58)))
(define-fun lh_9 () Bool (or (= g_s339_345 g_s160_166) (= g_s339_345 g_s161_167)))
(define-fun lh_10 () Bool (or (= (apply g_s313_320 g_s339_345) g_s56_57) (= (apply g_s313_320 g_s339_345) g_s57_58)))
(define-fun lh_11 () Bool (or (= (apply g_s314_321 g_s339_345) g_s56_57) (= (apply g_s314_321 g_s339_345) g_s57_58)))
(define-fun lh_12 () Bool (or (= (apply g_s315_322 g_s339_345) g_s56_57) (= (apply g_s315_322 g_s339_345) g_s57_58)))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s304_311 (|+->| (dom g_s304_311) (ran g_s304_311))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s339_345 (dom g_s304_311)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s305_312 (|+->| (dom g_s305_312) (ran g_s305_312))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s339_345 (dom g_s305_312)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s306_313 (|+->| (dom g_s306_313) (ran g_s306_313))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s339_345 (dom g_s306_313)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s307_314 (|+->| (dom g_s307_314) (ran g_s307_314))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s339_345 (dom g_s307_314)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s310_317 (|+->| (dom g_s310_317) (ran g_s310_317))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s339_345 (dom g_s310_317)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s320_327 (|+->| (dom g_s320_327) (ran g_s320_327))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s339_345 (dom g_s320_327)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem g_s313_320 (|+->| (dom g_s313_320) (ran g_s313_320))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem g_s339_345 (dom g_s313_320)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem g_s314_321 (|+->| (dom g_s314_321) (ran g_s314_321))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem g_s339_345 (dom g_s314_321)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s315_322 (|+->| (dom g_s315_322) (ran g_s315_322))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s339_345 (dom g_s315_322)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s316_323 (|+->| (dom g_s316_323) (ran g_s316_323))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s339_345 (dom g_s316_323)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s339_345 g_s55_55))
(define-fun lh_2 () Bool (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
(define-fun lh_3 () Bool (or (= (apply g_s304_311 g_s339_345) g_s56_57) (= (apply g_s304_311 g_s339_345) g_s57_58)))
(define-fun lh_4 () Bool (or (= (apply g_s305_312 g_s339_345) g_s56_57) (= (apply g_s305_312 g_s339_345) g_s57_58)))
(define-fun lh_5 () Bool (or (= (apply g_s306_313 g_s339_345) g_s56_57) (= (apply g_s306_313 g_s339_345) g_s57_58)))
(define-fun lh_6 () Bool (or (= (apply g_s307_314 g_s339_345) g_s56_57) (= (apply g_s307_314 g_s339_345) g_s57_58)))
(define-fun lh_7 () Bool (or (= (apply g_s310_317 g_s339_345) g_s56_57) (= (apply g_s310_317 g_s339_345) g_s57_58)))
(define-fun lh_8 () Bool (or (= (apply g_s320_327 g_s339_345) g_s56_57) (= (apply g_s320_327 g_s339_345) g_s57_58)))
(define-fun lh_9 () Bool (or (= g_s339_345 g_s160_166) (= g_s339_345 g_s161_167)))
(define-fun lh_10 () Bool (or (= (apply g_s313_320 g_s339_345) g_s56_57) (= (apply g_s313_320 g_s339_345) g_s57_58)))
(define-fun lh_11 () Bool (or (= (apply g_s314_321 g_s339_345) g_s56_57) (= (apply g_s314_321 g_s339_345) g_s57_58)))
(define-fun lh_12 () Bool (or (= (apply g_s315_322 g_s339_345) g_s56_57) (= (apply g_s315_322 g_s339_345) g_s57_58)))
; PO 1 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s304_311 (|+->| (dom g_s304_311) (ran g_s304_311))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s339_345 (dom g_s304_311)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s305_312 (|+->| (dom g_s305_312) (ran g_s305_312))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s339_345 (dom g_s305_312)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s306_313 (|+->| (dom g_s306_313) (ran g_s306_313))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s339_345 (dom g_s306_313)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s307_314 (|+->| (dom g_s307_314) (ran g_s307_314))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (mem g_s339_345 (dom g_s307_314)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s310_317 (|+->| (dom g_s310_317) (ran g_s310_317))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (mem g_s339_345 (dom g_s310_317)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s320_327 (|+->| (dom g_s320_327) (ran g_s320_327))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7) (mem g_s339_345 (dom g_s320_327)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem g_s313_320 (|+->| (dom g_s313_320) (ran g_s313_320))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9) (mem g_s339_345 (dom g_s313_320)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem g_s314_321 (|+->| (dom g_s314_321) (ran g_s314_321))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10) (mem g_s339_345 (dom g_s314_321)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s315_322 (|+->| (dom g_s315_322) (ran g_s315_322))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11) (mem g_s339_345 (dom g_s315_322)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s316_323 (|+->| (dom g_s316_323) (ran g_s316_323))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12) (mem g_s339_345 (dom g_s316_323)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
(assert (mem g_s340_346 g_s55_55))
; PO 1 in group 3
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) g_s321_328)) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
(assert (mem g_s340_346 g_s55_55))
; PO 1 in group 4
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) g_s322_329)) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
(assert (or (= g_s339_345 g_s160_166) (= g_s339_345 g_s161_167)))
(assert (mem g_s340_346 g_s55_55))
; PO 1 in group 5
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) g_s330_337)) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
(assert (or (= g_s339_345 g_s160_166) (= g_s339_345 g_s161_167)))
(assert (mem g_s340_346 g_s55_55))
; PO 1 in group 6
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) g_s329_336)) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
(assert (or (= g_s339_345 g_s160_166) (= g_s339_345 g_s161_167)))
(assert (mem g_s340_346 g_s55_55))
; PO 1 in group 7
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) g_s331_338)) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
(assert (or (= g_s339_345 g_s160_166) (= g_s339_345 g_s161_167)))
(assert (mem g_s340_346 g_s55_55))
; PO 1 in group 8
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) g_s328_335)) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s340_346 g_s55_55))
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
; PO 1 in group 9
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) (dom g_s332_339))) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s340_346 g_s53_53))
(assert (mem g_s339_345 g_s55_55))
(assert (mem (|+i| g_s339_345 e88) (dom g_s332_339)))
; PO 1 in group 10
(assert (not (mem g_s332_339 (|+->| (dom g_s332_339) (ran g_s332_339)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s340_346 g_s55_55))
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
; PO 1 in group 11
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) (dom g_s333_340))) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s340_346 g_s55_55))
(assert (mem g_s339_345 g_s55_55))
(assert (and (|>=i| g_s339_345 e0) (|<=i| g_s339_345 g_s121_127)))
; PO 1 in group 12
(push 1)
(assert (not (mem g_s59_63 (|+->| (dom g_s59_63) (ran g_s59_63)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 12
(push 1)
(assert (not (mem (bool (mem (|+i| g_s339_345 e88) g_s334_341)) (dom g_s59_63))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s340_346 g_s53_53))
(assert (mem g_s339_345 g_s55_55))
(assert (mem (|+i| g_s339_345 e88) (dom g_s333_340)))
; PO 1 in group 13
(assert (not (mem g_s333_340 (|+->| (dom g_s333_340) (ran g_s333_340)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s340_346 g_s55_55))
(assert (mem g_s339_345 g_s55_55))
(assert (mem (|+i| g_s339_345 e88) (dom g_s325_332)))
; PO 1 in group 14
(assert (not (mem g_s325_332 (|+->| (dom g_s325_332) (ran g_s325_332)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s340_346 g_s55_55))
(assert (mem g_s339_345 g_s55_55))
(assert (mem (|+i| g_s339_345 e88) (dom g_s326_333)))
; PO 1 in group 15
(assert (not (mem g_s326_333 (|+->| (dom g_s326_333) (ran g_s326_333)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)