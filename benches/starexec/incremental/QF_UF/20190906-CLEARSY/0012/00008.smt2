(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e28 () U)
(declare-fun e0 () U)
(declare-fun e60 () U)
(declare-fun e43 () U)
(declare-fun e30 () U)
(declare-fun e29 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_106 () U)
(declare-fun g_s101_107 () U)
(declare-fun g_s102_108 () U)
(declare-fun g_s103_109 () U)
(declare-fun g_s104_110 () U)
(declare-fun g_s105_111 () U)
(declare-fun g_s106_112 () U)
(declare-fun g_s107_113 () U)
(declare-fun g_s108_114 () U)
(declare-fun g_s109_115 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_116 () U)
(declare-fun g_s111_117 () U)
(declare-fun g_s112_118 () U)
(declare-fun g_s113_119 () U)
(declare-fun g_s114_120 () U)
(declare-fun g_s115_121 () U)
(declare-fun g_s116_122 () U)
(declare-fun g_s117_123 () U)
(declare-fun g_s118_124 () U)
(declare-fun g_s119_125 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_126 () U)
(declare-fun g_s121_127 () U)
(declare-fun g_s122_128 () U)
(declare-fun g_s123_129 () U)
(declare-fun g_s124_130 () U)
(declare-fun g_s125_131 () U)
(declare-fun g_s126_132 () U)
(declare-fun g_s127_133 () U)
(declare-fun g_s128_134 () U)
(declare-fun g_s129_135 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_136 () U)
(declare-fun g_s131_137 () U)
(declare-fun g_s132_138 () U)
(declare-fun g_s133_139 () U)
(declare-fun g_s134_140 () U)
(declare-fun g_s135_141 () U)
(declare-fun g_s136_142 () U)
(declare-fun g_s137_143 () U)
(declare-fun g_s138_144 () U)
(declare-fun g_s139_145 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_146 () U)
(declare-fun g_s141_147 () U)
(declare-fun g_s142_148 () U)
(declare-fun g_s143_149 () U)
(declare-fun g_s144_150 () U)
(declare-fun g_s145_151 () U)
(declare-fun g_s146_152 () U)
(declare-fun g_s147_153 () U)
(declare-fun g_s148_154 () U)
(declare-fun g_s149_155 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_156 () U)
(declare-fun g_s151_157 () U)
(declare-fun g_s152_158 () U)
(declare-fun g_s153_159 () U)
(declare-fun g_s154_160 () U)
(declare-fun g_s155_161 () U)
(declare-fun g_s155$1_171 () U)
(declare-fun g_s156_162 () U)
(declare-fun g_s156$1_172 () U)
(declare-fun g_s157_163 () U)
(declare-fun g_s157$1_174 () U)
(declare-fun g_s158_164 () U)
(declare-fun g_s158$1_175 () U)
(declare-fun g_s159_165 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_166 () U)
(declare-fun g_s161_167 () U)
(declare-fun g_s162_168 () U)
(declare-fun g_s163_169 () U)
(declare-fun g_s163$1_176 () U)
(declare-fun g_s164_170 () U)
(declare-fun g_s164$1_173 () U)
(declare-fun g_s165$1_177 () U)
(declare-fun g_s166$1_178 () U)
(declare-fun g_s167$1_179 () U)
(declare-fun g_s168$1_180 () U)
(declare-fun g_s169$1_181 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170$1_182 () U)
(declare-fun g_s171$1_183 () U)
(declare-fun g_s175_184 () U)
(declare-fun g_s176_185 () U)
(declare-fun g_s177_186 () U)
(declare-fun g_s178_187 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s188_189 () U)
(declare-fun g_s188$1_188 () U)
(declare-fun g_s188$2_190 () U)
(declare-fun g_s19_21 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_20 () U)
(declare-fun g_s21_23 () U)
(declare-fun g_s22_22 () U)
(declare-fun g_s23_25 () U)
(declare-fun g_s24_24 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s27_31 () U)
(declare-fun g_s28_32 () U)
(declare-fun g_s29_33 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_34 () U)
(declare-fun g_s31_35 () U)
(declare-fun g_s32_36 () U)
(declare-fun g_s33_37 () U)
(declare-fun g_s34_38 () U)
(declare-fun g_s35_39 () U)
(declare-fun g_s36_40 () U)
(declare-fun g_s37_41 () U)
(declare-fun g_s38_42 () U)
(declare-fun g_s39_44 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_45 () U)
(declare-fun g_s41_46 () U)
(declare-fun g_s42_47 () U)
(declare-fun g_s43_48 () U)
(declare-fun g_s44_49 () U)
(declare-fun g_s45_50 () U)
(declare-fun g_s46_51 () U)
(declare-fun g_s47_52 () U)
(declare-fun g_s48_53 () U)
(declare-fun g_s49_54 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_55 () U)
(declare-fun g_s51_56 () U)
(declare-fun g_s52_57 () U)
(declare-fun g_s53_58 () U)
(declare-fun g_s54_59 () U)
(declare-fun g_s55_61 () U)
(declare-fun g_s56_62 () U)
(declare-fun g_s57_63 () U)
(declare-fun g_s58_64 () U)
(declare-fun g_s59_65 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_66 () U)
(declare-fun g_s61_67 () U)
(declare-fun g_s62_68 () U)
(declare-fun g_s63_69 () U)
(declare-fun g_s64_70 () U)
(declare-fun g_s65_71 () U)
(declare-fun g_s66_72 () U)
(declare-fun g_s67_73 () U)
(declare-fun g_s68_74 () U)
(declare-fun g_s69_75 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_76 () U)
(declare-fun g_s71_77 () U)
(declare-fun g_s72_78 () U)
(declare-fun g_s73_79 () U)
(declare-fun g_s74_80 () U)
(declare-fun g_s75_81 () U)
(declare-fun g_s76_82 () U)
(declare-fun g_s77_83 () U)
(declare-fun g_s78_84 () U)
(declare-fun g_s79_85 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_86 () U)
(declare-fun g_s81_87 () U)
(declare-fun g_s82_88 () U)
(declare-fun g_s83_89 () U)
(declare-fun g_s84_90 () U)
(declare-fun g_s85_91 () U)
(declare-fun g_s86_92 () U)
(declare-fun g_s87_93 () U)
(declare-fun g_s88_94 () U)
(declare-fun g_s89_95 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_96 () U)
(declare-fun g_s91_97 () U)
(declare-fun g_s92_98 () U)
(declare-fun g_s93_99 () U)
(declare-fun g_s94_100 () U)
(declare-fun g_s95_101 () U)
(declare-fun g_s96_102 () U)
(declare-fun g_s97_103 () U)
(declare-fun g_s98_104 () U)
(declare-fun g_s99_105 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s5_6 g_s4_5))) (= g_s6_7 (SET (mapplet g_s8_9 g_s7_8))) (= g_s9_10 (SET (mapplet g_s18_19 (mapplet g_s17_18 (mapplet g_s16_17 (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 g_s10_11)))))))))) (mem g_s19_21 g_s20_20) (mem g_s21_23 g_s22_22) (mem g_s23_25 g_s24_24) (mem g_s25_26 g_s24_24) (mem g_s26_27 g_s24_24) (= g_s19_21 e28) (= g_s21_23 e29) (= g_s23_25 e30) (and (|>=i| g_s25_26 e0) (|<=i| g_s25_26 g_s23_25)) (and (|>=i| g_s26_27 e0) (|<=i| g_s26_27 g_s23_25)) (not (= g_s25_26 g_s26_27)) (= g_s27_31 (SET (mapplet g_s26_27 g_s25_26))) (= g_s28_32 (SET (mapplet (mapplet FALSE g_s26_27) (mapplet TRUE g_s25_26)))) (= g_s20_20 (interval e0 e28)) (= g_s22_22 (interval e0 e29)) (= g_s24_24 (interval e0 e30)) (mem g_s29_33 (|-->| (set_prod g_s20_20 g_s20_20) g_s20_20)) (= (apply g_s29_33 (mapplet e0 e0)) e0) (mem g_s30_34 (|-->| (set_prod g_s22_22 g_s22_22) g_s22_22)) (mem g_s31_35 (|-->| (set_prod g_s20_20 g_s20_20) g_s20_20)) (mem g_s32_36 g_s24_24) (mem g_s33_37 g_s24_24) (mem g_s34_38 g_s22_22) (mem g_s35_39 g_s22_22) (mem g_s36_40 g_s20_20) (mem g_s37_41 g_s20_20) (mem g_s38_42 NATURAL) (|<=i| e43 g_s38_42) (mem g_s39_44 NATURAL) (|<=i| e43 g_s39_44) (mem g_s40_45 NATURAL) (|<=i| e43 g_s40_45) (|<=i| g_s38_42 g_s40_45) (mem g_s41_46 g_s24_24) (mem g_s42_47 g_s24_24) (= g_s42_47 (|+i| g_s41_46 g_s38_42)) (mem g_s43_48 g_s24_24) (= g_s43_48 (|+i| g_s41_46 g_s39_44)) (mem g_s44_49 g_s24_24) (= g_s44_49 (|+i| g_s41_46 g_s40_45)) (mem g_s45_50 g_s22_22) (mem g_s46_51 g_s22_22) (mem g_s47_52 g_s24_24) (|<=i| g_s45_50 g_s46_51) (mem g_s48_53 g_s20_20) (mem g_s49_54 g_s20_20) (mem g_s50_55 g_s20_20) (mem g_s51_56 g_s20_20) (mem g_s52_57 g_s20_20) (mem g_s53_58 g_s24_24) (|<=i| e43 g_s53_58) (mem g_s54_59 g_s24_24) (= g_s54_59 (|-i| g_s53_58 e60)) (mem g_s55_61 NATURAL1) (mem g_s56_62 NATURAL1) (mem g_s57_63 NATURAL1) (mem g_s58_64 NATURAL1) (mem g_s59_65 NATURAL1) (mem g_s60_66 NATURAL1) (mem g_s61_67 NATURAL1) (mem g_s62_68 NATURAL1) (mem g_s63_69 g_s24_24) (mem g_s64_70 g_s24_24) (= g_s64_70 (|+i| g_s63_69 g_s55_61)) (mem g_s65_71 g_s24_24) (mem g_s66_72 g_s24_24) (= g_s66_72 (|+i| g_s65_71 g_s56_62)) (mem g_s67_73 g_s24_24) (= g_s67_73 (|+i| g_s65_71 g_s57_63)) (mem g_s68_74 g_s24_24) (= g_s68_74 (|+i| g_s65_71 g_s58_64)) (mem g_s69_75 g_s24_24) (= g_s69_75 (|+i| g_s65_71 g_s59_65)) (mem g_s70_76 g_s24_24) (= g_s70_76 (|+i| g_s65_71 g_s60_66)) (mem g_s71_77 g_s24_24) (= g_s71_77 (|+i| g_s65_71 g_s61_67)) (mem g_s72_78 g_s24_24) (= g_s72_78 (|+i| g_s65_71 g_s62_68)) (mem g_s73_79 g_s20_20) (mem g_s74_80 g_s20_20) (mem g_s75_81 g_s20_20) (mem g_s76_82 g_s20_20) (mem g_s77_83 g_s20_20) (mem g_s78_84 g_s20_20) (mem g_s79_85 g_s20_20) (mem g_s80_86 g_s20_20) (mem g_s81_87 g_s20_20) (mem g_s82_88 g_s20_20) (mem g_s83_89 g_s20_20) (mem g_s84_90 g_s20_20) (mem g_s85_91 g_s20_20) (mem g_s86_92 g_s20_20) (mem g_s87_93 g_s20_20) (mem g_s88_94 g_s20_20) (mem g_s89_95 g_s20_20) (mem g_s90_96 g_s20_20) (mem g_s91_97 g_s20_20) (mem g_s92_98 g_s24_24) (|<=i| e0 g_s92_98) (|<=i| e43 g_s92_98) (mem g_s93_99 g_s24_24) (= g_s93_99 (|-i| g_s92_98 e60)) (mem g_s94_100 g_s24_24) (mem g_s95_101 g_s24_24) (= g_s95_101 (|-i| g_s94_100 e60)) (mem g_s96_102 g_s24_24) (mem g_s97_103 g_s24_24) (= g_s97_103 (|-i| g_s96_102 e60)) (mem g_s98_104 g_s22_22) (mem g_s99_105 g_s22_22) (mem g_s100_106 g_s22_22) (mem g_s101_107 g_s22_22) (not (= g_s100_106 g_s101_107)) (mem g_s102_108 g_s22_22) (mem g_s103_109 g_s22_22) (mem g_s104_110 g_s22_22) (mem g_s105_111 NATURAL) (= g_s105_111 (|-i| g_s103_109 g_s104_110)) (mem g_s106_112 g_s22_22) (mem g_s107_113 g_s22_22) (mem g_s108_114 g_s22_22) (mem g_s109_115 g_s22_22) (mem g_s110_116 g_s24_24) (mem g_s111_117 g_s24_24) (= g_s111_117 (|-i| g_s110_116 e60)) (= g_s96_102 (|*i| g_s92_98 g_s110_116)) (|<=i| e60 g_s110_116) (|<i| g_s110_116 g_s23_25) (mem g_s112_118 g_s24_24) (mem g_s113_119 g_s24_24) (mem g_s114_120 g_s20_20) (mem g_s115_121 g_s20_20) (mem g_s116_122 g_s20_20) (mem g_s117_123 g_s20_20) (mem g_s118_124 g_s20_20) (mem g_s119_125 g_s20_20) (= g_s119_125 (|-i| g_s118_124 e60)) (mem g_s120_126 g_s20_20) (mem g_s121_127 g_s20_20) (= g_s121_127 (|-i| g_s120_126 e60)) (mem g_s122_128 g_s24_24) (mem g_s123_129 g_s24_24) (mem g_s124_130 g_s20_20)))
(define-fun |def_seext| () Bool (and (mem g_s125_131 g_s20_20) (mem g_s126_132 g_s20_20) (mem g_s127_133 g_s24_24) (or (= g_s127_133 e60) (= g_s127_133 e43)) (mem g_s128_134 (|-->| (interval e0 g_s93_99) g_s24_24)) (mem g_s129_135 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) (|-->| (interval e0 g_s115_121) g_s24_24)))) (mem g_s130_136 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) g_s22_22))) (mem g_s131_137 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) g_s22_22))) (mem g_s132_138 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) g_s22_22))) (mem g_s133_139 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) g_s22_22))) (mem g_s134_140 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) g_s22_22))) (mem g_s135_141 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) g_s22_22))) (mem g_s136_142 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) g_s22_22))) (mem g_s137_143 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) (|-->| (interval e0 g_s121_127) g_s24_24)))) (mem g_s138_144 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s95_101) (|-->| (interval e0 g_s121_127) g_s24_24)))) (mem g_s139_145 (|-->| (interval e0 g_s93_99) g_s24_24)) (mem g_s140_146 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s117_123) g_s24_24))) (mem g_s141_147 (|-->| (interval e0 g_s93_99) g_s22_22)) (mem g_s142_148 (|-->| (interval e0 g_s93_99) g_s22_22)) (mem g_s143_149 (|-->| (interval e0 g_s93_99) g_s22_22)) (mem g_s144_150 (|-->| (interval e0 g_s93_99) g_s22_22)) (mem g_s145_151 (|-->| (interval e0 g_s93_99) g_s22_22)) (mem g_s146_152 (|-->| (interval e0 g_s93_99) g_s22_22)) (mem g_s147_153 (|-->| (interval e0 g_s93_99) g_s22_22)) (mem g_s148_154 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s119_125) g_s24_24))) (mem g_s149_155 (|-->| (interval e0 g_s93_99) (|-->| (interval e0 g_s119_125) g_s24_24))) (mem g_s150_156 g_s24_24) (mem g_s150_156 g_s27_31) (mem g_s151_157 g_s20_20) (mem g_s152_158 g_s20_20) (mem g_s153_159 g_s20_20) (mem g_s154_160 g_s20_20) (mem g_s28_32 (|+->| BOOL g_s24_24)) (mem g_s28_32 (|+->| BOOL g_s22_22)) (mem g_s28_32 (|+->| BOOL g_s20_20))))
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool (and (mem g_s155_161 NATURAL) (mem g_s156_162 NATURAL) (subset g_s157_163 (interval e60 g_s155_161)) (subset g_s158_164 (interval e60 g_s155_161)) (subset g_s159_165 (interval e60 g_s155_161)) (subset g_s160_166 (interval e60 g_s155_161)) (mem g_s161_167 (|-->| (interval e60 g_s155_161) g_s20_20)) (mem g_s162_168 (|-->| (interval e60 g_s155_161) g_s20_20)) (subset g_s163_169 (interval e60 g_s155_161)) (mem g_s155_161 NATURAL) (mem g_s156_162 NATURAL) (|<=i| g_s156_162 g_s155_161) (mem g_s164_170 BOOL) (subset g_s159_165 (interval e60 g_s155_161)) (subset g_s160_166 (interval e60 g_s155_161)) (subset g_s157_163 (interval e60 g_s155_161)) (subset g_s158_164 (interval e60 g_s155_161)) (subset g_s163_169 (interval e60 g_s155_161))))
(define-fun |def_inv| () Bool (and (= g_s155_161 g_s155$1_171) (= g_s156_162 g_s156$1_172) (= g_s164_170 g_s164$1_173) (= g_s157_163 g_s157$1_174) (= g_s158_164 g_s158$1_175) (= g_s163_169 g_s163$1_176) (mem g_s155$1_171 NATURAL) (subset g_s157$1_174 (interval e60 g_s155$1_171)) (subset g_s158$1_175 (interval e60 g_s155$1_171)) (mem g_s165$1_177 BOOL) (mem g_s166$1_178 BOOL) (mem g_s167$1_179 g_s20_20) (mem g_s168$1_180 g_s20_20) (mem g_s169$1_181 g_s20_20) (mem g_s170$1_182 g_s20_20) (subset g_s163$1_176 (interval e60 g_s155$1_171)) (= g_s165$1_177 (bool (mem g_s155$1_171 g_s159_165))) (= g_s166$1_178 (bool (mem g_s156$1_172 g_s160_166))) (= g_s164$1_173 (bool (mem g_s156$1_172 g_s157$1_174))) (=> (|<i| e0 g_s155$1_171) (and (= g_s167$1_179 (apply g_s161_167 g_s155$1_171)) (= g_s169$1_181 (apply g_s162_168 g_s155$1_171)))) (=> (|<i| e60 g_s155$1_171) (and (= g_s168$1_180 (apply g_s161_167 (|-i| g_s155$1_171 e60))) (= g_s170$1_182 (apply g_s162_168 (|-i| g_s155$1_171 e60))))) (= g_s171$1_183 (bool (|<=i| g_s156$1_172 e0)))))
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (|<i| e0 e0))
(define-fun lh_2 () Bool (|<i| e60 e0))
; PO 1 in group 0
(push 1)
(assert (not (mem e0 NATURAL)))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (mem e0 g_s20_20)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (subset empty (interval e60 e0))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 0
(push 1)
(assert (not (= TRUE (bool (|<=i| e0 e0)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 0
(push 1)
(assert (not (= FALSE (bool (mem e0 empty)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 0
(push 1)
(assert (not (=> lh_1 (= e0 (apply empty e0)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 0
(push 1)
(assert (not (=> lh_2 (= e0 (apply empty (|-i| e0 e60))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s175_184 g_s24_24))
(assert (mem g_s176_185 g_s24_24))
(assert (mem g_s177_186 g_s24_24))
(assert (= g_s164_170 (bool (mem g_s155_161 g_s157_163))))
(assert (= g_s159_165 empty))
(define-fun lh_1 () Bool (= g_s178_187 (|+i| g_s155$1_171 e60)))
(define-fun lh_2 () Bool (= g_s175_184 g_s25_26))
(define-fun lh_3 () Bool (= g_s176_185 g_s26_27))
(define-fun lh_4 () Bool (= g_s177_186 g_s25_26))
(define-fun lh_5 () Bool (|<i| e0 g_s178_187))
(define-fun lh_6 () Bool (|<i| e60 g_s178_187))
(define-fun lh_7 () Bool (not (and (= g_s175_184 g_s25_26) (= g_s176_185 g_s26_27))))
; PO 1 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_7) (mem g_s178_187 NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_7) (subset g_s157$1_174 (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_7) (subset g_s158$1_175 (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_7) (subset (binary_union g_s163$1_176 (SET g_s178_187)) (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_7) (= g_s165$1_177 (bool (mem g_s178_187 g_s159_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_7) (= (binary_union g_s163_169 (SET (|+i| g_s155_161 e60))) (binary_union g_s163$1_176 (SET g_s178_187))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_7) (= (|+i| g_s155_161 e60) g_s178_187))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s178_187 NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (subset (binary_union g_s157$1_174 (SET g_s178_187)) (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (subset (binary_union g_s158$1_175 (SET g_s178_187)) (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 11 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (subset (binary_union g_s163$1_176 (SET g_s178_187)) (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 12 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= g_s165$1_177 (bool (mem g_s178_187 g_s159_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 13 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= g_s164$1_173 (bool (mem g_s156$1_172 (binary_union g_s157$1_174 (SET g_s178_187))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 14 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_6 lh_7) (= g_s167$1_179 (apply (|<+| g_s161_167 (SET (mapplet (|+i| g_s155_161 e60) g_s125_131))) (|-i| g_s178_187 e60))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 15 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_6 lh_7) (= g_s169$1_181 (apply (|<+| g_s162_168 (SET (mapplet (|+i| g_s155_161 e60) g_s126_132))) (|-i| g_s178_187 e60))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 16 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_5 lh_7) (= g_s125_131 (apply (|<+| g_s161_167 (SET (mapplet (|+i| g_s155_161 e60) g_s125_131))) g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 17 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_4 lh_5 lh_7) (= g_s126_132 (apply (|<+| g_s162_168 (SET (mapplet (|+i| g_s155_161 e60) g_s126_132))) g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 18 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (binary_union g_s157_163 (SET (|+i| g_s155_161 e60))) (binary_union g_s157$1_174 (SET g_s178_187))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 19 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (binary_union g_s158_164 (SET (|+i| g_s155_161 e60))) (binary_union g_s158$1_175 (SET g_s178_187))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 20 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (binary_union g_s163_169 (SET (|+i| g_s155_161 e60))) (binary_union g_s163$1_176 (SET g_s178_187))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 21 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (= (|+i| g_s155_161 e60) g_s178_187))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 22 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (mem g_s178_187 NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 23 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (subset g_s157$1_174 (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 24 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (subset g_s158$1_175 (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 25 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (subset (binary_union g_s157$1_174 (SET g_s178_187)) (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 26 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (subset (binary_union g_s158$1_175 (SET g_s178_187)) (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 27 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (subset (binary_union g_s163$1_176 (SET g_s178_187)) (interval e60 g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 28 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= g_s165$1_177 (bool (mem g_s178_187 g_s159_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 29 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= g_s164$1_173 (bool (mem g_s156$1_172 (binary_union g_s157$1_174 (SET g_s178_187))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 30 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= g_s157_163 (binary_union g_s157$1_174 (SET g_s178_187))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 31 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= g_s158_164 (binary_union g_s158$1_175 (SET g_s178_187))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 32 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_6) (= g_s167$1_179 (apply (|<+| g_s161_167 (SET (mapplet (|+i| g_s155_161 e60) g_s125_131))) (|-i| g_s178_187 e60))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 33 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_6) (= g_s169$1_181 (apply (|<+| g_s162_168 (SET (mapplet (|+i| g_s155_161 e60) g_s126_132))) (|-i| g_s178_187 e60))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 34 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s125_131 (apply (|<+| g_s161_167 (SET (mapplet (|+i| g_s155_161 e60) g_s125_131))) g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 35 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5) (= g_s126_132 (apply (|<+| g_s162_168 (SET (mapplet (|+i| g_s155_161 e60) g_s126_132))) g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 36 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= (binary_union g_s157_163 (SET (|+i| g_s155_161 e60))) g_s157$1_174))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 37 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= (binary_union g_s158_164 (SET (|+i| g_s155_161 e60))) g_s158$1_175))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 38 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= (binary_union g_s163_169 (SET (|+i| g_s155_161 e60))) (binary_union g_s163$1_176 (SET g_s178_187))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 39 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_7) (= (|+i| g_s155_161 e60) g_s178_187))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 40 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_6 lh_7) (= g_s167$1_179 (apply (|<+| g_s161_167 (SET (mapplet (|+i| g_s155_161 e60) g_s125_131))) (|-i| g_s178_187 e60))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 41 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_6 lh_7) (= g_s169$1_181 (apply (|<+| g_s162_168 (SET (mapplet (|+i| g_s155_161 e60) g_s126_132))) (|-i| g_s178_187 e60))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 42 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_7) (= g_s125_131 (apply (|<+| g_s161_167 (SET (mapplet (|+i| g_s155_161 e60) g_s125_131))) g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 43 in group 1
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_7) (= g_s126_132 (apply (|<+| g_s162_168 (SET (mapplet (|+i| g_s155_161 e60) g_s126_132))) g_s178_187)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s177_186 g_s24_24))
(assert (mem g_s155_161 g_s157_163))
(assert (mem g_s155_161 g_s158_164))
(assert (= (bool (= g_s177_186 g_s25_26)) (bool (mem g_s155_161 g_s163_169))))
(assert (= g_s156_162 (|-i| g_s155_161 e60)))
(assert (subset g_s160_166 (interval e60 (|-i| g_s155_161 e60))))
(assert (= g_s159_165 empty))
(define-fun lh_1 () Bool (subset (interval (|+i| (|-i| g_s155_161 g_s39_44) e60) g_s155_161) g_s157_163))
(define-fun lh_2 () Bool (= g_s177_186 g_s26_27))
(define-fun lh_3 () Bool (not (and (subset (interval (|+i| (|-i| g_s155_161 g_s39_44) e60) g_s155_161) g_s157_163) (= g_s177_186 g_s26_27))))
; PO 1 in group 2
(push 1)
(assert (not (=> lh_3 (= TRUE (bool (mem (|+i| g_s156$1_172 e60) g_s157$1_174))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 2
(push 1)
(assert (not (=> lh_3 (= FALSE (bool (|<=i| (|+i| g_s156$1_172 e60) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 2
(push 1)
(assert (not (=> lh_3 (= (bool (and (subset (interval (|+i| (|-i| g_s155$1_171 g_s39_44) e60) g_s155$1_171) g_s157$1_174) (= g_s177_186 g_s26_27))) (bool (mem (|+i| g_s156$1_172 e60) g_s160_166))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 2
(push 1)
(assert (not (=> lh_3 (= (|+i| g_s156_162 e60) (|+i| g_s156$1_172 e60)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2) (= TRUE (bool (mem (|+i| g_s156$1_172 e60) g_s157$1_174))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2) (= FALSE (bool (|<=i| (|+i| g_s156$1_172 e60) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (bool (and (subset (interval (|+i| (|-i| g_s155$1_171 g_s39_44) e60) g_s155$1_171) g_s157$1_174) (= g_s177_186 g_s26_27))) (bool (mem (|+i| g_s156$1_172 e60) (binary_union g_s160_166 (SET g_s155_161))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 2
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (|+i| g_s156_162 e60) (|+i| g_s156$1_172 e60)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|<=i| e60 g_s155_161))
(assert (mem g_s156_162 g_s157_163))
(assert (= g_s156_162 (|-i| g_s155_161 e60)))
(assert (= g_s159_165 empty))
; PO 1 in group 3
(assert (not (= g_s165$1_177 FALSE)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|<=i| e60 g_s155_161))
(assert (mem g_s156_162 g_s157_163))
(assert (= g_s156_162 (|-i| g_s155_161 e60)))
(assert (= g_s159_165 empty))
(assert (= g_s165$1_177 FALSE))
(define-fun lh_1 () Bool (|<i| e43 g_s155_161))
(define-fun lh_2 () Bool (subset (interval (|-i| g_s155_161 e43) (|-i| g_s155_161 e60)) g_s157_163))
(define-fun lh_3 () Bool (or (not (mem (apply g_s29_33 (mapplet (apply g_s161_167 g_s155_161) (apply g_s161_167 (|-i| g_s155_161 e60)))) (interval g_s45_50 g_s46_51))) (not (mem (apply g_s29_33 (mapplet (apply g_s162_168 g_s155_161) (apply g_s162_168 (|-i| g_s155_161 e60)))) (interval g_s45_50 g_s46_51))) (|<i| g_s47_52 (apply g_s31_35 (mapplet (apply g_s29_33 (mapplet (apply g_s161_167 g_s155_161) (apply g_s161_167 (|-i| g_s155_161 e60)))) (apply g_s29_33 (mapplet (apply g_s162_168 g_s155_161) (apply g_s162_168 (|-i| g_s155_161 e60)))))))))
(define-fun lh_4 () Bool (not (and (|<i| e43 g_s155_161) (subset (interval (|-i| g_s155_161 e43) (|-i| g_s155_161 e60)) g_s157_163) (or (not (mem (apply g_s29_33 (mapplet (apply g_s161_167 g_s155_161) (apply g_s161_167 (|-i| g_s155_161 e60)))) (interval g_s45_50 g_s46_51))) (not (mem (apply g_s29_33 (mapplet (apply g_s162_168 g_s155_161) (apply g_s162_168 (|-i| g_s155_161 e60)))) (interval g_s45_50 g_s46_51))) (|<i| g_s47_52 (apply g_s31_35 (mapplet (apply g_s29_33 (mapplet (apply g_s161_167 g_s155_161) (apply g_s161_167 (|-i| g_s155_161 e60)))) (apply g_s29_33 (mapplet (apply g_s162_168 g_s155_161) (apply g_s162_168 (|-i| g_s155_161 e60)))))))))))
; PO 1 in group 4
(push 1)
(assert (not (=> lh_4 (= (bool (and (|<i| e43 g_s155$1_171) (subset (interval (|-i| g_s155$1_171 e43) (|-i| g_s155$1_171 e60)) g_s157$1_174) (or (not (mem (apply g_s29_33 (mapplet g_s167$1_179 g_s168$1_180)) (interval g_s45_50 g_s46_51))) (not (mem (apply g_s29_33 (mapplet g_s169$1_181 g_s170$1_182)) (interval g_s45_50 g_s46_51))) (|<i| g_s47_52 (apply g_s31_35 (mapplet (apply g_s29_33 (mapplet g_s167$1_179 g_s168$1_180)) (apply g_s29_33 (mapplet g_s169$1_181 g_s170$1_182)))))))) (bool (mem g_s155$1_171 g_s159_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (= (bool (and (|<i| e43 g_s155$1_171) (subset (interval (|-i| g_s155$1_171 e43) (|-i| g_s155$1_171 e60)) g_s157$1_174) (or (not (mem (apply g_s29_33 (mapplet g_s167$1_179 g_s168$1_180)) (interval g_s45_50 g_s46_51))) (not (mem (apply g_s29_33 (mapplet g_s169$1_181 g_s170$1_182)) (interval g_s45_50 g_s46_51))) (|<i| g_s47_52 (apply g_s31_35 (mapplet (apply g_s29_33 (mapplet g_s167$1_179 g_s168$1_180)) (apply g_s29_33 (mapplet g_s169$1_181 g_s170$1_182)))))))) (bool (mem g_s155$1_171 (binary_union g_s159_165 (SET g_s155_161))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s177_186 g_s24_24))
(assert (mem g_s177_186 g_s27_31))
(assert (not (mem g_s155_161 g_s157_163)))
(assert (not (mem g_s155_161 g_s158_164)))
(assert (mem (|-i| g_s155_161 e60) g_s157_163))
(assert (|<=i| e60 g_s155_161))
(assert (= (bool (= g_s177_186 g_s25_26)) (bool (mem g_s155_161 g_s163_169))))
(assert (= g_s156_162 (|-i| g_s155_161 e60)))
(assert (subset g_s160_166 (interval e60 (|-i| g_s155_161 e60))))
(assert (= g_s159_165 empty))
; PO 1 in group 5
(assert (not (= g_s165$1_177 FALSE)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s177_186 g_s24_24))
(assert (mem g_s177_186 g_s27_31))
(assert (not (mem g_s155_161 g_s157_163)))
(assert (not (mem g_s155_161 g_s158_164)))
(assert (mem (|-i| g_s155_161 e60) g_s157_163))
(assert (|<=i| e60 g_s155_161))
(assert (= (bool (= g_s177_186 g_s25_26)) (bool (mem g_s155_161 g_s163_169))))
(assert (= g_s156_162 (|-i| g_s155_161 e60)))
(assert (subset g_s160_166 (interval e60 (|-i| g_s155_161 e60))))
(assert (= g_s159_165 empty))
(assert (= g_s165$1_177 FALSE))
(define-fun lh_1 () Bool (= g_s177_186 g_s26_27))
(define-fun lh_2 () Bool (subset (interval (|+i| (|-i| g_s155_161 g_s39_44) e60) (|-i| g_s155_161 e60)) g_s157_163))
(define-fun lh_3 () Bool (not (and (= g_s177_186 g_s26_27) (subset (interval (|+i| (|-i| g_s155_161 g_s39_44) e60) (|-i| g_s155_161 e60)) g_s157_163))))
; PO 1 in group 6
(push 1)
(assert (not (=> lh_3 (= FALSE (bool (mem (|+i| g_s156$1_172 e60) g_s157$1_174))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> lh_3 (= FALSE (bool (mem (|+i| g_s156$1_172 e60) g_s160_166))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 6
(push 1)
(assert (not (=> lh_3 (= FALSE (bool (|<=i| (|+i| g_s156$1_172 e60) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 6
(push 1)
(assert (not (=> lh_3 (= (bool (and (= g_s177_186 g_s26_27) (subset (interval (|+i| (|-i| g_s155$1_171 g_s39_44) e60) (|-i| g_s155$1_171 e60)) g_s157$1_174))) (bool (mem g_s155$1_171 g_s159_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 6
(push 1)
(assert (not (=> lh_3 (= (|+i| g_s156_162 e60) (|+i| g_s156$1_172 e60)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2) (= FALSE (bool (mem (|+i| g_s156$1_172 e60) g_s157$1_174))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2) (= FALSE (bool (mem (|+i| g_s156$1_172 e60) g_s160_166))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2) (= FALSE (bool (|<=i| (|+i| g_s156$1_172 e60) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (bool (and (= g_s177_186 g_s26_27) (subset (interval (|+i| (|-i| g_s155$1_171 g_s39_44) e60) (|-i| g_s155$1_171 e60)) g_s157$1_174))) (bool (mem g_s155$1_171 (binary_union g_s159_165 (SET g_s155_161))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 10 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2) (= (|+i| g_s156_162 e60) (|+i| g_s156$1_172 e60)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s177_186 g_s24_24))
(assert (mem g_s177_186 g_s27_31))
(assert (not (mem g_s155_161 g_s157_163)))
(assert (not (mem g_s155_161 g_s158_164)))
(assert (not (mem (|-i| g_s155_161 e60) g_s157_163)))
(assert (|<=i| e60 g_s155_161))
(assert (= (bool (= g_s177_186 g_s25_26)) (bool (mem g_s155_161 g_s163_169))))
(assert (= g_s156_162 (|-i| g_s155_161 e60)))
(assert (subset g_s160_166 (interval e60 (|-i| g_s155_161 e60))))
(assert (= g_s159_165 empty))
(define-fun lh_1 () Bool (or (and (subset (interval (|+i| (|-i| (|+i| (|-i| g_s155_161 g_s38_42) e60) g_s39_44) e60) (|-i| g_s155_161 g_s38_42)) g_s157_163) (= (binary_inter (interval (|+i| (|-i| g_s155_161 g_s38_42) e60) g_s155_161) g_s157_163) empty) (subset (interval (|+i| (|-i| g_s155_161 g_s38_42) e60) g_s155_161) g_s163_169)) (and (= g_s177_186 g_s25_26) (= (binary_inter (interval (|+i| (|-i| g_s155_161 g_s40_45) e60) (|-i| g_s155_161 e60)) g_s157_163) empty))))
; PO 1 in group 7
(push 1)
(assert (not (=> lh_1 (= FALSE (bool (mem (|+i| g_s156$1_172 e60) g_s157$1_174))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (=> lh_1 (= FALSE (bool (mem (|+i| g_s156$1_172 e60) g_s160_166))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 7
(push 1)
(assert (not (=> lh_1 (= FALSE (bool (|<=i| (|+i| g_s156$1_172 e60) e0))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 7
(push 1)
(assert (not (=> lh_1 (= (bool (or (= g_s165$1_177 TRUE) (and (subset (interval (|+i| (|-i| (|+i| (|-i| g_s155$1_171 g_s38_42) e60) g_s39_44) e60) (|-i| g_s155$1_171 g_s38_42)) g_s157$1_174) (= (binary_inter (interval (|+i| (|-i| g_s155$1_171 g_s38_42) e60) g_s155$1_171) g_s157$1_174) empty) (subset (interval (|+i| (|-i| g_s155$1_171 g_s38_42) e60) g_s155$1_171) g_s163$1_176)) (and (= g_s177_186 g_s25_26) (= (binary_inter (interval (|+i| (|-i| g_s155$1_171 g_s40_45) e60) g_s155$1_171) g_s157$1_174) empty)))) (bool (mem g_s155$1_171 (binary_union g_s159_165 (SET g_s155_161))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 7
(push 1)
(assert (not (=> lh_1 (= (|+i| g_s156_162 e60) (|+i| g_s156$1_172 e60)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|<=i| e60 g_s155_161))
(assert (not (mem g_s156_162 g_s157_163)))
(assert (= g_s156_162 (|-i| g_s155_161 e60)))
(assert (subset g_s159_165 (SET g_s155_161)))
(define-fun lh_1 () Bool (|<i| e43 g_s155$1_171))
(define-fun lh_2 () Bool (= (binary_inter (interval (|-i| g_s155$1_171 e43) (|-i| g_s155$1_171 e60)) g_s157$1_174) empty))
(define-fun lh_3 () Bool (or (not (= g_s167$1_179 g_s168$1_180)) (not (= g_s169$1_181 g_s170$1_182))))
(define-fun lh_4 () Bool (|<i| e43 g_s155_161))
(define-fun lh_5 () Bool (= (binary_inter (interval (|-i| g_s155_161 e43) (|-i| g_s155_161 e60)) g_s157_163) empty))
(define-fun lh_6 () Bool (or (not (= (apply g_s161_167 g_s155_161) (apply g_s161_167 (|-i| g_s155_161 e60)))) (not (= (apply g_s162_168 g_s155_161) (apply g_s162_168 (|-i| g_s155_161 e60))))))
(define-fun lh_7 () Bool (not (and (|<i| e43 g_s155_161) (= (binary_inter (interval (|-i| g_s155_161 e43) (|-i| g_s155_161 e60)) g_s157_163) empty) (or (not (= (apply g_s161_167 g_s155_161) (apply g_s161_167 (|-i| g_s155_161 e60)))) (not (= (apply g_s162_168 g_s155_161) (apply g_s162_168 (|-i| g_s155_161 e60))))))))
(define-fun lh_8 () Bool (not (and (|<i| e43 g_s155$1_171) (= (binary_inter (interval (|-i| g_s155$1_171 e43) (|-i| g_s155$1_171 e60)) g_s157$1_174) empty) (or (not (= g_s167$1_179 g_s168$1_180)) (not (= g_s169$1_181 g_s170$1_182))))))
; PO 1 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_7) (= TRUE (bool (mem g_s155$1_171 g_s159_165))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (=> (and lh_4 lh_5 lh_6 lh_8) (= g_s165$1_177 (bool (mem g_s155$1_171 (binary_union g_s159_165 (SET g_s155_161))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 8
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6) (= TRUE (bool (mem g_s155$1_171 (binary_union g_s159_165 (SET g_s155_161))))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (= g_s156_162 g_s155_161))
(assert (|>=i| g_s155_161 e60))
(assert (= g_s188_189 g_s188$1_188))
; PO 1 in group 9
(assert (not (|>=i| g_s155$1_171 e60)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (= g_s156_162 g_s155_161))
(assert (|>=i| g_s155_161 e60))
(assert (= g_s188_189 g_s188$1_188))
(assert (|>=i| g_s155$1_171 e60))
; PO 1 in group 10
(assert (not (= (apply g_s28_32 (bool (mem g_s155_161 g_s157_163))) (apply g_s28_32 g_s164$1_173))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (= g_s156_162 g_s155_161))
(assert (|>=i| g_s155_161 e60))
(assert (= g_s188_189 g_s188$1_188))
; PO 1 in group 11
(assert (not (|>=i| g_s155$1_171 e60)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 12 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (= g_s156_162 g_s155_161))
(assert (|>=i| g_s155_161 e60))
(assert (= g_s188_189 g_s188$1_188))
(assert (|>=i| g_s155$1_171 e60))
; PO 1 in group 12
(assert (not (= (apply g_s28_32 (bool (not (mem g_s155_161 g_s157_163)))) (apply g_s28_32 (bool (= g_s164$1_173 FALSE))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 13 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (= g_s188_189 g_s188$1_188))
; PO 1 in group 13
(assert (not (|>=i| g_s155$1_171 e60)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 14 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (= g_s188_189 g_s188$1_188))
(assert (|>=i| g_s155$1_171 e60))
; PO 1 in group 14
(assert (not (= (apply g_s28_32 (bool (mem g_s155_161 g_s159_165))) (apply g_s28_32 g_s165$1_177))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 15 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s155_161 g_s159_165))
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s155_161 g_s159_165))
(assert (= g_s188_189 g_s188$1_188))
(define-fun lh_1 () Bool (mem g_s188$2_190 g_s20_20))
(define-fun lh_2 () Bool (=> (= g_s165$1_177 TRUE) (or (= g_s188$2_190 g_s51_56) (= g_s188$2_190 g_s52_57) (= g_s188$2_190 g_s50_55) (= g_s188$2_190 g_s48_53) (= g_s188$2_190 g_s49_54))))
(define-fun lh_3 () Bool (mem g_s155_161 g_s159_165))
; PO 1 in group 15
(assert (not (=> (and lh_1 lh_2 lh_3) (or (= g_s188$2_190 g_s51_56) (= g_s188$2_190 g_s52_57) (= g_s188$2_190 g_s50_55) (= g_s188$2_190 g_s48_53) (= g_s188$2_190 g_s49_54)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 16 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (= g_s188_189 g_s188$1_188))
; PO 1 in group 16
(push 1)
(assert (not (mem g_s188$1_188 g_s24_24)))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 16
(push 1)
(assert (not (|>=i| g_s155$1_171 e60)))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 17 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (= g_s188_189 g_s188$1_188))
(assert (mem g_s188$1_188 g_s24_24))
(assert (|>=i| g_s155$1_171 e60))
; PO 1 in group 17
(assert (not (= (apply g_s28_32 (bool (mem (|-i| g_s155_161 e60) g_s157_163))) (apply g_s28_32 (bool (mem (|-i| g_s155$1_171 e60) g_s157$1_174))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 18 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(define-fun lh_1 () Bool (= g_s155_161 g_s155$1_171))
(define-fun lh_2 () Bool (= g_s156_162 g_s156$1_172))
(define-fun lh_3 () Bool (= g_s164_170 g_s164$1_173))
(define-fun lh_4 () Bool (= g_s157_163 g_s157$1_174))
(define-fun lh_5 () Bool (= g_s158_164 g_s158$1_175))
(define-fun lh_6 () Bool (= g_s163_169 g_s163$1_176))
(define-fun lh_7 () Bool (mem g_s155$1_171 NATURAL))
(define-fun lh_8 () Bool (subset g_s157$1_174 (interval e60 g_s155$1_171)))
(define-fun lh_9 () Bool (subset g_s158$1_175 (interval e60 g_s155$1_171)))
(define-fun lh_10 () Bool (mem g_s165$1_177 BOOL))
(define-fun lh_11 () Bool (mem g_s166$1_178 BOOL))
(define-fun lh_12 () Bool (mem g_s167$1_179 g_s20_20))
(define-fun lh_13 () Bool (mem g_s168$1_180 g_s20_20))
(define-fun lh_14 () Bool (mem g_s169$1_181 g_s20_20))
(define-fun lh_15 () Bool (mem g_s170$1_182 g_s20_20))
(define-fun lh_16 () Bool (subset g_s163$1_176 (interval e60 g_s155$1_171)))
(define-fun lh_17 () Bool (= g_s165$1_177 (bool (mem g_s155$1_171 g_s159_165))))
(define-fun lh_18 () Bool (= g_s166$1_178 (bool (mem g_s156$1_172 g_s160_166))))
(define-fun lh_19 () Bool (= g_s164$1_173 (bool (mem g_s156$1_172 g_s157$1_174))))
(define-fun lh_20 () Bool (|<i| e0 g_s155$1_171))
(define-fun lh_21 () Bool (= g_s167$1_179 (apply g_s161_167 g_s155$1_171)))
(define-fun lh_22 () Bool (=> (|<i| e0 g_s155$1_171) (and (= g_s167$1_179 (apply g_s161_167 g_s155$1_171)) (= g_s169$1_181 (apply g_s162_168 g_s155$1_171)))))
(define-fun lh_23 () Bool (|<i| e60 g_s155$1_171))
(define-fun lh_24 () Bool (= g_s168$1_180 (apply g_s161_167 (|-i| g_s155$1_171 e60))))
; PO 1 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (mem g_s161_167 (|+->| (dom g_s161_167) (ran g_s161_167))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20) (mem g_s155$1_171 (dom g_s161_167)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_22 lh_23) (mem g_s161_167 (|+->| (dom g_s161_167) (ran g_s161_167))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21) (mem g_s162_168 (|+->| (dom g_s162_168) (ran g_s162_168))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21) (mem g_s155$1_171 (dom g_s162_168)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_22 lh_23) (mem (|-i| g_s155$1_171 e60) (dom g_s161_167)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_22 lh_23 lh_24) (mem g_s162_168 (|+->| (dom g_s162_168) (ran g_s162_168))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 18
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_22 lh_23 lh_24) (mem (|-i| g_s155$1_171 e60) (dom g_s162_168)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 19 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|<=i| e60 g_s155_161))
(assert (mem g_s156_162 g_s157_163))
(assert (= g_s156_162 (|-i| g_s155_161 e60)))
(assert (= g_s159_165 empty))
(assert (= g_s165$1_177 FALSE))
(define-fun lh_1 () Bool (|<i| e43 g_s155$1_171))
(define-fun lh_2 () Bool (subset (interval (|-i| g_s155$1_171 e43) (|-i| g_s155$1_171 e60)) g_s157$1_174))
(define-fun lh_3 () Bool (not (not (mem (apply g_s29_33 (mapplet g_s167$1_179 g_s168$1_180)) (interval g_s45_50 g_s46_51)))))
(define-fun lh_4 () Bool (not (not (mem (apply g_s29_33 (mapplet g_s169$1_181 g_s170$1_182)) (interval g_s45_50 g_s46_51)))))
; PO 1 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem g_s29_33 (|+->| (dom g_s29_33) (ran g_s29_33))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2) (mem (mapplet g_s167$1_179 g_s168$1_180) (dom g_s29_33)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem g_s29_33 (|+->| (dom g_s29_33) (ran g_s29_33))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3) (mem (mapplet g_s169$1_181 g_s170$1_182) (dom g_s29_33)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 5 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s31_35 (|+->| (dom g_s31_35) (ran g_s31_35))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 6 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem g_s29_33 (|+->| (dom g_s29_33) (ran g_s29_33))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 7 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (mapplet g_s167$1_179 g_s168$1_180) (dom g_s29_33)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 8 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (mapplet g_s169$1_181 g_s170$1_182) (dom g_s29_33)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 9 in group 19
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4) (mem (mapplet (apply g_s29_33 (mapplet g_s167$1_179 g_s168$1_180)) (apply g_s29_33 (mapplet g_s169$1_181 g_s170$1_182))) (dom g_s31_35)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 20 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (= g_s156_162 g_s155_161))
(assert (|>=i| g_s155_161 e60))
(assert (|>=i| g_s155$1_171 e60))
; PO 1 in group 20
(push 1)
(assert (not (mem g_s28_32 (|+->| (dom g_s28_32) (ran g_s28_32)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 20
(push 1)
(assert (not (mem g_s164$1_173 (dom g_s28_32))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 21 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (= g_s156_162 g_s155_161))
(assert (|>=i| g_s155_161 e60))
(assert (|>=i| g_s155$1_171 e60))
; PO 1 in group 21
(push 1)
(assert (not (mem g_s28_32 (|+->| (dom g_s28_32) (ran g_s28_32)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 21
(push 1)
(assert (not (mem (bool (= g_s164$1_173 FALSE)) (dom g_s28_32))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 22 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (|>=i| g_s155$1_171 e60))
; PO 1 in group 22
(push 1)
(assert (not (mem g_s165$1_177 (dom g_s28_32))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 22
(push 1)
(assert (not (mem g_s28_32 (|+->| (dom g_s28_32) (ran g_s28_32)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 23 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s188_189 g_s24_24))
(assert (|>=i| g_s155_161 e60))
(assert (mem g_s188$1_188 g_s24_24))
(assert (|>=i| g_s155$1_171 e60))
; PO 1 in group 23
(push 1)
(assert (not (mem g_s28_32 (|+->| (dom g_s28_32) (ran g_s28_32)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 23
(push 1)
(assert (not (mem (bool (mem (|-i| g_s155$1_171 e60) g_s157$1_174)) (dom g_s28_32))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)