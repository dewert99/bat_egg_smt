(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e41 () U)
(declare-fun e0 () U)
(declare-fun e62 () U)
(declare-fun e86 () U)
(declare-fun e111 () U)
(declare-fun e43 () U)
(declare-fun e42 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_106 () U)
(declare-fun g_s101_107 () U)
(declare-fun g_s102_108 () U)
(declare-fun g_s103_109 () U)
(declare-fun g_s104_110 () U)
(declare-fun g_s105_112 () U)
(declare-fun g_s106_113 () U)
(declare-fun g_s107_114 () U)
(declare-fun g_s108_115 () U)
(declare-fun g_s109_116 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_117 () U)
(declare-fun g_s111_118 () U)
(declare-fun g_s112_119 () U)
(declare-fun g_s113_120 () U)
(declare-fun g_s114_121 () U)
(declare-fun g_s115_122 () U)
(declare-fun g_s116_123 () U)
(declare-fun g_s117_124 () U)
(declare-fun g_s118_125 () U)
(declare-fun g_s119_126 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_127 () U)
(declare-fun g_s121_128 () U)
(declare-fun g_s122_129 () U)
(declare-fun g_s123_130 () U)
(declare-fun g_s124_131 () U)
(declare-fun g_s125_132 () U)
(declare-fun g_s126_133 () U)
(declare-fun g_s127_134 () U)
(declare-fun g_s128_135 () U)
(declare-fun g_s129_136 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_137 () U)
(declare-fun g_s131_138 () U)
(declare-fun g_s132_139 () U)
(declare-fun g_s133_140 () U)
(declare-fun g_s134_141 () U)
(declare-fun g_s135_142 () U)
(declare-fun g_s136_143 () U)
(declare-fun g_s137_144 () U)
(declare-fun g_s138_145 () U)
(declare-fun g_s139_146 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_147 () U)
(declare-fun g_s141_148 () U)
(declare-fun g_s142_149 () U)
(declare-fun g_s143_150 () U)
(declare-fun g_s144_151 () U)
(declare-fun g_s145_152 () U)
(declare-fun g_s146_153 () U)
(declare-fun g_s147_154 () U)
(declare-fun g_s148_155 () U)
(declare-fun g_s149_156 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_157 () U)
(declare-fun g_s151_158 () U)
(declare-fun g_s152_159 () U)
(declare-fun g_s153_160 () U)
(declare-fun g_s154_161 () U)
(declare-fun g_s155_162 () U)
(declare-fun g_s156_163 () U)
(declare-fun g_s157_164 () U)
(declare-fun g_s158_165 () U)
(declare-fun g_s159_166 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_167 () U)
(declare-fun g_s161_168 () U)
(declare-fun g_s162_169 () U)
(declare-fun g_s163_170 () U)
(declare-fun g_s164_171 () U)
(declare-fun g_s165_172 () U)
(declare-fun g_s166_173 () U)
(declare-fun g_s167_174 () U)
(declare-fun g_s168_175 () U)
(declare-fun g_s169_176 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_177 () U)
(declare-fun g_s171_178 () U)
(declare-fun g_s172_179 () U)
(declare-fun g_s173_180 () U)
(declare-fun g_s174_181 () U)
(declare-fun g_s175_182 () U)
(declare-fun g_s176_183 () U)
(declare-fun g_s177_184 () U)
(declare-fun g_s178_185 () U)
(declare-fun g_s179_186 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_187 () U)
(declare-fun g_s181_188 () U)
(declare-fun g_s182_189 () U)
(declare-fun g_s183_190 () U)
(declare-fun g_s184_191 () U)
(declare-fun g_s185_192 () U)
(declare-fun g_s186_193 () U)
(declare-fun g_s187_194 () U)
(declare-fun g_s188_195 () U)
(declare-fun g_s189_196 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_197 () U)
(declare-fun g_s191_198 () U)
(declare-fun g_s192_199 () U)
(declare-fun g_s193_200 () U)
(declare-fun g_s194_201 () U)
(declare-fun g_s195_202 () U)
(declare-fun g_s196_203 () U)
(declare-fun g_s197_204 () U)
(declare-fun g_s198_205 () U)
(declare-fun g_s199_206 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_207 () U)
(declare-fun g_s201_208 () U)
(declare-fun g_s202_209 () U)
(declare-fun g_s203_210 () U)
(declare-fun g_s204_211 () U)
(declare-fun g_s205_212 () U)
(declare-fun g_s206_213 () U)
(declare-fun g_s207_214 () U)
(declare-fun g_s208_215 () U)
(declare-fun g_s209_216 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_217 () U)
(declare-fun g_s211_218 () U)
(declare-fun g_s212_219 () U)
(declare-fun g_s213_220 () U)
(declare-fun g_s214_221 () U)
(declare-fun g_s215_222 () U)
(declare-fun g_s216_223 () U)
(declare-fun g_s217_224 () U)
(declare-fun g_s218_225 () U)
(declare-fun g_s219_226 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_227 () U)
(declare-fun g_s221_228 () U)
(declare-fun g_s222_229 () U)
(declare-fun g_s223_230 () U)
(declare-fun g_s224_231 () U)
(declare-fun g_s225_232 () U)
(declare-fun g_s226_233 () U)
(declare-fun g_s227_234 () U)
(declare-fun g_s228_235 () U)
(declare-fun g_s229_236 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_237 () U)
(declare-fun g_s231_238 () U)
(declare-fun g_s232_239 () U)
(declare-fun g_s233_240 () U)
(declare-fun g_s234_241 () U)
(declare-fun g_s235_242 () U)
(declare-fun g_s236_243 () U)
(declare-fun g_s237_244 () U)
(declare-fun g_s238_245 () U)
(declare-fun g_s239_246 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_247 () U)
(declare-fun g_s241_248 () U)
(declare-fun g_s242_249 () U)
(declare-fun g_s243_250 () U)
(declare-fun g_s244_251 () U)
(declare-fun g_s245_252 () U)
(declare-fun g_s246_253 () U)
(declare-fun g_s247_254 () U)
(declare-fun g_s248_255 () U)
(declare-fun g_s249_256 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_257 () U)
(declare-fun g_s251_258 () U)
(declare-fun g_s252_259 () U)
(declare-fun g_s253_260 () U)
(declare-fun g_s254_261 () U)
(declare-fun g_s255_262 () U)
(declare-fun g_s256_263 () U)
(declare-fun g_s257_264 () U)
(declare-fun g_s258_265 () U)
(declare-fun g_s259_266 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_267 () U)
(declare-fun g_s261_268 () U)
(declare-fun g_s262_269 () U)
(declare-fun g_s263_270 () U)
(declare-fun g_s264_271 () U)
(declare-fun g_s265_272 () U)
(declare-fun g_s266_273 () U)
(declare-fun g_s267_274 () U)
(declare-fun g_s268_275 () U)
(declare-fun g_s269_276 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_277 () U)
(declare-fun g_s271_278 () U)
(declare-fun g_s272_279 () U)
(declare-fun g_s273_280 () U)
(declare-fun g_s274_281 () U)
(declare-fun g_s275_282 () U)
(declare-fun g_s276_283 () U)
(declare-fun g_s277_284 () U)
(declare-fun g_s278_285 () U)
(declare-fun g_s279_286 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_287 () U)
(declare-fun g_s281_288 () U)
(declare-fun g_s282_289 () U)
(declare-fun g_s283_290 () U)
(declare-fun g_s284_291 () U)
(declare-fun g_s285_292 () U)
(declare-fun g_s286_293 () U)
(declare-fun g_s287_294 () U)
(declare-fun g_s288_295 () U)
(declare-fun g_s289_296 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_297 () U)
(declare-fun g_s291_298 () U)
(declare-fun g_s292_299 () U)
(declare-fun g_s293_300 () U)
(declare-fun g_s294_301 () U)
(declare-fun g_s295_302 () U)
(declare-fun g_s296_303 () U)
(declare-fun g_s297_304 () U)
(declare-fun g_s298_305 () U)
(declare-fun g_s299_306 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_307 () U)
(declare-fun g_s301_308 () U)
(declare-fun g_s302_309 () U)
(declare-fun g_s303_310 () U)
(declare-fun g_s304_311 () U)
(declare-fun g_s305_312 () U)
(declare-fun g_s306_313 () U)
(declare-fun g_s307_314 () U)
(declare-fun g_s308_315 () U)
(declare-fun g_s309_316 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_317 () U)
(declare-fun g_s311_318 () U)
(declare-fun g_s312_319 () U)
(declare-fun g_s313_320 () U)
(declare-fun g_s314_321 () U)
(declare-fun g_s315_322 () U)
(declare-fun g_s316_323 () U)
(declare-fun g_s317_324 () U)
(declare-fun g_s318_325 () U)
(declare-fun g_s319_326 () U)
(declare-fun g_s32_34 () U)
(declare-fun g_s320_327 () U)
(declare-fun g_s321_328 () U)
(declare-fun g_s322_329 () U)
(declare-fun g_s326_330 () U)
(declare-fun g_s33_33 () U)
(declare-fun g_s333_331 () U)
(declare-fun g_s34_36 () U)
(declare-fun g_s35_35 () U)
(declare-fun g_s36_38 () U)
(declare-fun g_s37_37 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_44 () U)
(declare-fun g_s41_45 () U)
(declare-fun g_s42_46 () U)
(declare-fun g_s43_47 () U)
(declare-fun g_s44_48 () U)
(declare-fun g_s45_49 () U)
(declare-fun g_s46_50 () U)
(declare-fun g_s47_51 () U)
(declare-fun g_s48_52 () U)
(declare-fun g_s49_53 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_54 () U)
(declare-fun g_s51_55 () U)
(declare-fun g_s52_56 () U)
(declare-fun g_s53_57 () U)
(declare-fun g_s54_58 () U)
(declare-fun g_s55_59 () U)
(declare-fun g_s56_60 () U)
(declare-fun g_s57_61 () U)
(declare-fun g_s58_63 () U)
(declare-fun g_s59_64 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_65 () U)
(declare-fun g_s61_66 () U)
(declare-fun g_s62_67 () U)
(declare-fun g_s63_68 () U)
(declare-fun g_s64_69 () U)
(declare-fun g_s65_70 () U)
(declare-fun g_s66_71 () U)
(declare-fun g_s67_72 () U)
(declare-fun g_s68_73 () U)
(declare-fun g_s69_74 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_75 () U)
(declare-fun g_s71_76 () U)
(declare-fun g_s72_77 () U)
(declare-fun g_s73_78 () U)
(declare-fun g_s74_79 () U)
(declare-fun g_s75_80 () U)
(declare-fun g_s76_81 () U)
(declare-fun g_s77_82 () U)
(declare-fun g_s78_83 () U)
(declare-fun g_s79_84 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_85 () U)
(declare-fun g_s81_87 () U)
(declare-fun g_s82_88 () U)
(declare-fun g_s83_89 () U)
(declare-fun g_s84_90 () U)
(declare-fun g_s85_91 () U)
(declare-fun g_s86_92 () U)
(declare-fun g_s87_93 () U)
(declare-fun g_s88_94 () U)
(declare-fun g_s89_95 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_96 () U)
(declare-fun g_s91_97 () U)
(declare-fun g_s92_98 () U)
(declare-fun g_s93_99 () U)
(declare-fun g_s94_100 () U)
(declare-fun g_s95_101 () U)
(declare-fun g_s96_102 () U)
(declare-fun g_s97_103 () U)
(declare-fun g_s98_104 () U)
(declare-fun g_s99_105 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (= g_s3_4 (SET (mapplet g_s5_6 g_s4_5))) (= g_s6_7 (SET (mapplet g_s15_16 (mapplet g_s14_15 (mapplet g_s13_14 (mapplet g_s12_13 (mapplet g_s11_12 (mapplet g_s10_11 (mapplet g_s9_10 (mapplet g_s8_9 g_s7_8)))))))))) (= g_s16_17 (SET (mapplet g_s18_19 g_s17_18))) (= g_s19_20 (SET (mapplet g_s21_22 g_s20_21))) (= g_s22_23 (SET (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 g_s23_24)))))))))) (mem g_s32_34 g_s33_33) (mem g_s34_36 g_s35_35) (mem g_s36_38 g_s37_37) (mem g_s38_39 g_s37_37) (mem g_s39_40 g_s37_37) (= g_s32_34 e41) (= g_s34_36 e42) (= g_s36_38 e43) (and (|>=i| g_s38_39 e0) (|<=i| g_s38_39 g_s36_38)) (and (|>=i| g_s39_40 e0) (|<=i| g_s39_40 g_s36_38)) (not (= g_s38_39 g_s39_40)) (= g_s40_44 (SET (mapplet g_s39_40 g_s38_39))) (= g_s41_45 (SET (mapplet (mapplet FALSE g_s39_40) (mapplet TRUE g_s38_39)))) (= g_s33_33 (interval e0 e41)) (= g_s35_35 (interval e0 e42)) (= g_s37_37 (interval e0 e43)) (mem g_s42_46 g_s37_37) (|<=i| g_s42_46 g_s43_47) (mem g_s44_48 g_s37_37) (|<=i| g_s44_48 g_s43_47) (mem g_s45_49 g_s37_37) (|<=i| g_s45_49 g_s46_50) (mem g_s47_51 g_s37_37) (|<=i| g_s47_51 g_s46_50) (mem g_s48_52 g_s37_37) (|<=i| g_s48_52 g_s46_50) (mem g_s49_53 g_s37_37) (|<=i| g_s49_53 g_s46_50) (mem g_s50_54 g_s37_37) (mem g_s51_55 g_s37_37) (mem g_s52_56 g_s37_37) (mem g_s53_57 g_s37_37) (not (= g_s50_54 g_s51_55)) (not (= g_s50_54 g_s52_56)) (not (= g_s50_54 g_s53_57)) (not (= g_s51_55 g_s52_56)) (not (= g_s51_55 g_s53_57)) (not (= g_s52_56 g_s53_57)) (= (interval e0 g_s54_58) (SET (mapplet g_s53_57 (mapplet g_s52_56 (mapplet g_s51_55 g_s50_54))))) (mem g_s55_59 g_s37_37) (= g_s55_59 (|*i| g_s56_60 g_s56_60)) (mem g_s57_61 g_s37_37) (= g_s57_61 (|-i| g_s55_59 e62)) (mem g_s58_63 g_s33_33) (mem g_s59_64 g_s33_33) (mem g_s60_65 g_s33_33) (mem g_s61_66 g_s33_33) (mem g_s62_67 g_s37_37) (mem g_s63_68 g_s37_37) (mem g_s64_69 g_s37_37) (mem g_s65_70 g_s37_37) (mem g_s66_71 g_s37_37) (mem g_s67_72 g_s37_37) (mem g_s68_73 g_s37_37) (mem g_s69_74 g_s37_37) (mem g_s70_75 g_s37_37) (mem g_s71_76 g_s37_37) (= g_s72_77 (SET (mapplet (|+i| g_s52_56 e62) (|+i| g_s51_55 e62)))) (= g_s73_78 (SET (mapplet (|+i| g_s53_57 e62) (|+i| g_s50_54 e62)))) (mem g_s74_79 g_s37_37) (|<i| (|+i| g_s74_79 g_s56_60) g_s36_38) (mem g_s75_80 g_s37_37) (= g_s75_80 (|+i| g_s74_79 g_s56_60)) (mem g_s76_81 g_s37_37) (mem g_s77_82 g_s37_37) (|<i| (|+i| g_s77_82 g_s56_60) g_s36_38) (mem g_s78_83 g_s37_37) (= g_s78_83 (|+i| g_s77_82 g_s56_60)) (mem g_s79_84 g_s37_37) (= g_s79_84 (|-i| g_s78_83 e62)) (mem g_s80_85 g_s37_37) (= g_s80_85 (|-i| g_s78_83 e86)) (mem g_s81_87 g_s37_37) (|<i| (|+i| g_s81_87 g_s56_60) g_s36_38) (mem g_s82_88 g_s37_37) (= g_s82_88 (|+i| g_s81_87 g_s56_60)) (mem g_s83_89 g_s37_37) (= g_s83_89 (|-i| g_s82_88 e62)) (mem g_s84_90 g_s37_37) (= g_s84_90 (|-i| g_s82_88 e86)) (mem g_s85_91 g_s37_37) (mem g_s86_92 g_s37_37) (mem g_s87_93 g_s37_37) (mem g_s88_94 g_s37_37) (mem g_s89_95 NATURAL1) (mem g_s90_96 NATURAL1) (mem g_s91_97 NATURAL1) (mem g_s92_98 g_s37_37) (|<i| g_s92_98 g_s36_38) (= g_s92_98 (|+i| g_s88_94 g_s89_95)) (mem g_s93_99 g_s37_37) (|<i| g_s93_99 g_s36_38) (= g_s93_99 (|+i| g_s88_94 g_s90_96)) (mem g_s94_100 g_s37_37) (|<i| g_s94_100 g_s36_38) (= g_s94_100 (|+i| g_s88_94 g_s91_97)) (mem g_s95_101 g_s37_37) (mem g_s96_102 NATURAL1) (mem g_s97_103 NATURAL1) (mem g_s98_104 NATURAL1) (mem g_s99_105 g_s37_37) (|<i| g_s99_105 g_s36_38) (= g_s99_105 (|+i| g_s95_101 g_s96_102)) (mem g_s100_106 g_s37_37) (|<i| g_s100_106 g_s36_38) (= g_s100_106 (|+i| g_s95_101 g_s97_103)) (mem g_s101_107 g_s37_37) (|<i| g_s101_107 g_s36_38) (= g_s101_107 (|+i| g_s95_101 g_s98_104)) (mem g_s102_108 g_s37_37) (mem g_s103_109 g_s37_37) (mem g_s104_110 g_s37_37) (and (|>=i| g_s104_110 e0) (|<=i| g_s104_110 e111)) (mem g_s105_112 g_s35_35) (|<=i| g_s105_112 g_s34_36) (mem g_s106_113 g_s37_37) (and (|>=i| g_s106_113 e0) (|<=i| g_s106_113 e111)) (mem g_s107_114 g_s37_37) (mem g_s108_115 g_s37_37) (mem g_s109_116 g_s37_37) (mem g_s110_117 NATURAL) (|<=i| e62 g_s110_117) (mem g_s111_118 NATURAL) (|<=i| e62 g_s111_118) (mem g_s112_119 NATURAL) (|<=i| e62 g_s112_119) (mem g_s113_120 NATURAL) (|<=i| e62 g_s113_120) (mem g_s114_121 g_s35_35) (|<=i| g_s114_121 g_s34_36) (mem g_s115_122 g_s37_37) (and (|>=i| g_s115_122 e0) (|<=i| g_s115_122 e111)) (mem g_s116_123 g_s35_35) (|<=i| g_s116_123 g_s34_36) (mem g_s117_124 g_s37_37) (and (|>=i| g_s117_124 e0) (|<=i| g_s117_124 e111)) (mem g_s118_125 g_s35_35) (|<=i| g_s118_125 g_s34_36) (mem g_s119_126 g_s37_37) (and (|>=i| g_s119_126 e0) (|<=i| g_s119_126 e111)) (mem g_s120_127 g_s37_37) (mem g_s121_128 g_s37_37) (and (|>=i| g_s121_128 e0) (|<=i| g_s121_128 e111)) (mem g_s122_129 g_s35_35) (mem g_s123_130 g_s37_37) (mem g_s124_131 g_s35_35) (mem g_s125_132 g_s35_35) (mem g_s126_133 g_s35_35) (mem g_s127_134 g_s35_35) (mem g_s128_135 g_s37_37) (mem g_s129_136 g_s37_37) (= g_s129_136 (|+i| g_s128_135 g_s56_60)) (|<i| g_s129_136 g_s36_38) (mem g_s130_137 g_s37_37) (|<=i| (|+i| g_s130_137 e86) g_s36_38) (mem g_s131_138 g_s37_37) (= g_s131_138 (|+i| g_s130_137 g_s56_60)) (|<i| g_s131_138 g_s36_38) (mem g_s132_139 g_s37_37) (= g_s132_139 (|-i| g_s131_138 e62)) (mem g_s133_140 g_s37_37) (mem g_s134_141 g_s37_37) (= g_s134_141 (|+i| g_s133_140 g_s110_117)) (mem g_s135_142 g_s37_37) (= g_s135_142 (|+i| g_s133_140 g_s111_118)) (mem g_s136_143 g_s37_37) (= g_s136_143 (|+i| g_s133_140 g_s112_119)) (mem g_s137_144 g_s37_37) (= g_s137_144 (|+i| g_s133_140 g_s113_120)) (mem g_s138_145 g_s37_37) (mem g_s139_146 g_s37_37) (mem g_s140_147 g_s37_37) (mem g_s141_148 NATURAL) (mem g_s142_149 NATURAL1) (|<=i| e62 g_s141_148) (= g_s141_148 (|-i| g_s139_146 g_s138_145)) (= g_s142_149 (|-i| g_s140_147 g_s138_145)) (mem g_s143_150 NATURAL) (mem g_s144_151 NATURAL) (mem g_s145_152 NATURAL) (mem g_s146_153 NATURAL) (|<=i| e62 g_s145_152) (mem g_s147_154 g_s37_37) (mem g_s148_155 g_s37_37) (mem g_s149_156 g_s37_37) (mem g_s150_157 g_s37_37) (mem g_s151_158 g_s37_37) (= g_s148_155 (|+i| g_s147_154 g_s143_150)) (= g_s149_156 (|+i| g_s147_154 g_s144_151)) (= g_s150_157 (|+i| g_s147_154 g_s145_152)) (= g_s151_158 (|+i| g_s147_154 g_s146_153)) (mem g_s152_159 g_s37_37) (mem g_s153_160 g_s37_37) (mem g_s154_161 g_s37_37) (mem g_s155_162 NATURAL1) (mem g_s156_163 NATURAL1) (= g_s155_162 (|-i| (|-i| g_s153_160 g_s152_159) e62)) (= g_s156_163 (|-i| (|-i| g_s154_161 g_s152_159) e62)) (mem g_s157_164 g_s33_33) (mem g_s158_165 g_s37_37) (mem g_s159_166 g_s37_37) (mem g_s160_167 NATURAL1) (mem g_s161_168 NATURAL1) (mem g_s162_169 NATURAL1) (= g_s160_167 (|-i| g_s157_164 g_s152_159)) (= g_s161_168 (|-i| g_s158_165 g_s152_159)) (= g_s162_169 (|-i| (|-i| g_s159_166 g_s152_159) e62)) (mem g_s163_170 NATURAL1) (mem g_s164_171 g_s37_37) (mem g_s165_172 g_s37_37) (mem g_s166_173 g_s33_33) (= g_s163_170 (|-i| (|-i| g_s166_173 g_s164_171) e62)) (mem g_s167_174 NATURAL) (mem g_s168_175 NATURAL1) (mem g_s169_176 NATURAL) (mem g_s170_177 NATURAL) (mem g_s171_178 NATURAL) (mem g_s172_179 NATURAL) (mem g_s173_180 NATURAL) (mem g_s174_181 NATURAL) (mem g_s175_182 NATURAL) (mem g_s176_183 NATURAL) (mem g_s177_184 g_s37_37) (|<=i| e62 g_s177_184) (mem g_s178_185 g_s37_37) (= g_s178_185 (|+i| g_s177_184 g_s175_182)) (mem g_s179_186 g_s37_37) (= g_s179_186 (|+i| g_s177_184 g_s176_183)) (mem g_s180_187 g_s37_37) (= g_s180_187 (|+i| g_s177_184 g_s170_177)) (mem g_s181_188 g_s37_37) (= g_s181_188 (|+i| g_s177_184 g_s169_176)) (mem g_s182_189 g_s37_37) (= g_s182_189 (|+i| g_s177_184 g_s171_178)) (mem g_s183_190 g_s37_37) (= g_s183_190 (|+i| g_s177_184 g_s174_181)) (mem g_s184_191 g_s37_37) (= g_s184_191 (|+i| g_s177_184 g_s172_179)) (mem g_s185_192 g_s37_37) (= g_s185_192 (|+i| g_s177_184 g_s173_180)) (mem g_s186_193 g_s33_33) (= g_s186_193 (|+i| g_s177_184 g_s167_174)) (mem g_s187_194 g_s37_37) (= g_s187_194 (|+i| g_s177_184 g_s168_175)) (mem g_s188_195 (|-->| (set_prod g_s6_7 g_s6_7) g_s37_37)) (= g_s189_196 (image (inverse g_s188_195) (SET g_s38_39))) (mem g_s190_197 (|-->| (set_prod g_s6_7 g_s6_7) (set_diff g_s35_35 (SET e42)))) (mem g_s191_198 (|<->| g_s6_7 g_s6_7)) (mem g_s192_199 (|-->| (set_prod g_s6_7 g_s6_7) g_s35_35)) (= g_s192_199 (|<+| g_s190_197 (set_prod g_s191_198 (SET e42)))) (mem g_s189_196 (|<->| g_s6_7 g_s6_7)) (mem g_s193_200 g_s37_37) (mem g_s194_201 g_s37_37) (mem g_s195_202 g_s35_35) (mem g_s196_203 g_s35_35) (mem g_s197_204 g_s33_33) (mem g_s198_205 g_s33_33) (mem g_s199_206 NATURAL) (|<=i| e86 g_s199_206) (mem g_s200_207 NATURAL) (|<=i| e86 g_s200_207) (mem g_s201_208 NATURAL) (|<=i| e86 g_s201_208) (|<=i| g_s199_206 g_s201_208) (mem g_s202_209 g_s37_37) (mem g_s203_210 g_s37_37) (= g_s203_210 (|+i| g_s202_209 g_s199_206)) (mem g_s204_211 g_s37_37) (= g_s204_211 (|+i| g_s202_209 g_s200_207)) (mem g_s205_212 g_s37_37) (= g_s205_212 (|+i| g_s202_209 g_s201_208)) (mem g_s206_213 g_s35_35) (mem g_s207_214 g_s35_35) (mem g_s208_215 g_s37_37) (|<=i| g_s206_213 g_s207_214) (mem g_s209_216 g_s33_33) (mem g_s210_217 g_s33_33) (mem g_s211_218 g_s33_33) (mem g_s212_219 g_s33_33) (mem g_s213_220 g_s33_33) (mem g_s214_221 g_s37_37) (|<=i| e86 g_s214_221) (mem g_s43_47 g_s37_37) (= g_s43_47 (|-i| g_s214_221 e62)) (mem g_s215_222 NATURAL1) (mem g_s216_223 NATURAL1) (mem g_s217_224 NATURAL1) (mem g_s218_225 NATURAL1) (mem g_s219_226 NATURAL1) (mem g_s220_227 NATURAL1) (mem g_s221_228 NATURAL1) (mem g_s222_229 NATURAL1) (mem g_s223_230 g_s37_37) (mem g_s224_231 g_s37_37) (= g_s224_231 (|+i| g_s223_230 g_s215_222)) (mem g_s225_232 g_s37_37) (mem g_s226_233 g_s37_37) (= g_s226_233 (|+i| g_s225_232 g_s216_223)) (mem g_s227_234 g_s37_37) (= g_s227_234 (|+i| g_s225_232 g_s217_224)) (mem g_s228_235 g_s37_37) (= g_s228_235 (|+i| g_s225_232 g_s218_225)) (mem g_s229_236 g_s37_37) (= g_s229_236 (|+i| g_s225_232 g_s219_226)) (mem g_s230_237 g_s37_37) (= g_s230_237 (|+i| g_s225_232 g_s220_227)) (mem g_s231_238 g_s37_37) (= g_s231_238 (|+i| g_s225_232 g_s221_228)) (mem g_s232_239 g_s37_37) (= g_s232_239 (|+i| g_s225_232 g_s222_229)) (mem g_s233_240 g_s33_33) (mem g_s234_241 g_s33_33) (mem g_s235_242 g_s33_33) (mem g_s236_243 g_s33_33) (mem g_s237_244 g_s33_33) (mem g_s238_245 g_s33_33) (mem g_s239_246 g_s33_33) (mem g_s240_247 g_s33_33) (mem g_s241_248 g_s33_33) (mem g_s242_249 g_s33_33) (mem g_s243_250 g_s33_33) (mem g_s244_251 g_s33_33) (mem g_s245_252 g_s33_33) (mem g_s246_253 g_s33_33) (mem g_s247_254 g_s33_33) (mem g_s248_255 g_s33_33) (mem g_s249_256 g_s33_33) (mem g_s250_257 g_s33_33) (mem g_s251_258 g_s33_33) (mem g_s56_60 g_s37_37) (|<=i| e0 g_s56_60) (|<=i| e86 g_s56_60) (mem g_s54_58 g_s37_37) (= g_s54_58 (|-i| g_s56_60 e62)) (mem g_s252_259 g_s37_37) (mem g_s253_260 g_s37_37) (= g_s253_260 (|-i| g_s252_259 e62)) (mem g_s254_261 g_s37_37) (mem g_s255_262 g_s37_37) (= g_s255_262 (|-i| g_s254_261 e62)) (mem g_s256_263 g_s35_35) (mem g_s257_264 g_s35_35) (mem g_s258_265 g_s35_35) (mem g_s259_266 g_s35_35) (not (= g_s258_265 g_s259_266)) (mem g_s260_267 g_s35_35) (mem g_s261_268 g_s35_35) (mem g_s262_269 g_s35_35) (mem g_s263_270 NATURAL) (= g_s263_270 (|-i| g_s261_268 g_s262_269)) (mem g_s264_271 g_s35_35) (mem g_s265_272 g_s35_35) (mem g_s266_273 g_s35_35) (mem g_s267_274 g_s35_35) (mem g_s268_275 g_s37_37) (mem g_s269_276 g_s37_37) (= g_s269_276 (|-i| g_s268_275 e62)) (= g_s254_261 (|*i| g_s56_60 g_s268_275)) (|<=i| e62 g_s268_275) (|<i| g_s268_275 g_s36_38) (mem g_s270_277 g_s37_37) (mem g_s271_278 g_s37_37) (mem g_s272_279 g_s33_33) (mem g_s273_280 g_s33_33) (mem g_s274_281 g_s33_33) (mem g_s275_282 g_s33_33) (mem g_s276_283 g_s33_33) (mem g_s277_284 g_s33_33) (= g_s277_284 (|-i| g_s276_283 e62)) (mem g_s278_285 g_s33_33) (mem g_s279_286 g_s33_33) (= g_s279_286 (|-i| g_s278_285 e62)) (mem g_s280_287 g_s37_37) (mem g_s46_50 g_s37_37) (mem g_s281_288 g_s33_33)))
(define-fun |def_seext| () Bool (and (mem g_s282_289 BOOL) (subset g_s283_290 (interval e62 g_s56_60)) (mem g_s284_291 BOOL) (mem g_s285_292 g_s33_33) (mem g_s286_293 g_s33_33) (mem g_s287_294 g_s37_37) (or (= g_s287_294 e62) (= g_s287_294 e86)) (mem g_s288_295 (|-->| (interval e0 g_s54_58) g_s37_37)) (mem g_s289_296 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) (|-->| (interval e0 g_s273_280) g_s37_37)))) (mem g_s290_297 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) g_s35_35))) (mem g_s291_298 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) g_s35_35))) (mem g_s292_299 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) g_s35_35))) (mem g_s293_300 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) g_s35_35))) (mem g_s294_301 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) g_s35_35))) (mem g_s295_302 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) g_s35_35))) (mem g_s296_303 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) g_s35_35))) (mem g_s297_304 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) (|-->| (interval e0 g_s279_286) g_s37_37)))) (mem g_s298_305 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s253_260) (|-->| (interval e0 g_s279_286) g_s37_37)))) (mem g_s299_306 (|-->| (interval e0 g_s54_58) g_s37_37)) (mem g_s300_307 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s275_282) g_s37_37))) (mem g_s301_308 (|-->| (interval e0 g_s54_58) g_s35_35)) (mem g_s302_309 (|-->| (interval e0 g_s54_58) g_s35_35)) (mem g_s303_310 (|-->| (interval e0 g_s54_58) g_s35_35)) (mem g_s304_311 (|-->| (interval e0 g_s54_58) g_s35_35)) (mem g_s305_312 (|-->| (interval e0 g_s54_58) g_s35_35)) (mem g_s306_313 (|-->| (interval e0 g_s54_58) g_s35_35)) (mem g_s307_314 (|-->| (interval e0 g_s54_58) g_s35_35)) (mem g_s308_315 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s277_284) g_s37_37))) (mem g_s309_316 (|-->| (interval e0 g_s54_58) (|-->| (interval e0 g_s277_284) g_s37_37))) (mem g_s310_317 g_s37_37) (mem g_s310_317 g_s40_44) (mem g_s311_318 g_s33_33) (mem g_s312_319 g_s33_33) (mem g_s313_320 g_s33_33) (mem g_s314_321 g_s33_33) (mem g_s41_45 (|+->| BOOL g_s37_37)) (mem g_s41_45 (|+->| BOOL g_s35_35)) (mem g_s41_45 (|+->| BOOL g_s33_33))))
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s315_322 INTEGER) (mem g_s316_323 INTEGER) (mem g_s317_324 INTEGER) (mem g_s318_325 INTEGER) (mem g_s319_326 INTEGER) (mem g_s320_327 (|-->| (interval e62 g_s56_60) NATURAL)) (subset g_s321_328 (interval e62 g_s56_60)) (mem g_s322_329 (|-->| (interval e62 g_s56_60) INTEGER))))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
; PO 1 in group 0
(push 1)
(assert (not (mem (set_prod (interval e62 g_s56_60) (SET e0)) (|-->| (interval e62 g_s56_60) NATURAL))))
(check-sat)
(pop 1)
; PO 2 in group 0
(push 1)
(assert (not (mem (set_prod (interval e62 g_s56_60) (SET g_s163_170)) (|-->| (interval e62 g_s56_60) INTEGER))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 0
(push 1)
(assert (not (subset empty (interval e62 g_s56_60))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 1
(assert (not (mem (|<+| g_s322_329 (SET (mapplet (|+i| g_s326_330 e62) g_s163_170))) (|-->| (interval e62 g_s56_60) INTEGER))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 2
(assert (not (mem (|<+| g_s322_329 (SET (mapplet (|+i| g_s326_330 e62) (|-i| (apply g_s322_329 (|+i| g_s326_330 e62)) e62)))) (|-->| (interval e62 g_s56_60) INTEGER))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 3
(assert (not (mem (|<+| g_s320_327 (SET (mapplet (|+i| g_s326_330 e62) e0))) (|-->| (interval e62 g_s56_60) NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 4
(assert (not (mem (|<+| g_s320_327 (SET (mapplet (|+i| g_s326_330 e62) (imin (SET (mapplet g_s32_34 (|+i| (apply g_s320_327 (|+i| g_s326_330 e62)) e62))))))) (|-->| (interval e62 g_s56_60) NATURAL))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 5
(assert (not (subset (set_diff g_s321_328 (SET (|+i| g_s326_330 e62))) (interval e62 g_s56_60))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 6
(assert (not (subset (binary_union g_s321_328 (SET (|+i| g_s326_330 e62))) (interval e62 g_s56_60))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s333_331 BOOL))
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 7
(push 1)
(assert (not (mem g_s320_327 (|+->| (dom g_s320_327) (ran g_s320_327)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (mem (|+i| g_s326_330 e62) (dom g_s320_327))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s333_331 BOOL))
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 8
(push 1)
(assert (not (mem g_s320_327 (|+->| (dom g_s320_327) (ran g_s320_327)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (mem (|+i| g_s326_330 e62) (dom g_s320_327))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 9 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 9
(push 1)
(assert (not (mem g_s322_329 (|+->| (dom g_s322_329) (ran g_s322_329)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 9
(push 1)
(assert (not (mem (|+i| g_s326_330 e62) (dom g_s322_329))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 10 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s333_331 BOOL))
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 10
(push 1)
(assert (not (mem g_s322_329 (|+->| (dom g_s322_329) (ran g_s322_329)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 10
(push 1)
(assert (not (mem (|+i| g_s326_330 e62) (dom g_s322_329))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 11 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s326_330 g_s37_37))
(assert (and (|>=i| g_s326_330 e0) (|<=i| g_s326_330 g_s54_58)))
; PO 1 in group 11
(push 1)
(assert (not (not (= (SET (mapplet g_s32_34 (|+i| (apply g_s320_327 (|+i| g_s326_330 e62)) e62))) empty))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 11
(push 1)
(assert (not (mem g_s320_327 (|+->| (dom g_s320_327) (ran g_s320_327)))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 3 in group 11
(push 1)
(assert (not (mem (binary_inter (SET (mapplet g_s32_34 (|+i| (apply g_s320_327 (|+i| g_s326_330 e62)) e62))) (set_diff INTEGER NATURAL)) (FIN INTEGER))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 4 in group 11
(push 1)
(assert (not (mem (|+i| g_s326_330 e62) (dom g_s320_327))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)