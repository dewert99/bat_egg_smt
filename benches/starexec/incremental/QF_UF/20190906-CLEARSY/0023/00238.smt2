(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: Event-B
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e0 () U)
(declare-fun e26 () U)
(declare-fun e14 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s13_15 () U)
(declare-fun g_s14_16 () U)
(declare-fun g_s15_17 () U)
(declare-fun g_s16_18 () U)
(declare-fun g_s17_19 () U)
(declare-fun g_s18_20 () U)
(declare-fun g_s19_21 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_22 () U)
(declare-fun g_s23_25 () U)
(declare-fun g_s24_27 () U)
(declare-fun g_s24$1_44 () U)
(declare-fun g_s25_28 () U)
(declare-fun g_s25$1_45 () U)
(declare-fun g_s26_29 () U)
(declare-fun g_s26$1_46 () U)
(declare-fun g_s27_30 () U)
(declare-fun g_s27$1_47 () U)
(declare-fun g_s28_31 () U)
(declare-fun g_s28$1_48 () U)
(declare-fun g_s29_32 () U)
(declare-fun g_s29$1_49 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_33 () U)
(declare-fun g_s30$1_50 () U)
(declare-fun g_s31_34 () U)
(declare-fun g_s31$1_51 () U)
(declare-fun g_s32_35 () U)
(declare-fun g_s32$1_52 () U)
(declare-fun g_s33_36 () U)
(declare-fun g_s33$1_53 () U)
(declare-fun g_s34_37 () U)
(declare-fun g_s34$1_54 () U)
(declare-fun g_s35_38 () U)
(declare-fun g_s35$1_55 () U)
(declare-fun g_s36_39 () U)
(declare-fun g_s36$1_56 () U)
(declare-fun g_s37_40 () U)
(declare-fun g_s37$1_57 () U)
(declare-fun g_s38_41 () U)
(declare-fun g_s38$1_58 () U)
(declare-fun g_s39_42 () U)
(declare-fun g_s39$1_59 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_43 () U)
(declare-fun g_s40$1_60 () U)
(declare-fun g_s45_61 () U)
(declare-fun g_s46_62 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s9_10 () U)
(declare-fun e24 () U)
(declare-fun e23 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s3_4 (mapplet g_s2_3 g_s1_2)))) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (mem g_s12_13 NATURAL1) (= g_s12_13 e14) (= g_s13_15 (interval e0 g_s12_13)) (= g_s14_16 NATURAL) (mem g_s15_17 g_s14_16) (= g_s16_18 NATURAL) (= g_s17_19 INTEGER) (= g_s18_20 INTEGER) (= g_s19_21 NATURAL) (mem g_s20_22 (|-->| (set_prod INTEGER NATURAL) INTEGER)) (= g_s20_22 (binary_union e24 e23)) (mem g_s23_25 (|-->| BOOL NAT)) (= g_s23_25 (SET (mapplet (mapplet FALSE e0) (mapplet TRUE e26))))))
(define-fun |def_seext| () Bool true)
(define-fun |def_lprp| () Bool true)
(define-fun |def_inprp| () Bool true)
(define-fun |def_inext| () Bool true)
(define-fun |def_inv| () Bool (and (mem g_s24_27 g_s13_15) (mem g_s25_28 (iseq g_s14_16)) (mem g_s26_29 BOOL) (mem g_s27_30 BOOL) (mem g_s28_31 g_s18_20) (mem g_s29_32 g_s18_20) (mem g_s30_33 g_s19_21) (mem g_s31_34 g_s19_21) (mem g_s32_35 g_s16_18) (mem g_s33_36 g_s16_18) (mem g_s34_37 g_s16_18) (mem g_s35_38 g_s16_18) (mem g_s36_39 BOOL) (mem g_s37_40 BOOL) (mem g_s38_41 BOOL) (mem g_s39_42 BOOL) (mem g_s40_43 g_s0_1) (= (size g_s25_28) g_s24_27) (|<=i| (size g_s25_28) e14) (and (|>=i| g_s24_27 e0) (|<=i| g_s24_27 e14)) (=> (and (= g_s26_29 TRUE) (= g_s27_30 FALSE)) (= g_s24_27 e14))))
(define-fun |def_ass| () Bool true)
(define-fun |def_cst| () Bool true)
(define-fun |def_sets| () Bool true)
; PO group 0 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s24$1_44 g_s13_15))
(define-fun lh_2 () Bool (mem g_s25$1_45 (iseq g_s14_16)))
(define-fun lh_3 () Bool (mem g_s26$1_46 BOOL))
(define-fun lh_4 () Bool (mem g_s27$1_47 BOOL))
(define-fun lh_5 () Bool (mem g_s28$1_48 g_s18_20))
(define-fun lh_6 () Bool (mem g_s29$1_49 g_s18_20))
(define-fun lh_7 () Bool (mem g_s30$1_50 g_s19_21))
(define-fun lh_8 () Bool (mem g_s31$1_51 g_s19_21))
(define-fun lh_9 () Bool (mem g_s32$1_52 g_s16_18))
(define-fun lh_10 () Bool (mem g_s33$1_53 g_s16_18))
(define-fun lh_11 () Bool (mem g_s34$1_54 g_s16_18))
(define-fun lh_12 () Bool (mem g_s35$1_55 g_s16_18))
(define-fun lh_13 () Bool (mem g_s36$1_56 BOOL))
(define-fun lh_14 () Bool (mem g_s37$1_57 BOOL))
(define-fun lh_15 () Bool (mem g_s38$1_58 BOOL))
(define-fun lh_16 () Bool (mem g_s39$1_59 BOOL))
(define-fun lh_17 () Bool (mem g_s40$1_60 g_s0_1))
(define-fun lh_18 () Bool (= (size g_s25$1_45) g_s24$1_44))
(define-fun lh_19 () Bool (|<=i| (size g_s25$1_45) e14))
(define-fun lh_20 () Bool (and (|>=i| g_s24$1_44 e0) (|<=i| g_s24$1_44 e14)))
(define-fun lh_21 () Bool (=> (and (= g_s26$1_46 TRUE) (= g_s27$1_47 FALSE)) (= g_s24$1_44 e14)))
(define-fun lh_22 () Bool (= g_s26$1_46 TRUE))
(define-fun lh_23 () Bool (= g_s27$1_47 FALSE))
; PO 1 in group 0
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23) (= g_s24$1_44 e14))))
(check-sat)
(pop 1)
; PO group 1 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s24$1_44 g_s13_15))
(define-fun lh_2 () Bool (mem g_s25$1_45 (iseq g_s14_16)))
(define-fun lh_3 () Bool (mem g_s26$1_46 BOOL))
(define-fun lh_4 () Bool (mem g_s27$1_47 BOOL))
(define-fun lh_5 () Bool (mem g_s28$1_48 g_s18_20))
(define-fun lh_6 () Bool (mem g_s29$1_49 g_s18_20))
(define-fun lh_7 () Bool (mem g_s30$1_50 g_s19_21))
(define-fun lh_8 () Bool (mem g_s31$1_51 g_s19_21))
(define-fun lh_9 () Bool (mem g_s32$1_52 g_s16_18))
(define-fun lh_10 () Bool (mem g_s33$1_53 g_s16_18))
(define-fun lh_11 () Bool (mem g_s34$1_54 g_s16_18))
(define-fun lh_12 () Bool (mem g_s35$1_55 g_s16_18))
(define-fun lh_13 () Bool (mem g_s36$1_56 BOOL))
(define-fun lh_14 () Bool (mem g_s37$1_57 BOOL))
(define-fun lh_15 () Bool (mem g_s38$1_58 BOOL))
(define-fun lh_16 () Bool (mem g_s39$1_59 BOOL))
(define-fun lh_17 () Bool (mem g_s40$1_60 g_s0_1))
(define-fun lh_18 () Bool (= (size g_s25$1_45) g_s24$1_44))
(define-fun lh_19 () Bool (|<=i| (size g_s25$1_45) e14))
(define-fun lh_20 () Bool (and (|>=i| g_s24$1_44 e0) (|<=i| g_s24$1_44 e14)))
(define-fun lh_21 () Bool (=> (and (= g_s26$1_46 TRUE) (= g_s27$1_47 FALSE)) (= g_s24$1_44 e14)))
(define-fun lh_22 () Bool (= g_s26$1_46 TRUE))
(define-fun lh_23 () Bool (= g_s27$1_47 FALSE))
; PO 1 in group 1
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23) (= g_s24$1_44 e14))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 2 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s45_61 g_s17_19))
(assert (mem g_s46_62 g_s17_19))
(assert (|<=i| g_s46_62 g_s45_61))
(define-fun lh_1 () Bool (mem g_s24$1_44 g_s13_15))
(define-fun lh_2 () Bool (mem g_s25$1_45 (iseq g_s14_16)))
(define-fun lh_3 () Bool (mem g_s26$1_46 BOOL))
(define-fun lh_4 () Bool (mem g_s27$1_47 BOOL))
(define-fun lh_5 () Bool (mem g_s28$1_48 g_s18_20))
(define-fun lh_6 () Bool (mem g_s29$1_49 g_s18_20))
(define-fun lh_7 () Bool (mem g_s30$1_50 g_s19_21))
(define-fun lh_8 () Bool (mem g_s31$1_51 g_s19_21))
(define-fun lh_9 () Bool (mem g_s32$1_52 g_s16_18))
(define-fun lh_10 () Bool (mem g_s33$1_53 g_s16_18))
(define-fun lh_11 () Bool (mem g_s34$1_54 g_s16_18))
(define-fun lh_12 () Bool (mem g_s35$1_55 g_s16_18))
(define-fun lh_13 () Bool (mem g_s36$1_56 BOOL))
(define-fun lh_14 () Bool (mem g_s37$1_57 BOOL))
(define-fun lh_15 () Bool (mem g_s38$1_58 BOOL))
(define-fun lh_16 () Bool (mem g_s39$1_59 BOOL))
(define-fun lh_17 () Bool (mem g_s40$1_60 g_s0_1))
(define-fun lh_18 () Bool (= (size g_s25$1_45) g_s24$1_44))
(define-fun lh_19 () Bool (|<=i| (size g_s25$1_45) e14))
(define-fun lh_20 () Bool (and (|>=i| g_s24$1_44 e0) (|<=i| g_s24$1_44 e14)))
(define-fun lh_21 () Bool (=> (and (= g_s26$1_46 TRUE) (= g_s27$1_47 FALSE)) (= g_s24$1_44 e14)))
(define-fun lh_22 () Bool (= g_s26$1_46 TRUE))
(define-fun lh_23 () Bool (= g_s27$1_47 FALSE))
; PO 1 in group 2
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18 lh_19 lh_20 lh_21 lh_22 lh_23) (= g_s24$1_44 e14))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO group 3 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s24_27 g_s13_15))
(define-fun lh_2 () Bool (mem g_s25_28 (iseq g_s14_16)))
(define-fun lh_3 () Bool (mem g_s26_29 BOOL))
(define-fun lh_4 () Bool (mem g_s27_30 BOOL))
(define-fun lh_5 () Bool (mem g_s28_31 g_s18_20))
(define-fun lh_6 () Bool (mem g_s29_32 g_s18_20))
(define-fun lh_7 () Bool (mem g_s30_33 g_s19_21))
(define-fun lh_8 () Bool (mem g_s31_34 g_s19_21))
(define-fun lh_9 () Bool (mem g_s32_35 g_s16_18))
(define-fun lh_10 () Bool (mem g_s33_36 g_s16_18))
(define-fun lh_11 () Bool (mem g_s34_37 g_s16_18))
(define-fun lh_12 () Bool (mem g_s35_38 g_s16_18))
(define-fun lh_13 () Bool (mem g_s36_39 BOOL))
(define-fun lh_14 () Bool (mem g_s37_40 BOOL))
(define-fun lh_15 () Bool (mem g_s38_41 BOOL))
(define-fun lh_16 () Bool (mem g_s39_42 BOOL))
(define-fun lh_17 () Bool (mem g_s40_43 g_s0_1))
(define-fun lh_18 () Bool (= (size g_s25_28) g_s24_27))
; PO 1 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s25_28 (seq (ran g_s25_28))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 3
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem g_s25_28 (seq (ran g_s25_28))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 4 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(define-fun lh_1 () Bool (mem g_s24$1_44 g_s13_15))
(define-fun lh_2 () Bool (mem g_s25$1_45 (iseq g_s14_16)))
(define-fun lh_3 () Bool (mem g_s26$1_46 BOOL))
(define-fun lh_4 () Bool (mem g_s27$1_47 BOOL))
(define-fun lh_5 () Bool (mem g_s28$1_48 g_s18_20))
(define-fun lh_6 () Bool (mem g_s29$1_49 g_s18_20))
(define-fun lh_7 () Bool (mem g_s30$1_50 g_s19_21))
(define-fun lh_8 () Bool (mem g_s31$1_51 g_s19_21))
(define-fun lh_9 () Bool (mem g_s32$1_52 g_s16_18))
(define-fun lh_10 () Bool (mem g_s33$1_53 g_s16_18))
(define-fun lh_11 () Bool (mem g_s34$1_54 g_s16_18))
(define-fun lh_12 () Bool (mem g_s35$1_55 g_s16_18))
(define-fun lh_13 () Bool (mem g_s36$1_56 BOOL))
(define-fun lh_14 () Bool (mem g_s37$1_57 BOOL))
(define-fun lh_15 () Bool (mem g_s38$1_58 BOOL))
(define-fun lh_16 () Bool (mem g_s39$1_59 BOOL))
(define-fun lh_17 () Bool (mem g_s40$1_60 g_s0_1))
(define-fun lh_18 () Bool (= (size g_s25$1_45) g_s24$1_44))
; PO 1 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s25$1_45 (seq (ran g_s25$1_45))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 4
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem g_s25$1_45 (seq (ran g_s25$1_45))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 5 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(define-fun lh_1 () Bool (mem g_s24$1_44 g_s13_15))
(define-fun lh_2 () Bool (mem g_s25$1_45 (iseq g_s14_16)))
(define-fun lh_3 () Bool (mem g_s26$1_46 BOOL))
(define-fun lh_4 () Bool (mem g_s27$1_47 BOOL))
(define-fun lh_5 () Bool (mem g_s28$1_48 g_s18_20))
(define-fun lh_6 () Bool (mem g_s29$1_49 g_s18_20))
(define-fun lh_7 () Bool (mem g_s30$1_50 g_s19_21))
(define-fun lh_8 () Bool (mem g_s31$1_51 g_s19_21))
(define-fun lh_9 () Bool (mem g_s32$1_52 g_s16_18))
(define-fun lh_10 () Bool (mem g_s33$1_53 g_s16_18))
(define-fun lh_11 () Bool (mem g_s34$1_54 g_s16_18))
(define-fun lh_12 () Bool (mem g_s35$1_55 g_s16_18))
(define-fun lh_13 () Bool (mem g_s36$1_56 BOOL))
(define-fun lh_14 () Bool (mem g_s37$1_57 BOOL))
(define-fun lh_15 () Bool (mem g_s38$1_58 BOOL))
(define-fun lh_16 () Bool (mem g_s39$1_59 BOOL))
(define-fun lh_17 () Bool (mem g_s40$1_60 g_s0_1))
(define-fun lh_18 () Bool (= (size g_s25$1_45) g_s24$1_44))
; PO 1 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s25$1_45 (seq (ran g_s25$1_45))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 5
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem g_s25$1_45 (seq (ran g_s25$1_45))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 6 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (mem g_s45_61 g_s17_19))
(assert (mem g_s46_62 g_s17_19))
(assert (|<=i| g_s46_62 g_s45_61))
(define-fun lh_1 () Bool (mem g_s24$1_44 g_s13_15))
(define-fun lh_2 () Bool (mem g_s25$1_45 (iseq g_s14_16)))
(define-fun lh_3 () Bool (mem g_s26$1_46 BOOL))
(define-fun lh_4 () Bool (mem g_s27$1_47 BOOL))
(define-fun lh_5 () Bool (mem g_s28$1_48 g_s18_20))
(define-fun lh_6 () Bool (mem g_s29$1_49 g_s18_20))
(define-fun lh_7 () Bool (mem g_s30$1_50 g_s19_21))
(define-fun lh_8 () Bool (mem g_s31$1_51 g_s19_21))
(define-fun lh_9 () Bool (mem g_s32$1_52 g_s16_18))
(define-fun lh_10 () Bool (mem g_s33$1_53 g_s16_18))
(define-fun lh_11 () Bool (mem g_s34$1_54 g_s16_18))
(define-fun lh_12 () Bool (mem g_s35$1_55 g_s16_18))
(define-fun lh_13 () Bool (mem g_s36$1_56 BOOL))
(define-fun lh_14 () Bool (mem g_s37$1_57 BOOL))
(define-fun lh_15 () Bool (mem g_s38$1_58 BOOL))
(define-fun lh_16 () Bool (mem g_s39$1_59 BOOL))
(define-fun lh_17 () Bool (mem g_s40$1_60 g_s0_1))
(define-fun lh_18 () Bool (= (size g_s25$1_45) g_s24$1_44))
; PO 1 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17) (mem g_s25$1_45 (seq (ran g_s25$1_45))))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 6
(push 1)
(assert (not (=> (and lh_1 lh_2 lh_3 lh_4 lh_5 lh_6 lh_7 lh_8 lh_9 lh_10 lh_11 lh_12 lh_13 lh_14 lh_15 lh_16 lh_17 lh_18) (mem g_s25$1_45 (seq (ran g_s25$1_45))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 7 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (|<=i| e26 g_s24_27))
; PO 1 in group 7
(push 1)
(assert (not (mem e26 (dom g_s25_28))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 7
(push 1)
(assert (not (mem g_s25_28 (|+->| (dom g_s25_28) (ran g_s25_28)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
; PO group 8 
(push 1)
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_cst|)
(assert |def_lprp|)
(assert |def_inprp|)
(assert |def_inext|)
(assert |def_seext|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s24_27 e14))
; PO 1 in group 8
(push 1)
(assert (not (mem e14 (dom g_s25_28))))
(set-info :status unknown)
(check-sat)
(pop 1)
; PO 2 in group 8
(push 1)
(assert (not (mem g_s25_28 (|+->| (dom g_s25_28) (ran g_s25_28)))))
(set-info :status unknown)
(check-sat)
(pop 1)
(pop 1)
(exit)